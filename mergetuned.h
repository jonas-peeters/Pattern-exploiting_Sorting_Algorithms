#include <stdint.h>
#include <stdio.h>
#include <time.h>

void sort_merge_standard(int a[], int64_t low, int64_t high);

void two_passes(int* a, int n) {
  int const rest = n & 3;
  int* const boundary = a + n - rest;

  for (int* s = a; s < boundary; s += 4) {
    int* u = s; 
    int* v = s + 1; 
    int* x = s + 2; 
    int* y = s + 3; 
    bool c = *v < *u;
    int* t = u;
    u = c ? v : u;
    v = c ? t : v;
    c = *y < *x; 
    t = x;
    x = c ? y : x;
    y = c ? t : y;
    c = *x < *u; 
    t = u;
    u = c ? x : u;
    x = c ? t : x;
    c = *y > *v; 
    t = v;
    v = c ? y : v;
    y = c ? t : y;
    c = *v < *x; 
    t = x; 
    x = c ? v : x; 
    v = c ? t : v;
    int e1 = *u;
    int e2 = *x;
    int e3 = *v;
    int e4 = *y;
    *s = e1; 
    *(s+1)=e2; 
    *(s+2)=e3; 
    *(s+3)=e4;
  }
  sort_merge_standard(boundary, 0, rest);
}


//void sort_merge_standard(int a[], int64_t low, int64_t high) {
//  int *b = (int*) malloc(sizeof(int32_t) * (high - low + 1));
//  sort_merge_standard_h(a, low, high, b);
//  free(b);
//}