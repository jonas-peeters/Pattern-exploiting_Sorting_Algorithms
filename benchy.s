	.text
	.file	"benchy.c"
	.file	1 "/home/peeters/bachelor" "./blockquick.h"
	.file	2 "/usr/include" "time.h"
	.file	3 "/usr/include" "stdlib.h"
	.file	4 "/home/peeters/bachelor" "./median.h"
	.file	5 "/home/peeters/bachelor" "./quickomulti.h"
	.file	6 "/home/peeters/bachelor" "./quickomultix4.h"
	.file	7 "/home/peeters/bachelor" "./quickostable.h"
	.file	8 "/home/peeters/bachelor" "./heapsorto.h"
	.file	9 "/home/peeters/bachelor" "benchy.c"
	.file	10 "/home/peeters/bachelor" "./quicko.h"
	.file	11 "/home/peeters/bachelor" "./mergeu.h"
	.file	12 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "avxintrin.h"
	.file	13 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "emmintrin.h"
	.file	14 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "xmmintrin.h"
	.file	15 "/usr/include/x86_64-linux-gnu/bits" "types.h"
	.globl	partition_quick_block   # -- Begin function partition_quick_block
	.p2align	4, 0x90
	.type	partition_quick_block,@function
partition_quick_block:                  # @partition_quick_block
.Lfunc_begin0:
	.loc	1 18 0                  # ./blockquick.h:18:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: median_of_three:array <- undef
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$984, %rsp              # imm = 0x3D8
	.cfi_def_cfa_offset 1040
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp0:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB0_2
.Ltmp1:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %r11d
	jmp	.LBB0_3
.Ltmp2:
.LBB0_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	.loc	4 9 18                  # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp3:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp4:
	#DEBUG_VALUE: median_of_three:x <- $eax
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r8
	movl	(%rdi,%r8,4), %r11d
.Ltmp5:
	#DEBUG_VALUE: median_of_three:y <- $r11d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %ebp
.Ltmp6:
	#DEBUG_VALUE: median_of_three:z <- $ebp
	.file	16 "/home/peeters/bachelor" "./minmax.h"
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r11d, %eax
.Ltmp7:
	#DEBUG_VALUE: min:y <- $r11d
	#DEBUG_VALUE: min:x <- $eax
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r11d, %ebx
	cmovlel	%eax, %ebx
.Ltmp8:
	#DEBUG_VALUE: max:y <- $r11d
	#DEBUG_VALUE: max:x <- $eax
	.loc	16 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r11d, %ecx
.Ltmp9:
	cmovgel	%eax, %ecx
.Ltmp10:
	#DEBUG_VALUE: min:y <- $ebp
	#DEBUG_VALUE: min:x <- $ebx
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%ebp, %ebx
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%ebp, %ebx
.Ltmp11:
	#DEBUG_VALUE: max:y <- $ebp
	#DEBUG_VALUE: median_of_three:smallest <- $ebx
	#DEBUG_VALUE: max:x <- $ecx
	.loc	16 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%ebp, %ecx
	.loc	16 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%ebp, %ecx
.Ltmp12:
	#DEBUG_VALUE: median_of_three:largest <- $ecx
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%eax, %r11d
.Ltmp13:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%ebp, %r11d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%ebx, %r11d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ecx, %r11d
.Ltmp14:
	#DEBUG_VALUE: median_of_three:median <- $r11d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r11d, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ecx, (%rdi,%r8,4)
.Ltmp15:
.LBB0_3:
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	1 21 7                  # ./blockquick.h:21:7
	leaq	-1(%rdx), %r9
.Ltmp16:
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 26 15                 # ./blockquick.h:26:15
	movq	%r9, %r13
	subq	%rsi, %r13
	xorl	%r14d, %r14d
	.loc	1 26 25 is_stmt 0       # ./blockquick.h:26:25
	cmpq	$256, %r13              # imm = 0x100
	movq	%rdi, -112(%rsp)        # 8-byte Spill
	movq	%rdx, -104(%rsp)        # 8-byte Spill
.Ltmp17:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	.loc	1 26 3                  # ./blockquick.h:26:3
	jl	.LBB0_4
.Ltmp18:
# %bb.5:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	leaq	12(%rdi), %rax
	movq	%rax, -56(%rsp)         # 8-byte Spill
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
	jmp	.LBB0_6
.Ltmp19:
	.p2align	4, 0x90
.LBB0_17:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	.loc	1 48 12 is_stmt 1       # ./blockquick.h:48:12
	addl	%ebx, %r14d
.Ltmp20:
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	.loc	1 49 12                 # ./blockquick.h:49:12
	addl	%ebx, %r15d
.Ltmp21:
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	.loc	1 51 11                 # ./blockquick.h:51:11
	leaq	128(%rsi), %rax
.Ltmp22:
	.loc	1 50 14                 # ./blockquick.h:50:14
	subl	%ebx, %r10d
.Ltmp23:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 50 9 is_stmt 0        # ./blockquick.h:50:9
	cmoveq	%rax, %rsi
.Ltmp24:
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 53 9 is_stmt 1        # ./blockquick.h:53:9
	leaq	-128(%r9), %rax
.Ltmp25:
	.loc	1 53 14 is_stmt 0       # ./blockquick.h:53:14
	subl	%ebx, %ecx
.Ltmp26:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 53 9                  # ./blockquick.h:53:9
	cmoveq	%rax, %r9
.Ltmp27:
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 26 15 is_stmt 1       # ./blockquick.h:26:15
	movq	%r9, %r13
	subq	%rsi, %r13
	.loc	1 26 25 is_stmt 0       # ./blockquick.h:26:25
	cmpq	$255, %r13
	.loc	1 26 3                  # ./blockquick.h:26:3
	jle	.LBB0_18
.Ltmp28:
.LBB0_6:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_8 Depth 2
                                        #     Child Loop BB0_11 Depth 2
                                        #     Child Loop BB0_27 Depth 2
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 27 14 is_stmt 1       # ./blockquick.h:27:14
	testl	%r10d, %r10d
.Ltmp29:
	.loc	1 27 9 is_stmt 0        # ./blockquick.h:27:9
	jne	.LBB0_9
.Ltmp30:
# %bb.7:                                #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 9                   # ./blockquick.h:0:9
	movq	-56(%rsp), %rax         # 8-byte Reload
.Ltmp31:
	.loc	1 29 7 is_stmt 1        # ./blockquick.h:29:7
	leaq	(%rax,%rsi,4), %rbx
	xorl	%r14d, %r14d
.Ltmp32:
	.loc	1 0 7 is_stmt 0         # ./blockquick.h:0:7
	xorl	%ebp, %ebp
	xorl	%r10d, %r10d
.Ltmp33:
	.p2align	4, 0x90
.LBB0_8:                                #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: i <- $rbp
	.loc	1 30 9 is_stmt 1        # ./blockquick.h:30:9
	movl	%r10d, %edx
	.loc	1 30 24 is_stmt 0       # ./blockquick.h:30:24
	movl	%ebp, 464(%rsp,%rdx,4)
	.loc	1 31 23 is_stmt 1       # ./blockquick.h:31:23
	xorl	%edx, %edx
	cmpl	-12(%rbx,%rbp,4), %r11d
	setle	%dl
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%r10d, %edx
.Ltmp34:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	1(%rbp), %eax
	movl	%eax, 464(%rsp,%rdx,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%eax, %eax
	cmpl	-8(%rbx,%rbp,4), %r11d
	setle	%al
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%edx, %eax
.Ltmp35:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	2(%rbp), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%edx, %edx
	cmpl	-4(%rbx,%rbp,4), %r11d
	setle	%dl
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%eax, %edx
.Ltmp36:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	3(%rbp), %eax
	movl	%eax, 464(%rsp,%rdx,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%r10d, %r10d
	cmpl	(%rbx,%rbp,4), %r11d
	setle	%r10b
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%edx, %r10d
.Ltmp37:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 29 25 is_stmt 1       # ./blockquick.h:29:25
	addq	$4, %rbp
.Ltmp38:
	cmpq	$128, %rbp
.Ltmp39:
	.loc	1 29 7 is_stmt 0        # ./blockquick.h:29:7
	jne	.LBB0_8
.Ltmp40:
.LBB0_9:                                #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 34 14 is_stmt 1       # ./blockquick.h:34:14
	testl	%ecx, %ecx
.Ltmp41:
	.loc	1 34 9 is_stmt 0        # ./blockquick.h:34:9
	jne	.LBB0_12
.Ltmp42:
# %bb.10:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 36 7 is_stmt 1        # ./blockquick.h:36:7
	leaq	(%rdi,%r9,4), %rbx
	xorl	%r15d, %r15d
.Ltmp43:
	.loc	1 0 7 is_stmt 0         # ./blockquick.h:0:7
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
.Ltmp44:
	.p2align	4, 0x90
.LBB0_11:                               #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: i <- $rbp
	.loc	1 37 9 is_stmt 1        # ./blockquick.h:37:9
	movl	%ecx, %eax
	.loc	1 37 24 is_stmt 0       # ./blockquick.h:37:24
	movl	%ebp, -48(%rsp,%rax,4)
	.loc	1 38 23 is_stmt 1       # ./blockquick.h:38:23
	xorl	%eax, %eax
	cmpl	(%rbx), %r11d
	setge	%al
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%ecx, %eax
.Ltmp45:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %ecx
	orl	$1, %ecx
.Ltmp46:
	#DEBUG_VALUE: i <- undef
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%ecx, %ecx
	cmpl	-4(%rbx), %r11d
	setge	%cl
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%eax, %ecx
.Ltmp47:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %eax
	orl	$2, %eax
	#DEBUG_VALUE: i <- undef
.Ltmp48:
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%eax, -48(%rsp,%rcx,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%eax, %eax
	cmpl	-8(%rbx), %r11d
	setge	%al
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%ecx, %eax
.Ltmp49:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %ecx
	orl	$3, %ecx
	#DEBUG_VALUE: i <- undef
.Ltmp50:
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%ecx, %ecx
	cmpl	-12(%rbx), %r11d
	setge	%cl
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%eax, %ecx
.Ltmp51:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	addq	$4, %rbp
.Ltmp52:
	#DEBUG_VALUE: i <- $rbp
	.loc	1 36 25 is_stmt 0       # ./blockquick.h:36:25
	addq	$-16, %rbx
	cmpq	$128, %rbp
.Ltmp53:
	.loc	1 36 7                  # ./blockquick.h:36:7
	jne	.LBB0_11
.Ltmp54:
.LBB0_12:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: min:x <- $r10d
	#DEBUG_VALUE: min:y <- $ecx
	.loc	16 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%ecx, %r10d
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%ecx, %ebx
	cmovlel	%r10d, %ebx
.Ltmp55:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: num <- $ebx
	.loc	1 42 23 is_stmt 1       # ./blockquick.h:42:23
	testl	%ebx, %ebx
.Ltmp56:
	.loc	1 42 5 is_stmt 0        # ./blockquick.h:42:5
	jle	.LBB0_17
.Ltmp57:
# %bb.13:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	%r15, -120(%rsp)        # 8-byte Spill
	.loc	1 42 5                  # ./blockquick.h:42:5
	movslq	%r15d, %rdx
	movq	%r14, -88(%rsp)         # 8-byte Spill
	movslq	%r14d, %rdi
	movl	%ebx, %r15d
.Ltmp58:
	movl	%r15d, %ebp
	andl	$1, %ebp
	movl	%ebx, -96(%rsp)         # 4-byte Spill
.Ltmp59:
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	cmpl	$1, %ebx
	movq	%rdx, -72(%rsp)         # 8-byte Spill
	movq	%rdi, -80(%rsp)         # 8-byte Spill
	movq	%rbp, -64(%rsp)         # 8-byte Spill
	jne	.LBB0_26
.Ltmp60:
# %bb.14:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%r12d, %r12d
	movq	-112(%rsp), %rdi        # 8-byte Reload
	jmp	.LBB0_15
.Ltmp61:
	.p2align	4, 0x90
.LBB0_26:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 42 5                  # ./blockquick.h:42:5
	leaq	468(%rsp), %rax
	leaq	(%rax,%rdi,4), %r14
.Ltmp62:
	leaq	-44(%rsp), %rax
	leaq	(%rax,%rdx,4), %r8
	subq	%rbp, %r15
	xorl	%r12d, %r12d
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp63:
	.p2align	4, 0x90
.LBB0_27:                               #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: j <- $r12
	.loc	1 43 25 is_stmt 1       # ./blockquick.h:43:25
	movslq	-4(%r14,%r12,4), %rax
	.loc	1 43 23 is_stmt 0       # ./blockquick.h:43:23
	addq	%rsi, %rax
	.loc	1 44 26 is_stmt 1       # ./blockquick.h:44:26
	movslq	-4(%r8,%r12,4), %r13
	movq	%rsi, %rdx
	movq	%r9, %rbx
	.loc	1 44 24 is_stmt 0       # ./blockquick.h:44:24
	subq	%r13, %r9
.Ltmp64:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.file	17 "/home/peeters/bachelor" "./swap.h"
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ebp
.Ltmp65:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%r9,4), %esi
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebp, (%rdi,%r9,4)
	movq	%rbx, %r9
	movq	%rdx, %rsi
.Ltmp66:
	.loc	1 43 25                 # ./blockquick.h:43:25
	movslq	(%r14,%r12,4), %rax
	.loc	1 43 23 is_stmt 0       # ./blockquick.h:43:23
	addq	%rdx, %rax
	.loc	1 44 26 is_stmt 1       # ./blockquick.h:44:26
	movslq	(%r8,%r12,4), %rdx
	.loc	1 44 24 is_stmt 0       # ./blockquick.h:44:24
	movq	%rbx, %rbp
.Ltmp67:
	subq	%rdx, %rbp
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
.Ltmp68:
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ebx
.Ltmp69:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rax,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebx, (%rdi,%rbp,4)
.Ltmp70:
	.loc	1 42 31                 # ./blockquick.h:42:31
	addq	$2, %r12
.Ltmp71:
	#DEBUG_VALUE: j <- $r12
	.loc	1 42 5 is_stmt 0        # ./blockquick.h:42:5
	cmpq	%r12, %r15
	jne	.LBB0_27
.Ltmp72:
.LBB0_15:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	cmpq	$0, -64(%rsp)           # 8-byte Folded Reload
	movq	-88(%rsp), %r14         # 8-byte Reload
	movq	-120(%rsp), %r15        # 8-byte Reload
	movl	-96(%rsp), %ebx         # 4-byte Reload
.Ltmp73:
	#DEBUG_VALUE: num <- $ebx
	je	.LBB0_17
.Ltmp74:
# %bb.16:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: j <- $r12
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-80(%rsp), %rax         # 8-byte Reload
.Ltmp75:
	.loc	1 43 41 is_stmt 1       # ./blockquick.h:43:41
	addq	%r12, %rax
	.loc	1 43 25 is_stmt 0       # ./blockquick.h:43:25
	movslq	464(%rsp,%rax,4), %rax
	.loc	1 43 23                 # ./blockquick.h:43:23
	addq	%rsi, %rax
	movq	-72(%rsp), %rdx         # 8-byte Reload
	.loc	1 44 42 is_stmt 1       # ./blockquick.h:44:42
	addq	%r12, %rdx
	.loc	1 44 26 is_stmt 0       # ./blockquick.h:44:26
	movslq	-48(%rsp,%rdx,4), %rdx
	.loc	1 44 24                 # ./blockquick.h:44:24
	movq	%r9, %rbp
	subq	%rdx, %rbp
.Ltmp76:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %r8d
.Ltmp77:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rax,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r8d, (%rdi,%rbp,4)
.Ltmp78:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	17 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB0_17
.Ltmp79:
.LBB0_4:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	xorl	%r15d, %r15d
	xorl	%r10d, %r10d
	xorl	%ecx, %ecx
.Ltmp80:
.LBB0_18:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	.loc	1 60 17 is_stmt 1       # ./blockquick.h:60:17
	movl	%ecx, %eax
	orl	%r10d, %eax
	je	.LBB0_19
.Ltmp81:
# %bb.39:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%r13d, %r8d
	addl	$-127, %r8d
	.loc	1 75 19 is_stmt 1       # ./blockquick.h:75:19
	testl	%ecx, %ecx
.Ltmp82:
	.loc	1 75 14 is_stmt 0       # ./blockquick.h:75:14
	je	.LBB0_47
.Ltmp83:
# %bb.40:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 14                  # ./blockquick.h:0:14
	movq	%r15, -120(%rsp)        # 8-byte Spill
	movl	$128, %r13d
.Ltmp84:
	testl	%r8d, %r8d
.Ltmp85:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 5 is_stmt 1        # ./blockquick.h:79:5
	jle	.LBB0_41
.Ltmp86:
# %bb.42:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 79 23 is_stmt 0       # ./blockquick.h:79:23
	movl	%r8d, %r12d
.Ltmp87:
	.loc	1 79 5                  # ./blockquick.h:79:5
	leaq	-1(%r12), %rax
	movl	%r12d, %r15d
.Ltmp88:
	andl	$3, %r15d
	xorl	%r14d, %r14d
.Ltmp89:
	cmpq	$3, %rax
	jae	.LBB0_51
.Ltmp90:
# %bb.43:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB0_44
.Ltmp91:
.LBB0_19:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	incq	%r13
.Ltmp92:
	.loc	1 61 31 is_stmt 1       # ./blockquick.h:61:31
	movq	%r13, %r8
	shrq	$63, %r8
	addq	%r13, %r8
	sarq	%r8
.Ltmp93:
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	.loc	1 62 29                 # ./blockquick.h:62:29
	subq	%r8, %r13
.Ltmp94:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	.loc	1 0 29 is_stmt 0        # ./blockquick.h:0:29
	xorl	%r14d, %r14d
.Ltmp95:
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	movl	$0, %r10d
	movl	$0, %ecx
.Ltmp96:
	#DEBUG_VALUE: j <- 0
	.loc	1 65 23 is_stmt 1       # ./blockquick.h:65:23
	testl	%r8d, %r8d
.Ltmp97:
	.loc	1 65 5 is_stmt 0        # ./blockquick.h:65:5
	jle	.LBB0_24
.Ltmp98:
# %bb.20:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 65 23                 # ./blockquick.h:65:23
	movl	%r8d, %r15d
	movq	%r8, -96(%rsp)          # 8-byte Spill
.Ltmp99:
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
	.loc	1 65 5                  # ./blockquick.h:65:5
	andl	$1, %r8d
.Ltmp100:
	cmpq	$1, %r15
	jne	.LBB0_28
.Ltmp101:
# %bb.21:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
	jmp	.LBB0_22
.Ltmp102:
.LBB0_47:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testl	%r8d, %r8d
.Ltmp103:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	jle	.LBB0_48
.Ltmp104:
# %bb.49:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 87 23 is_stmt 0       # ./blockquick.h:87:23
	movl	%r8d, %r12d
.Ltmp105:
	.loc	1 87 5                  # ./blockquick.h:87:5
	leaq	-1(%r12), %rax
	movl	%r12d, %r15d
.Ltmp106:
	andl	$3, %r15d
	xorl	%ecx, %ecx
	movq	%rcx, -120(%rsp)        # 8-byte Spill
	cmpq	$3, %rax
	jae	.LBB0_53
.Ltmp107:
# %bb.50:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	jmp	.LBB0_55
.Ltmp108:
.LBB0_41:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%r14d, %r14d
.Ltmp109:
	jmp	.LBB0_31
.Ltmp110:
.LBB0_51:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 79 5 is_stmt 1        # ./blockquick.h:79:5
	leaq	(%rdi,%rsi,4), %rbp
	addq	$12, %rbp
	subq	%r15, %r12
	xorl	%ebx, %ebx
.Ltmp111:
	.p2align	4, 0x90
.LBB0_52:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: j <- $rbx
	.loc	1 80 7                  # ./blockquick.h:80:7
	movslq	%r10d, %rax
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	movl	%ebx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-12(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp112:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	cltq
.Ltmp113:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	1(%rbx), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-8(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp114:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	cltq
.Ltmp115:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	2(%rbx), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-4(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp116:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	movslq	%eax, %r10
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	3(%rbx), %eax
.Ltmp117:
	movl	%eax, 464(%rsp,%r10,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%eax, %eax
	cmpl	(%rbp,%rbx,4), %r11d
	setle	%al
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%eax, %r10d
.Ltmp118:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 34 is_stmt 1       # ./blockquick.h:79:34
	addq	$4, %rbx
.Ltmp119:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 79 5 is_stmt 0        # ./blockquick.h:79:5
	cmpq	%rbx, %r12
	jne	.LBB0_52
.Ltmp120:
.LBB0_44:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r15, %r15
	je	.LBB0_31
.Ltmp121:
# %bb.45:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	leaq	(%rdi,%rsi,4), %rdx
.Ltmp122:
	.p2align	4, 0x90
.LBB0_46:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: j <- $rbx
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	movslq	%r10d, %r10
.Ltmp123:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	movl	%ebx, 464(%rsp,%r10,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%eax, %eax
	cmpl	(%rdx,%rbx,4), %r11d
	setle	%al
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%eax, %r10d
.Ltmp124:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 34 is_stmt 1       # ./blockquick.h:79:34
	incq	%rbx
.Ltmp125:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 79 5 is_stmt 0        # ./blockquick.h:79:5
	decq	%r15
	jne	.LBB0_46
	jmp	.LBB0_31
.Ltmp126:
.LBB0_28:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 65 5 is_stmt 1        # ./blockquick.h:65:5
	leaq	(%rdi,%rsi,4), %r12
	addq	$4, %r12
	leaq	(%rdi,%r9,4), %rbp
	subq	%r8, %r15
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
.Ltmp127:
	.p2align	4, 0x90
.LBB0_29:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 66 7                  # ./blockquick.h:66:7
	movl	%r10d, %edx
	.loc	1 66 22 is_stmt 0       # ./blockquick.h:66:22
	movl	%ebx, 464(%rsp,%rdx,4)
	.loc	1 67 21 is_stmt 1       # ./blockquick.h:67:21
	xorl	%edx, %edx
	cmpl	-4(%r12,%rbx,4), %r11d
	setle	%dl
	.loc	1 67 12 is_stmt 0       # ./blockquick.h:67:12
	addl	%r10d, %edx
.Ltmp128:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 68 7 is_stmt 1        # ./blockquick.h:68:7
	movl	%ecx, %eax
	.loc	1 68 22 is_stmt 0       # ./blockquick.h:68:22
	movl	%ebx, -48(%rsp,%rax,4)
	.loc	1 69 21 is_stmt 1       # ./blockquick.h:69:21
	xorl	%eax, %eax
	cmpl	(%rbp), %r11d
	setge	%al
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%ecx, %eax
.Ltmp129:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 66 22 is_stmt 1       # ./blockquick.h:66:22
	leal	1(%rbx), %ecx
	movl	%ecx, 464(%rsp,%rdx,4)
	.loc	1 67 21                 # ./blockquick.h:67:21
	xorl	%r10d, %r10d
	cmpl	(%r12,%rbx,4), %r11d
	setle	%r10b
	.loc	1 67 12 is_stmt 0       # ./blockquick.h:67:12
	addl	%edx, %r10d
.Ltmp130:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 68 22 is_stmt 1       # ./blockquick.h:68:22
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 69 21                 # ./blockquick.h:69:21
	xorl	%ecx, %ecx
	cmpl	-4(%rbp), %r11d
	setge	%cl
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%eax, %ecx
.Ltmp131:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 65 34 is_stmt 1       # ./blockquick.h:65:34
	addq	$2, %rbx
.Ltmp132:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 65 5 is_stmt 0        # ./blockquick.h:65:5
	addq	$-8, %rbp
	cmpq	%rbx, %r15
	jne	.LBB0_29
.Ltmp133:
.LBB0_22:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r8, %r8
	movq	-96(%rsp), %r8          # 8-byte Reload
	je	.LBB0_24
.Ltmp134:
# %bb.23:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 66 7 is_stmt 1        # ./blockquick.h:66:7
	movl	%r10d, %eax
	.loc	1 66 22 is_stmt 0       # ./blockquick.h:66:22
	movl	%ebx, 464(%rsp,%rax,4)
	.loc	1 67 34 is_stmt 1       # ./blockquick.h:67:34
	leaq	(%rsi,%rbx), %rax
.Ltmp135:
	#DEBUG_VALUE: partition_quick_block:numL <- undef
	.loc	1 68 7                  # ./blockquick.h:68:7
	movl	%ecx, %r8d
.Ltmp136:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_block:numR <- undef
	.loc	1 69 35                 # ./blockquick.h:69:35
	movq	%r9, %rdx
	subq	%rbx, %rdx
	.loc	1 67 21                 # ./blockquick.h:67:21
	xorl	%ebp, %ebp
	cmpl	(%rdi,%rax,4), %r11d
	.loc	1 68 22                 # ./blockquick.h:68:22
	movl	%ebx, -48(%rsp,%r8,4)
	movq	-96(%rsp), %r8          # 8-byte Reload
	.loc	1 67 21                 # ./blockquick.h:67:21
	setle	%bpl
	.loc	1 69 21                 # ./blockquick.h:69:21
	xorl	%eax, %eax
	cmpl	(%rdi,%rdx,4), %r11d
	setge	%al
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%ecx, %eax
.Ltmp137:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 67 12 is_stmt 1       # ./blockquick.h:67:12
	addl	%r10d, %ebp
.Ltmp138:
	#DEBUG_VALUE: partition_quick_block:numL <- $ebp
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%ebp, %r10d
.Ltmp139:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	movl	%eax, %ecx
.Ltmp140:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
.LBB0_24:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 71 16 is_stmt 1       # ./blockquick.h:71:16
	cmpl	%r13d, %r8d
.Ltmp141:
	.loc	1 71 9 is_stmt 0        # ./blockquick.h:71:9
	jge	.LBB0_25
.Ltmp142:
# %bb.30:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 72 31 is_stmt 1       # ./blockquick.h:72:31
	leal	-1(%r13), %eax
	.loc	1 72 7 is_stmt 0        # ./blockquick.h:72:7
	movl	%ecx, %edx
	.loc	1 72 22                 # ./blockquick.h:72:22
	movl	%eax, -48(%rsp,%rdx,4)
	.loc	1 73 37 is_stmt 1       # ./blockquick.h:73:37
	movslq	%r13d, %rax
	.loc	1 73 44 is_stmt 0       # ./blockquick.h:73:44
	movq	%r9, %rdx
	subq	%rax, %rdx
	.loc	1 73 21                 # ./blockquick.h:73:21
	xorl	%eax, %eax
	cmpl	4(%rdi,%rdx,4), %r11d
	setge	%al
	.loc	1 73 12                 # ./blockquick.h:73:12
	addl	%ecx, %eax
.Ltmp143:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 0 0                   # ./blockquick.h:0:0
	xorl	%ecx, %ecx
	movq	%rcx, -120(%rsp)        # 8-byte Spill
	movl	%eax, %ecx
.Ltmp144:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	jmp	.LBB0_31
.Ltmp145:
.LBB0_25:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	jmp	.LBB0_31
.Ltmp146:
.LBB0_48:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	xorl	%ecx, %ecx
	jmp	.LBB0_56
.Ltmp147:
.LBB0_53:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	leaq	(%rdi,%r9,4), %rbp
	subq	%r15, %r12
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
.Ltmp148:
	.p2align	4, 0x90
.LBB0_54:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 88 7                  # ./blockquick.h:88:7
	movl	%ecx, %eax
	.loc	1 88 22 is_stmt 0       # ./blockquick.h:88:22
	movl	%ebx, -48(%rsp,%rax,4)
	.loc	1 89 21 is_stmt 1       # ./blockquick.h:89:21
	xorl	%eax, %eax
	cmpl	(%rbp), %r11d
	setge	%al
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%ecx, %eax
.Ltmp149:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	1(%rbx), %ecx
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	-4(%rbp), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp150:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	2(%rbx), %eax
	movl	%eax, -48(%rsp,%rcx,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%eax, %eax
	cmpl	-8(%rbp), %r11d
	setge	%al
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%ecx, %eax
.Ltmp151:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	3(%rbx), %ecx
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	-12(%rbp), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp152:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 87 34 is_stmt 1       # ./blockquick.h:87:34
	addq	$4, %rbx
.Ltmp153:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 87 5 is_stmt 0        # ./blockquick.h:87:5
	addq	$-16, %rbp
	cmpq	%rbx, %r12
	jne	.LBB0_54
.Ltmp154:
.LBB0_55:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r15, %r15
	je	.LBB0_56
.Ltmp155:
# %bb.57:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	%r9, %rax
	subq	%rbx, %rax
	leaq	(%rdi,%rax,4), %rdx
	negq	%r15
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	xorl	%ebp, %ebp
.Ltmp156:
	.p2align	4, 0x90
.LBB0_58:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movl	%ecx, %eax
.Ltmp157:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 7 is_stmt 1        # ./blockquick.h:88:7
	movl	%ecx, %ecx
	.loc	1 88 22 is_stmt 0       # ./blockquick.h:88:22
	movl	%ebx, -48(%rsp,%rcx,4)
	.loc	1 89 21 is_stmt 1       # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	(%rdx,%rbp,4), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp158:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	decq	%rbp
	incl	%ebx
	cmpq	%rbp, %r15
	jne	.LBB0_58
.Ltmp159:
.LBB0_56:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%r8d, %r13d
	movl	$128, %r8d
.Ltmp160:
.LBB0_31:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: min:x <- $r10d
	#DEBUG_VALUE: min:y <- $ecx
	movq	%r14, -88(%rsp)         # 8-byte Spill
.Ltmp161:
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	.loc	16 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%ecx, %r10d
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%ecx, %r15d
	cmovlel	%r10d, %r15d
.Ltmp162:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	.loc	1 95 21 is_stmt 1       # ./blockquick.h:95:21
	testl	%r15d, %r15d
.Ltmp163:
	.loc	1 95 3 is_stmt 0        # ./blockquick.h:95:3
	jle	.LBB0_36
.Ltmp164:
# %bb.32:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movslq	-120(%rsp), %rax        # 4-byte Folded Reload
	movslq	-88(%rsp), %rdx         # 4-byte Folded Reload
	movl	%r15d, %r11d
.Ltmp165:
	movl	%r11d, %ebx
	andl	$1, %ebx
	cmpl	$1, %r15d
	movq	%r8, -96(%rsp)          # 8-byte Spill
	movq	%rax, -72(%rsp)         # 8-byte Spill
	movq	%rdx, -80(%rsp)         # 8-byte Spill
	movq	%rbx, -64(%rsp)         # 8-byte Spill
	jne	.LBB0_59
.Ltmp166:
# %bb.33:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 3                   # ./blockquick.h:0:3
	xorl	%eax, %eax
	movq	%rsi, %r8
.Ltmp167:
	jmp	.LBB0_34
.Ltmp168:
.LBB0_59:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 95 3                  # ./blockquick.h:95:3
	leaq	(%rsp,%rdx,4), %r14
	addq	$468, %r14              # imm = 0x1D4
	leaq	(%rsp,%rax,4), %r12
	addq	$-44, %r12
	subq	%rbx, %r11
	xorl	%eax, %eax
	movq	%rsi, %r8
.Ltmp169:
	.p2align	4, 0x90
.LBB0_60:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: j <- $rax
	.loc	1 96 23 is_stmt 1       # ./blockquick.h:96:23
	movslq	-4(%r14,%rax,4), %rsi
	.loc	1 96 21 is_stmt 0       # ./blockquick.h:96:21
	addq	%r8, %rsi
	.loc	1 97 24 is_stmt 1       # ./blockquick.h:97:24
	movslq	-4(%r12,%rax,4), %rbx
	.loc	1 97 22 is_stmt 0       # ./blockquick.h:97:22
	movq	%r9, %rbp
	subq	%rbx, %rbp
.Ltmp170:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rsi,4), %ebx
.Ltmp171:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rsi,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebx, (%rdi,%rbp,4)
.Ltmp172:
	.loc	1 96 23                 # ./blockquick.h:96:23
	movslq	(%r14,%rax,4), %rdx
	.loc	1 96 21 is_stmt 0       # ./blockquick.h:96:21
	addq	%r8, %rdx
	.loc	1 97 24 is_stmt 1       # ./blockquick.h:97:24
	movslq	(%r12,%rax,4), %rsi
	.loc	1 97 22 is_stmt 0       # ./blockquick.h:97:22
	movq	%r9, %rbx
.Ltmp173:
	subq	%rsi, %rbx
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
.Ltmp174:
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rdx,4), %esi
.Ltmp175:
	#DEBUG_VALUE: swap:t <- $esi
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbx,4), %ebp
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, (%rdi,%rdx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%esi, (%rdi,%rbx,4)
.Ltmp176:
	.loc	1 95 29                 # ./blockquick.h:95:29
	addq	$2, %rax
.Ltmp177:
	#DEBUG_VALUE: j <- $rax
	.loc	1 95 3 is_stmt 0        # ./blockquick.h:95:3
	cmpq	%rax, %r11
	jne	.LBB0_60
.Ltmp178:
.LBB0_34:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	cmpq	$0, -64(%rsp)           # 8-byte Folded Reload
	movq	%r8, %rsi
	movq	-96(%rsp), %r8          # 8-byte Reload
	je	.LBB0_36
.Ltmp179:
# %bb.35:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 0 3                   # ./blockquick.h:0:3
	movq	%rdi, %rbx
.Ltmp180:
	#DEBUG_VALUE: j <- $rax
	movq	-80(%rsp), %rdx         # 8-byte Reload
.Ltmp181:
	.loc	1 96 39 is_stmt 1       # ./blockquick.h:96:39
	addq	%rax, %rdx
	.loc	1 96 23 is_stmt 0       # ./blockquick.h:96:23
	movslq	464(%rsp,%rdx,4), %rdx
	.loc	1 96 21                 # ./blockquick.h:96:21
	addq	%rsi, %rdx
	movq	-72(%rsp), %rdi         # 8-byte Reload
	.loc	1 97 40 is_stmt 1       # ./blockquick.h:97:40
	addq	%rax, %rdi
	.loc	1 97 24 is_stmt 0       # ./blockquick.h:97:24
	movslq	-48(%rsp,%rdi,4), %rax
.Ltmp182:
	.loc	1 97 22                 # ./blockquick.h:97:22
	movq	%r9, %rdi
	subq	%rax, %rdi
.Ltmp183:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rbx,%rdx,4), %eax
.Ltmp184:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rbx,%rdi,4), %ebp
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, (%rbx,%rdx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rbx,%rdi,4)
.Ltmp185:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB0_36:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- undef
	#DEBUG_VALUE: partition_quick_block:startR <- undef
	#DEBUG_VALUE: partition_quick_block:numL <- undef
	#DEBUG_VALUE: partition_quick_block:numR <- undef
	.loc	1 104 7                 # ./blockquick.h:104:7
	movslq	%r8d, %rax
	addq	%rsi, %rax
	xorl	%ebp, %ebp
.Ltmp186:
	.loc	1 107 12                # ./blockquick.h:107:12
	cmpl	%r10d, %ecx
.Ltmp187:
	.loc	1 107 7 is_stmt 0       # ./blockquick.h:107:7
	cmovlel	%r13d, %ebp
	movslq	%ebp, %r14
	movq	%r9, %rdi
	subq	%r14, %r9
.Ltmp188:
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 104 12 is_stmt 1      # ./blockquick.h:104:12
	cmpl	%ecx, %r10d
.Ltmp189:
	.loc	1 104 7 is_stmt 0       # ./blockquick.h:104:7
	cmovleq	%rax, %rsi
.Ltmp190:
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 111 7 is_stmt 1       # ./blockquick.h:111:7
	jg	.LBB0_37
.Ltmp191:
# %bb.69:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startR <- undef
	.loc	1 107 12                # ./blockquick.h:107:12
	cmpl	%r10d, %ecx
.Ltmp192:
	.loc	1 123 14                # ./blockquick.h:123:14
	jg	.LBB0_70
.Ltmp193:
# %bb.82:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 136 11                # ./blockquick.h:136:11
	movslq	-104(%rsp), %rcx        # 4-byte Folded Reload
.Ltmp194:
	.loc	1 0 11 is_stmt 0        # ./blockquick.h:0:11
	movq	-112(%rsp), %rdi        # 8-byte Reload
	.loc	1 136 11                # ./blockquick.h:136:11
	leaq	(%rdi,%rcx,4), %rcx
.Ltmp195:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 0 11                  # ./blockquick.h:0:11
	movq	%rsi, %rbx
.Ltmp196:
	#DEBUG_VALUE: partition_quick_block:low <- $rbx
	jmp	.LBB0_83
.Ltmp197:
.LBB0_37:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-88(%rsp), %rax         # 8-byte Reload
	leal	(%r15,%rax), %r11d
.Ltmp198:
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	.loc	1 112 24 is_stmt 1      # ./blockquick.h:112:24
	leal	(%r10,%rax), %ecx
.Ltmp199:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	1 113 22                # ./blockquick.h:113:22
	subl	%esi, %r9d
.Ltmp200:
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 114 5                 # ./blockquick.h:114:5
	movslq	%r11d, %r8
	.loc	1 114 18 is_stmt 0      # ./blockquick.h:114:18
	cmpl	%r11d, %ecx
	.loc	1 114 28                # ./blockquick.h:114:28
	jle	.LBB0_38
.Ltmp201:
# %bb.61:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 114 5                 # ./blockquick.h:114:5
	movslq	%ecx, %rcx
.Ltmp202:
	addl	%edi, %r15d
.Ltmp203:
	subl	%ebp, %r15d
	subl	%r10d, %r15d
	movq	%rsi, %rbx
	subl	%esi, %r15d
	leal	-1(%r11), %ebp
	leal	(%r10,%rax), %edx
	decl	%edx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp204:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp205:
	.p2align	4, 0x90
.LBB0_62:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 114 47                # ./blockquick.h:114:47
	cmpl	460(%rsp,%rcx,4), %r9d
	.loc	1 114 5                 # ./blockquick.h:114:5
	jne	.LBB0_65
.Ltmp206:
# %bb.63:                               #   in Loop: Header=BB0_62 Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	decq	%rcx
.Ltmp207:
	.loc	1 115 12 is_stmt 1      # ./blockquick.h:115:12
	decl	%r9d
.Ltmp208:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rcx
	.loc	1 114 18                # ./blockquick.h:114:18
	decl	%edx
	cmpq	%r8, %rcx
	.loc	1 114 28 is_stmt 0      # ./blockquick.h:114:28
	jg	.LBB0_62
.Ltmp209:
# %bb.64:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	movl	%r15d, %r9d
.Ltmp210:
	movl	%ebp, %edx
	jmp	.LBB0_65
.Ltmp211:
.LBB0_70:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-120(%rsp), %rax        # 8-byte Reload
	leal	(%r15,%rax), %r8d
.Ltmp212:
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	.loc	1 124 24 is_stmt 1      # ./blockquick.h:124:24
	leal	(%rcx,%rax), %edx
.Ltmp213:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	.loc	1 125 22                # ./blockquick.h:125:22
	movl	%r9d, %r11d
	subl	%esi, %r11d
.Ltmp214:
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- $r11d
	.loc	1 126 18                # ./blockquick.h:126:18
	cmpl	%r8d, %edx
	.loc	1 126 28 is_stmt 0      # ./blockquick.h:126:28
	jle	.LBB0_71
.Ltmp215:
# %bb.72:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 126 5                 # ./blockquick.h:126:5
	movslq	%edx, %rdx
.Ltmp216:
	movslq	%r8d, %r10
.Ltmp217:
	addl	%edi, %r15d
.Ltmp218:
	subl	%ebp, %r15d
	subl	%ecx, %r15d
	subl	%esi, %r15d
	leal	-1(%r8), %ebp
	addl	%eax, %ecx
.Ltmp219:
	decl	%ecx
.Ltmp220:
	.p2align	4, 0x90
.LBB0_73:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: upper <- $r11d
	.loc	1 126 47                # ./blockquick.h:126:47
	cmpl	-52(%rsp,%rdx,4), %r11d
	.loc	1 126 5                 # ./blockquick.h:126:5
	jne	.LBB0_76
.Ltmp221:
# %bb.74:                               #   in Loop: Header=BB0_73 Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	decq	%rdx
.Ltmp222:
	.loc	1 127 12 is_stmt 1      # ./blockquick.h:127:12
	decl	%r11d
.Ltmp223:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdx
	.loc	1 126 18                # ./blockquick.h:126:18
	decl	%ecx
	cmpq	%r10, %rdx
	.loc	1 126 28 is_stmt 0      # ./blockquick.h:126:28
	jg	.LBB0_73
.Ltmp224:
# %bb.75:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	movl	%r15d, %r11d
.Ltmp225:
	movl	%ebp, %ecx
.Ltmp226:
.LBB0_76:
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp227:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- $ecx
	.loc	1 130 18 is_stmt 1      # ./blockquick.h:130:18
	cmpl	%r8d, %ecx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jge	.LBB0_78
.Ltmp228:
.LBB0_77:
	#DEBUG_VALUE: lower <- $ecx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-112(%rsp), %rdi        # 8-byte Reload
	jmp	.LBB0_81
.Ltmp229:
.LBB0_38:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	%rsi, %rbx
.Ltmp230:
	#DEBUG_VALUE: partition_quick_block:low <- $rbx
	leal	(%r10,%rax), %edx
	decl	%edx
.Ltmp231:
	#DEBUG_VALUE: lower <- $edx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp232:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp233:
.LBB0_65:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- $edx
	.loc	1 118 18 is_stmt 1      # ./blockquick.h:118:18
	cmpl	%r11d, %edx
	.loc	1 118 5 is_stmt 0       # ./blockquick.h:118:5
	jl	.LBB0_68
.Ltmp234:
# %bb.66:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: lower <- $edx
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	movslq	%r9d, %rsi
	movslq	%edx, %rcx
	incq	%rcx
	addq	%rbx, %rsi
	leaq	(%rdi,%rsi,4), %rdx
.Ltmp235:
	.p2align	4, 0x90
.LBB0_67:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: upper <- undef
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	1 119 48 is_stmt 1      # ./blockquick.h:119:48
	movslq	460(%rsp,%rcx,4), %rsi
	.loc	1 119 46 is_stmt 0      # ./blockquick.h:119:46
	addq	%rbx, %rsi
.Ltmp236:
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdx), %ebp
.Ltmp237:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rsi,4), %eax
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%eax, (%rdx)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebp, (%rdi,%rsi,4)
.Ltmp238:
	.loc	1 118 18                # ./blockquick.h:118:18
	decq	%rcx
	addq	$-4, %rdx
	decl	%r9d
	cmpq	%r8, %rcx
	.loc	1 118 5 is_stmt 0       # ./blockquick.h:118:5
	jg	.LBB0_67
.Ltmp239:
.LBB0_68:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 121 11 is_stmt 1      # ./blockquick.h:121:11
	movslq	%r10d, %rax
	leaq	(%rdi,%rax,4), %rcx
.Ltmp240:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 121 47 is_stmt 0      # ./blockquick.h:121:47
	movslq	%r9d, %rax
	.loc	1 121 53                # ./blockquick.h:121:53
	addq	%rax, %rbx
	incq	%rbx
.Ltmp241:
	.loc	1 0 0                   # ./blockquick.h:0:0
	movq	%rbx, %rax
	jmp	.LBB0_83
.Ltmp242:
.LBB0_71:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	addl	%eax, %ecx
.Ltmp243:
	decl	%ecx
.Ltmp244:
	#DEBUG_VALUE: lower <- $ecx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp245:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- $ecx
	.loc	1 130 18 is_stmt 1      # ./blockquick.h:130:18
	cmpl	%r8d, %ecx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jl	.LBB0_77
.Ltmp246:
.LBB0_78:
	#DEBUG_VALUE: lower <- $ecx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movslq	%r11d, %rsi
.Ltmp247:
	movslq	%ecx, %rcx
.Ltmp248:
	movslq	%r8d, %r8
.Ltmp249:
	incq	%rcx
	movq	%rdi, %rax
	subq	%rsi, %rax
	subq	%r14, %rax
	movq	-112(%rsp), %rdi        # 8-byte Reload
	leaq	(%rdi,%rax,4), %rbp
	xorl	%esi, %esi
.Ltmp250:
	.p2align	4, 0x90
.LBB0_79:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: upper <- undef
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	1 131 50 is_stmt 1      # ./blockquick.h:131:50
	movslq	-52(%rsp,%rcx,4), %rdx
	.loc	1 131 48 is_stmt 0      # ./blockquick.h:131:48
	movq	%r9, %rbx
	subq	%rdx, %rbx
.Ltmp251:
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rbp,%rsi,4), %edx
.Ltmp252:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbx,4), %eax
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%eax, (%rbp,%rsi,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rbx,4)
.Ltmp253:
	.loc	1 130 18                # ./blockquick.h:130:18
	decq	%rcx
	incq	%rsi
	cmpq	%r8, %rcx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jg	.LBB0_79
.Ltmp254:
# %bb.80:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 133 11 is_stmt 1      # ./blockquick.h:133:11
	subl	%esi, %r11d
.Ltmp255:
.LBB0_81:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: upper <- $r11d
	movslq	%r10d, %rax
	leaq	(%rdi,%rax,4), %rcx
.Ltmp256:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 133 48 is_stmt 0      # ./blockquick.h:133:48
	movslq	%r11d, %rax
	.loc	1 133 46                # ./blockquick.h:133:46
	subq	%rax, %r9
.Ltmp257:
	.loc	1 0 46                  # ./blockquick.h:0:46
	movq	%r9, %rdx
.Ltmp258:
	movq	%r9, %rax
	movq	%r9, %rbx
.Ltmp259:
.LBB0_83:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: swap:b <- undef
	movl	(%rcx), %edx
.Ltmp260:
	#DEBUG_VALUE: swap:t <- $edx
	movl	(%rdi,%rbx,4), %esi
	movl	%esi, (%rcx)
	movl	%edx, (%rdi,%rbx,4)
.Ltmp261:
	.loc	1 139 1 is_stmt 1       # ./blockquick.h:139:1
	addq	$984, %rsp              # imm = 0x3D8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp262:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp263:
.Lfunc_end0:
	.size	partition_quick_block, .Lfunc_end0-partition_quick_block
	.cfi_endproc
	.file	18 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h"
                                        # -- End function
	.globl	median_of_three         # -- Begin function median_of_three
	.p2align	4, 0x90
	.type	median_of_three,@function
median_of_three:                        # @median_of_three
.Lfunc_begin1:
	.loc	4 4 0                   # ./median.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:high <- $rdx
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp264:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB1_2
.Ltmp265:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %eax
.Ltmp266:
	.loc	4 23 1                  # ./median.h:23:1
	retq
.Ltmp267:
.LBB1_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	.loc	4 9 18                  # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp268:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %r8d
.Ltmp269:
	#DEBUG_VALUE: median_of_three:x <- $r8d
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r9
	movl	(%rdi,%r9,4), %eax
.Ltmp270:
	#DEBUG_VALUE: median_of_three:y <- $eax
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %r10d
.Ltmp271:
	#DEBUG_VALUE: median_of_three:z <- $r10d
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%eax, %r8d
.Ltmp272:
	#DEBUG_VALUE: min:y <- $eax
	#DEBUG_VALUE: min:x <- $r8d
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%eax, %ecx
.Ltmp273:
	cmovlel	%r8d, %ecx
.Ltmp274:
	#DEBUG_VALUE: max:y <- $eax
	#DEBUG_VALUE: max:x <- $r8d
	.loc	16 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%eax, %r11d
	cmovgel	%r8d, %r11d
.Ltmp275:
	#DEBUG_VALUE: min:y <- $r10d
	#DEBUG_VALUE: min:x <- $ecx
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r10d, %ecx
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%r10d, %ecx
.Ltmp276:
	#DEBUG_VALUE: max:y <- $r10d
	#DEBUG_VALUE: median_of_three:smallest <- $ecx
	#DEBUG_VALUE: max:x <- $r11d
	.loc	16 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%r10d, %r11d
	.loc	16 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%r10d, %r11d
.Ltmp277:
	#DEBUG_VALUE: median_of_three:largest <- $r11d
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%r8d, %eax
.Ltmp278:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%r10d, %eax
	.loc	4 16 26                 # ./median.h:16:26
	subl	%ecx, %eax
	.loc	4 16 37                 # ./median.h:16:37
	subl	%r11d, %eax
.Ltmp279:
	#DEBUG_VALUE: median_of_three:median <- $eax
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%eax, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%r11d, (%rdi,%r9,4)
	.loc	4 23 1                  # ./median.h:23:1
	retq
.Ltmp280:
.Lfunc_end1:
	.size	median_of_three, .Lfunc_end1-median_of_three
	.cfi_endproc
                                        # -- End function
	.globl	min                     # -- Begin function min
	.p2align	4, 0x90
	.type	min,@function
min:                                    # @min
.Lfunc_begin2:
	.loc	16 3 0                  # ./minmax.h:3:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: min:x <- $edi
	#DEBUG_VALUE: min:y <- $esi
	movl	%esi, %eax
.Ltmp281:
	#DEBUG_VALUE: min:y <- $eax
	#DEBUG_VALUE: min:x <- $edi
	.loc	16 3 42 prologue_end    # ./minmax.h:3:42
	cmpl	%esi, %edi
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovlel	%edi, %eax
.Ltmp282:
	.loc	16 3 32                 # ./minmax.h:3:32
	retq
.Ltmp283:
.Lfunc_end2:
	.size	min, .Lfunc_end2-min
	.cfi_endproc
                                        # -- End function
	.globl	swap                    # -- Begin function swap
	.p2align	4, 0x90
	.type	swap,@function
swap:                                   # @swap
.Lfunc_begin3:
	.loc	17 1 0 is_stmt 1        # ./swap.h:1:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: swap:a <- $rdi
	#DEBUG_VALUE: swap:a <- $rdi
	#DEBUG_VALUE: swap:b <- $rsi
	#DEBUG_VALUE: swap:b <- $rsi
	.loc	17 2 11 prologue_end    # ./swap.h:2:11
	movl	(%rdi), %eax
.Ltmp284:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rsi), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rsi)
	.loc	17 5 1                  # ./swap.h:5:1
	retq
.Ltmp285:
.Lfunc_end3:
	.size	swap, .Lfunc_end3-swap
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_block        # -- Begin function sort_quick_block
	.p2align	4, 0x90
	.type	sort_quick_block,@function
sort_quick_block:                       # @sort_quick_block
.Lfunc_begin4:
	.loc	1 141 0                 # ./blockquick.h:141:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	1 142 11 prologue_end   # ./blockquick.h:142:11
	cmpq	%rsi, %rdx
.Ltmp286:
	.loc	1 142 7 is_stmt 0       # ./blockquick.h:142:7
	jle	.LBB4_22
.Ltmp287:
# %bb.1:
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	.loc	1 0 7                   # ./blockquick.h:0:7
	movq	%rdx, %r15
.Ltmp288:
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	movq	%rsi, %r12
.Ltmp289:
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	movq	%rdi, %r14
.Ltmp290:
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	.p2align	4, 0x90
.LBB4_2:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 143 14 is_stmt 1      # ./blockquick.h:143:14
	movq	%r15, %rsi
	subq	%r12, %rsi
	.loc	1 143 20 is_stmt 0      # ./blockquick.h:143:20
	cmpq	$21, %rsi
.Ltmp291:
	.loc	1 143 9                 # ./blockquick.h:143:9
	jl	.LBB4_4
.Ltmp292:
# %bb.3:                                #   in Loop: Header=BB4_2 Depth=1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	.loc	1 144 20 is_stmt 1      # ./blockquick.h:144:20
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	partition_quick_block
.Ltmp293:
	movq	%rax, %rbx
.Ltmp294:
	#DEBUG_VALUE: pi <- $rbx
	.loc	1 145 39                # ./blockquick.h:145:39
	leaq	-1(%rax), %rdx
	.loc	1 145 7 is_stmt 0       # ./blockquick.h:145:7
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	sort_quick_block
.Ltmp295:
	.loc	1 146 34 is_stmt 1      # ./blockquick.h:146:34
	incq	%rbx
.Ltmp296:
	#DEBUG_VALUE: sort_quick_block:low <- $rbx
	.loc	1 0 34 is_stmt 0        # ./blockquick.h:0:34
	movq	%rbx, %r12
.Ltmp297:
	.loc	1 142 11 is_stmt 1      # ./blockquick.h:142:11
	cmpq	%r15, %rbx
.Ltmp298:
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:array <- undef
	.loc	1 142 7 is_stmt 0       # ./blockquick.h:142:7
	jl	.LBB4_2
	jmp	.LBB4_22
.Ltmp299:
.LBB4_4:
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 148 34 is_stmt 1      # ./blockquick.h:148:34
	incl	%esi
.Ltmp300:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:array <- undef
	#DEBUG_VALUE: insertionSort:n <- $esi
	.file	19 "/home/peeters/bachelor" "./insertionssort.h"
	.loc	19 3 17                 # ./insertionssort.h:3:17
	cmpl	$2, %esi
.Ltmp301:
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB4_22
.Ltmp302:
# %bb.5:
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r14,%r12,4), %rax
.Ltmp303:
	#DEBUG_VALUE: insertionSort:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp304:
	.loc	19 3 17                 # ./insertionssort.h:3:17
	movl	%esi, %r10d
.Ltmp305:
	.loc	19 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp306:
	cmpl	$2, %esi
	jne	.LBB4_6
.Ltmp307:
.LBB4_16:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB4_22
.Ltmp308:
# %bb.17:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp309:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp310:
	.p2align	4, 0x90
.LBB4_18:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 7 31                 # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_21
.Ltmp311:
# %bb.19:                               #   in Loop: Header=BB4_18 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp312:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp313:
	leaq	-1(%r15), %r15
.Ltmp314:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_18
.Ltmp315:
# %bb.20:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp316:
.LBB4_21:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rcx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp317:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB4_22:
	.loc	1 151 1 is_stmt 1       # ./blockquick.h:151:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB4_6:
	.cfi_def_cfa_offset 48
.Ltmp318:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 0 1 is_stmt 0         # ./blockquick.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp319:
	.loc	19 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp320:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB4_7
.Ltmp321:
	.p2align	4, 0x90
.LBB4_15:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp322:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp323:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB4_16
.Ltmp324:
.LBB4_7:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_8 Depth 2
                                        #     Child Loop BB4_12 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp325:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp326:
	.p2align	4, 0x90
.LBB4_8:                                #   Parent Loop BB4_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_11
.Ltmp327:
# %bb.9:                                #   in Loop: Header=BB4_8 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp328:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp329:
	leaq	-1(%rdi), %rdi
.Ltmp330:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_8
.Ltmp331:
# %bb.10:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp332:
.LBB4_11:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp333:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rdi
.Ltmp334:
	#DEBUG_VALUE: insertionSort:i <- $rdi
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	4(%rax,%r15,4), %esi
.Ltmp335:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp336:
	.p2align	4, 0x90
.LBB4_12:                               #   Parent Loop BB4_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_15
.Ltmp337:
# %bb.13:                               #   in Loop: Header=BB4_12 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp338:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp339:
	leaq	-1(%rdi), %rdi
.Ltmp340:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_12
.Ltmp341:
# %bb.14:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB4_15
.Lfunc_end4:
	.size	sort_quick_block, .Lfunc_end4-sort_quick_block
	.cfi_endproc
                                        # -- End function
	.globl	insertionSort           # -- Begin function insertionSort
	.p2align	4, 0x90
	.type	insertionSort,@function
insertionSort:                          # @insertionSort
.Lfunc_begin5:
	.loc	19 1 0 is_stmt 1        # ./insertionssort.h:1:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:n <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp342:
	#DEBUG_VALUE: insertionSort:i <- 1
	.loc	19 3 17 prologue_end    # ./insertionssort.h:3:17
	cmpl	$2, %esi
.Ltmp343:
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB5_18
.Ltmp344:
# %bb.1:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	movabsq	$-4294967296, %rax      # imm = 0xFFFFFFFF00000000
.Ltmp345:
	.loc	19 3 17                 # ./insertionssort.h:3:17
	movl	%esi, %r10d
.Ltmp346:
	.loc	19 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %esi
	jne	.LBB5_2
.Ltmp347:
.LBB5_12:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB5_18
.Ltmp348:
# %bb.13:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	(%rdi,%r15,4), %edx
.Ltmp349:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $edx
	.loc	19 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rsi
	shlq	$32, %rsi
	addq	%rax, %rsi
.Ltmp350:
	.p2align	4, 0x90
.LBB5_14:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rsi, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	19 7 31                 # ./insertionssort.h:7:31
	cmpl	%edx, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_17
.Ltmp351:
# %bb.15:                               #   in Loop: Header=BB5_14 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%r15,4)
.Ltmp352:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rsi
	cmpq	$1, %r15
.Ltmp353:
	leaq	-1(%r15), %r15
.Ltmp354:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_14
.Ltmp355:
# %bb.16:
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp356:
.LBB5_17:
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rax
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%edx, (%rdi,%rax,4)
.Ltmp357:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB5_18:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 13 1 is_stmt 1       # ./insertionssort.h:13:1
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp358:
.LBB5_2:
	.cfi_def_cfa_offset 40
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 0 1 is_stmt 0        # ./insertionssort.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp359:
	.loc	19 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB5_3
.Ltmp360:
	.p2align	4, 0x90
.LBB5_11:                               #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 11 5                 # ./insertionssort.h:11:5
	movslq	%ebx, %rcx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp361:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp362:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB5_12
.Ltmp363:
.LBB5_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_4 Depth 2
                                        #     Child Loop BB5_8 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rdi,%r15,4), %esi
.Ltmp364:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rcx
	movq	%r15, %rbx
.Ltmp365:
	.p2align	4, 0x90
.LBB5_4:                                #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rcx, %rdx
	sarq	$30, %rdx
	movl	(%rdi,%rdx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_7
.Ltmp366:
# %bb.5:                                #   in Loop: Header=BB5_4 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp367:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rcx
	cmpq	$1, %rbx
.Ltmp368:
	leaq	-1(%rbx), %rbx
.Ltmp369:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_4
.Ltmp370:
# %bb.6:                                #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
.Ltmp371:
.LBB5_7:                                #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%ebx, %rcx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp372:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rbx
.Ltmp373:
	#DEBUG_VALUE: insertionSort:i <- $rbx
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	4(%rdi,%r15,4), %esi
.Ltmp374:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rdx
.Ltmp375:
	.p2align	4, 0x90
.LBB5_8:                                #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_11
.Ltmp376:
# %bb.9:                                #   in Loop: Header=BB5_8 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp377:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rdx
	cmpq	$1, %rbx
.Ltmp378:
	leaq	-1(%rbx), %rbx
.Ltmp379:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_8
.Ltmp380:
# %bb.10:                               #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
	jmp	.LBB5_11
.Lfunc_end5:
	.size	insertionSort, .Lfunc_end5-insertionSort
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function random_data
.LCPI6_0:
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
.LCPI6_1:
	.quad	4                       # 0x4
	.quad	5                       # 0x5
	.quad	6                       # 0x6
	.quad	7                       # 0x7
.LCPI6_2:
	.quad	0                       # 0x0
	.quad	1                       # 0x1
	.quad	2                       # 0x2
	.quad	3                       # 0x3
.LCPI6_3:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	7                       # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI6_4:
	.long	9                       # 0x9
.LCPI6_5:
	.long	17                      # 0x11
.LCPI6_6:
	.long	25                      # 0x19
.LCPI6_7:
	.long	33                      # 0x21
.LCPI6_8:
	.long	41                      # 0x29
.LCPI6_9:
	.long	49                      # 0x31
.LCPI6_10:
	.long	57                      # 0x39
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI6_11:
	.quad	64                      # 0x40
	.text
	.globl	random_data
	.p2align	4, 0x90
	.type	random_data,@function
random_data:                            # @random_data
.Lfunc_begin6:
	.file	20 "/home/peeters/bachelor" "./data-random.h"
	.loc	20 4 0 is_stmt 1        # ./data-random.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: random_data:array <- $rdi
	#DEBUG_VALUE: random_data:amount <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp381:
	#DEBUG_VALUE: random_data:amount <- $ebp
	#DEBUG_VALUE: random_data:array <- $rbx
	.loc	20 5 9 prologue_end     # ./data-random.h:5:9
	callq	clock
.Ltmp382:
	.loc	20 5 3 is_stmt 0        # ./data-random.h:5:3
	movl	%eax, %edi
	callq	srand
.Ltmp383:
	#DEBUG_VALUE: i <- 0
	.loc	20 6 21 is_stmt 1       # ./data-random.h:6:21
	testl	%ebp, %ebp
.Ltmp384:
	.loc	20 6 3 is_stmt 0        # ./data-random.h:6:3
	jle	.LBB6_12
.Ltmp385:
# %bb.1:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 6 21                 # ./data-random.h:6:21
	movl	%ebp, %eax
.Ltmp386:
	.loc	20 6 3                  # ./data-random.h:6:3
	cmpl	$31, %ebp
	ja	.LBB6_3
.Ltmp387:
# %bb.2:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 0 3                  # ./data-random.h:0:3
	xorl	%ecx, %ecx
	jmp	.LBB6_11
.Ltmp388:
.LBB6_3:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 6 3                  # ./data-random.h:6:3
	movl	%eax, %ecx
	andl	$-32, %ecx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %esi
	andl	$1, %esi
	testq	%rdi, %rdi
	je	.LBB6_4
.Ltmp389:
# %bb.5:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	movq	%rsi, %rdi
	subq	%rdx, %rdi
	vmovdqa	.LCPI6_1(%rip), %ymm0   # ymm0 = [4,5,6,7]
	vmovdqa	.LCPI6_2(%rip), %ymm1   # ymm1 = [0,1,2,3]
	xorl	%edx, %edx
	vmovdqa	.LCPI6_3(%rip), %ymm2   # ymm2 = [0,2,4,6,4,6,6,7]
	vpcmpeqd	%ymm3, %ymm3, %ymm3
	vpbroadcastd	.LCPI6_4(%rip), %ymm4 # ymm4 = [9,9,9,9,9,9,9,9]
	vpbroadcastd	.LCPI6_5(%rip), %ymm5 # ymm5 = [17,17,17,17,17,17,17,17]
	vpbroadcastd	.LCPI6_6(%rip), %ymm6 # ymm6 = [25,25,25,25,25,25,25,25]
	vpbroadcastd	.LCPI6_7(%rip), %ymm7 # ymm7 = [33,33,33,33,33,33,33,33]
	vpbroadcastd	.LCPI6_8(%rip), %ymm8 # ymm8 = [41,41,41,41,41,41,41,41]
	vpbroadcastd	.LCPI6_9(%rip), %ymm9 # ymm9 = [49,49,49,49,49,49,49,49]
	vpbroadcastd	.LCPI6_10(%rip), %ymm10 # ymm10 = [57,57,57,57,57,57,57,57]
	vpbroadcastq	.LCPI6_11(%rip), %ymm11 # ymm11 = [64,64,64,64]
.Ltmp390:
	.p2align	4, 0x90
.LBB6_6:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 7 14 is_stmt 1       # ./data-random.h:7:14
	vpermd	%ymm1, %ymm2, %ymm12
	vpermd	%ymm0, %ymm2, %ymm13
	vinserti128	$1, %xmm13, %ymm12, %ymm12
	vpsubd	%ymm3, %ymm12, %ymm13
	vmovdqu	%ymm13, (%rbx,%rdx,4)
	vpaddd	%ymm4, %ymm12, %ymm13
	vmovdqu	%ymm13, 32(%rbx,%rdx,4)
	vpaddd	%ymm5, %ymm12, %ymm13
	vmovdqu	%ymm13, 64(%rbx,%rdx,4)
	vpaddd	%ymm6, %ymm12, %ymm13
	vmovdqu	%ymm13, 96(%rbx,%rdx,4)
	vpaddd	%ymm7, %ymm12, %ymm13
	vmovdqu	%ymm13, 128(%rbx,%rdx,4)
	vpaddd	%ymm8, %ymm12, %ymm13
	vmovdqu	%ymm13, 160(%rbx,%rdx,4)
	vpaddd	%ymm9, %ymm12, %ymm13
	vmovdqu	%ymm13, 192(%rbx,%rdx,4)
	vpaddd	%ymm10, %ymm12, %ymm12
	vmovdqu	%ymm12, 224(%rbx,%rdx,4)
	.loc	20 7 18 is_stmt 0       # ./data-random.h:7:18
	addq	$64, %rdx
	vpaddq	%ymm1, %ymm11, %ymm1
	vpaddq	%ymm0, %ymm11, %ymm0
	addq	$2, %rdi
	jne	.LBB6_6
.Ltmp391:
# %bb.7:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	vpermd	%ymm1, %ymm2, %ymm1
	vpermd	%ymm0, %ymm2, %ymm0
	vinserti128	$1, %xmm0, %ymm1, %ymm0
	testq	%rsi, %rsi
	je	.LBB6_10
.Ltmp392:
.LBB6_9:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 7 14                 # ./data-random.h:7:14
	vpcmpeqd	%ymm1, %ymm1, %ymm1
	vpsubd	%ymm1, %ymm0, %ymm1
	vpbroadcastd	.LCPI6_4(%rip), %ymm2 # ymm2 = [9,9,9,9,9,9,9,9]
	vpaddd	%ymm2, %ymm0, %ymm2
	vpbroadcastd	.LCPI6_5(%rip), %ymm3 # ymm3 = [17,17,17,17,17,17,17,17]
	vpaddd	%ymm3, %ymm0, %ymm3
	vpbroadcastd	.LCPI6_6(%rip), %ymm4 # ymm4 = [25,25,25,25,25,25,25,25]
	vpaddd	%ymm4, %ymm0, %ymm0
	vmovdqu	%ymm1, (%rbx,%rdx,4)
	vmovdqu	%ymm2, 32(%rbx,%rdx,4)
	vmovdqu	%ymm3, 64(%rbx,%rdx,4)
	vmovdqu	%ymm0, 96(%rbx,%rdx,4)
.Ltmp393:
.LBB6_10:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 6 3 is_stmt 1        # ./data-random.h:6:3
	cmpq	%rax, %rcx
	je	.LBB6_12
.Ltmp394:
	.p2align	4, 0x90
.LBB6_11:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	#DEBUG_VALUE: i <- $rcx
	.loc	20 7 18                 # ./data-random.h:7:18
	leaq	1(%rcx), %rdx
	.loc	20 7 14 is_stmt 0       # ./data-random.h:7:14
	movl	%edx, (%rbx,%rcx,4)
.Ltmp395:
	#DEBUG_VALUE: i <- $rdx
	.loc	20 0 14                 # ./data-random.h:0:14
	movq	%rdx, %rcx
.Ltmp396:
	.loc	20 6 21 is_stmt 1       # ./data-random.h:6:21
	cmpq	%rdx, %rax
.Ltmp397:
	#DEBUG_VALUE: i <- $rcx
	.loc	20 6 3 is_stmt 0        # ./data-random.h:6:3
	jne	.LBB6_11
.Ltmp398:
.LBB6_12:
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 9 1 is_stmt 1        # ./data-random.h:9:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp399:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp400:
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.LBB6_4:
	.cfi_def_cfa_offset 32
.Ltmp401:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	20 0 1 is_stmt 0        # ./data-random.h:0:1
	vmovdqa	.LCPI6_0(%rip), %ymm0   # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%edx, %edx
.Ltmp402:
	.loc	20 7 18 is_stmt 1       # ./data-random.h:7:18
	testq	%rsi, %rsi
	jne	.LBB6_9
	jmp	.LBB6_10
.Ltmp403:
.Lfunc_end6:
	.size	random_data, .Lfunc_end6-random_data
	.cfi_endproc
                                        # -- End function
	.globl	insertionSortOptimized  # -- Begin function insertionSortOptimized
	.p2align	4, 0x90
	.type	insertionSortOptimized,@function
insertionSortOptimized:                 # @insertionSortOptimized
.Lfunc_begin7:
	.loc	19 15 0                 # ./insertionssort.h:15:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp404:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	.loc	19 17 17 prologue_end   # ./insertionssort.h:17:17
	cmpl	$2, %esi
.Ltmp405:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB7_18
.Ltmp406:
# %bb.1:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	movabsq	$-4294967296, %rax      # imm = 0xFFFFFFFF00000000
.Ltmp407:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%esi, %r10d
.Ltmp408:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %esi
	jne	.LBB7_2
.Ltmp409:
.LBB7_12:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB7_18
.Ltmp410:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rdi,%r15,4), %edx
.Ltmp411:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rsi
	shlq	$32, %rsi
	addq	%rax, %rsi
.Ltmp412:
	.p2align	4, 0x90
.LBB7_14:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rsi, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%edx, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_17
.Ltmp413:
# %bb.15:                               #   in Loop: Header=BB7_14 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%r15,4)
.Ltmp414:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rsi
	cmpq	$1, %r15
.Ltmp415:
	leaq	-1(%r15), %r15
.Ltmp416:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_14
.Ltmp417:
# %bb.16:
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp418:
.LBB7_17:
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rax
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%edx, (%rdi,%rax,4)
.Ltmp419:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB7_18:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 27 1 is_stmt 1       # ./insertionssort.h:27:1
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp420:
.LBB7_2:
	.cfi_def_cfa_offset 40
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 0 1 is_stmt 0        # ./insertionssort.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp421:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB7_3
.Ltmp422:
	.p2align	4, 0x90
.LBB7_11:                               #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 25 5                 # ./insertionssort.h:25:5
	movslq	%ebx, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp423:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp424:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB7_12
.Ltmp425:
.LBB7_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_4 Depth 2
                                        #     Child Loop BB7_8 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rdi,%r15,4), %esi
.Ltmp426:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rcx
	movq	%r15, %rbx
.Ltmp427:
	.p2align	4, 0x90
.LBB7_4:                                #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rcx, %rdx
	sarq	$30, %rdx
	movl	(%rdi,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_7
.Ltmp428:
# %bb.5:                                #   in Loop: Header=BB7_4 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp429:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rcx
	cmpq	$1, %rbx
.Ltmp430:
	leaq	-1(%rbx), %rbx
.Ltmp431:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_4
.Ltmp432:
# %bb.6:                                #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
.Ltmp433:
.LBB7_7:                                #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%ebx, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp434:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rbx
.Ltmp435:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rbx
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rdi,%r15,4), %esi
.Ltmp436:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rdx
.Ltmp437:
	.p2align	4, 0x90
.LBB7_8:                                #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_11
.Ltmp438:
# %bb.9:                                #   in Loop: Header=BB7_8 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp439:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rdx
	cmpq	$1, %rbx
.Ltmp440:
	leaq	-1(%rbx), %rbx
.Ltmp441:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_8
.Ltmp442:
# %bb.10:                               #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
	jmp	.LBB7_11
.Lfunc_end7:
	.size	insertionSortOptimized, .Lfunc_end7-insertionSortOptimized
	.cfi_endproc
                                        # -- End function
	.globl	insertionSortStd        # -- Begin function insertionSortStd
	.p2align	4, 0x90
	.type	insertionSortStd,@function
insertionSortStd:                       # @insertionSortStd
.Lfunc_begin8:
	.loc	19 29 0 is_stmt 1       # ./insertionssort.h:29:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	.loc	19 32 23 prologue_end   # ./insertionssort.h:32:23
	cmpq	%rsi, %rdx
.Ltmp443:
	.loc	19 32 3 is_stmt 0       # ./insertionssort.h:32:3
	jle	.LBB8_21
.Ltmp444:
# %bb.1:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r8
	notq	%r8
	testb	$1, %al
	jne	.LBB8_3
.Ltmp445:
# %bb.2:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	movq	%rsi, %r9
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	%rdx, %r8
	je	.LBB8_21
	jmp	.LBB8_9
.Ltmp446:
.LBB8_3:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 0 0                  # ./insertionssort.h:0:0
	leaq	1(%rsi), %r9
.Ltmp447:
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rdi,%rsi,4), %ecx
.Ltmp448:
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	.loc	19 40 13                # ./insertionssort.h:40:13
	movq	%r9, %rax
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%rsi, %rsi
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	js	.LBB8_7
.Ltmp449:
	.p2align	4, 0x90
.LBB8_4:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	19 36 22                # ./insertionssort.h:36:22
	movl	(%rdi,%rsi,4), %eax
	.loc	19 36 31                # ./insertionssort.h:36:31
	cmpl	%ecx, %eax
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_6
.Ltmp450:
# %bb.5:                                #   in Loop: Header=BB8_4 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp451:
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%rsi, %rsi
.Ltmp452:
	.loc	19 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rsi), %rsi
.Ltmp453:
	.loc	19 36 19                # ./insertionssort.h:36:19
	jg	.LBB8_4
.Ltmp454:
.LBB8_6:
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 40 13                # ./insertionssort.h:40:13
	incq	%rsi
	movq	%rsi, %rax
.Ltmp455:
.LBB8_7:
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 0      # ./insertionssort.h:40:18
	movl	%ecx, (%rdi,%rax,4)
.Ltmp456:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r9
	.loc	19 32 3 is_stmt 1       # ./insertionssort.h:32:3
	addq	%rdx, %r8
	jne	.LBB8_9
.Ltmp457:
.LBB8_21:
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 42 1                 # ./insertionssort.h:42:1
	retq
.Ltmp458:
.LBB8_9:
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 32 3                 # ./insertionssort.h:32:3
	leaq	2(%r9), %r8
	jmp	.LBB8_10
.Ltmp459:
	.p2align	4, 0x90
.LBB8_19:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	decq	%rax
	movq	%rax, %rcx
	.loc	19 40 13 is_stmt 1      # ./insertionssort.h:40:13
	incq	%rcx
.Ltmp460:
.LBB8_20:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 0      # ./insertionssort.h:40:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp461:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r9
	.loc	19 32 3 is_stmt 1       # ./insertionssort.h:32:3
	addq	$2, %r8
.Ltmp462:
	.loc	19 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rdx, %r9
.Ltmp463:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	je	.LBB8_21
.Ltmp464:
.LBB8_10:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_13 Depth 2
                                        #     Child Loop BB8_17 Depth 2
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rdi,%r9,4), %esi
.Ltmp465:
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%r9, %r9
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	js	.LBB8_11
.Ltmp466:
# %bb.12:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 0 19                 # ./insertionssort.h:0:19
	movq	%r9, %rax
.Ltmp467:
	.p2align	4, 0x90
.LBB8_13:                               #   Parent Loop BB8_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	.loc	19 36 22                # ./insertionssort.h:36:22
	movl	(%rdi,%rax,4), %ecx
	.loc	19 36 31                # ./insertionssort.h:36:31
	cmpl	%esi, %ecx
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_15
.Ltmp468:
# %bb.14:                               #   in Loop: Header=BB8_13 Depth=2
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ecx, 4(%rdi,%rax,4)
.Ltmp469:
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%rax, %rax
.Ltmp470:
	.loc	19 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rax), %rax
.Ltmp471:
	.loc	19 36 19                # ./insertionssort.h:36:19
	jg	.LBB8_13
.Ltmp472:
.LBB8_15:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 40 13                # ./insertionssort.h:40:13
	incq	%rax
	jmp	.LBB8_16
.Ltmp473:
	.p2align	4, 0x90
.LBB8_11:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 0 13 is_stmt 0       # ./insertionssort.h:0:13
	leaq	1(%r9), %rax
.Ltmp474:
.LBB8_16:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18                # ./insertionssort.h:40:18
	movl	%esi, (%rdi,%rax,4)
.Ltmp475:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	8(%rdi,%r9,4), %esi
.Ltmp476:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r8, %rax
	.loc	19 36 14 is_stmt 1      # ./insertionssort.h:36:14
	cmpq	$-1, %r9
.Ltmp477:
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	leaq	2(%r9), %r9
.Ltmp478:
	.loc	19 40 13 is_stmt 1      # ./insertionssort.h:40:13
	movq	%r9, %rcx
	.loc	19 36 19                # ./insertionssort.h:36:19
	jl	.LBB8_20
.Ltmp479:
	.p2align	4, 0x90
.LBB8_17:                               #   Parent Loop BB8_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 36 22 is_stmt 0      # ./insertionssort.h:36:22
	movl	-4(%rdi,%rax,4), %ecx
	.loc	19 36 31                # ./insertionssort.h:36:31
	cmpl	%esi, %ecx
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_19
.Ltmp480:
# %bb.18:                               #   in Loop: Header=BB8_17 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ecx, (%rdi,%rax,4)
.Ltmp481:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	19 36 14                # ./insertionssort.h:36:14
	decq	%rax
	testq	%rax, %rax
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB8_17
	jmp	.LBB8_19
.Ltmp482:
.Lfunc_end8:
	.size	insertionSortStd, .Lfunc_end8-insertionSortStd
	.cfi_endproc
                                        # -- End function
	.globl	heapify                 # -- Begin function heapify
	.p2align	4, 0x90
	.type	heapify,@function
heapify:                                # @heapify
.Lfunc_begin9:
	.file	21 "/home/peeters/bachelor" "./heapsort.h"
	.loc	21 3 0 is_stmt 1        # ./heapsort.h:3:0
	.cfi_startproc
# %bb.0:
                                        # kill: def $edx killed $edx def $rdx
	.p2align	4, 0x90
.LBB9_1:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $edx
	.loc	21 5 19 prologue_end    # ./heapsort.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp483:
	#DEBUG_VALUE: heapify:l <- $eax
	.loc	21 6 19                 # ./heapsort.h:6:19
	leal	(%rdx,%rdx), %r9d
	addl	$2, %r9d
.Ltmp484:
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:r <- $r9d
	.loc	21 9 27                 # ./heapsort.h:9:27
	movslq	%edx, %r8
.Ltmp485:
	.loc	21 0 0 is_stmt 0        # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp486:
	.loc	21 9 11                 # ./heapsort.h:9:11
	cmpl	%esi, %eax
	#DEBUG_VALUE: heapify:arr <- undef
	.loc	21 9 15                 # ./heapsort.h:9:15
	jl	.LBB9_2
.Ltmp487:
# %bb.5:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r9d
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jl	.LBB9_6
.Ltmp488:
.LBB9_9:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB9_10
	jmp	.LBB9_11
.Ltmp489:
	.p2align	4, 0x90
.LBB9_2:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 9 18                 # ./heapsort.h:9:18
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	21 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r8,4), %ecx
.Ltmp490:
	.loc	21 9 9                  # ./heapsort.h:9:9
	jg	.LBB9_4
.Ltmp491:
# %bb.3:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	movl	%edx, %eax
.Ltmp492:
.LBB9_4:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp493:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r9d
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jge	.LBB9_9
.Ltmp494:
.LBB9_6:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 13 18                # ./heapsort.h:13:18
	movslq	%r9d, %rax
	movl	(%rdi,%rax,4), %r10d
	.loc	21 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rax
	.loc	21 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rax,4), %r10d
.Ltmp495:
	.loc	21 13 9                 # ./heapsort.h:13:9
	jg	.LBB9_8
.Ltmp496:
# %bb.7:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	movl	%ecx, %r9d
.Ltmp497:
.LBB9_8:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%r9d, %ecx
.Ltmp498:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
.Ltmp499:
	.loc	21 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB9_11
.Ltmp500:
.LBB9_10:                               #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 18 24 is_stmt 1      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp501:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r8,4), %r9d
.Ltmp502:
	#DEBUG_VALUE: swap:t <- $r9d
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %edx
.Ltmp503:
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%r8,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r9d, (%rdi,%rax,4)
	movl	%ecx, %edx
	jmp	.LBB9_1
.Ltmp504:
.LBB9_11:
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	21 23 1                 # ./heapsort.h:23:1
	retq
.Ltmp505:
.Lfunc_end9:
	.size	heapify, .Lfunc_end9-heapify
	.cfi_endproc
                                        # -- End function
	.globl	heapsort_h              # -- Begin function heapsort_h
	.p2align	4, 0x90
	.type	heapsort_h,@function
heapsort_h:                             # @heapsort_h
.Lfunc_begin10:
	.loc	21 25 0                 # ./heapsort.h:25:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp506:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	21 27 31 prologue_end   # ./heapsort.h:27:31
	cmpl	$2, %esi
.Ltmp507:
	.loc	21 27 5 is_stmt 0       # ./heapsort.h:27:5
	jl	.LBB10_14
.Ltmp508:
# %bb.1:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 27 20                # ./heapsort.h:27:20
	movl	%esi, %r8d
	shrl	%r8d
.Ltmp509:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	21 0 20                 # ./heapsort.h:0:20
	jmp	.LBB10_3
.Ltmp510:
	.p2align	4, 0x90
.LBB10_2:                               #   in Loop: Header=BB10_3 Depth=1
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	21 27 31                # ./heapsort.h:27:31
	cmpl	$2, %r9d
.Ltmp511:
	.loc	21 27 5                 # ./heapsort.h:27:5
	jl	.LBB10_14
.Ltmp512:
.LBB10_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_4 Depth 2
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 5                  # ./heapsort.h:0:5
	movl	%r8d, %r9d
	leal	-1(%r9), %r8d
.Ltmp513:
	movl	%r8d, %edx
.Ltmp514:
	.p2align	4, 0x90
.LBB10_4:                               #   Parent Loop BB10_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $edx
	.loc	21 5 19 is_stmt 1       # ./heapsort.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp515:
	#DEBUG_VALUE: heapify:l <- $eax
	.loc	21 6 19                 # ./heapsort.h:6:19
	leal	(%rdx,%rdx), %r11d
	addl	$2, %r11d
.Ltmp516:
	#DEBUG_VALUE: heapify:r <- $r11d
	.loc	21 9 27                 # ./heapsort.h:9:27
	movslq	%edx, %r10
.Ltmp517:
	.loc	21 0 0 is_stmt 0        # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp518:
	.loc	21 9 11                 # ./heapsort.h:9:11
	cmpl	%esi, %eax
	.loc	21 9 15                 # ./heapsort.h:9:15
	jl	.LBB10_5
.Ltmp519:
# %bb.8:                                #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r11d
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jl	.LBB10_9
.Ltmp520:
.LBB10_12:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB10_13
	jmp	.LBB10_2
.Ltmp521:
	.p2align	4, 0x90
.LBB10_5:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 9 18                 # ./heapsort.h:9:18
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	21 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r10,4), %ecx
.Ltmp522:
	.loc	21 9 9                  # ./heapsort.h:9:9
	jg	.LBB10_7
.Ltmp523:
# %bb.6:                                #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%edx, %eax
.Ltmp524:
.LBB10_7:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp525:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r11d
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jge	.LBB10_12
.Ltmp526:
.LBB10_9:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 13 18                # ./heapsort.h:13:18
	movslq	%r11d, %rax
	movl	(%rdi,%rax,4), %eax
	.loc	21 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rbx
	.loc	21 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rbx,4), %eax
.Ltmp527:
	.loc	21 13 9                 # ./heapsort.h:13:9
	jg	.LBB10_11
.Ltmp528:
# %bb.10:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%ecx, %r11d
.Ltmp529:
.LBB10_11:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%r11d, %ecx
.Ltmp530:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
.Ltmp531:
	.loc	21 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB10_2
.Ltmp532:
.LBB10_13:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 18 24 is_stmt 1      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp533:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r10,4), %edx
.Ltmp534:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %ebx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, (%rdi,%r10,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rax,4)
	movl	%ecx, %edx
.Ltmp535:
	.loc	17 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB10_4
.Ltmp536:
.LBB10_14:
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	21 31 27 is_stmt 1      # ./heapsort.h:31:27
	testl	%esi, %esi
.Ltmp537:
	.loc	21 31 5 is_stmt 0       # ./heapsort.h:31:5
	jle	.LBB10_28
.Ltmp538:
# %bb.15:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 21 9 is_stmt 1       # ./heapsort.h:21:9
	movl	%esi, %r9d
	jmp	.LBB10_17
.Ltmp539:
	.p2align	4, 0x90
.LBB10_16:                              #   in Loop: Header=BB10_17 Depth=1
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9
	.loc	21 31 27                # ./heapsort.h:31:27
	cmpq	$1, %r8
.Ltmp540:
	.loc	21 31 5 is_stmt 0       # ./heapsort.h:31:5
	jle	.LBB10_28
.Ltmp541:
.LBB10_17:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_18 Depth 2
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 5                  # ./heapsort.h:0:5
	movq	%r9, %r8
	decq	%r9
	xorl	%esi, %esi
.Ltmp542:
	#DEBUG_VALUE: swap:a <- $rdi
	movq	%r9, %rax
	movq	%rdi, %rdx
.Ltmp543:
	.p2align	4, 0x90
.LBB10_18:                              #   Parent Loop BB10_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	(%rdx), %ecx
	movl	(%rdi,%rax,4), %ebx
	movl	%ebx, (%rdx)
	movl	%ecx, (%rdi,%rax,4)
.Ltmp544:
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:arr <- $rdi
	.loc	21 5 19 is_stmt 1       # ./heapsort.h:5:19
	leal	(%rsi,%rsi), %ecx
	incl	%ecx
.Ltmp545:
	#DEBUG_VALUE: heapify:l <- $ecx
	.loc	21 6 19                 # ./heapsort.h:6:19
	leal	2(%rsi,%rsi), %eax
.Ltmp546:
	#DEBUG_VALUE: heapify:r <- $eax
	.loc	21 9 11                 # ./heapsort.h:9:11
	movslq	%ecx, %rdx
	.loc	21 9 27 is_stmt 0       # ./heapsort.h:9:27
	movslq	%esi, %r10
.Ltmp547:
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%esi, %ecx
.Ltmp548:
	.loc	21 9 11                 # ./heapsort.h:9:11
	cmpq	%rdx, %r9
	.loc	21 9 15                 # ./heapsort.h:9:15
	jg	.LBB10_19
.Ltmp549:
# %bb.22:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jg	.LBB10_23
.Ltmp550:
.LBB10_26:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%esi, %ecx
	jne	.LBB10_27
	jmp	.LBB10_16
.Ltmp551:
	.p2align	4, 0x90
.LBB10_19:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 9 18                 # ./heapsort.h:9:18
	movl	(%rdi,%rdx,4), %ecx
	.loc	21 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r10,4), %ecx
.Ltmp552:
	.loc	21 9 9                  # ./heapsort.h:9:9
	jg	.LBB10_21
.Ltmp553:
# %bb.20:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%esi, %edx
.Ltmp554:
.LBB10_21:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp555:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 13 11 is_stmt 1      # ./heapsort.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	21 13 15 is_stmt 0      # ./heapsort.h:13:15
	jle	.LBB10_26
.Ltmp556:
.LBB10_23:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 13 18                # ./heapsort.h:13:18
	movl	(%rdi,%rdx,4), %edx
	.loc	21 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rbx
	.loc	21 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rbx,4), %edx
.Ltmp557:
	.loc	21 13 9                 # ./heapsort.h:13:9
	jg	.LBB10_25
.Ltmp558:
# %bb.24:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%ecx, %eax
.Ltmp559:
.LBB10_25:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp560:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	21 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%esi, %ecx
.Ltmp561:
	.loc	21 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB10_16
.Ltmp562:
.LBB10_27:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 18 15 is_stmt 1      # ./heapsort.h:18:15
	leaq	(%rdi,%r10,4), %rdx
	.loc	21 18 24 is_stmt 0      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp563:
	#DEBUG_VALUE: swap:t <- undef
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- $rdx
	.loc	21 0 24                 # ./heapsort.h:0:24
	movl	%ecx, %esi
.Ltmp564:
	jmp	.LBB10_18
.Ltmp565:
.LBB10_28:
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	21 38 1 is_stmt 1       # ./heapsort.h:38:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp566:
.Lfunc_end10:
	.size	heapsort_h, .Lfunc_end10-heapsort_h
	.cfi_endproc
                                        # -- End function
	.globl	heapsort                # -- Begin function heapsort
	.p2align	4, 0x90
	.type	heapsort,@function
heapsort:                               # @heapsort
.Lfunc_begin11:
	.loc	21 40 0                 # ./heapsort.h:40:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsort:array <- $rdi
	#DEBUG_VALUE: heapsort:low <- $esi
	#DEBUG_VALUE: heapsort:high <- $edx
                                        # kill: def $edx killed $edx def $rdx
	#DEBUG_VALUE: heapsort:high <- $edx
	#DEBUG_VALUE: heapsort:low <- $esi
	#DEBUG_VALUE: heapsort:array <- $rdi
	.loc	21 41 17 prologue_end   # ./heapsort.h:41:17
	movslq	%esi, %rax
	leaq	(%rdi,%rax,4), %rdi
.Ltmp567:
	.loc	21 41 40 is_stmt 0      # ./heapsort.h:41:40
	subl	%eax, %edx
.Ltmp568:
	leal	1(%rdx), %esi
.Ltmp569:
	.loc	21 41 5                 # ./heapsort.h:41:5
	jmp	heapsort_h              # TAILCALL
.Ltmp570:
.Lfunc_end11:
	.size	heapsort, .Lfunc_end11-heapsort
	.cfi_endproc
                                        # -- End function
	.globl	heapifyo                # -- Begin function heapifyo
	.p2align	4, 0x90
	.type	heapifyo,@function
heapifyo:                               # @heapifyo
.Lfunc_begin12:
	.loc	8 3 0 is_stmt 1         # ./heapsorto.h:3:0
	.cfi_startproc
# %bb.0:
                                        # kill: def $edx killed $edx def $rdx
	.p2align	4, 0x90
.LBB12_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $edx
	.loc	8 5 19 prologue_end     # ./heapsorto.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp571:
	#DEBUG_VALUE: heapifyo:l <- $eax
	.loc	8 6 19                  # ./heapsorto.h:6:19
	leal	(%rdx,%rdx), %r9d
	addl	$2, %r9d
.Ltmp572:
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:r <- $r9d
	.loc	8 9 31                  # ./heapsorto.h:9:31
	movslq	%edx, %r8
	movl	%edx, %ecx
	.loc	8 9 15 is_stmt 0        # ./heapsorto.h:9:15
	cmpl	%esi, %eax
	#DEBUG_VALUE: heapifyo:arr <- undef
	.loc	8 9 19                  # ./heapsorto.h:9:19
	jl	.LBB12_2
.Ltmp573:
# %bb.5:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r9d
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jl	.LBB12_6
.Ltmp574:
.LBB12_9:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB12_10
	jmp	.LBB12_11
.Ltmp575:
	.p2align	4, 0x90
.LBB12_2:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 9 22                  # ./heapsorto.h:9:22
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	8 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r8,4), %ecx
	jg	.LBB12_4
.Ltmp576:
# %bb.3:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 0 29                  # ./heapsorto.h:0:29
	movl	%edx, %eax
.Ltmp577:
.LBB12_4:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	movl	%eax, %ecx
.Ltmp578:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r9d
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jge	.LBB12_9
.Ltmp579:
.LBB12_6:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 13 18                 # ./heapsorto.h:13:18
	movslq	%r9d, %rax
	movl	(%rdi,%rax,4), %r10d
	.loc	8 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rax
	.loc	8 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rax,4), %r10d
	jg	.LBB12_8
.Ltmp580:
# %bb.7:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %r9d
.Ltmp581:
.LBB12_8:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	movl	%r9d, %ecx
.Ltmp582:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
.Ltmp583:
	.loc	8 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB12_11
.Ltmp584:
.LBB12_10:                              #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 18 24 is_stmt 1       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp585:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r8,4), %r9d
.Ltmp586:
	#DEBUG_VALUE: swap:t <- $r9d
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %edx
.Ltmp587:
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%r8,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r9d, (%rdi,%rax,4)
	movl	%ecx, %edx
	jmp	.LBB12_1
.Ltmp588:
.LBB12_11:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	8 23 1                  # ./heapsorto.h:23:1
	retq
.Ltmp589:
.Lfunc_end12:
	.size	heapifyo, .Lfunc_end12-heapifyo
	.cfi_endproc
                                        # -- End function
	.globl	heapsorto_h             # -- Begin function heapsorto_h
	.p2align	4, 0x90
	.type	heapsorto_h,@function
heapsorto_h:                            # @heapsorto_h
.Lfunc_begin13:
	.loc	8 27 0                  # ./heapsorto.h:27:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp590:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	8 29 31 prologue_end    # ./heapsorto.h:29:31
	cmpl	$2, %esi
.Ltmp591:
	.loc	8 29 5 is_stmt 0        # ./heapsorto.h:29:5
	jl	.LBB13_14
.Ltmp592:
# %bb.1:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 29 20                 # ./heapsorto.h:29:20
	movl	%esi, %r8d
	shrl	%r8d
.Ltmp593:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	8 0 20                  # ./heapsorto.h:0:20
	jmp	.LBB13_3
.Ltmp594:
	.p2align	4, 0x90
.LBB13_2:                               #   in Loop: Header=BB13_3 Depth=1
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	8 29 31                 # ./heapsorto.h:29:31
	cmpl	$2, %r9d
.Ltmp595:
	.loc	8 29 5                  # ./heapsorto.h:29:5
	jl	.LBB13_14
.Ltmp596:
.LBB13_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_4 Depth 2
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 5                   # ./heapsorto.h:0:5
	movl	%r8d, %r9d
	leal	-1(%r9), %r8d
.Ltmp597:
	movl	%r8d, %edx
.Ltmp598:
	.p2align	4, 0x90
.LBB13_4:                               #   Parent Loop BB13_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $edx
	.loc	8 5 19 is_stmt 1        # ./heapsorto.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp599:
	#DEBUG_VALUE: heapifyo:l <- $eax
	.loc	8 6 19                  # ./heapsorto.h:6:19
	leal	(%rdx,%rdx), %r11d
	addl	$2, %r11d
.Ltmp600:
	#DEBUG_VALUE: heapifyo:r <- $r11d
	.loc	8 9 31                  # ./heapsorto.h:9:31
	movslq	%edx, %r10
	movl	%edx, %ecx
	.loc	8 9 15 is_stmt 0        # ./heapsorto.h:9:15
	cmpl	%esi, %eax
	.loc	8 9 19                  # ./heapsorto.h:9:19
	jl	.LBB13_5
.Ltmp601:
# %bb.8:                                #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r11d
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jl	.LBB13_9
.Ltmp602:
.LBB13_12:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB13_13
	jmp	.LBB13_2
.Ltmp603:
	.p2align	4, 0x90
.LBB13_5:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 9 22                  # ./heapsorto.h:9:22
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	8 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r10,4), %ecx
	jg	.LBB13_7
.Ltmp604:
# %bb.6:                                #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 29                  # ./heapsorto.h:0:29
	movl	%edx, %eax
.Ltmp605:
.LBB13_7:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%eax, %ecx
.Ltmp606:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r11d
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jge	.LBB13_12
.Ltmp607:
.LBB13_9:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 13 18                 # ./heapsorto.h:13:18
	movslq	%r11d, %rax
	movl	(%rdi,%rax,4), %eax
	.loc	8 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rbx
	.loc	8 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rbx,4), %eax
	jg	.LBB13_11
.Ltmp608:
# %bb.10:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %r11d
.Ltmp609:
.LBB13_11:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%r11d, %ecx
.Ltmp610:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
.Ltmp611:
	.loc	8 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB13_2
.Ltmp612:
.LBB13_13:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 18 24 is_stmt 1       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp613:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r10,4), %edx
.Ltmp614:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %ebx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, (%rdi,%r10,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rax,4)
	movl	%ecx, %edx
.Ltmp615:
	.loc	17 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB13_4
.Ltmp616:
.LBB13_14:
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 33 10 is_stmt 1       # ./heapsorto.h:33:10
	incl	count(%rip)
.Ltmp617:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	8 34 27                 # ./heapsorto.h:34:27
	testl	%esi, %esi
.Ltmp618:
	.loc	8 34 5 is_stmt 0        # ./heapsorto.h:34:5
	jle	.LBB13_28
.Ltmp619:
# %bb.15:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 21 9 is_stmt 1        # ./heapsorto.h:21:9
	movl	%esi, %r9d
	jmp	.LBB13_17
.Ltmp620:
	.p2align	4, 0x90
.LBB13_16:                              #   in Loop: Header=BB13_17 Depth=1
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9
	.loc	8 34 27                 # ./heapsorto.h:34:27
	cmpq	$1, %r8
.Ltmp621:
	.loc	8 34 5 is_stmt 0        # ./heapsorto.h:34:5
	jle	.LBB13_28
.Ltmp622:
.LBB13_17:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_18 Depth 2
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 5                   # ./heapsorto.h:0:5
	movq	%r9, %r8
	decq	%r9
	xorl	%esi, %esi
.Ltmp623:
	#DEBUG_VALUE: swap:a <- $rdi
	movq	%r9, %rax
	movq	%rdi, %rdx
.Ltmp624:
	.p2align	4, 0x90
.LBB13_18:                              #   Parent Loop BB13_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	(%rdx), %ecx
	movl	(%rdi,%rax,4), %ebx
	movl	%ebx, (%rdx)
	movl	%ecx, (%rdi,%rax,4)
.Ltmp625:
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	.loc	8 5 19 is_stmt 1        # ./heapsorto.h:5:19
	leal	(%rsi,%rsi), %ecx
	incl	%ecx
.Ltmp626:
	#DEBUG_VALUE: heapifyo:l <- $ecx
	.loc	8 6 19                  # ./heapsorto.h:6:19
	leal	2(%rsi,%rsi), %eax
.Ltmp627:
	#DEBUG_VALUE: heapifyo:r <- $eax
	.loc	8 9 15                  # ./heapsorto.h:9:15
	movslq	%ecx, %rdx
	.loc	8 9 31 is_stmt 0        # ./heapsorto.h:9:31
	movslq	%esi, %r10
	movl	%esi, %ecx
.Ltmp628:
	.loc	8 9 15                  # ./heapsorto.h:9:15
	cmpq	%rdx, %r9
	.loc	8 9 19                  # ./heapsorto.h:9:19
	jg	.LBB13_19
.Ltmp629:
# %bb.22:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jg	.LBB13_23
.Ltmp630:
.LBB13_26:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%esi, %ecx
	jne	.LBB13_27
	jmp	.LBB13_16
.Ltmp631:
	.p2align	4, 0x90
.LBB13_19:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 9 22                  # ./heapsorto.h:9:22
	movl	(%rdi,%rdx,4), %ecx
	.loc	8 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r10,4), %ecx
	jg	.LBB13_21
.Ltmp632:
# %bb.20:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 29                  # ./heapsorto.h:0:29
	movl	%esi, %edx
.Ltmp633:
.LBB13_21:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%edx, %ecx
.Ltmp634:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 13 11 is_stmt 1       # ./heapsorto.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	8 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jle	.LBB13_26
.Ltmp635:
.LBB13_23:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 13 18                 # ./heapsorto.h:13:18
	movl	(%rdi,%rdx,4), %edx
	.loc	8 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rbx
	.loc	8 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rbx,4), %edx
	jg	.LBB13_25
.Ltmp636:
# %bb.24:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %eax
.Ltmp637:
.LBB13_25:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%eax, %ecx
.Ltmp638:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	8 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%esi, %ecx
.Ltmp639:
	.loc	8 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB13_16
.Ltmp640:
.LBB13_27:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 18 15 is_stmt 1       # ./heapsorto.h:18:15
	leaq	(%rdi,%r10,4), %rdx
	.loc	8 18 24 is_stmt 0       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp641:
	#DEBUG_VALUE: swap:t <- undef
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- $rdx
	.loc	8 0 24                  # ./heapsorto.h:0:24
	movl	%ecx, %esi
.Ltmp642:
	jmp	.LBB13_18
.Ltmp643:
.LBB13_28:
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	8 41 1 is_stmt 1        # ./heapsorto.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp644:
.Lfunc_end13:
	.size	heapsorto_h, .Lfunc_end13-heapsorto_h
	.cfi_endproc
                                        # -- End function
	.globl	heapsorto               # -- Begin function heapsorto
	.p2align	4, 0x90
	.type	heapsorto,@function
heapsorto:                              # @heapsorto
.Lfunc_begin14:
	.loc	8 43 0                  # ./heapsorto.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsorto:array <- $rdi
	#DEBUG_VALUE: heapsorto:low <- $esi
	#DEBUG_VALUE: heapsorto:high <- $edx
                                        # kill: def $edx killed $edx def $rdx
	#DEBUG_VALUE: heapsorto:high <- $edx
	#DEBUG_VALUE: heapsorto:low <- $esi
	#DEBUG_VALUE: heapsorto:array <- $rdi
	.loc	8 44 18 prologue_end    # ./heapsorto.h:44:18
	movslq	%esi, %rax
	leaq	(%rdi,%rax,4), %rdi
.Ltmp645:
	.loc	8 44 41 is_stmt 0       # ./heapsorto.h:44:41
	subl	%eax, %edx
.Ltmp646:
	leal	1(%rdx), %esi
.Ltmp647:
	.loc	8 44 5                  # ./heapsorto.h:44:5
	jmp	heapsorto_h             # TAILCALL
.Ltmp648:
.Lfunc_end14:
	.size	heapsorto, .Lfunc_end14-heapsorto
	.cfi_endproc
                                        # -- End function
	.globl	max                     # -- Begin function max
	.p2align	4, 0x90
	.type	max,@function
max:                                    # @max
.Lfunc_begin15:
	.loc	16 4 0 is_stmt 1        # ./minmax.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: max:x <- $edi
	#DEBUG_VALUE: max:y <- $esi
	movl	%esi, %eax
.Ltmp649:
	#DEBUG_VALUE: max:y <- $eax
	#DEBUG_VALUE: max:x <- $edi
	.loc	16 4 42 prologue_end    # ./minmax.h:4:42
	cmpl	%esi, %edi
	.loc	16 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovgel	%edi, %eax
.Ltmp650:
	.loc	16 4 32                 # ./minmax.h:4:32
	retq
.Ltmp651:
.Lfunc_end15:
	.size	max, .Lfunc_end15-max
	.cfi_endproc
                                        # -- End function
	.globl	sort_indexes            # -- Begin function sort_indexes
	.p2align	4, 0x90
	.type	sort_indexes,@function
sort_indexes:                           # @sort_indexes
.Lfunc_begin16:
	.loc	4 64 0 is_stmt 1        # ./median.h:64:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:i1 <- $rsi
	#DEBUG_VALUE: sort_indexes:i1 <- $rsi
	#DEBUG_VALUE: sort_indexes:i2 <- $rdx
	#DEBUG_VALUE: sort_indexes:i2 <- $rdx
	.loc	4 65 11 prologue_end    # ./median.h:65:11
	movq	(%rsi), %rax
.Ltmp652:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 66 11                 # ./median.h:66:11
	movq	(%rdx), %r8
.Ltmp653:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rax,4), %ecx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%r8,4), %ecx
.Ltmp654:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%r8, %rcx
	cmovlq	%rax, %rcx
	movslq	%ecx, %rcx
	.loc	4 68 7 is_stmt 0        # ./median.h:68:7
	movq	%rcx, (%rsi)
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovlq	%r8, %rax
.Ltmp655:
	cltq
	.loc	4 69 7 is_stmt 0        # ./median.h:69:7
	movq	%rax, (%rdx)
	.loc	4 70 1 is_stmt 1        # ./median.h:70:1
	retq
.Ltmp656:
.Lfunc_end16:
	.size	sort_indexes, .Lfunc_end16-sort_indexes
	.cfi_endproc
                                        # -- End function
	.globl	median_of_three_stable  # -- Begin function median_of_three_stable
	.p2align	4, 0x90
	.type	median_of_three_stable,@function
median_of_three_stable:                 # @median_of_three_stable
.Lfunc_begin17:
	.loc	4 72 0                  # ./median.h:72:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:high <- $rdx
	movq	%rdx, %r8
.Ltmp657:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	.loc	4 73 12 prologue_end    # ./median.h:73:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 73 18 is_stmt 0       # ./median.h:73:18
	cmpq	$3, %rax
.Ltmp658:
	.loc	4 73 7                  # ./median.h:73:7
	jl	.LBB17_2
.Ltmp659:
# %bb.1:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	.loc	4 0 7                   # ./median.h:0:7
	movabsq	$-6148914691236517205, %rdx # imm = 0xAAAAAAAAAAAAAAAB
.Ltmp660:
	.loc	4 74 35 is_stmt 1       # ./median.h:74:35
	mulq	%rdx
	shrq	%rdx
.Ltmp661:
	#DEBUG_VALUE: offset <- $rdx
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	.loc	4 75 26                 # ./median.h:75:26
	leaq	(%rdx,%rsi), %rax
.Ltmp662:
	#DEBUG_VALUE: lowmid <- $rax
	.loc	4 76 36                 # ./median.h:76:36
	addq	%rax, %rdx
.Ltmp663:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: highmid <- $rdx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rsi,4), %ecx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %ecx
.Ltmp664:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%rax, %rcx
	cmovlq	%rsi, %rcx
	.loc	4 69 9                  # ./median.h:69:9
	cmovlq	%rax, %rsi
.Ltmp665:
	movslq	%esi, %rax
.Ltmp666:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rax,4), %esi
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rdx,4), %esi
.Ltmp667:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movslq	%ecx, %rcx
.Ltmp668:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	.loc	4 68 9 is_stmt 0        # ./median.h:68:9
	movq	%rdx, %rsi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	cmovlq	%rax, %rsi
	movslq	%esi, %rsi
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovgeq	%rax, %rdx
.Ltmp669:
	movslq	%edx, %rax
.Ltmp670:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rax,4), %edx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%r8,4), %edx
.Ltmp671:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	cmovlq	%rax, %r8
.Ltmp672:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rcx,4), %eax
.Ltmp673:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rsi,4), %eax
.Ltmp674:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movslq	%r8d, %rax
.Ltmp675:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	.loc	4 68 9 is_stmt 0        # ./median.h:68:9
	movq	%rsi, %rdx
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	cmovlq	%rcx, %rdx
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovlq	%rsi, %rcx
.Ltmp676:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rcx,4), %esi
.Ltmp677:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %esi
.Ltmp678:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	cmovgeq	%rax, %rcx
.Ltmp679:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rdx,4), %eax
.Ltmp680:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rcx,4), %eax
.Ltmp681:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovgeq	%rdx, %rcx
.Ltmp682:
	#DEBUG_VALUE: lowmid <- $rcx
	.loc	4 84 12                 # ./median.h:84:12
	movl	(%rdi,%rcx,4), %eax
.Ltmp683:
	.loc	4 104 1                 # ./median.h:104:1
	retq
.Ltmp684:
.LBB17_2:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	.loc	4 92 9                  # ./median.h:92:9
	cmpq	$1, %rax
	je	.LBB17_5
.Ltmp685:
# %bb.3:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	cmpq	$2, %rax
	jne	.LBB17_6
.Ltmp686:
# %bb.4:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	#DEBUG_VALUE: mid <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp687:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%rdi,%rsi,4), %ecx
.Ltmp688:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp689:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp690:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp691:
	#DEBUG_VALUE: sort_pair:i1 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: sort_pair:x <- $eax
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	.loc	4 27 11 is_stmt 1       # ./median.h:27:11
	movl	(%rdi,%r8,4), %ecx
.Ltmp692:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp693:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, 4(%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp694:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r8,4)
.Ltmp695:
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp696:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%rdi,%rsi,4), %ecx
.Ltmp697:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp698:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp699:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp700:
	#DEBUG_VALUE: median_of_three_stable:low <- undef
	.loc	4 104 1 is_stmt 1       # ./median.h:104:1
	retq
.Ltmp701:
.LBB17_5:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp702:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r8,4), %ecx
.Ltmp703:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp704:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp705:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r8,4)
.Ltmp706:
	#DEBUG_VALUE: median_of_three_stable:high <- undef
	.loc	4 104 1 is_stmt 1       # ./median.h:104:1
	retq
.Ltmp707:
.LBB17_6:
	#DEBUG_VALUE: median_of_three_stable:high <- $r8
	#DEBUG_VALUE: median_of_three_stable:low <- $rsi
	#DEBUG_VALUE: median_of_three_stable:array <- $rdi
	.loc	4 102 12                # ./median.h:102:12
	movl	(%rdi,%r8,4), %eax
.Ltmp708:
	.loc	4 104 1                 # ./median.h:104:1
	retq
.Ltmp709:
.Lfunc_end17:
	.size	median_of_three_stable, .Lfunc_end17-median_of_three_stable
	.cfi_endproc
                                        # -- End function
	.globl	sort_pair               # -- Begin function sort_pair
	.p2align	4, 0x90
	.type	sort_pair,@function
sort_pair:                              # @sort_pair
.Lfunc_begin18:
	.loc	4 25 0                  # ./median.h:25:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_pair:i1 <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- $rdi
	#DEBUG_VALUE: sort_pair:i2 <- $rsi
	#DEBUG_VALUE: sort_pair:i2 <- $rsi
	.loc	4 26 11 prologue_end    # ./median.h:26:11
	movl	(%rdi), %eax
.Ltmp710:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rsi), %ecx
.Ltmp711:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp712:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp713:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rsi)
	.loc	4 31 1 is_stmt 1        # ./median.h:31:1
	retq
.Ltmp714:
.Lfunc_end18:
	.size	sort_pair, .Lfunc_end18-sort_pair
	.cfi_endproc
                                        # -- End function
	.globl	median_of_three_of_median_of_three_auto_finish # -- Begin function median_of_three_of_median_of_three_auto_finish
	.p2align	4, 0x90
	.type	median_of_three_of_median_of_three_auto_finish,@function
median_of_three_of_median_of_three_auto_finish: # @median_of_three_of_median_of_three_auto_finish
.Lfunc_begin19:
	.loc	4 106 0                 # ./median.h:106:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
.Ltmp715:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 107 12 prologue_end   # ./median.h:107:12
	subq	%rsi, %rdx
	.loc	4 107 18 is_stmt 0      # ./median.h:107:18
	cmpq	$31, %rdx
.Ltmp716:
	.loc	4 107 7                 # ./median.h:107:7
	jl	.LBB19_2
.Ltmp717:
# %bb.1:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 0 7                   # ./median.h:0:7
	movabsq	$-2049638230412172401, %rcx # imm = 0xE38E38E38E38E38F
.Ltmp718:
	.loc	4 162 35 is_stmt 1      # ./median.h:162:35
	movq	%rdx, %rax
	mulq	%rcx
	shrq	$3, %rdx
.Ltmp719:
	#DEBUG_VALUE: a <- $rsi
	#DEBUG_VALUE: offset <- $rdx
	.loc	4 165 21                # ./median.h:165:21
	leaq	(%rdx,%rsi), %rax
.Ltmp720:
	#DEBUG_VALUE: b <- $rax
	.loc	4 166 21                # ./median.h:166:21
	leaq	(%rsi,%rdx,2), %r9
.Ltmp721:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: c <- $r9
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rsi,4), %ecx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %ecx
.Ltmp722:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%rax, %rcx
	cmovlq	%rsi, %rcx
	.loc	4 69 9                  # ./median.h:69:9
	cmovgeq	%rsi, %rax
.Ltmp723:
	movslq	%eax, %r11
.Ltmp724:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r9
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r11
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%r11,4), %eax
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%r9,4), %eax
.Ltmp725:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movslq	%ecx, %r10
.Ltmp726:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	.loc	4 68 9 is_stmt 0        # ./median.h:68:9
	cmovlq	%r11, %r9
.Ltmp727:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r9
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r11
	movslq	%r9d, %rax
.Ltmp728:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	.loc	4 67 11 is_stmt 1       # ./median.h:67:11
	movl	(%rdi,%r10,4), %ecx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %ecx
.Ltmp729:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovlq	%rax, %r10
.Ltmp730:
	.loc	4 171 30                # ./median.h:171:30
	leaq	(%rdx,%rdx,2), %r9
.Ltmp731:
	.loc	4 171 21 is_stmt 0      # ./median.h:171:21
	leaq	(%r9,%rsi), %rax
.Ltmp732:
	#DEBUG_VALUE: d <- $rax
	.loc	4 172 21 is_stmt 1      # ./median.h:172:21
	leaq	(%rsi,%rdx,4), %r11
.Ltmp733:
	#DEBUG_VALUE: e <- $r11
	.loc	4 173 30                # ./median.h:173:30
	leaq	(%rdx,%rdx,4), %rbx
	.loc	4 173 21 is_stmt 0      # ./median.h:173:21
	addq	%rsi, %rbx
.Ltmp734:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r11
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: f <- $rbx
	.loc	4 67 11 is_stmt 1       # ./median.h:67:11
	movl	(%rdi,%rax,4), %ecx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%r11,4), %ecx
.Ltmp735:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%r11, %rcx
	cmovlq	%rax, %rcx
	movslq	%ecx, %rcx
	.loc	4 69 9                  # ./median.h:69:9
	cmovlq	%r11, %rax
.Ltmp736:
	movslq	%eax, %r11
.Ltmp737:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r11
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%r11,4), %eax
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rbx,4), %eax
.Ltmp738:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	cmovlq	%r11, %rbx
.Ltmp739:
	movslq	%ebx, %rax
.Ltmp740:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rcx,4), %ebx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %ebx
.Ltmp741:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovlq	%rax, %rcx
.Ltmp742:
	.loc	4 178 21                # ./median.h:178:21
	leaq	(%rsi,%r9,2), %rax
.Ltmp743:
	#DEBUG_VALUE: g <- $rax
	.loc	4 179 30                # ./median.h:179:30
	leaq	(,%rdx,8), %rbx
	subq	%rdx, %rbx
	.loc	4 179 21 is_stmt 0      # ./median.h:179:21
	addq	%rsi, %rbx
.Ltmp744:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: i <- $r8
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: h <- $rbx
	.loc	4 67 11 is_stmt 1       # ./median.h:67:11
	movl	(%rdi,%rax,4), %edx
.Ltmp745:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rbx,4), %edx
.Ltmp746:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%rbx, %rdx
	cmovlq	%rax, %rdx
	.loc	4 69 9                  # ./median.h:69:9
	cmovgeq	%rax, %rbx
.Ltmp747:
	movslq	%ebx, %rax
.Ltmp748:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 67 24                 # ./median.h:67:24
	movl	(%rdi,%r8,4), %esi
.Ltmp749:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	%esi, (%rdi,%rax,4)
.Ltmp750:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movslq	%edx, %rdx
.Ltmp751:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	.loc	4 68 9 is_stmt 0        # ./median.h:68:9
	cmovgeq	%r8, %rax
.Ltmp752:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r8
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	cltq
.Ltmp753:
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	4 67 11 is_stmt 1       # ./median.h:67:11
	movl	(%rdi,%rdx,4), %ebx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rax,4), %ebx
.Ltmp754:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovlq	%rax, %rdx
.Ltmp755:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%r10,4), %eax
.Ltmp756:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rcx,4), %eax
.Ltmp757:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	movq	%rcx, %rax
	cmovlq	%r10, %rax
	.loc	4 69 9                  # ./median.h:69:9
	cmovgeq	%r10, %rcx
.Ltmp758:
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rcx,4), %ebx
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rdx,4), %ebx
.Ltmp759:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 68 9 is_stmt 1        # ./median.h:68:9
	cmovgeq	%rdx, %rcx
.Ltmp760:
	#DEBUG_VALUE: sort_indexes:x <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: sort_indexes:array <- $rdi
	#DEBUG_VALUE: sort_indexes:y <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 67 11                 # ./median.h:67:11
	movl	(%rdi,%rax,4), %edx
.Ltmp761:
	.loc	4 67 22 is_stmt 0       # ./median.h:67:22
	cmpl	(%rdi,%rcx,4), %edx
.Ltmp762:
	#DEBUG_VALUE: sort_indexes:c <- undef
	.loc	4 69 9 is_stmt 1        # ./median.h:69:9
	cmovgeq	%rax, %rcx
.Ltmp763:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: e <- $rcx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	(%rdi,%rcx,4), %eax
.Ltmp764:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%esi, (%rdi,%rcx,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%eax, (%rdi,%r8,4)
.Ltmp765:
	.loc	4 195 1                 # ./median.h:195:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp766:
.LBB19_2:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	.loc	4 34 18                 # ./median.h:34:18
	cmpq	$1, %rdx
.Ltmp767:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	jne	.LBB19_4
.Ltmp768:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 35 11 is_stmt 1       # ./median.h:35:11
	movl	$1, (%rcx)
.Ltmp769:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp770:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r8,4), %ecx
.Ltmp771:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp772:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp773:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r8,4)
.Ltmp774:
	.loc	4 195 1 is_stmt 1       # ./median.h:195:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp775:
.LBB19_4:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%r8,%rsi), %rbx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rbx, %rax
	shrq	$63, %rax
	addq	%rbx, %rax
	shrq	%rax
.Ltmp776:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %r9d
.Ltmp777:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r9d
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %eax
.Ltmp778:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%r8,4), %ebx
.Ltmp779:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %r9d
.Ltmp780:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebp
	cmovll	%r9d, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %r9d
.Ltmp781:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	#DEBUG_VALUE: sort_pair:x <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %r9d
.Ltmp782:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %eax
.Ltmp783:
	cmovll	%r9d, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebx, %r9d
.Ltmp784:
	#DEBUG_VALUE: sort_pair:x <- $ebp
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ebp
.Ltmp785:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %r11d
	cmovll	%ebp, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebp, %eax
.Ltmp786:
	.loc	4 49 18                 # ./median.h:49:18
	cmpq	$2, %rdx
.Ltmp787:
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB19_6
.Ltmp788:
# %bb.5:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 50 11 is_stmt 1       # ./median.h:50:11
	movl	$1, (%rcx)
.Ltmp789:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 51 16                 # ./median.h:51:16
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp790:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 52 16                 # ./median.h:52:16
	movl	%eax, (%rdi,%r10,4)
.Ltmp791:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 53 17                 # ./median.h:53:17
	movl	%r9d, (%rdi,%r8,4)
.Ltmp792:
	.loc	4 195 1                 # ./median.h:195:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp793:
.LBB19_6:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 57 14                 # ./median.h:57:14
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp794:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 58 15                 # ./median.h:58:15
	movl	%eax, (%rdi,%r8,4)
.Ltmp795:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 59 14                 # ./median.h:59:14
	movl	%r9d, (%rdi,%r10,4)
.Ltmp796:
	.loc	4 195 1                 # ./median.h:195:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp797:
.Lfunc_end19:
	.size	median_of_three_of_median_of_three_auto_finish, .Lfunc_end19-median_of_three_of_median_of_three_auto_finish
	.cfi_endproc
                                        # -- End function
	.globl	median_of_three_auto_finish # -- Begin function median_of_three_auto_finish
	.p2align	4, 0x90
	.type	median_of_three_auto_finish,@function
median_of_three_auto_finish:            # @median_of_three_auto_finish
.Lfunc_begin20:
	.loc	4 33 0                  # ./median.h:33:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp798:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB20_2
.Ltmp799:
# %bb.1:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 35 11 is_stmt 1       # ./median.h:35:11
	movl	$1, (%rcx)
.Ltmp800:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp801:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp802:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp803:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
.Ltmp804:
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp805:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp806:
	.loc	4 62 1 is_stmt 1        # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp807:
.LBB20_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %r9
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%r9, %rax
	shrq	$63, %rax
	addq	%r9, %rax
	shrq	%rax
.Ltmp808:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %r9d
.Ltmp809:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r9d
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %eax
.Ltmp810:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp811:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %r9d
.Ltmp812:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebx
	cmovll	%r9d, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %r9d
.Ltmp813:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %r9d
.Ltmp814:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %eax
.Ltmp815:
	cmovll	%r9d, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %r9d
.Ltmp816:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ebx
.Ltmp817:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %r11d
.Ltmp818:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %eax
.Ltmp819:
	.loc	4 49 18                 # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp820:
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB20_4
.Ltmp821:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 50 11 is_stmt 1       # ./median.h:50:11
	movl	$1, (%rcx)
.Ltmp822:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 51 16                 # ./median.h:51:16
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp823:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 52 16                 # ./median.h:52:16
	movl	%eax, (%rdi,%r10,4)
.Ltmp824:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 53 17                 # ./median.h:53:17
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp825:
	.loc	4 62 1                  # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp826:
.LBB20_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 57 14                 # ./median.h:57:14
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp827:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 58 15                 # ./median.h:58:15
	movl	%eax, (%rdi,%rdx,4)
.Ltmp828:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 59 14                 # ./median.h:59:14
	movl	%r9d, (%rdi,%r10,4)
	.loc	4 62 1                  # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp829:
.Lfunc_end20:
	.size	median_of_three_auto_finish, .Lfunc_end20-median_of_three_auto_finish
	.cfi_endproc
                                        # -- End function
	.globl	sign                    # -- Begin function sign
	.p2align	4, 0x90
	.type	sign,@function
sign:                                   # @sign
.Lfunc_begin21:
	.file	22 "/home/peeters/bachelor" "./mergeo.h"
	.loc	22 13 0                 # ./mergeo.h:13:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sign:x <- $edi
	#DEBUG_VALUE: sign:x <- $edi
	.loc	22 13 29 prologue_end   # ./mergeo.h:13:29
	movl	%edi, %ecx
	sarl	$31, %ecx
	.loc	22 13 64 is_stmt 0      # ./mergeo.h:13:64
	xorl	%eax, %eax
	testl	%edi, %edi
	setne	%al
	.loc	22 13 60                # ./mergeo.h:13:60
	orl	%ecx, %eax
	.loc	22 13 19                # ./mergeo.h:13:19
	retq
.Ltmp830:
.Lfunc_end21:
	.size	sign, .Lfunc_end21-sign
	.cfi_endproc
                                        # -- End function
	.globl	merging_optimzed        # -- Begin function merging_optimzed
	.p2align	4, 0x90
	.type	merging_optimzed,@function
merging_optimzed:                       # @merging_optimzed
.Lfunc_begin22:
	.loc	22 15 0 is_stmt 1       # ./mergeo.h:15:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp831:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	.loc	22 18 12 prologue_end   # ./mergeo.h:18:12
	leaq	1(%rdx), %r10
.Ltmp832:
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	.loc	22 21 27                # ./mergeo.h:21:27
	cmpq	%rcx, %rdx
.Ltmp833:
	.loc	22 21 3 is_stmt 0       # ./mergeo.h:21:3
	jge	.LBB22_1
.Ltmp834:
# %bb.8:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	cmpq	%rdx, %rsi
	jg	.LBB22_1
.Ltmp835:
# %bb.9:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3                  # ./mergeo.h:0:3
	movq	%rsi, %rax
	movq	%rsi, %r9
.Ltmp836:
	.p2align	4, 0x90
.LBB22_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r10, %r11
	movq	%rax, %r14
.Ltmp837:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r11
	#DEBUG_VALUE: merging_optimzed:l1 <- $r14
	.loc	22 22 13 is_stmt 1      # ./mergeo.h:22:13
	movl	(%rdi,%rax,4), %ebp
	.loc	22 22 21 is_stmt 0      # ./mergeo.h:22:21
	movl	(%rdi,%r10,4), %ebx
	.loc	22 22 19                # ./mergeo.h:22:19
	xorl	%r10d, %r10d
	xorl	%eax, %eax
	cmpl	%ebx, %ebp
	setg	%r10b
.Ltmp838:
	#DEBUG_VALUE: c <- $r10b
	setle	%al
	.loc	22 23 12 is_stmt 1      # ./mergeo.h:23:12
	cmovgl	%ebx, %ebp
	.loc	22 23 10 is_stmt 0      # ./mergeo.h:23:10
	movl	%ebp, (%r8,%r9,4)
	.loc	22 24 8 is_stmt 1       # ./mergeo.h:24:8
	addq	%r14, %rax
.Ltmp839:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	.loc	22 25 8                 # ./mergeo.h:25:8
	addq	%r11, %r10
.Ltmp840:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	.loc	22 21 43                # ./mergeo.h:21:43
	incq	%r9
.Ltmp841:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	22 21 27 is_stmt 0      # ./mergeo.h:21:27
	cmpq	%rcx, %r10
.Ltmp842:
	.loc	22 21 3                 # ./mergeo.h:21:3
	jg	.LBB22_2
.Ltmp843:
# %bb.11:                               #   in Loop: Header=BB22_10 Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	cmpq	%rdx, %rax
	jle	.LBB22_10
	jmp	.LBB22_2
.Ltmp844:
.LBB22_1:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 0                  # ./mergeo.h:0:0
	movq	%rsi, %r9
.Ltmp845:
	movq	%rsi, %rax
.Ltmp846:
.LBB22_2:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	22 28 13 is_stmt 1      # ./mergeo.h:28:13
	cmpq	%rdx, %rax
	.loc	22 28 3 is_stmt 0       # ./mergeo.h:28:3
	jg	.LBB22_21
.Ltmp847:
# %bb.3:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rdx, %r11
	subq	%rax, %r11
	incq	%r11
	cmpq	$31, %r11
	jbe	.LBB22_19
.Ltmp848:
# %bb.4:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r8,%r9,4), %r14
	cmpq	%rdx, %rax
	movq	%rdx, %rbx
	cmovgeq	%rax, %rbx
	leaq	(%rdi,%rbx,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %r14
	jae	.LBB22_6
.Ltmp849:
# %bb.5:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%r9, %rbx
	subq	%rax, %rbx
	leaq	(%r8,%rbx,4), %rbx
	addq	$4, %rbx
	leaq	(%rdi,%rax,4), %rbp
	cmpq	%rbx, %rbp
	jb	.LBB22_19
.Ltmp850:
.LBB22_6:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r11, %r14
	andq	$-32, %r14
	leaq	-32(%r14), %rbp
	movq	%rbp, %rbx
	shrq	$5, %rbx
	incq	%rbx
	movl	%ebx, %r15d
	andl	$3, %r15d
	cmpq	$96, %rbp
	jae	.LBB22_12
.Ltmp851:
# %bb.7:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%ebx, %ebx
	jmp	.LBB22_14
.Ltmp852:
.LBB22_12:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 28 3                 # ./mergeo.h:28:3
	leaq	(%rdi,%rax,4), %r12
	addq	$480, %r12              # imm = 0x1E0
	leaq	(%r8,%r9,4), %r13
	addq	$480, %r13              # imm = 0x1E0
	movq	%r15, %rbp
	subq	%rbx, %rbp
	xorl	%ebx, %ebx
.Ltmp853:
	.p2align	4, 0x90
.LBB22_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 29 14 is_stmt 1      # ./mergeo.h:29:14
	vmovups	-480(%r12,%rbx,4), %ymm0
	vmovups	-448(%r12,%rbx,4), %ymm1
	vmovups	-416(%r12,%rbx,4), %ymm2
	vmovups	-384(%r12,%rbx,4), %ymm3
	.loc	22 29 12 is_stmt 0      # ./mergeo.h:29:12
	vmovups	%ymm0, -480(%r13,%rbx,4)
	vmovups	%ymm1, -448(%r13,%rbx,4)
	vmovups	%ymm2, -416(%r13,%rbx,4)
	vmovups	%ymm3, -384(%r13,%rbx,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-352(%r12,%rbx,4), %ymm0
	vmovups	-320(%r12,%rbx,4), %ymm1
	vmovups	-288(%r12,%rbx,4), %ymm2
	vmovups	-256(%r12,%rbx,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -352(%r13,%rbx,4)
	vmovups	%ymm1, -320(%r13,%rbx,4)
	vmovups	%ymm2, -288(%r13,%rbx,4)
	vmovups	%ymm3, -256(%r13,%rbx,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-224(%r12,%rbx,4), %ymm0
	vmovups	-192(%r12,%rbx,4), %ymm1
	vmovups	-160(%r12,%rbx,4), %ymm2
	vmovups	-128(%r12,%rbx,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -224(%r13,%rbx,4)
	vmovups	%ymm1, -192(%r13,%rbx,4)
	vmovups	%ymm2, -160(%r13,%rbx,4)
	vmovups	%ymm3, -128(%r13,%rbx,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-96(%r12,%rbx,4), %ymm0
	vmovups	-64(%r12,%rbx,4), %ymm1
	vmovups	-32(%r12,%rbx,4), %ymm2
	vmovups	(%r12,%rbx,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -96(%r13,%rbx,4)
	vmovups	%ymm1, -64(%r13,%rbx,4)
	vmovups	%ymm2, -32(%r13,%rbx,4)
	vmovups	%ymm3, (%r13,%rbx,4)
	subq	$-128, %rbx
	addq	$4, %rbp
	jne	.LBB22_13
.Ltmp854:
.LBB22_14:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 12                 # ./mergeo.h:0:12
	testq	%r15, %r15
	je	.LBB22_17
.Ltmp855:
# %bb.15:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r9,%rbx), %rbp
	leaq	(%r8,%rbp,4), %r12
	addq	%rax, %rbx
	leaq	(%rdi,%rbx,4), %rbx
	negq	%r15
	movl	$96, %ebp
.Ltmp856:
	.p2align	4, 0x90
.LBB22_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-96(%rbx,%rbp), %ymm0
	vmovups	-64(%rbx,%rbp), %ymm1
	vmovups	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -96(%r12,%rbp)
	vmovups	%ymm1, -64(%r12,%rbp)
	vmovups	%ymm2, -32(%r12,%rbp)
	vmovups	%ymm3, (%r12,%rbp)
	subq	$-128, %rbp
	incq	%r15
	jne	.LBB22_16
.Ltmp857:
.LBB22_17:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 12                 # ./mergeo.h:0:12
	addq	%r14, %r9
.Ltmp858:
	.loc	22 28 3 is_stmt 1       # ./mergeo.h:28:3
	cmpq	%r14, %r11
	je	.LBB22_21
.Ltmp859:
# %bb.18:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r14, %rax
.Ltmp860:
.LBB22_19:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 28 3                 # ./mergeo.h:28:3
	decq	%rax
.Ltmp861:
	.p2align	4, 0x90
.LBB22_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 29 14 is_stmt 1      # ./mergeo.h:29:14
	movl	4(%rdi,%rax,4), %ebp
	.loc	22 29 12 is_stmt 0      # ./mergeo.h:29:12
	movl	%ebp, (%r8,%r9,4)
	.loc	22 29 8                 # ./mergeo.h:29:8
	incq	%r9
.Ltmp862:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	22 28 13 is_stmt 1      # ./mergeo.h:28:13
	incq	%rax
	cmpq	%rdx, %rax
	.loc	22 28 3 is_stmt 0       # ./mergeo.h:28:3
	jl	.LBB22_20
.Ltmp863:
.LBB22_21:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	22 32 13 is_stmt 1      # ./mergeo.h:32:13
	cmpq	%rcx, %r10
	.loc	22 32 3 is_stmt 0       # ./mergeo.h:32:3
	jg	.LBB22_25
.Ltmp864:
# %bb.22:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rcx, %r14
	subq	%r10, %r14
	incq	%r14
	cmpq	$31, %r14
	jbe	.LBB22_23
.Ltmp865:
# %bb.31:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r8,%r9,4), %rdx
.Ltmp866:
	cmpq	%rcx, %r10
	movq	%rcx, %rax
	cmovgeq	%r10, %rax
	leaq	(%rdi,%rax,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %rdx
	jae	.LBB22_33
.Ltmp867:
# %bb.32:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%r9, %rax
	subq	%r10, %rax
	leaq	(%r8,%rax,4), %rax
	addq	$4, %rax
	leaq	(%rdi,%r10,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB22_23
.Ltmp868:
.LBB22_33:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r14, %r11
	andq	$-32, %r11
	leaq	-32(%r11), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r15d
	andl	$3, %r15d
	cmpq	$96, %rax
	jae	.LBB22_35
.Ltmp869:
# %bb.34:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%edx, %edx
	jmp	.LBB22_37
.Ltmp870:
.LBB22_35:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 32 3                 # ./mergeo.h:32:3
	leaq	(%r8,%r9,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	(%rdi,%r10,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r15, %rbp
	subq	%rdx, %rbp
	xorl	%edx, %edx
.Ltmp871:
	.p2align	4, 0x90
.LBB22_36:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 33 14 is_stmt 1      # ./mergeo.h:33:14
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	22 33 12 is_stmt 0      # ./mergeo.h:33:12
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %rbp
	jne	.LBB22_36
.Ltmp872:
.LBB22_37:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 12                 # ./mergeo.h:0:12
	testq	%r15, %r15
	je	.LBB22_40
.Ltmp873:
# %bb.38:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r10,%rdx), %rax
	leaq	(%rdi,%rax,4), %rax
	addq	%r9, %rdx
	leaq	(%r8,%rdx,4), %rdx
	negq	%r15
	movl	$96, %ebx
.Ltmp874:
	.p2align	4, 0x90
.LBB22_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-96(%rax,%rbx), %ymm0
	vmovups	-64(%rax,%rbx), %ymm1
	vmovups	-32(%rax,%rbx), %ymm2
	vmovups	(%rax,%rbx), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -96(%rdx,%rbx)
	vmovups	%ymm1, -64(%rdx,%rbx)
	vmovups	%ymm2, -32(%rdx,%rbx)
	vmovups	%ymm3, (%rdx,%rbx)
	subq	$-128, %rbx
	incq	%r15
	jne	.LBB22_39
.Ltmp875:
.LBB22_40:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 32 3 is_stmt 1       # ./mergeo.h:32:3
	cmpq	%r11, %r14
	je	.LBB22_25
.Ltmp876:
# %bb.41:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r11, %r9
.Ltmp877:
	addq	%r11, %r10
.Ltmp878:
.LBB22_23:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 32 3                 # ./mergeo.h:32:3
	leaq	(%r8,%r9,4), %rax
	decq	%r10
.Ltmp879:
	.p2align	4, 0x90
.LBB22_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l2 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 33 14 is_stmt 1      # ./mergeo.h:33:14
	movl	4(%rdi,%r10,4), %edx
.Ltmp880:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 33 12 is_stmt 0      # ./mergeo.h:33:12
	movl	%edx, (%rax)
.Ltmp881:
	.loc	22 32 13 is_stmt 1      # ./mergeo.h:32:13
	addq	$4, %rax
	incq	%r10
	cmpq	%rcx, %r10
	.loc	22 32 3 is_stmt 0       # ./mergeo.h:32:3
	jl	.LBB22_24
.Ltmp882:
.LBB22_25:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	22 36 27 is_stmt 1      # ./mergeo.h:36:27
	leaq	-7(%rcx), %rax
	.loc	22 36 19 is_stmt 0      # ./mergeo.h:36:19
	cmpq	%rsi, %rax
.Ltmp883:
	.loc	22 36 3                 # ./mergeo.h:36:3
	jl	.LBB22_26
.Ltmp884:
	.p2align	4, 0x90
.LBB22_53:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	22 37 44 is_stmt 1      # ./mergeo.h:37:44
	vmovups	(%r8,%rsi,4), %ymm0
	.loc	22 37 5 is_stmt 0       # ./mergeo.h:37:5
	vmovups	%ymm0, (%rdi,%rsi,4)
.Ltmp885:
	.loc	22 36 34 is_stmt 1      # ./mergeo.h:36:34
	addq	$8, %rsi
.Ltmp886:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	22 36 19 is_stmt 0      # ./mergeo.h:36:19
	cmpq	%rax, %rsi
.Ltmp887:
	.loc	22 36 3                 # ./mergeo.h:36:3
	jle	.LBB22_53
.Ltmp888:
.LBB22_26:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	22 40 12 is_stmt 1      # ./mergeo.h:40:12
	cmpq	%rcx, %rsi
.Ltmp889:
	.loc	22 40 3 is_stmt 0       # ./mergeo.h:40:3
	jg	.LBB22_30
.Ltmp890:
# %bb.27:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rcx, %r10
	subq	%rsi, %r10
	incq	%r10
	cmpq	$31, %r10
	jbe	.LBB22_28
.Ltmp891:
# %bb.42:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%rdi,%rsi,4), %rdx
	cmpq	%rcx, %rsi
	movq	%rcx, %rax
	cmovgeq	%rsi, %rax
	leaq	(%r8,%rax,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %rdx
	jae	.LBB22_44
.Ltmp892:
# %bb.43:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%rdi,%rax,4), %rax
	addq	$4, %rax
	leaq	(%r8,%rsi,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB22_28
.Ltmp893:
.LBB22_44:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r11d
	andl	$3, %r11d
	cmpq	$96, %rax
	jae	.LBB22_46
.Ltmp894:
# %bb.45:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%edx, %edx
	jmp	.LBB22_48
.Ltmp895:
.LBB22_46:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 40 3                 # ./mergeo.h:40:3
	leaq	(%rdi,%rsi,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	(%r8,%rsi,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r11, %rbp
	subq	%rdx, %rbp
	xorl	%edx, %edx
.Ltmp896:
	.p2align	4, 0x90
.LBB22_47:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 41 12 is_stmt 1      # ./mergeo.h:41:12
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	22 41 10 is_stmt 0      # ./mergeo.h:41:10
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %rbp
	jne	.LBB22_47
.Ltmp897:
.LBB22_48:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 10                 # ./mergeo.h:0:10
	testq	%r11, %r11
	je	.LBB22_51
.Ltmp898:
# %bb.49:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%rsi, %rdx
	leaq	96(,%rdx,4), %rax
	negq	%r11
.Ltmp899:
	.p2align	4, 0x90
.LBB22_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-96(%r8,%rax), %ymm0
	vmovups	-64(%r8,%rax), %ymm1
	vmovups	-32(%r8,%rax), %ymm2
	vmovups	(%r8,%rax), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -96(%rdi,%rax)
	vmovups	%ymm1, -64(%rdi,%rax)
	vmovups	%ymm2, -32(%rdi,%rax)
	vmovups	%ymm3, (%rdi,%rax)
	subq	$-128, %rax
	incq	%r11
	jne	.LBB22_50
.Ltmp900:
.LBB22_51:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 40 3 is_stmt 1       # ./mergeo.h:40:3
	cmpq	%r9, %r10
	je	.LBB22_30
.Ltmp901:
# %bb.52:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r9, %rsi
.Ltmp902:
.LBB22_28:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 40 3                 # ./mergeo.h:40:3
	decq	%rsi
.Ltmp903:
	.p2align	4, 0x90
.LBB22_29:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- undef
	.loc	22 41 12 is_stmt 1      # ./mergeo.h:41:12
	movl	4(%r8,%rsi,4), %eax
	.loc	22 41 10 is_stmt 0      # ./mergeo.h:41:10
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp904:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 40 12 is_stmt 1      # ./mergeo.h:40:12
	incq	%rsi
	cmpq	%rcx, %rsi
.Ltmp905:
	.loc	22 40 3 is_stmt 0       # ./mergeo.h:40:3
	jl	.LBB22_29
.Ltmp906:
.LBB22_30:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	22 43 1 is_stmt 1       # ./mergeo.h:43:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp907:
.Lfunc_end22:
	.size	merging_optimzed, .Lfunc_end22-merging_optimzed
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_o            # -- Begin function sort_merge_o
	.p2align	4, 0x90
	.type	sort_merge_o,@function
sort_merge_o:                           # @sort_merge_o
.Lfunc_begin23:
	.loc	22 45 0                 # ./mergeo.h:45:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	22 48 11 prologue_end   # ./mergeo.h:48:11
	cmpq	%rdx, %rsi
.Ltmp908:
	.loc	22 48 7 is_stmt 0       # ./mergeo.h:48:7
	jge	.LBB23_31
.Ltmp909:
# %bb.1:
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	.loc	22 0 7                  # ./mergeo.h:0:7
	movq	%rcx, %r15
.Ltmp910:
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rdx, %rbp
.Ltmp911:
	#DEBUG_VALUE: sort_merge_o:high <- $rbp
	movq	%rsi, %r13
.Ltmp912:
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	movq	%rdi, %r12
.Ltmp913:
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	.loc	22 49 16 is_stmt 1      # ./mergeo.h:49:16
	leaq	(%rdx,%rsi), %rax
	.loc	22 49 24 is_stmt 0      # ./mergeo.h:49:24
	movq	%rax, %r14
	shrq	$63, %r14
	addq	%rax, %r14
	sarq	%r14
.Ltmp914:
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	.loc	22 50 5 is_stmt 1       # ./mergeo.h:50:5
	movq	%r14, %rdx
	callq	sort_merge_o
.Ltmp915:
	.loc	22 51 25                # ./mergeo.h:51:25
	leaq	1(%r14), %rbx
	.loc	22 51 5 is_stmt 0       # ./mergeo.h:51:5
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%rbp, %rdx
	movq	%r15, %rcx
	callq	sort_merge_o
.Ltmp916:
	.loc	22 0 5                  # ./mergeo.h:0:5
	movq	%rbp, %r11
.Ltmp917:
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	.loc	22 21 27 is_stmt 1      # ./mergeo.h:21:27
	cmpq	%rbp, %r14
.Ltmp918:
	.loc	22 21 3 is_stmt 0       # ./mergeo.h:21:3
	jge	.LBB23_2
.Ltmp919:
# %bb.9:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:high <- $rbp
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	cmpq	%r13, %r14
	jl	.LBB23_2
.Ltmp920:
# %bb.10:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:high <- $rbp
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3                  # ./mergeo.h:0:3
	movq	%r13, %rcx
	movq	%r13, %rax
.Ltmp921:
	.p2align	4, 0x90
.LBB23_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rbx, %rdx
	movq	%rcx, %rsi
.Ltmp922:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $rdx
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	.loc	22 22 13 is_stmt 1      # ./mergeo.h:22:13
	movl	(%r12,%rcx,4), %edi
	.loc	22 22 21 is_stmt 0      # ./mergeo.h:22:21
	movl	(%r12,%rbx,4), %ebp
	.loc	22 22 19                # ./mergeo.h:22:19
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	cmpl	%ebp, %edi
	setg	%bl
.Ltmp923:
	#DEBUG_VALUE: c <- $bl
	setle	%cl
	.loc	22 23 12 is_stmt 1      # ./mergeo.h:23:12
	cmovgl	%ebp, %edi
	.loc	22 23 10 is_stmt 0      # ./mergeo.h:23:10
	movl	%edi, (%r15,%rax,4)
	.loc	22 24 8 is_stmt 1       # ./mergeo.h:24:8
	addq	%rsi, %rcx
.Ltmp924:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	.loc	22 25 8                 # ./mergeo.h:25:8
	addq	%rdx, %rbx
.Ltmp925:
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	.loc	22 21 43                # ./mergeo.h:21:43
	incq	%rax
.Ltmp926:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	22 21 27 is_stmt 0      # ./mergeo.h:21:27
	cmpq	%r11, %rbx
.Ltmp927:
	.loc	22 21 3                 # ./mergeo.h:21:3
	jg	.LBB23_3
.Ltmp928:
# %bb.12:                               #   in Loop: Header=BB23_11 Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	cmpq	%r14, %rcx
	jle	.LBB23_11
	jmp	.LBB23_3
.Ltmp929:
.LBB23_2:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:high <- $rbp
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 0                  # ./mergeo.h:0:0
	movq	%r13, %rax
.Ltmp930:
	movq	%r13, %rcx
.Ltmp931:
.LBB23_3:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	22 28 13 is_stmt 1      # ./mergeo.h:28:13
	cmpq	%r14, %rcx
	.loc	22 28 3 is_stmt 0       # ./mergeo.h:28:3
	jg	.LBB23_22
.Ltmp932:
# %bb.4:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r14, %r9
	subq	%rcx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB23_20
.Ltmp933:
# %bb.5:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r15,%rax,4), %rsi
	cmpq	%r14, %rcx
	movq	%r14, %rdx
	cmovgeq	%rcx, %rdx
	leaq	(%r12,%rdx,4), %rdi
	addq	$4, %rdi
	cmpq	%rdi, %rsi
	jae	.LBB23_7
.Ltmp934:
# %bb.6:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%rax, %rdx
	subq	%rcx, %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	$4, %rdx
	leaq	(%r12,%rcx,4), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB23_20
.Ltmp935:
.LBB23_7:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rdx
	jae	.LBB23_13
.Ltmp936:
# %bb.8:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%esi, %esi
	jmp	.LBB23_15
.Ltmp937:
.LBB23_13:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 28 3                 # ./mergeo.h:28:3
	leaq	(%r12,%rcx,4), %rdx
	addq	$480, %rdx              # imm = 0x1E0
	leaq	(%r15,%rax,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	movq	%r10, %rbp
	subq	%rsi, %rbp
	xorl	%esi, %esi
.Ltmp938:
	.p2align	4, 0x90
.LBB23_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 29 14 is_stmt 1      # ./mergeo.h:29:14
	vmovups	-480(%rdx,%rsi,4), %ymm0
	vmovups	-448(%rdx,%rsi,4), %ymm1
	vmovups	-416(%rdx,%rsi,4), %ymm2
	vmovups	-384(%rdx,%rsi,4), %ymm3
	.loc	22 29 12 is_stmt 0      # ./mergeo.h:29:12
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-352(%rdx,%rsi,4), %ymm0
	vmovups	-320(%rdx,%rsi,4), %ymm1
	vmovups	-288(%rdx,%rsi,4), %ymm2
	vmovups	-256(%rdx,%rsi,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-224(%rdx,%rsi,4), %ymm0
	vmovups	-192(%rdx,%rsi,4), %ymm1
	vmovups	-160(%rdx,%rsi,4), %ymm2
	vmovups	-128(%rdx,%rsi,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-96(%rdx,%rsi,4), %ymm0
	vmovups	-64(%rdx,%rsi,4), %ymm1
	vmovups	-32(%rdx,%rsi,4), %ymm2
	vmovups	(%rdx,%rsi,4), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rbp
	jne	.LBB23_14
.Ltmp939:
.LBB23_15:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 12                 # ./mergeo.h:0:12
	testq	%r10, %r10
	je	.LBB23_18
.Ltmp940:
# %bb.16:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%rax,%rsi), %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	%rcx, %rsi
	leaq	(%r12,%rsi,4), %rsi
	negq	%r10
	movl	$96, %edi
.Ltmp941:
	.p2align	4, 0x90
.LBB23_17:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 29 14                # ./mergeo.h:29:14
	vmovups	-96(%rsi,%rdi), %ymm0
	vmovups	-64(%rsi,%rdi), %ymm1
	vmovups	-32(%rsi,%rdi), %ymm2
	vmovups	(%rsi,%rdi), %ymm3
	.loc	22 29 12                # ./mergeo.h:29:12
	vmovups	%ymm0, -96(%rdx,%rdi)
	vmovups	%ymm1, -64(%rdx,%rdi)
	vmovups	%ymm2, -32(%rdx,%rdi)
	vmovups	%ymm3, (%rdx,%rdi)
	subq	$-128, %rdi
	incq	%r10
	jne	.LBB23_17
.Ltmp942:
.LBB23_18:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 12                 # ./mergeo.h:0:12
	addq	%r8, %rax
.Ltmp943:
	.loc	22 28 3 is_stmt 1       # ./mergeo.h:28:3
	cmpq	%r8, %r9
	je	.LBB23_22
.Ltmp944:
# %bb.19:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r8, %rcx
.Ltmp945:
.LBB23_20:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 28 3                 # ./mergeo.h:28:3
	decq	%rcx
.Ltmp946:
	.p2align	4, 0x90
.LBB23_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 29 14 is_stmt 1      # ./mergeo.h:29:14
	movl	4(%r12,%rcx,4), %edx
	.loc	22 29 12 is_stmt 0      # ./mergeo.h:29:12
	movl	%edx, (%r15,%rax,4)
	.loc	22 29 8                 # ./mergeo.h:29:8
	incq	%rax
.Ltmp947:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	22 28 13 is_stmt 1      # ./mergeo.h:28:13
	incq	%rcx
	cmpq	%r14, %rcx
	.loc	22 28 3 is_stmt 0       # ./mergeo.h:28:3
	jl	.LBB23_21
.Ltmp948:
.LBB23_22:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	22 32 13 is_stmt 1      # ./mergeo.h:32:13
	cmpq	%r11, %rbx
	.loc	22 32 3 is_stmt 0       # ./mergeo.h:32:3
	jg	.LBB23_26
.Ltmp949:
# %bb.23:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r11, %r9
	subq	%rbx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB23_24
.Ltmp950:
# %bb.32:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r15,%rax,4), %rdx
	cmpq	%r11, %rbx
	movq	%r11, %rcx
	cmovgeq	%rbx, %rcx
	leaq	(%r12,%rcx,4), %rsi
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jae	.LBB23_34
.Ltmp951:
# %bb.33:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%rax, %rcx
	subq	%rbx, %rcx
	leaq	(%r15,%rcx,4), %rcx
	addq	$4, %rcx
	leaq	(%r12,%rbx,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB23_24
.Ltmp952:
.LBB23_34:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %ecx
	andl	$3, %ecx
	cmpq	$96, %rdx
	jae	.LBB23_36
.Ltmp953:
# %bb.35:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%edi, %edi
	jmp	.LBB23_38
.Ltmp954:
.LBB23_36:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 32 3                 # ./mergeo.h:32:3
	leaq	(%r15,%rax,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r12,%rbx,4), %rdx
	addq	$480, %rdx              # imm = 0x1E0
	movq	%rcx, %rsi
	subq	%rdi, %rsi
	xorl	%edi, %edi
.Ltmp955:
	.p2align	4, 0x90
.LBB23_37:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 33 14 is_stmt 1      # ./mergeo.h:33:14
	vmovups	-480(%rdx,%rdi,4), %ymm0
	vmovups	-448(%rdx,%rdi,4), %ymm1
	vmovups	-416(%rdx,%rdi,4), %ymm2
	vmovups	-384(%rdx,%rdi,4), %ymm3
	.loc	22 33 12 is_stmt 0      # ./mergeo.h:33:12
	vmovups	%ymm0, -480(%rbp,%rdi,4)
	vmovups	%ymm1, -448(%rbp,%rdi,4)
	vmovups	%ymm2, -416(%rbp,%rdi,4)
	vmovups	%ymm3, -384(%rbp,%rdi,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-352(%rdx,%rdi,4), %ymm0
	vmovups	-320(%rdx,%rdi,4), %ymm1
	vmovups	-288(%rdx,%rdi,4), %ymm2
	vmovups	-256(%rdx,%rdi,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -352(%rbp,%rdi,4)
	vmovups	%ymm1, -320(%rbp,%rdi,4)
	vmovups	%ymm2, -288(%rbp,%rdi,4)
	vmovups	%ymm3, -256(%rbp,%rdi,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-224(%rdx,%rdi,4), %ymm0
	vmovups	-192(%rdx,%rdi,4), %ymm1
	vmovups	-160(%rdx,%rdi,4), %ymm2
	vmovups	-128(%rdx,%rdi,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -224(%rbp,%rdi,4)
	vmovups	%ymm1, -192(%rbp,%rdi,4)
	vmovups	%ymm2, -160(%rbp,%rdi,4)
	vmovups	%ymm3, -128(%rbp,%rdi,4)
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-96(%rdx,%rdi,4), %ymm0
	vmovups	-64(%rdx,%rdi,4), %ymm1
	vmovups	-32(%rdx,%rdi,4), %ymm2
	vmovups	(%rdx,%rdi,4), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -96(%rbp,%rdi,4)
	vmovups	%ymm1, -64(%rbp,%rdi,4)
	vmovups	%ymm2, -32(%rbp,%rdi,4)
	vmovups	%ymm3, (%rbp,%rdi,4)
	subq	$-128, %rdi
	addq	$4, %rsi
	jne	.LBB23_37
.Ltmp956:
.LBB23_38:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 12                 # ./mergeo.h:0:12
	testq	%rcx, %rcx
	je	.LBB23_41
.Ltmp957:
# %bb.39:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%rbx,%rdi), %rdx
	leaq	(%r12,%rdx,4), %rdx
	addq	%rax, %rdi
	leaq	(%r15,%rdi,4), %rsi
	negq	%rcx
	movl	$96, %edi
.Ltmp958:
	.p2align	4, 0x90
.LBB23_40:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 33 14                # ./mergeo.h:33:14
	vmovups	-96(%rdx,%rdi), %ymm0
	vmovups	-64(%rdx,%rdi), %ymm1
	vmovups	-32(%rdx,%rdi), %ymm2
	vmovups	(%rdx,%rdi), %ymm3
	.loc	22 33 12                # ./mergeo.h:33:12
	vmovups	%ymm0, -96(%rsi,%rdi)
	vmovups	%ymm1, -64(%rsi,%rdi)
	vmovups	%ymm2, -32(%rsi,%rdi)
	vmovups	%ymm3, (%rsi,%rdi)
	subq	$-128, %rdi
	incq	%rcx
	jne	.LBB23_40
.Ltmp959:
.LBB23_41:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 32 3 is_stmt 1       # ./mergeo.h:32:3
	cmpq	%r8, %r9
	je	.LBB23_26
.Ltmp960:
# %bb.42:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r8, %rax
.Ltmp961:
	addq	%r8, %rbx
.Ltmp962:
.LBB23_24:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 32 3                 # ./mergeo.h:32:3
	leaq	(%r15,%rax,4), %rax
	decq	%rbx
.Ltmp963:
	.p2align	4, 0x90
.LBB23_25:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 33 14 is_stmt 1      # ./mergeo.h:33:14
	movl	4(%r12,%rbx,4), %ecx
.Ltmp964:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 33 12 is_stmt 0      # ./mergeo.h:33:12
	movl	%ecx, (%rax)
.Ltmp965:
	.loc	22 32 13 is_stmt 1      # ./mergeo.h:32:13
	addq	$4, %rax
	incq	%rbx
	cmpq	%r11, %rbx
	.loc	22 32 3 is_stmt 0       # ./mergeo.h:32:3
	jl	.LBB23_25
.Ltmp966:
.LBB23_26:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	22 36 27 is_stmt 1      # ./mergeo.h:36:27
	leaq	-7(%r11), %rax
	.loc	22 36 19 is_stmt 0      # ./mergeo.h:36:19
	cmpq	%r13, %rax
.Ltmp967:
	.loc	22 36 3                 # ./mergeo.h:36:3
	jl	.LBB23_27
.Ltmp968:
	.p2align	4, 0x90
.LBB23_54:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	22 37 44 is_stmt 1      # ./mergeo.h:37:44
	vmovups	(%r15,%r13,4), %ymm0
	.loc	22 37 5 is_stmt 0       # ./mergeo.h:37:5
	vmovups	%ymm0, (%r12,%r13,4)
.Ltmp969:
	.loc	22 36 34 is_stmt 1      # ./mergeo.h:36:34
	addq	$8, %r13
.Ltmp970:
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	22 36 19 is_stmt 0      # ./mergeo.h:36:19
	cmpq	%rax, %r13
.Ltmp971:
	.loc	22 36 3                 # ./mergeo.h:36:3
	jle	.LBB23_54
.Ltmp972:
.LBB23_27:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	22 40 12 is_stmt 1      # ./mergeo.h:40:12
	cmpq	%r11, %r13
.Ltmp973:
	.loc	22 40 3 is_stmt 0       # ./mergeo.h:40:3
	jg	.LBB23_31
.Ltmp974:
# %bb.28:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r11, %rax
	subq	%r13, %rax
	incq	%rax
	cmpq	$31, %rax
	jbe	.LBB23_29
.Ltmp975:
# %bb.43:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r12,%r13,4), %rdx
	cmpq	%r11, %r13
	movq	%r11, %rcx
	cmovgeq	%r13, %rcx
	leaq	(%r15,%rcx,4), %rsi
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jae	.LBB23_45
.Ltmp976:
# %bb.44:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r12,%rcx,4), %rcx
	addq	$4, %rcx
	leaq	(%r15,%r13,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB23_29
.Ltmp977:
.LBB23_45:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rax, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %ebx
	andl	$3, %ebx
	cmpq	$96, %rdx
	jae	.LBB23_47
.Ltmp978:
# %bb.46:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3                  # ./mergeo.h:0:3
	xorl	%esi, %esi
	jmp	.LBB23_49
.Ltmp979:
.LBB23_47:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 40 3                 # ./mergeo.h:40:3
	leaq	(%r12,%r13,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	leaq	(%r15,%r13,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	movq	%rbx, %rdx
	subq	%rsi, %rdx
	xorl	%esi, %esi
.Ltmp980:
	.p2align	4, 0x90
.LBB23_48:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 41 12 is_stmt 1      # ./mergeo.h:41:12
	vmovups	-480(%rbp,%rsi,4), %ymm0
	vmovups	-448(%rbp,%rsi,4), %ymm1
	vmovups	-416(%rbp,%rsi,4), %ymm2
	vmovups	-384(%rbp,%rsi,4), %ymm3
	.loc	22 41 10 is_stmt 0      # ./mergeo.h:41:10
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-352(%rbp,%rsi,4), %ymm0
	vmovups	-320(%rbp,%rsi,4), %ymm1
	vmovups	-288(%rbp,%rsi,4), %ymm2
	vmovups	-256(%rbp,%rsi,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-224(%rbp,%rsi,4), %ymm0
	vmovups	-192(%rbp,%rsi,4), %ymm1
	vmovups	-160(%rbp,%rsi,4), %ymm2
	vmovups	-128(%rbp,%rsi,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-96(%rbp,%rsi,4), %ymm0
	vmovups	-64(%rbp,%rsi,4), %ymm1
	vmovups	-32(%rbp,%rsi,4), %ymm2
	vmovups	(%rbp,%rsi,4), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB23_48
.Ltmp981:
.LBB23_49:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 10                 # ./mergeo.h:0:10
	testq	%rbx, %rbx
	je	.LBB23_52
.Ltmp982:
# %bb.50:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%r13, %rsi
	leaq	96(,%rsi,4), %rdx
	negq	%rbx
.Ltmp983:
	.p2align	4, 0x90
.LBB23_51:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 41 12                # ./mergeo.h:41:12
	vmovups	-96(%r15,%rdx), %ymm0
	vmovups	-64(%r15,%rdx), %ymm1
	vmovups	-32(%r15,%rdx), %ymm2
	vmovups	(%r15,%rdx), %ymm3
	.loc	22 41 10                # ./mergeo.h:41:10
	vmovups	%ymm0, -96(%r12,%rdx)
	vmovups	%ymm1, -64(%r12,%rdx)
	vmovups	%ymm2, -32(%r12,%rdx)
	vmovups	%ymm3, (%r12,%rdx)
	subq	$-128, %rdx
	incq	%rbx
	jne	.LBB23_51
.Ltmp984:
.LBB23_52:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 40 3 is_stmt 1       # ./mergeo.h:40:3
	cmpq	%rcx, %rax
	je	.LBB23_31
.Ltmp985:
# %bb.53:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%rcx, %r13
.Ltmp986:
.LBB23_29:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	22 40 3                 # ./mergeo.h:40:3
	decq	%r13
.Ltmp987:
	.p2align	4, 0x90
.LBB23_30:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- $r11
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- undef
	.loc	22 41 12 is_stmt 1      # ./mergeo.h:41:12
	movl	4(%r15,%r13,4), %eax
	.loc	22 41 10 is_stmt 0      # ./mergeo.h:41:10
	movl	%eax, 4(%r12,%r13,4)
.Ltmp988:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	22 40 12 is_stmt 1      # ./mergeo.h:40:12
	incq	%r13
	cmpq	%r11, %r13
.Ltmp989:
	.loc	22 40 3 is_stmt 0       # ./mergeo.h:40:3
	jl	.LBB23_30
.Ltmp990:
.LBB23_31:
	.loc	22 56 1 is_stmt 1       # ./mergeo.h:56:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp991:
.Lfunc_end23:
	.size	sort_merge_o, .Lfunc_end23-sort_merge_o
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_optimized    # -- Begin function sort_merge_optimized
	.p2align	4, 0x90
	.type	sort_merge_optimized,@function
sort_merge_optimized:                   # @sort_merge_optimized
.Lfunc_begin24:
	.loc	22 58 0                 # ./mergeo.h:58:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_optimized:a <- $rdi
	#DEBUG_VALUE: sort_merge_optimized:low <- $rsi
	#DEBUG_VALUE: sort_merge_optimized:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp992:
	#DEBUG_VALUE: sort_merge_optimized:high <- $r14
	#DEBUG_VALUE: sort_merge_optimized:low <- $r12
	#DEBUG_VALUE: sort_merge_optimized:a <- $r15
	.loc	22 59 43 prologue_end   # ./mergeo.h:59:43
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	22 59 35 is_stmt 0      # ./mergeo.h:59:35
	leaq	(,%rax,4), %rdi
	.loc	22 59 12                # ./mergeo.h:59:12
	callq	malloc
.Ltmp993:
	movq	%rax, %rbx
.Ltmp994:
	#DEBUG_VALUE: sort_merge_optimized:b <- $rbx
	.loc	22 60 3 is_stmt 1       # ./mergeo.h:60:3
	movq	%r15, %rdi
.Ltmp995:
	#DEBUG_VALUE: sort_merge_optimized:a <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_merge_o
.Ltmp996:
	.loc	22 61 3                 # ./mergeo.h:61:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp997:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp998:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp999:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp1000:
.Lfunc_end24:
	.size	sort_merge_optimized, .Lfunc_end24-sort_merge_optimized
	.cfi_endproc
                                        # -- End function
	.globl	merging_standard        # -- Begin function merging_standard
	.p2align	4, 0x90
	.type	merging_standard,@function
merging_standard:                       # @merging_standard
.Lfunc_begin25:
	.loc	11 6 0                  # ./mergeu.h:6:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:high <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp1001:
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	.loc	11 9 27 prologue_end    # ./mergeu.h:9:27
	leaq	1(%rdx), %r8
.Ltmp1002:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	.loc	11 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%rdx, %rsi
.Ltmp1003:
	.loc	11 9 3                  # ./mergeu.h:9:3
	jg	.LBB25_1
.Ltmp1004:
# %bb.8:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rcx, %rdx
	jge	.LBB25_1
.Ltmp1005:
# %bb.9:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3                  # ./mergeu.h:0:3
	movq	%rsi, %r9
	movq	%rsi, %rbp
.Ltmp1006:
	.p2align	4, 0x90
.LBB25_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 10 9 is_stmt 1       # ./mergeu.h:10:9
	movl	(%rdi,%rbp,4), %eax
	.loc	11 10 18 is_stmt 0      # ./mergeu.h:10:18
	movl	(%rdi,%r8,4), %ebx
	.loc	11 10 15                # ./mergeu.h:10:15
	cmpl	%ebx, %eax
.Ltmp1007:
	.loc	11 10 9                 # ./mergeu.h:10:9
	jle	.LBB25_11
.Ltmp1008:
# %bb.30:                               #   in Loop: Header=BB25_10 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 14 12 is_stmt 1      # ./mergeu.h:14:12
	movl	%ebx, b(,%r9,4)
	.loc	11 15 9                 # ./mergeu.h:15:9
	incq	%r8
.Ltmp1009:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	.loc	11 9 67                 # ./mergeu.h:9:67
	incq	%r9
.Ltmp1010:
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%rdx, %rbp
	jle	.LBB25_32
	jmp	.LBB25_2
.Ltmp1011:
	.p2align	4, 0x90
.LBB25_11:                              #   in Loop: Header=BB25_10 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 11 12 is_stmt 1      # ./mergeu.h:11:12
	movl	%eax, b(,%r9,4)
	.loc	11 12 9                 # ./mergeu.h:12:9
	incq	%rbp
.Ltmp1012:
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	.loc	11 9 67                 # ./mergeu.h:9:67
	incq	%r9
.Ltmp1013:
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%rdx, %rbp
.Ltmp1014:
	.loc	11 9 3                  # ./mergeu.h:9:3
	jg	.LBB25_2
.Ltmp1015:
.LBB25_32:                              #   in Loop: Header=BB25_10 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rcx, %r8
	jle	.LBB25_10
	jmp	.LBB25_2
.Ltmp1016:
.LBB25_1:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 0                  # ./mergeu.h:0:0
	movq	%rsi, %rbp
	movq	%rsi, %r9
.Ltmp1017:
.LBB25_2:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 19 13 is_stmt 1      # ./mergeu.h:19:13
	cmpq	%rdx, %rbp
	.loc	11 19 3 is_stmt 0       # ./mergeu.h:19:3
	jg	.LBB25_21
.Ltmp1018:
# %bb.3:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%rdx, %r10
	subq	%rbp, %r10
	incq	%r10
	cmpq	$31, %r10
	jbe	.LBB25_19
.Ltmp1019:
# %bb.4:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	b(,%r9,4), %r11
	cmpq	%rdx, %rbp
	movq	%rdx, %rax
	cmovgeq	%rbp, %rax
	leaq	(%rdi,%rax,4), %rbx
	addq	$4, %rbx
	cmpq	%rbx, %r11
	jae	.LBB25_6
.Ltmp1020:
# %bb.5:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%r9, %rax
	subq	%rbp, %rax
	leaq	b+4(,%rax,4), %rax
	leaq	(%rdi,%rbp,4), %rbx
	cmpq	%rax, %rbx
	jb	.LBB25_19
.Ltmp1021:
.LBB25_6:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r10, %r11
	andq	$-32, %r11
	leaq	-32(%r11), %rbx
	movq	%rbx, %rax
	shrq	$5, %rax
	incq	%rax
	movl	%eax, %r14d
	andl	$3, %r14d
	cmpq	$96, %rbx
	jae	.LBB25_12
.Ltmp1022:
# %bb.7:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%ebx, %ebx
	jmp	.LBB25_14
.Ltmp1023:
.LBB25_12:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 19 3                 # ./mergeu.h:19:3
	leaq	b+480(,%r9,4), %r15
	leaq	(%rdi,%rbp,4), %r12
	addq	$480, %r12              # imm = 0x1E0
	movq	%r14, %r13
	subq	%rax, %r13
	xorl	%ebx, %ebx
.Ltmp1024:
	.p2align	4, 0x90
.LBB25_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 20 14 is_stmt 1      # ./mergeu.h:20:14
	vmovups	-480(%r12,%rbx,4), %ymm0
	vmovups	-448(%r12,%rbx,4), %ymm1
	vmovups	-416(%r12,%rbx,4), %ymm2
	vmovups	-384(%r12,%rbx,4), %ymm3
	.loc	11 20 12 is_stmt 0      # ./mergeu.h:20:12
	vmovups	%ymm0, -480(%r15,%rbx,4)
	vmovups	%ymm1, -448(%r15,%rbx,4)
	vmovups	%ymm2, -416(%r15,%rbx,4)
	vmovups	%ymm3, -384(%r15,%rbx,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-352(%r12,%rbx,4), %ymm0
	vmovups	-320(%r12,%rbx,4), %ymm1
	vmovups	-288(%r12,%rbx,4), %ymm2
	vmovups	-256(%r12,%rbx,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -352(%r15,%rbx,4)
	vmovups	%ymm1, -320(%r15,%rbx,4)
	vmovups	%ymm2, -288(%r15,%rbx,4)
	vmovups	%ymm3, -256(%r15,%rbx,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-224(%r12,%rbx,4), %ymm0
	vmovups	-192(%r12,%rbx,4), %ymm1
	vmovups	-160(%r12,%rbx,4), %ymm2
	vmovups	-128(%r12,%rbx,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -224(%r15,%rbx,4)
	vmovups	%ymm1, -192(%r15,%rbx,4)
	vmovups	%ymm2, -160(%r15,%rbx,4)
	vmovups	%ymm3, -128(%r15,%rbx,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-96(%r12,%rbx,4), %ymm0
	vmovups	-64(%r12,%rbx,4), %ymm1
	vmovups	-32(%r12,%rbx,4), %ymm2
	vmovups	(%r12,%rbx,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -96(%r15,%rbx,4)
	vmovups	%ymm1, -64(%r15,%rbx,4)
	vmovups	%ymm2, -32(%r15,%rbx,4)
	vmovups	%ymm3, (%r15,%rbx,4)
	subq	$-128, %rbx
	addq	$4, %r13
	jne	.LBB25_13
.Ltmp1025:
.LBB25_14:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 12                 # ./mergeu.h:0:12
	testq	%r14, %r14
	je	.LBB25_17
.Ltmp1026:
# %bb.15:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rbx,%rbp), %rax
	leaq	(%rdi,%rax,4), %r15
	addq	%r9, %rbx
	negq	%r14
	movl	$96, %eax
.Ltmp1027:
	.p2align	4, 0x90
.LBB25_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-96(%r15,%rax), %ymm0
	vmovups	-64(%r15,%rax), %ymm1
	vmovups	-32(%r15,%rax), %ymm2
	vmovups	(%r15,%rax), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, b-96(%rax,%rbx,4)
	vmovups	%ymm1, b-64(%rax,%rbx,4)
	vmovups	%ymm2, b-32(%rax,%rbx,4)
	vmovups	%ymm3, b(%rax,%rbx,4)
	subq	$-128, %rax
	incq	%r14
	jne	.LBB25_16
.Ltmp1028:
.LBB25_17:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 12                 # ./mergeu.h:0:12
	addq	%r11, %r9
.Ltmp1029:
	.loc	11 19 3 is_stmt 1       # ./mergeu.h:19:3
	cmpq	%r11, %r10
	je	.LBB25_21
.Ltmp1030:
# %bb.18:
	#DEBUG_VALUE: merging_standard:l1 <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r11, %rbp
.Ltmp1031:
.LBB25_19:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 19 3                 # ./mergeu.h:19:3
	decq	%rbp
.Ltmp1032:
	.p2align	4, 0x90
.LBB25_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l1 <- undef
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 20 14 is_stmt 1      # ./mergeu.h:20:14
	movl	4(%rdi,%rbp,4), %eax
	.loc	11 20 12 is_stmt 0      # ./mergeu.h:20:12
	movl	%eax, b(,%r9,4)
	.loc	11 20 8                 # ./mergeu.h:20:8
	incq	%r9
.Ltmp1033:
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 19 13 is_stmt 1      # ./mergeu.h:19:13
	incq	%rbp
	cmpq	%rdx, %rbp
	.loc	11 19 3 is_stmt 0       # ./mergeu.h:19:3
	jl	.LBB25_20
.Ltmp1034:
.LBB25_21:
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:i <- $r9
	.loc	11 22 13 is_stmt 1      # ./mergeu.h:22:13
	cmpq	%rcx, %r8
	.loc	11 22 3 is_stmt 0       # ./mergeu.h:22:3
	jg	.LBB25_25
.Ltmp1035:
# %bb.22:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%rcx, %r11
	subq	%r8, %r11
	incq	%r11
	cmpq	$31, %r11
	jbe	.LBB25_23
.Ltmp1036:
# %bb.33:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	b(,%r9,4), %rdx
.Ltmp1037:
	cmpq	%rcx, %r8
	movq	%rcx, %rax
	cmovgeq	%r8, %rax
	leaq	(%rdi,%rax,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %rdx
	jae	.LBB25_35
.Ltmp1038:
# %bb.34:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%r9, %rax
	subq	%r8, %rax
	leaq	b+4(,%rax,4), %rax
	leaq	(%rdi,%r8,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB25_23
.Ltmp1039:
.LBB25_35:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r11, %r10
	andq	$-32, %r10
	leaq	-32(%r10), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r14d
	andl	$3, %r14d
	cmpq	$96, %rax
	jae	.LBB25_37
.Ltmp1040:
# %bb.36:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%edx, %edx
	jmp	.LBB25_39
.Ltmp1041:
.LBB25_37:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 22 3                 # ./mergeu.h:22:3
	leaq	b+480(,%r9,4), %rax
	leaq	(%rdi,%r8,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r14, %r15
	subq	%rdx, %r15
	xorl	%edx, %edx
.Ltmp1042:
	.p2align	4, 0x90
.LBB25_38:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 23 14 is_stmt 1      # ./mergeu.h:23:14
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	11 23 12 is_stmt 0      # ./mergeu.h:23:12
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %r15
	jne	.LBB25_38
.Ltmp1043:
.LBB25_39:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 12                 # ./mergeu.h:0:12
	testq	%r14, %r14
	je	.LBB25_42
.Ltmp1044:
# %bb.40:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%r8,%rdx), %rax
	leaq	(%rdi,%rax,4), %rax
	addq	%r9, %rdx
	negq	%r14
	movl	$96, %ebx
.Ltmp1045:
	.p2align	4, 0x90
.LBB25_41:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-96(%rax,%rbx), %ymm0
	vmovups	-64(%rax,%rbx), %ymm1
	vmovups	-32(%rax,%rbx), %ymm2
	vmovups	(%rax,%rbx), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, b-96(%rbx,%rdx,4)
	vmovups	%ymm1, b-64(%rbx,%rdx,4)
	vmovups	%ymm2, b-32(%rbx,%rdx,4)
	vmovups	%ymm3, b(%rbx,%rdx,4)
	subq	$-128, %rbx
	incq	%r14
	jne	.LBB25_41
.Ltmp1046:
.LBB25_42:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 22 3 is_stmt 1       # ./mergeu.h:22:3
	cmpq	%r10, %r11
	je	.LBB25_25
.Ltmp1047:
# %bb.43:
	#DEBUG_VALUE: merging_standard:i <- $r9
	#DEBUG_VALUE: merging_standard:l2 <- $r8
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r10, %r9
.Ltmp1048:
	addq	%r10, %r8
.Ltmp1049:
.LBB25_23:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 22 3                 # ./mergeu.h:22:3
	leaq	b(,%r9,4), %rax
	decq	%r8
.Ltmp1050:
	.p2align	4, 0x90
.LBB25_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l2 <- undef
	#DEBUG_VALUE: merging_standard:i <- undef
	#DEBUG_VALUE: merging_standard:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 23 14 is_stmt 1      # ./mergeu.h:23:14
	movl	4(%rdi,%r8,4), %edx
.Ltmp1051:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 23 12 is_stmt 0      # ./mergeu.h:23:12
	movl	%edx, (%rax)
	.loc	11 22 13 is_stmt 1      # ./mergeu.h:22:13
	addq	$4, %rax
	incq	%r8
	cmpq	%rcx, %r8
	.loc	11 22 3 is_stmt 0       # ./mergeu.h:22:3
	jl	.LBB25_24
.Ltmp1052:
.LBB25_25:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:i <- $rsi
	.loc	11 25 19 is_stmt 1      # ./mergeu.h:25:19
	cmpq	%rcx, %rsi
.Ltmp1053:
	.loc	11 25 3 is_stmt 0       # ./mergeu.h:25:3
	jg	.LBB25_29
.Ltmp1054:
# %bb.26:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rsi, %rcx
	movq	%rsi, %r9
	cmovgeq	%rcx, %r9
	subq	%rsi, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB25_27
.Ltmp1055:
# %bb.44:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rdi,%rsi,4), %rdx
	cmpq	%rsi, %rcx
	movq	%rsi, %rax
	cmovgeq	%rcx, %rax
	leaq	b+4(,%rax,4), %rbp
	cmpq	%rbp, %rdx
	jae	.LBB25_46
.Ltmp1056:
# %bb.45:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rdi,%rax,4), %rax
	addq	$4, %rax
	leaq	b(,%rsi,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB25_27
.Ltmp1057:
.LBB25_46:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r10d
	andl	$3, %r10d
	cmpq	$96, %rax
	jae	.LBB25_48
.Ltmp1058:
# %bb.47:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%edx, %edx
	jmp	.LBB25_50
.Ltmp1059:
.LBB25_48:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 25 3                 # ./mergeu.h:25:3
	leaq	(%rdi,%rsi,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	b+480(,%rsi,4), %rbx
	movq	%r10, %r11
	subq	%rdx, %r11
	xorl	%edx, %edx
.Ltmp1060:
	.p2align	4, 0x90
.LBB25_49:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 26 12 is_stmt 1      # ./mergeu.h:26:12
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	11 26 10 is_stmt 0      # ./mergeu.h:26:10
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %r11
	jne	.LBB25_49
.Ltmp1061:
.LBB25_50:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 10                 # ./mergeu.h:0:10
	testq	%r10, %r10
	je	.LBB25_53
.Ltmp1062:
# %bb.51:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%rsi, %rdx
	shlq	$2, %rdx
	negq	%r10
.Ltmp1063:
	.p2align	4, 0x90
.LBB25_52:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	b(%rdx), %ymm0
	vmovups	b+32(%rdx), %ymm1
	vmovups	b+64(%rdx), %ymm2
	vmovups	b+96(%rdx), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, (%rdi,%rdx)
	vmovups	%ymm1, 32(%rdi,%rdx)
	vmovups	%ymm2, 64(%rdi,%rdx)
	vmovups	%ymm3, 96(%rdi,%rdx)
	subq	$-128, %rdx
	incq	%r10
	jne	.LBB25_52
.Ltmp1064:
.LBB25_53:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 25 3 is_stmt 1       # ./mergeu.h:25:3
	cmpq	%r8, %r9
	je	.LBB25_29
.Ltmp1065:
# %bb.54:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rsi
.Ltmp1066:
.LBB25_27:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 25 3                 # ./mergeu.h:25:3
	decq	%rsi
.Ltmp1067:
	.p2align	4, 0x90
.LBB25_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:i <- undef
	.loc	11 26 12 is_stmt 1      # ./mergeu.h:26:12
	movl	b+4(,%rsi,4), %eax
	.loc	11 26 10 is_stmt 0      # ./mergeu.h:26:10
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp1068:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 25 19 is_stmt 1      # ./mergeu.h:25:19
	incq	%rsi
	cmpq	%rcx, %rsi
.Ltmp1069:
	.loc	11 25 3 is_stmt 0       # ./mergeu.h:25:3
	jl	.LBB25_28
.Ltmp1070:
.LBB25_29:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	11 27 1 is_stmt 1       # ./mergeu.h:27:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1071:
.Lfunc_end25:
	.size	merging_standard, .Lfunc_end25-merging_standard
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_standard     # -- Begin function sort_merge_standard
	.p2align	4, 0x90
	.type	sort_merge_standard,@function
sort_merge_standard:                    # @sort_merge_standard
.Lfunc_begin26:
	.loc	11 29 0                 # ./mergeu.h:29:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	11 32 11 prologue_end   # ./mergeu.h:32:11
	cmpq	%rdx, %rsi
.Ltmp1072:
	.loc	11 32 7 is_stmt 0       # ./mergeu.h:32:7
	jge	.LBB26_30
.Ltmp1073:
# %bb.1:
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	.loc	11 0 7                  # ./mergeu.h:0:7
	movq	%rdx, %r14
.Ltmp1074:
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%rsi, %r12
.Ltmp1075:
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	movq	%rdi, %r15
.Ltmp1076:
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	.loc	11 33 16 is_stmt 1      # ./mergeu.h:33:16
	leaq	(%rdx,%rsi), %rax
	.loc	11 33 24 is_stmt 0      # ./mergeu.h:33:24
	movq	%rax, %r13
	shrq	$63, %r13
	addq	%rax, %r13
	sarq	%r13
.Ltmp1077:
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	.loc	11 34 5 is_stmt 1       # ./mergeu.h:34:5
	movq	%r13, %rdx
	callq	sort_merge_standard
.Ltmp1078:
	.loc	11 35 32                # ./mergeu.h:35:32
	leaq	1(%r13), %rbx
	.loc	11 35 5 is_stmt 0       # ./mergeu.h:35:5
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	sort_merge_standard
.Ltmp1079:
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:mid <- $r13
	.loc	11 9 44 is_stmt 1       # ./mergeu.h:9:44
	cmpq	%r12, %r13
.Ltmp1080:
	.loc	11 9 3 is_stmt 0        # ./mergeu.h:9:3
	jl	.LBB26_2
.Ltmp1081:
# %bb.9:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r14, %r13
	jge	.LBB26_2
.Ltmp1082:
# %bb.10:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3                  # ./mergeu.h:0:3
	movq	%r12, %rax
	movq	%r12, %rcx
.Ltmp1083:
	.p2align	4, 0x90
.LBB26_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 10 9 is_stmt 1       # ./mergeu.h:10:9
	movl	(%r15,%rcx,4), %edx
	.loc	11 10 18 is_stmt 0      # ./mergeu.h:10:18
	movl	(%r15,%rbx,4), %esi
	.loc	11 10 15                # ./mergeu.h:10:15
	cmpl	%esi, %edx
.Ltmp1084:
	.loc	11 10 9                 # ./mergeu.h:10:9
	jle	.LBB26_12
.Ltmp1085:
# %bb.31:                               #   in Loop: Header=BB26_11 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 14 12 is_stmt 1      # ./mergeu.h:14:12
	movl	%esi, b(,%rax,4)
	.loc	11 15 9                 # ./mergeu.h:15:9
	incq	%rbx
.Ltmp1086:
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	.loc	11 9 67                 # ./mergeu.h:9:67
	incq	%rax
.Ltmp1087:
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%r13, %rcx
	jle	.LBB26_33
	jmp	.LBB26_3
.Ltmp1088:
	.p2align	4, 0x90
.LBB26_12:                              #   in Loop: Header=BB26_11 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 11 12 is_stmt 1      # ./mergeu.h:11:12
	movl	%edx, b(,%rax,4)
	.loc	11 12 9                 # ./mergeu.h:12:9
	incq	%rcx
.Ltmp1089:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	.loc	11 9 67                 # ./mergeu.h:9:67
	incq	%rax
.Ltmp1090:
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%r13, %rcx
.Ltmp1091:
	.loc	11 9 3                  # ./mergeu.h:9:3
	jg	.LBB26_3
.Ltmp1092:
.LBB26_33:                              #   in Loop: Header=BB26_11 Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r14, %rbx
	jle	.LBB26_11
	jmp	.LBB26_3
.Ltmp1093:
.LBB26_2:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 0                  # ./mergeu.h:0:0
	movq	%r12, %rcx
	movq	%r12, %rax
.Ltmp1094:
.LBB26_3:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 19 13 is_stmt 1      # ./mergeu.h:19:13
	cmpq	%r13, %rcx
	.loc	11 19 3 is_stmt 0       # ./mergeu.h:19:3
	jg	.LBB26_22
.Ltmp1095:
# %bb.4:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r13, %r9
	subq	%rcx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB26_20
.Ltmp1096:
# %bb.5:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	b(,%rax,4), %rsi
	cmpq	%r13, %rcx
	movq	%r13, %rdx
	cmovgeq	%rcx, %rdx
	leaq	(%r15,%rdx,4), %rdi
	addq	$4, %rdi
	cmpq	%rdi, %rsi
	jae	.LBB26_7
.Ltmp1097:
# %bb.6:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%rax, %rdx
	subq	%rcx, %rdx
	leaq	b+4(,%rdx,4), %rdx
	leaq	(%r15,%rcx,4), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB26_20
.Ltmp1098:
.LBB26_7:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rdx
	jae	.LBB26_13
.Ltmp1099:
# %bb.8:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%esi, %esi
	jmp	.LBB26_15
.Ltmp1100:
.LBB26_13:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 19 3                 # ./mergeu.h:19:3
	leaq	b+480(,%rax,4), %rdx
	leaq	(%r15,%rcx,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	movq	%r10, %r11
	subq	%rsi, %r11
	xorl	%esi, %esi
.Ltmp1101:
	.p2align	4, 0x90
.LBB26_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 20 14 is_stmt 1      # ./mergeu.h:20:14
	vmovups	-480(%rdi,%rsi,4), %ymm0
	vmovups	-448(%rdi,%rsi,4), %ymm1
	vmovups	-416(%rdi,%rsi,4), %ymm2
	vmovups	-384(%rdi,%rsi,4), %ymm3
	.loc	11 20 12 is_stmt 0      # ./mergeu.h:20:12
	vmovups	%ymm0, -480(%rdx,%rsi,4)
	vmovups	%ymm1, -448(%rdx,%rsi,4)
	vmovups	%ymm2, -416(%rdx,%rsi,4)
	vmovups	%ymm3, -384(%rdx,%rsi,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-352(%rdi,%rsi,4), %ymm0
	vmovups	-320(%rdi,%rsi,4), %ymm1
	vmovups	-288(%rdi,%rsi,4), %ymm2
	vmovups	-256(%rdi,%rsi,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -352(%rdx,%rsi,4)
	vmovups	%ymm1, -320(%rdx,%rsi,4)
	vmovups	%ymm2, -288(%rdx,%rsi,4)
	vmovups	%ymm3, -256(%rdx,%rsi,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-224(%rdi,%rsi,4), %ymm0
	vmovups	-192(%rdi,%rsi,4), %ymm1
	vmovups	-160(%rdi,%rsi,4), %ymm2
	vmovups	-128(%rdi,%rsi,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -224(%rdx,%rsi,4)
	vmovups	%ymm1, -192(%rdx,%rsi,4)
	vmovups	%ymm2, -160(%rdx,%rsi,4)
	vmovups	%ymm3, -128(%rdx,%rsi,4)
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rdi,%rsi,4), %ymm0
	vmovups	-64(%rdi,%rsi,4), %ymm1
	vmovups	-32(%rdi,%rsi,4), %ymm2
	vmovups	(%rdi,%rsi,4), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -96(%rdx,%rsi,4)
	vmovups	%ymm1, -64(%rdx,%rsi,4)
	vmovups	%ymm2, -32(%rdx,%rsi,4)
	vmovups	%ymm3, (%rdx,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %r11
	jne	.LBB26_14
.Ltmp1102:
.LBB26_15:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 12                 # ./mergeu.h:0:12
	testq	%r10, %r10
	je	.LBB26_18
.Ltmp1103:
# %bb.16:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%rcx,%rsi), %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	%rax, %rsi
	negq	%r10
	movl	$96, %edi
.Ltmp1104:
	.p2align	4, 0x90
.LBB26_17:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rdx,%rdi), %ymm0
	vmovups	-64(%rdx,%rdi), %ymm1
	vmovups	-32(%rdx,%rdi), %ymm2
	vmovups	(%rdx,%rdi), %ymm3
	.loc	11 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, b-96(%rdi,%rsi,4)
	vmovups	%ymm1, b-64(%rdi,%rsi,4)
	vmovups	%ymm2, b-32(%rdi,%rsi,4)
	vmovups	%ymm3, b(%rdi,%rsi,4)
	subq	$-128, %rdi
	incq	%r10
	jne	.LBB26_17
.Ltmp1105:
.LBB26_18:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 12                 # ./mergeu.h:0:12
	addq	%r8, %rax
.Ltmp1106:
	.loc	11 19 3 is_stmt 1       # ./mergeu.h:19:3
	cmpq	%r8, %r9
	je	.LBB26_22
.Ltmp1107:
# %bb.19:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rcx
.Ltmp1108:
.LBB26_20:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 19 3                 # ./mergeu.h:19:3
	decq	%rcx
.Ltmp1109:
	.p2align	4, 0x90
.LBB26_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- undef
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 20 14 is_stmt 1      # ./mergeu.h:20:14
	movl	4(%r15,%rcx,4), %edx
	.loc	11 20 12 is_stmt 0      # ./mergeu.h:20:12
	movl	%edx, b(,%rax,4)
	.loc	11 20 8                 # ./mergeu.h:20:8
	incq	%rax
.Ltmp1110:
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 19 13 is_stmt 1      # ./mergeu.h:19:13
	incq	%rcx
	cmpq	%r13, %rcx
	.loc	11 19 3 is_stmt 0       # ./mergeu.h:19:3
	jl	.LBB26_21
.Ltmp1111:
.LBB26_22:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $rax
	.loc	11 22 13 is_stmt 1      # ./mergeu.h:22:13
	cmpq	%r14, %rbx
	.loc	11 22 3 is_stmt 0       # ./mergeu.h:22:3
	jg	.LBB26_26
.Ltmp1112:
# %bb.23:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r14, %r9
	subq	%rbx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB26_24
.Ltmp1113:
# %bb.34:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	b(,%rax,4), %rdx
	cmpq	%r14, %rbx
	movq	%r14, %rcx
	cmovgeq	%rbx, %rcx
	leaq	(%r15,%rcx,4), %rsi
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jae	.LBB26_36
.Ltmp1114:
# %bb.35:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%rax, %rcx
	subq	%rbx, %rcx
	leaq	b+4(,%rcx,4), %rcx
	leaq	(%r15,%rbx,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB26_24
.Ltmp1115:
.LBB26_36:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rcx
	movq	%rcx, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rcx
	jae	.LBB26_38
.Ltmp1116:
# %bb.37:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%edi, %edi
	jmp	.LBB26_40
.Ltmp1117:
.LBB26_38:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 22 3                 # ./mergeu.h:22:3
	leaq	b+480(,%rax,4), %rdx
	leaq	(%r15,%rbx,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	movq	%r10, %rsi
	subq	%rdi, %rsi
	xorl	%edi, %edi
.Ltmp1118:
	.p2align	4, 0x90
.LBB26_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 23 14 is_stmt 1      # ./mergeu.h:23:14
	vmovups	-480(%rcx,%rdi,4), %ymm0
	vmovups	-448(%rcx,%rdi,4), %ymm1
	vmovups	-416(%rcx,%rdi,4), %ymm2
	vmovups	-384(%rcx,%rdi,4), %ymm3
	.loc	11 23 12 is_stmt 0      # ./mergeu.h:23:12
	vmovups	%ymm0, -480(%rdx,%rdi,4)
	vmovups	%ymm1, -448(%rdx,%rdi,4)
	vmovups	%ymm2, -416(%rdx,%rdi,4)
	vmovups	%ymm3, -384(%rdx,%rdi,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-352(%rcx,%rdi,4), %ymm0
	vmovups	-320(%rcx,%rdi,4), %ymm1
	vmovups	-288(%rcx,%rdi,4), %ymm2
	vmovups	-256(%rcx,%rdi,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -352(%rdx,%rdi,4)
	vmovups	%ymm1, -320(%rdx,%rdi,4)
	vmovups	%ymm2, -288(%rdx,%rdi,4)
	vmovups	%ymm3, -256(%rdx,%rdi,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-224(%rcx,%rdi,4), %ymm0
	vmovups	-192(%rcx,%rdi,4), %ymm1
	vmovups	-160(%rcx,%rdi,4), %ymm2
	vmovups	-128(%rcx,%rdi,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -224(%rdx,%rdi,4)
	vmovups	%ymm1, -192(%rdx,%rdi,4)
	vmovups	%ymm2, -160(%rdx,%rdi,4)
	vmovups	%ymm3, -128(%rdx,%rdi,4)
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-96(%rcx,%rdi,4), %ymm0
	vmovups	-64(%rcx,%rdi,4), %ymm1
	vmovups	-32(%rcx,%rdi,4), %ymm2
	vmovups	(%rcx,%rdi,4), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, -96(%rdx,%rdi,4)
	vmovups	%ymm1, -64(%rdx,%rdi,4)
	vmovups	%ymm2, -32(%rdx,%rdi,4)
	vmovups	%ymm3, (%rdx,%rdi,4)
	subq	$-128, %rdi
	addq	$4, %rsi
	jne	.LBB26_39
.Ltmp1119:
.LBB26_40:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 12                 # ./mergeu.h:0:12
	testq	%r10, %r10
	je	.LBB26_43
.Ltmp1120:
# %bb.41:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%rbx,%rdi), %rcx
	leaq	(%r15,%rcx,4), %rcx
	addq	%rax, %rdi
	negq	%r10
	movl	$96, %edx
.Ltmp1121:
	.p2align	4, 0x90
.LBB26_42:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 23 14                # ./mergeu.h:23:14
	vmovups	-96(%rcx,%rdx), %ymm0
	vmovups	-64(%rcx,%rdx), %ymm1
	vmovups	-32(%rcx,%rdx), %ymm2
	vmovups	(%rcx,%rdx), %ymm3
	.loc	11 23 12                # ./mergeu.h:23:12
	vmovups	%ymm0, b-96(%rdx,%rdi,4)
	vmovups	%ymm1, b-64(%rdx,%rdi,4)
	vmovups	%ymm2, b-32(%rdx,%rdi,4)
	vmovups	%ymm3, b(%rdx,%rdi,4)
	subq	$-128, %rdx
	incq	%r10
	jne	.LBB26_42
.Ltmp1122:
.LBB26_43:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 22 3 is_stmt 1       # ./mergeu.h:22:3
	cmpq	%r8, %r9
	je	.LBB26_26
.Ltmp1123:
# %bb.44:
	#DEBUG_VALUE: merging_standard:i <- $rax
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rax
.Ltmp1124:
	addq	%r8, %rbx
.Ltmp1125:
.LBB26_24:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 22 3                 # ./mergeu.h:22:3
	leaq	b(,%rax,4), %rax
	decq	%rbx
.Ltmp1126:
	.p2align	4, 0x90
.LBB26_25:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- undef
	#DEBUG_VALUE: merging_standard:i <- undef
	#DEBUG_VALUE: merging_standard:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 23 14 is_stmt 1      # ./mergeu.h:23:14
	movl	4(%r15,%rbx,4), %ecx
.Ltmp1127:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 23 12 is_stmt 0      # ./mergeu.h:23:12
	movl	%ecx, (%rax)
	.loc	11 22 13 is_stmt 1      # ./mergeu.h:22:13
	addq	$4, %rax
	incq	%rbx
	cmpq	%r14, %rbx
	.loc	11 22 3 is_stmt 0       # ./mergeu.h:22:3
	jl	.LBB26_25
.Ltmp1128:
.LBB26_26:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	.loc	11 25 19 is_stmt 1      # ./mergeu.h:25:19
	cmpq	%r14, %r12
.Ltmp1129:
	.loc	11 25 3 is_stmt 0       # ./mergeu.h:25:3
	jg	.LBB26_30
.Ltmp1130:
# %bb.27:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r12, %r14
	movq	%r12, %rax
	cmovgeq	%r14, %rax
	subq	%r12, %rax
	incq	%rax
	cmpq	$31, %rax
	jbe	.LBB26_28
.Ltmp1131:
# %bb.45:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%r15,%r12,4), %rdx
	cmpq	%r12, %r14
	movq	%r12, %rcx
	cmovgeq	%r14, %rcx
	leaq	b+4(,%rcx,4), %rsi
	cmpq	%rsi, %rdx
	jae	.LBB26_47
.Ltmp1132:
# %bb.46:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%r15,%rcx,4), %rcx
	addq	$4, %rcx
	leaq	b(,%r12,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB26_28
.Ltmp1133:
.LBB26_47:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%rax, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %ecx
	andl	$3, %ecx
	cmpq	$96, %rdx
	jae	.LBB26_49
.Ltmp1134:
# %bb.48:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3                  # ./mergeu.h:0:3
	xorl	%esi, %esi
	jmp	.LBB26_51
.Ltmp1135:
.LBB26_49:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 25 3                 # ./mergeu.h:25:3
	leaq	(%r15,%r12,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	leaq	b+480(,%r12,4), %rbx
	movq	%rcx, %rdx
	subq	%rsi, %rdx
	xorl	%esi, %esi
.Ltmp1136:
	.p2align	4, 0x90
.LBB26_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 26 12 is_stmt 1      # ./mergeu.h:26:12
	vmovups	-480(%rbx,%rsi,4), %ymm0
	vmovups	-448(%rbx,%rsi,4), %ymm1
	vmovups	-416(%rbx,%rsi,4), %ymm2
	vmovups	-384(%rbx,%rsi,4), %ymm3
	.loc	11 26 10 is_stmt 0      # ./mergeu.h:26:10
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-352(%rbx,%rsi,4), %ymm0
	vmovups	-320(%rbx,%rsi,4), %ymm1
	vmovups	-288(%rbx,%rsi,4), %ymm2
	vmovups	-256(%rbx,%rsi,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-224(%rbx,%rsi,4), %ymm0
	vmovups	-192(%rbx,%rsi,4), %ymm1
	vmovups	-160(%rbx,%rsi,4), %ymm2
	vmovups	-128(%rbx,%rsi,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	-96(%rbx,%rsi,4), %ymm0
	vmovups	-64(%rbx,%rsi,4), %ymm1
	vmovups	-32(%rbx,%rsi,4), %ymm2
	vmovups	(%rbx,%rsi,4), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB26_50
.Ltmp1137:
.LBB26_51:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 10                 # ./mergeu.h:0:10
	testq	%rcx, %rcx
	je	.LBB26_54
.Ltmp1138:
# %bb.52:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%r12, %rsi
	shlq	$2, %rsi
	negq	%rcx
.Ltmp1139:
	.p2align	4, 0x90
.LBB26_53:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 26 12                # ./mergeu.h:26:12
	vmovups	b(%rsi), %ymm0
	vmovups	b+32(%rsi), %ymm1
	vmovups	b+64(%rsi), %ymm2
	vmovups	b+96(%rsi), %ymm3
	.loc	11 26 10                # ./mergeu.h:26:10
	vmovups	%ymm0, (%r15,%rsi)
	vmovups	%ymm1, 32(%r15,%rsi)
	vmovups	%ymm2, 64(%r15,%rsi)
	vmovups	%ymm3, 96(%r15,%rsi)
	subq	$-128, %rsi
	incq	%rcx
	jne	.LBB26_53
.Ltmp1140:
.LBB26_54:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 25 3 is_stmt 1       # ./mergeu.h:25:3
	cmpq	%r8, %rax
	je	.LBB26_30
.Ltmp1141:
# %bb.55:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %r12
.Ltmp1142:
.LBB26_28:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	11 25 3                 # ./mergeu.h:25:3
	decq	%r12
.Ltmp1143:
	.p2align	4, 0x90
.LBB26_29:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- undef
	.loc	11 26 12 is_stmt 1      # ./mergeu.h:26:12
	movl	b+4(,%r12,4), %eax
	.loc	11 26 10 is_stmt 0      # ./mergeu.h:26:10
	movl	%eax, 4(%r15,%r12,4)
.Ltmp1144:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	11 25 19 is_stmt 1      # ./mergeu.h:25:19
	incq	%r12
	cmpq	%r14, %r12
.Ltmp1145:
	.loc	11 25 3 is_stmt 0       # ./mergeu.h:25:3
	jl	.LBB26_29
.Ltmp1146:
.LBB26_30:
	.loc	11 40 1 is_stmt 1       # ./mergeu.h:40:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1147:
.Lfunc_end26:
	.size	sort_merge_standard, .Lfunc_end26-sort_merge_standard
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized # -- Begin function partition_quick_optimized
	.p2align	4, 0x90
	.type	partition_quick_optimized,@function
partition_quick_optimized:              # @partition_quick_optimized
.Lfunc_begin27:
	.loc	10 13 0                 # ./quicko.h:13:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
.Ltmp1148:
	#DEBUG_VALUE: partition_quick_optimized:done <- 0
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	.loc	10 14 7 prologue_end    # ./quicko.h:14:7
	movl	$0, 12(%rsp)
.Ltmp1149:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	10 0 7 is_stmt 0        # ./quicko.h:0:7
	leaq	12(%rsp), %rcx
	.loc	10 15 15 is_stmt 1      # ./quicko.h:15:15
	callq	median_of_three_of_median_of_three_auto_finish
.Ltmp1150:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- undef
	.loc	10 16 7                 # ./quicko.h:16:7
	cmpl	$0, 12(%rsp)
.Ltmp1151:
	.loc	10 16 7 is_stmt 0       # ./quicko.h:16:7
	je	.LBB27_1
.Ltmp1152:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	.loc	10 17 17 is_stmt 1      # ./quicko.h:17:17
	addq	%rbx, %r14
.Ltmp1153:
	.loc	10 17 25 is_stmt 0      # ./quicko.h:17:25
	movq	%r14, %rbx
.Ltmp1154:
	shrq	$63, %rbx
	addq	%r14, %rbx
	sarq	%rbx
	jmp	.LBB27_8
.Ltmp1155:
.LBB27_1:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rbx
	.loc	10 20 27 is_stmt 1      # ./quicko.h:20:27
	cmpq	%rbx, %r14
.Ltmp1156:
	.loc	10 20 3 is_stmt 0       # ./quicko.h:20:3
	jle	.LBB27_5
.Ltmp1157:
# %bb.2:
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	movl	%r14d, %r9d
	subl	%ebx, %r9d
	movq	%rbx, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%rbx, %rcx
	andq	$3, %r9
	je	.LBB27_4
.Ltmp1158:
	.p2align	4, 0x90
.LBB27_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	10 21 21 is_stmt 1      # ./quicko.h:21:21
	movl	(%r15,%rcx,4), %edi
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%edx, %edx
	cmpl	%edi, %eax
	setg	%dl
.Ltmp1159:
	#DEBUG_VALUE: c <- $bl
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r15,%rbx,4), %r10d
.Ltmp1160:
	#DEBUG_VALUE: z <- $edi
	#DEBUG_VALUE: y <- $r10d
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%r10d, %esi
	cmovgl	%edi, %esi
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%esi, (%r15,%rbx,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%r10d, %edi
.Ltmp1161:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edi, (%r15,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rdx, %rbx
.Ltmp1162:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	10 20 36                # ./quicko.h:20:36
	incq	%rcx
.Ltmp1163:
	#DEBUG_VALUE: j <- $rcx
	.loc	10 20 3 is_stmt 0       # ./quicko.h:20:3
	decq	%r9
	jne	.LBB27_3
.Ltmp1164:
.LBB27_4:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	cmpq	$3, %r8
	jb	.LBB27_5
.Ltmp1165:
	.p2align	4, 0x90
.LBB27_6:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	10 21 21 is_stmt 1      # ./quicko.h:21:21
	movl	(%r15,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1166:
	#DEBUG_VALUE: c <- $sil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r15,%rbx,4), %r8d
.Ltmp1167:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%r8d, %edi
	cmovgl	%edx, %edi
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%edi, (%r15,%rbx,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1168:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, (%r15,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rbx, %rsi
.Ltmp1169:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	4(%r15,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%edi, %edi
	cmpl	%edx, %eax
	setg	%dil
.Ltmp1170:
	#DEBUG_VALUE: c <- $dil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r15,%rsi,4), %r8d
.Ltmp1171:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%r8d, %ebx
	cmovgl	%edx, %ebx
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%ebx, (%r15,%rsi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1172:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 4(%r15,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rsi, %rdi
.Ltmp1173:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rdi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	8(%r15,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1174:
	#DEBUG_VALUE: c <- $sil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r15,%rdi,4), %r8d
.Ltmp1175:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%r8d, %ebx
	cmovgl	%edx, %ebx
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%ebx, (%r15,%rdi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1176:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 8(%r15,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rdi, %rsi
.Ltmp1177:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	12(%r15,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%ebx, %ebx
	cmpl	%edx, %eax
	setg	%bl
.Ltmp1178:
	#DEBUG_VALUE: c <- $bl
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r15,%rsi,4), %r8d
.Ltmp1179:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%r8d, %edi
	cmovgl	%edx, %edi
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%edi, (%r15,%rsi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1180:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 12(%r15,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rsi, %rbx
.Ltmp1181:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	10 20 36                # ./quicko.h:20:36
	addq	$4, %rcx
.Ltmp1182:
	#DEBUG_VALUE: j <- $rcx
	.loc	10 20 27 is_stmt 0      # ./quicko.h:20:27
	cmpq	%rcx, %r14
.Ltmp1183:
	.loc	10 20 3                 # ./quicko.h:20:3
	jne	.LBB27_6
.Ltmp1184:
.LBB27_5:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r15,%rbx,4), %eax
.Ltmp1185:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r15,%rbx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
.Ltmp1186:
.LBB27_8:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	.loc	10 30 1                 # ./quicko.h:30:1
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1187:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1188:
.Lfunc_end27:
	.size	partition_quick_optimized, .Lfunc_end27-partition_quick_optimized
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized    # -- Begin function sort_quick_optimized
	.p2align	4, 0x90
	.type	sort_quick_optimized,@function
sort_quick_optimized:                   # @sort_quick_optimized
.Lfunc_begin28:
	.loc	10 32 0                 # ./quicko.h:32:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
.Ltmp1189:
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	.loc	10 33 11 prologue_end   # ./quicko.h:33:11
	movq	%rdx, %rsi
	subq	%r15, %rsi
.Ltmp1190:
	.loc	10 33 7 is_stmt 0       # ./quicko.h:33:7
	jle	.LBB28_28
.Ltmp1191:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	10 0 7                  # ./quicko.h:0:7
	movq	%rdi, %r12
.Ltmp1192:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	10 34 9 is_stmt 1       # ./quicko.h:34:9
	jle	.LBB28_10
.Ltmp1193:
# %bb.2:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	10 0 9 is_stmt 0        # ./quicko.h:0:9
	movq	%rdx, %r14
.Ltmp1194:
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:done <- 0
	.loc	10 14 7 is_stmt 1       # ./quicko.h:14:7
	movl	$0, 12(%rsp)
.Ltmp1195:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	10 0 7 is_stmt 0        # ./quicko.h:0:7
	leaq	12(%rsp), %rcx
	.loc	10 15 15 is_stmt 1      # ./quicko.h:15:15
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	median_of_three_of_median_of_three_auto_finish
.Ltmp1196:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- undef
	.loc	10 16 7                 # ./quicko.h:16:7
	cmpl	$0, 12(%rsp)
.Ltmp1197:
	.loc	10 16 7 is_stmt 0       # ./quicko.h:16:7
	je	.LBB28_3
.Ltmp1198:
# %bb.8:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	.loc	10 17 17 is_stmt 1      # ./quicko.h:17:17
	leaq	(%r14,%r15), %rax
.Ltmp1199:
	.loc	10 17 25 is_stmt 0      # ./quicko.h:17:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
	jmp	.LBB28_9
.Ltmp1200:
.LBB28_10:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	10 39 43 is_stmt 1      # ./quicko.h:39:43
	incl	%esi
.Ltmp1201:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	.loc	19 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %esi
.Ltmp1202:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB28_28
.Ltmp1203:
# %bb.11:
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%r15,4), %rax
.Ltmp1204:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp1205:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%esi, %r10d
.Ltmp1206:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp1207:
	cmpl	$2, %esi
	jne	.LBB28_12
.Ltmp1208:
.LBB28_22:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB28_28
.Ltmp1209:
# %bb.23:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp1210:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp1211:
	.p2align	4, 0x90
.LBB28_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB28_27
.Ltmp1212:
# %bb.25:                               #   in Loop: Header=BB28_24 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp1213:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp1214:
	leaq	-1(%r15), %r15
.Ltmp1215:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB28_24
.Ltmp1216:
# %bb.26:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp1217:
.LBB28_27:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp1218:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB28_28:
	.loc	10 42 1 is_stmt 1       # ./quicko.h:42:1
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB28_3:
	.cfi_def_cfa_offset 64
.Ltmp1219:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	.loc	10 20 3                 # ./quicko.h:20:3
	movl	%r14d, %r9d
	subl	%r15d, %r9d
	movq	%r15, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%r15, %rbx
	movq	%r15, %rcx
	andq	$3, %r9
	je	.LBB28_5
.Ltmp1220:
	.p2align	4, 0x90
.LBB28_4:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	10 21 21                # ./quicko.h:21:21
	movl	(%r12,%rcx,4), %edi
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%ebp, %ebp
	cmpl	%edi, %eax
	setg	%bpl
.Ltmp1221:
	#DEBUG_VALUE: c <- $bl
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r12,%rbx,4), %esi
.Ltmp1222:
	#DEBUG_VALUE: z <- $edi
	#DEBUG_VALUE: y <- $esi
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%esi, %edx
	cmovgl	%edi, %edx
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%edx, (%r12,%rbx,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%esi, %edi
.Ltmp1223:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edi, (%r12,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rbp, %rbx
.Ltmp1224:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	10 20 36                # ./quicko.h:20:36
	incq	%rcx
.Ltmp1225:
	#DEBUG_VALUE: j <- $rcx
	.loc	10 20 3 is_stmt 0       # ./quicko.h:20:3
	decq	%r9
	jne	.LBB28_4
.Ltmp1226:
.LBB28_5:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	cmpq	$3, %r8
	jb	.LBB28_6
.Ltmp1227:
	.p2align	4, 0x90
.LBB28_7:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	10 21 21 is_stmt 1      # ./quicko.h:21:21
	movl	(%r12,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1228:
	#DEBUG_VALUE: c <- $sil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r12,%rbx,4), %ebp
.Ltmp1229:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebp
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%ebp, %edi
	cmovgl	%edx, %edi
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%edi, (%r12,%rbx,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%ebp, %edx
.Ltmp1230:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, (%r12,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rbx, %rsi
.Ltmp1231:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	4(%r12,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%edi, %edi
	cmpl	%edx, %eax
	setg	%dil
.Ltmp1232:
	#DEBUG_VALUE: c <- $dil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r12,%rsi,4), %ebx
.Ltmp1233:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebx
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%ebx, %ebp
	cmovgl	%edx, %ebp
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%ebp, (%r12,%rsi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%ebx, %edx
.Ltmp1234:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 4(%r12,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rsi, %rdi
.Ltmp1235:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rdi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	8(%r12,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1236:
	#DEBUG_VALUE: c <- $sil
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r12,%rdi,4), %ebx
.Ltmp1237:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebx
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%ebx, %ebp
	cmovgl	%edx, %ebp
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%ebp, (%r12,%rdi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%ebx, %edx
.Ltmp1238:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 8(%r12,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rdi, %rsi
.Ltmp1239:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	10 21 21                # ./quicko.h:21:21
	movl	12(%r12,%rcx,4), %edx
	.loc	10 21 19 is_stmt 0      # ./quicko.h:21:19
	xorl	%ebx, %ebx
.Ltmp1240:
	cmpl	%edx, %eax
	setg	%bl
.Ltmp1241:
	#DEBUG_VALUE: c <- $bl
	.loc	10 22 13 is_stmt 1      # ./quicko.h:22:13
	movl	(%r12,%rsi,4), %ebp
.Ltmp1242:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebp
	.loc	10 24 16                # ./quicko.h:24:16
	movl	%ebp, %edi
	cmovgl	%edx, %edi
	.loc	10 24 14 is_stmt 0      # ./quicko.h:24:14
	movl	%edi, (%r12,%rsi,4)
	.loc	10 25 16 is_stmt 1      # ./quicko.h:25:16
	cmovgl	%ebp, %edx
.Ltmp1243:
	.loc	10 25 14 is_stmt 0      # ./quicko.h:25:14
	movl	%edx, 12(%r12,%rcx,4)
	.loc	10 26 7 is_stmt 1       # ./quicko.h:26:7
	addq	%rsi, %rbx
.Ltmp1244:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	10 20 36                # ./quicko.h:20:36
	addq	$4, %rcx
.Ltmp1245:
	#DEBUG_VALUE: j <- $rcx
	.loc	10 20 27 is_stmt 0      # ./quicko.h:20:27
	cmpq	%rcx, %r14
.Ltmp1246:
	.loc	10 20 3                 # ./quicko.h:20:3
	jne	.LBB28_7
.Ltmp1247:
.LBB28_6:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp1248:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
.Ltmp1249:
.LBB28_9:
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: pi <- $rbx
	.loc	10 36 43                # ./quicko.h:36:43
	leaq	-1(%rbx), %rdx
	.loc	10 36 7 is_stmt 0       # ./quicko.h:36:7
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	sort_quick_optimized
.Ltmp1250:
	.loc	10 37 38 is_stmt 1      # ./quicko.h:37:38
	incq	%rbx
.Ltmp1251:
	.loc	10 37 7 is_stmt 0       # ./quicko.h:37:7
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1252:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1253:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1254:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1255:
.LBB28_12:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	10 0 7                  # ./quicko.h:0:7
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp1256:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB28_13
.Ltmp1257:
	.p2align	4, 0x90
.LBB28_21:                              #   in Loop: Header=BB28_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 25 5                 # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp1258:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp1259:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB28_22
.Ltmp1260:
.LBB28_13:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB28_14 Depth 2
                                        #     Child Loop BB28_18 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp1261:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp1262:
	.p2align	4, 0x90
.LBB28_14:                              #   Parent Loop BB28_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB28_17
.Ltmp1263:
# %bb.15:                               #   in Loop: Header=BB28_14 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1264:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp1265:
	leaq	-1(%rdi), %rdi
.Ltmp1266:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB28_14
.Ltmp1267:
# %bb.16:                               #   in Loop: Header=BB28_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp1268:
.LBB28_17:                              #   in Loop: Header=BB28_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp1269:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp1270:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp1271:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp1272:
	.p2align	4, 0x90
.LBB28_18:                              #   Parent Loop BB28_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB28_21
.Ltmp1273:
# %bb.19:                               #   in Loop: Header=BB28_18 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1274:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp1275:
	leaq	-1(%rdi), %rdi
.Ltmp1276:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB28_18
.Ltmp1277:
# %bb.20:                               #   in Loop: Header=BB28_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB28_21
.Lfunc_end28:
	.size	sort_quick_optimized, .Lfunc_end28-sort_quick_optimized
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_dual # -- Begin function partition_quick_optimized_dual
	.p2align	4, 0x90
	.type	partition_quick_optimized_dual,@function
partition_quick_optimized_dual:         # @partition_quick_optimized_dual
.Lfunc_begin29:
	.file	23 "/home/peeters/bachelor" "./quickodualpivot.h"
	.loc	23 22 0 is_stmt 1       # ./quickodualpivot.h:22:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	23 24 7 prologue_end    # ./quickodualpivot.h:24:7
	movl	(%rdi,%rsi,4), %r10d
.Ltmp1278:
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r10d
	.loc	23 25 7                 # ./quickodualpivot.h:25:7
	movl	(%rdi,%rdx,4), %eax
.Ltmp1279:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $eax
	.loc	23 26 9                 # ./quickodualpivot.h:26:9
	cmpl	%eax, %r10d
.Ltmp1280:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- undef
	.loc	23 27 19                # ./quickodualpivot.h:27:19
	movl	%eax, %r11d
	cmovll	%r10d, %r11d
.Ltmp1281:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	.loc	23 28 20                # ./quickodualpivot.h:28:20
	cmovll	%eax, %r10d
.Ltmp1282:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	.loc	23 29 14                # ./quickodualpivot.h:29:14
	movl	%r11d, (%rdi,%rsi,4)
	.loc	23 30 15                # ./quickodualpivot.h:30:15
	movl	%r10d, (%rdi,%rdx,4)
	.loc	23 39 19                # ./quickodualpivot.h:39:19
	leaq	1(%rsi), %r9
.Ltmp1283:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r9
	.loc	23 41 20                # ./quickodualpivot.h:41:20
	leaq	-1(%rdx), %r14
.Ltmp1284:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	23 43 12                # ./quickodualpivot.h:43:12
	cmpq	%rsi, %r14
	.loc	23 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB29_3
.Ltmp1285:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $eax
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	.loc	23 0 3                  # ./quickodualpivot.h:0:3
	movq	%r9, %rbx
.Ltmp1286:
	.p2align	4, 0x90
.LBB29_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rbx
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	23 44 21 is_stmt 1      # ./quickodualpivot.h:44:21
	movl	(%rdi,%rbx,4), %ebp
	.loc	23 44 19 is_stmt 0      # ./quickodualpivot.h:44:19
	xorl	%r12d, %r12d
	cmpl	%ebp, %r11d
	setg	%r12b
.Ltmp1287:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r9b
	.loc	23 45 9 is_stmt 1       # ./quickodualpivot.h:45:9
	movl	(%rdi,%r9,4), %r15d
.Ltmp1288:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $ebp
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r15d
	.loc	23 47 16                # ./quickodualpivot.h:47:16
	movl	%r15d, %eax
	cmovgl	%ebp, %eax
	.loc	23 47 14 is_stmt 0      # ./quickodualpivot.h:47:14
	movl	%eax, (%rdi,%r9,4)
	.loc	23 48 16 is_stmt 1      # ./quickodualpivot.h:48:16
	cmovgl	%r15d, %ebp
.Ltmp1289:
	.loc	23 48 14 is_stmt 0      # ./quickodualpivot.h:48:14
	movl	%ebp, (%rdi,%rbx,4)
	.loc	23 54 7 is_stmt 1       # ./quickodualpivot.h:54:7
	addq	%r12, %r9
.Ltmp1290:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	.loc	23 56 20                # ./quickodualpivot.h:56:20
	xorl	%r12d, %r12d
	cmpl	%ebp, %r10d
	setl	%r12b
.Ltmp1291:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r12b
	.loc	23 57 9                 # ./quickodualpivot.h:57:9
	movl	(%rdi,%r14,4), %r15d
.Ltmp1292:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $ebp
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r15d
	.loc	23 59 16                # ./quickodualpivot.h:59:16
	movl	%r15d, %eax
	cmovll	%ebp, %eax
	.loc	23 59 14 is_stmt 0      # ./quickodualpivot.h:59:14
	movl	%eax, (%rdi,%r14,4)
	.loc	23 60 16 is_stmt 1      # ./quickodualpivot.h:60:16
	cmovll	%r15d, %ebp
.Ltmp1293:
	.loc	23 60 14 is_stmt 0      # ./quickodualpivot.h:60:14
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp1294:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- undef
	.loc	23 65 7 is_stmt 1       # ./quickodualpivot.h:65:7
	subq	%r12, %r14
.Ltmp1295:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	23 66 7                 # ./quickodualpivot.h:66:7
	subq	%r12, %rbx
	.loc	23 68 6                 # ./quickodualpivot.h:68:6
	incq	%rbx
.Ltmp1296:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rbx
	.loc	23 43 12                # ./quickodualpivot.h:43:12
	cmpq	%r14, %rbx
	.loc	23 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB29_2
.Ltmp1297:
.LBB29_3:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- undef
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	-4(%rdi,%r9,4), %eax
.Ltmp1298:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rsi,4), %ebp
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, -4(%rdi,%r9,4)
.Ltmp1299:
	.loc	23 70 4 is_stmt 1       # ./quickodualpivot.h:70:4
	leaq	-1(%r9), %rbp
.Ltmp1300:
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%eax, (%rdi,%rsi,4)
.Ltmp1301:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%r14,4), %eax
.Ltmp1302:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
.Ltmp1303:
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, 4(%rdi,%r14,4)
.Ltmp1304:
	.loc	23 71 4 is_stmt 1       # ./quickodualpivot.h:71:4
	leaq	1(%r14), %rsi
.Ltmp1305:
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%eax, (%rdi,%rdx,4)
.Ltmp1306:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	23 75 9                 # ./quickodualpivot.h:75:9
	movq	%rbp, (%rcx)
	.loc	23 76 10                # ./quickodualpivot.h:76:10
	movq	%rsi, (%r8)
.Ltmp1307:
	#DEBUG_VALUE: swap:b <- undef
	.loc	23 83 1                 # ./quickodualpivot.h:83:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1308:
.Lfunc_end29:
	.size	partition_quick_optimized_dual, .Lfunc_end29-partition_quick_optimized_dual
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_dual # -- Begin function sort_quick_optimized_dual
	.p2align	4, 0x90
	.type	sort_quick_optimized_dual,@function
sort_quick_optimized_dual:              # @sort_quick_optimized_dual
.Lfunc_begin30:
	.loc	23 85 0                 # ./quickodualpivot.h:85:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	23 86 11 prologue_end   # ./quickodualpivot.h:86:11
	cmpq	%rsi, %rdx
.Ltmp1309:
	.loc	23 86 7 is_stmt 0       # ./quickodualpivot.h:86:7
	jle	.LBB30_7
.Ltmp1310:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	.loc	23 0 7                  # ./quickodualpivot.h:0:7
	movq	%rdx, %r14
.Ltmp1311:
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	movq	%rdi, %r15
.Ltmp1312:
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	leaq	-1(%rdx), %r13
	jmp	.LBB30_2
.Ltmp1313:
	.p2align	4, 0x90
.LBB30_6:                               #   in Loop: Header=BB30_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- undef
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- undef
	#DEBUG_VALUE: swap:a <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	-4(%r15,%r12,4), %eax
.Ltmp1314:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r15,%rsi,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, -4(%r15,%r12,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%rsi,4)
.Ltmp1315:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%r15,%rbp,4), %eax
.Ltmp1316:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, 4(%r15,%rbp,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
.Ltmp1317:
	#DEBUG_VALUE: pivot_low <- undef
	.loc	23 90 55                # ./quickodualpivot.h:90:55
	leaq	-2(%r12), %rdx
	.loc	23 90 7 is_stmt 0       # ./quickodualpivot.h:90:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_dual
.Ltmp1318:
	#DEBUG_VALUE: pivot_high <- undef
	.loc	23 91 7 is_stmt 1       # ./quickodualpivot.h:91:7
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	sort_quick_optimized_dual
.Ltmp1319:
	.loc	23 92 51                # ./quickodualpivot.h:92:51
	addq	$2, %rbp
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
.Ltmp1320:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rbp
	.loc	23 0 51 is_stmt 0       # ./quickodualpivot.h:0:51
	movq	%rbp, %rsi
.Ltmp1321:
	.loc	23 86 11 is_stmt 1      # ./quickodualpivot.h:86:11
	cmpq	%r14, %rbp
.Ltmp1322:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- undef
	.loc	23 86 7 is_stmt 0       # ./quickodualpivot.h:86:7
	jge	.LBB30_7
.Ltmp1323:
.LBB30_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB30_5 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	23 87 14 is_stmt 1      # ./quickodualpivot.h:87:14
	movq	%r14, %rax
	subq	%rsi, %rax
	.loc	23 87 20 is_stmt 0      # ./quickodualpivot.h:87:20
	cmpq	$1001, %rax             # imm = 0x3E9
.Ltmp1324:
	.loc	23 87 9                 # ./quickodualpivot.h:87:9
	jl	.LBB30_8
.Ltmp1325:
# %bb.3:                                #   in Loop: Header=BB30_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	.loc	23 24 7 is_stmt 1       # ./quickodualpivot.h:24:7
	movl	(%r15,%rsi,4), %r9d
.Ltmp1326:
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r9d
	.loc	23 25 7                 # ./quickodualpivot.h:25:7
	movl	(%r15,%r14,4), %edx
.Ltmp1327:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edx
	.loc	23 26 9                 # ./quickodualpivot.h:26:9
	cmpl	%edx, %r9d
.Ltmp1328:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- undef
	.loc	23 27 19                # ./quickodualpivot.h:27:19
	movl	%edx, %r8d
	cmovll	%r9d, %r8d
.Ltmp1329:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	.loc	23 28 20                # ./quickodualpivot.h:28:20
	cmovll	%edx, %r9d
.Ltmp1330:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	.loc	23 29 14                # ./quickodualpivot.h:29:14
	movl	%r8d, (%r15,%rsi,4)
	.loc	23 30 15                # ./quickodualpivot.h:30:15
	movl	%r9d, (%r15,%r14,4)
	.loc	23 39 19                # ./quickodualpivot.h:39:19
	leaq	1(%rsi), %r12
.Ltmp1331:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r13
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r12
	.loc	23 0 19 is_stmt 0       # ./quickodualpivot.h:0:19
	movq	%r13, %rbp
	.loc	23 43 12 is_stmt 1      # ./quickodualpivot.h:43:12
	cmpq	%rsi, %r13
	.loc	23 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB30_6
.Ltmp1332:
# %bb.4:                                #   in Loop: Header=BB30_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r13
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	23 0 3                  # ./quickodualpivot.h:0:3
	movq	%r12, %rdx
.Ltmp1333:
	.p2align	4, 0x90
.LBB30_5:                               #   Parent Loop BB30_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $rbp
	.loc	23 44 21 is_stmt 1      # ./quickodualpivot.h:44:21
	movl	(%r15,%rdx,4), %edi
	.loc	23 44 19 is_stmt 0      # ./quickodualpivot.h:44:19
	xorl	%ecx, %ecx
	cmpl	%edi, %r8d
	setg	%cl
.Ltmp1334:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r12b
	.loc	23 45 9 is_stmt 1       # ./quickodualpivot.h:45:9
	movl	(%r15,%r12,4), %ebx
.Ltmp1335:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edi
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $ebx
	.loc	23 47 16                # ./quickodualpivot.h:47:16
	movl	%ebx, %eax
	cmovgl	%edi, %eax
	.loc	23 47 14 is_stmt 0      # ./quickodualpivot.h:47:14
	movl	%eax, (%r15,%r12,4)
	.loc	23 48 16 is_stmt 1      # ./quickodualpivot.h:48:16
	cmovgl	%ebx, %edi
.Ltmp1336:
	.loc	23 48 14 is_stmt 0      # ./quickodualpivot.h:48:14
	movl	%edi, (%r15,%rdx,4)
	.loc	23 54 7 is_stmt 1       # ./quickodualpivot.h:54:7
	addq	%rcx, %r12
.Ltmp1337:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	.loc	23 56 20                # ./quickodualpivot.h:56:20
	xorl	%eax, %eax
	cmpl	%edi, %r9d
	setl	%al
.Ltmp1338:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $al
	.loc	23 57 9                 # ./quickodualpivot.h:57:9
	movl	(%r15,%rbp,4), %ebx
.Ltmp1339:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edi
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $ebx
	.loc	23 59 16                # ./quickodualpivot.h:59:16
	movl	%ebx, %ecx
	cmovll	%edi, %ecx
	.loc	23 59 14 is_stmt 0      # ./quickodualpivot.h:59:14
	movl	%ecx, (%r15,%rbp,4)
	.loc	23 60 16 is_stmt 1      # ./quickodualpivot.h:60:16
	cmovll	%ebx, %edi
.Ltmp1340:
	.loc	23 60 14 is_stmt 0      # ./quickodualpivot.h:60:14
	movl	%edi, (%r15,%rdx,4)
.Ltmp1341:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- undef
	.loc	23 65 7 is_stmt 1       # ./quickodualpivot.h:65:7
	subq	%rax, %rbp
.Ltmp1342:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $rbp
	.loc	23 66 7                 # ./quickodualpivot.h:66:7
	subq	%rax, %rdx
	.loc	23 68 6                 # ./quickodualpivot.h:68:6
	incq	%rdx
.Ltmp1343:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rdx
	.loc	23 43 12                # ./quickodualpivot.h:43:12
	cmpq	%rbp, %rdx
	.loc	23 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB30_5
	jmp	.LBB30_6
.Ltmp1344:
.LBB30_7:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	23 97 1 is_stmt 1       # ./quickodualpivot.h:97:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1345:
.LBB30_8:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	23 94 7                 # ./quickodualpivot.h:94:7
	movq	%r15, %rdi
	movq	%r14, %rdx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1346:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1347:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1348:
.Lfunc_end30:
	.size	sort_quick_optimized_dual, .Lfunc_end30-sort_quick_optimized_dual
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi   # -- Begin function partition_quick_multi
	.p2align	4, 0x90
	.type	partition_quick_multi,@function
partition_quick_multi:                  # @partition_quick_multi
.Lfunc_begin31:
	.loc	5 21 0                  # ./quickomulti.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp1349:
	#DEBUG_VALUE: partition_quick_multi:pivots <- undef
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	5 27 27 prologue_end    # ./quickomulti.h:27:27
	movq	%rdx, %r9
	subq	%rsi, %r9
.Ltmp1350:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	jle	.LBB31_1
.Ltmp1351:
# %bb.7:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	vmovdqu	(%rdi,%rsi,4), %ymm0
.Ltmp1352:
	.loc	5 27 3                  # ./quickomulti.h:27:3
	vmovd	%xmm0, %r10d
	leaq	1(%rsi), %r11
.Ltmp1353:
	.p2align	4, 0x90
.LBB31_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	5 28 28 is_stmt 1       # ./quickomulti.h:28:28
	vmovd	%r10d, %xmm1
	vpbroadcastd	%xmm1, %ymm1
.Ltmp1354:
	#DEBUG_VALUE: currentValue <- $ymm1
	.loc	5 29 24                 # ./quickomulti.h:29:24
	vpcmpgtd	%ymm1, %ymm0, %ymm1
.Ltmp1355:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.file	24 "/home/peeters/bachelor" "./simd.h"
	.loc	24 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm1, %xmm2
	.loc	24 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1356:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	24 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm2, %xmm1, %xmm1
.Ltmp1357:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1358:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1359:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %eax
.Ltmp1360:
	.loc	5 31 23                 # ./quickomulti.h:31:23
	addl	$8, %eax
.Ltmp1361:
	#DEBUG_VALUE: index <- $rax
	.loc	5 32 9                  # ./quickomulti.h:32:9
	movslq	(%rcx,%rax,4), %rbx
	.loc	5 32 25 is_stmt 0       # ./quickomulti.h:32:25
	movl	%r10d, (%r8,%rbx,4)
	.loc	5 33 20 is_stmt 1       # ./quickomulti.h:33:20
	incl	(%rcx,%rax,4)
.Ltmp1362:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 27 27                 # ./quickomulti.h:27:27
	cmpq	%r11, %rdx
.Ltmp1363:
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	je	.LBB31_1
.Ltmp1364:
# %bb.9:                                #   in Loop: Header=BB31_8 Depth=1
	#DEBUG_VALUE: index <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 28 46 is_stmt 1       # ./quickomulti.h:28:46
	movl	(%rdi,%r11,4), %r10d
.Ltmp1365:
	.loc	5 27 3                  # ./quickomulti.h:27:3
	incq	%r11
	jmp	.LBB31_8
.Ltmp1366:
.LBB31_1:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 0 3 is_stmt 0         # ./quickomulti.h:0:3
	xorl	%r11d, %r11d
	jmp	.LBB31_2
.Ltmp1367:
	.p2align	4, 0x90
.LBB31_5:                               #   in Loop: Header=BB31_2 Depth=1
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	subl	%r10d, %edx
	movl	%edx, (%rcx,%r11,4)
.Ltmp1368:
	.loc	5 38 43                 # ./quickomulti.h:38:43
	incq	%r11
.Ltmp1369:
	#DEBUG_VALUE: index <- $r11
	.loc	5 38 33 is_stmt 0       # ./quickomulti.h:38:33
	cmpq	$9, %r11
.Ltmp1370:
	.loc	5 38 3                  # ./quickomulti.h:38:3
	je	.LBB31_6
.Ltmp1371:
.LBB31_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB31_10 Depth 2
                                        #     Child Loop BB31_4 Depth 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 39 23 is_stmt 1       # ./quickomulti.h:39:23
	movq	%r11, %r10
	imulq	%r9, %r10
.Ltmp1372:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	movq	%rdx, %rbx
	addq	$-7, %rbx
.Ltmp1373:
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rax
.Ltmp1374:
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rbx, %r10
.Ltmp1375:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_3
.Ltmp1376:
	.p2align	4, 0x90
.LBB31_10:                              #   Parent Loop BB31_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r8,%rax,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rsi
.Ltmp1377:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rax
.Ltmp1378:
	#DEBUG_VALUE: j <- $rax
	.loc	5 40 16 is_stmt 0       # ./quickomulti.h:40:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 40 31                 # ./quickomulti.h:40:31
	leaq	-7(%rdx), %rbx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rbx, %rax
.Ltmp1379:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB31_10
.Ltmp1380:
.LBB31_3:                               #   in Loop: Header=BB31_2 Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 45 16 is_stmt 1       # ./quickomulti.h:45:16
	movslq	%edx, %rbx
	.loc	5 45 14 is_stmt 0       # ./quickomulti.h:45:14
	cmpq	%rbx, %rax
.Ltmp1381:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_5
.Ltmp1382:
	.p2align	4, 0x90
.LBB31_4:                               #   Parent Loop BB31_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r8,%rax,4), %edx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%edx, (%rdi,%rsi,4)
	.loc	5 47 17 is_stmt 1       # ./quickomulti.h:47:17
	incq	%rsi
.Ltmp1383:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 45 33                 # ./quickomulti.h:45:33
	incq	%rax
.Ltmp1384:
	#DEBUG_VALUE: j <- $rax
	.loc	5 45 16 is_stmt 0       # ./quickomulti.h:45:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rdx, %rax
.Ltmp1385:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jl	.LBB31_4
	jmp	.LBB31_5
.Ltmp1386:
.LBB31_6:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 56 1 is_stmt 1        # ./quickomulti.h:56:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1387:
.Lfunc_end31:
	.size	partition_quick_multi, .Lfunc_end31-partition_quick_multi
	.cfi_endproc
	.file	25 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h"
                                        # -- End function
	.globl	hsum_8x32               # -- Begin function hsum_8x32
	.p2align	4, 0x90
	.type	hsum_8x32,@function
hsum_8x32:                              # @hsum_8x32
.Lfunc_begin32:
	.loc	24 16 0                 # ./simd.h:16:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: hsum_8x32:v <- $ymm0
	#DEBUG_VALUE: hsum_8x32:v <- $ymm0
	.loc	24 18 48 prologue_end   # ./simd.h:18:48
	vextracti128	$1, %ymm0, %xmm1
	.loc	24 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1388:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	24 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
	vpaddd	%xmm1, %xmm0, %xmm0
.Ltmp1389:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp1390:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1391:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %eax
.Ltmp1392:
	.loc	24 19 3                 # ./simd.h:19:3
	vzeroupper
.Ltmp1393:
	retq
.Ltmp1394:
.Lfunc_end32:
	.size	hsum_8x32, .Lfunc_end32-hsum_8x32
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function sort_quick_multi_h
.LCPI33_0:
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.text
	.globl	sort_quick_multi_h
	.p2align	4, 0x90
	.type	sort_quick_multi_h,@function
sort_quick_multi_h:                     # @sort_quick_multi_h
.Lfunc_begin33:
	.loc	5 58 0                  # ./quickomulti.h:58:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	5 60 11 prologue_end    # ./quickomulti.h:60:11
	movq	%rdx, %r8
	subq	%rsi, %r8
.Ltmp1395:
	.loc	5 60 7 is_stmt 0        # ./quickomulti.h:60:7
	jle	.LBB33_242
.Ltmp1396:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	.loc	5 0 7                   # ./quickomulti.h:0:7
	movq	%rdi, %r14
.Ltmp1397:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 61 20 is_stmt 1       # ./quickomulti.h:61:20
	cmpq	$51, %r8
.Ltmp1398:
	.loc	5 61 9 is_stmt 0        # ./quickomulti.h:61:9
	jl	.LBB33_5
.Ltmp1399:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 9                   # ./quickomulti.h:0:9
	movq	%rcx, %r12
.Ltmp1400:
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	.loc	5 62 18 is_stmt 1       # ./quickomulti.h:62:18
	leal	1(%r8), %eax
.Ltmp1401:
	#DEBUG_VALUE: size <- $eax
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	$0, 32(%rsp)
	movl	%eax, 36(%rsp)
	.loc	5 63 49 is_stmt 0       # ./quickomulti.h:63:49
	vmovd	%eax, %xmm0
	vpbroadcastd	%xmm0, %xmm0
	vpmulld	.LCPI33_0(%rip), %xmm0, %xmm0
	.loc	5 63 23                 # ./quickomulti.h:63:23
	vmovdqu	%xmm0, 40(%rsp)
	.loc	5 64 39 is_stmt 1       # ./quickomulti.h:64:39
	leal	2(%r8,%r8), %ecx
	leal	(%rcx,%rcx,2), %ecx
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	%ecx, 56(%rsp)
	.loc	5 64 49                 # ./quickomulti.h:64:49
	leal	8(,%r8,8), %ecx
	movl	%ecx, %edi
	subl	%eax, %edi
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	%edi, 60(%rsp)
	movl	%ecx, 64(%rsp)
.Ltmp1402:
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: partition_quick_multi:targets <- undef
	#DEBUG_VALUE: partition_quick_multi:high <- undef
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	.loc	5 22 23                 # ./quickomulti.h:22:23
	incq	%r8
.Ltmp1403:
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	.loc	5 23 20                 # ./quickomulti.h:23:20
	vmovdqu	(%r14,%rsi,4), %ymm0
.Ltmp1404:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:pivots <- undef
	.loc	5 27 3                  # ./quickomulti.h:27:3
	vmovdqu	(%r14,%rsi,4), %xmm1
	vmovd	%xmm1, %ecx
	movq	%rsi, %rax
.Ltmp1405:
	.p2align	4, 0x90
.LBB33_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 28 28                 # ./quickomulti.h:28:28
	vmovd	%ecx, %xmm1
	vpbroadcastd	%xmm1, %ymm1
.Ltmp1406:
	#DEBUG_VALUE: currentValue <- $ymm1
	.loc	5 29 24                 # ./quickomulti.h:29:24
	vpcmpgtd	%ymm1, %ymm0, %ymm1
.Ltmp1407:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	24 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm1, %xmm2
	.loc	24 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1408:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	24 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm2, %xmm1, %xmm1
.Ltmp1409:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1410:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1411:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %edi
.Ltmp1412:
	.loc	5 31 23                 # ./quickomulti.h:31:23
	addl	$8, %edi
.Ltmp1413:
	#DEBUG_VALUE: index <- $rdi
	.loc	5 32 9                  # ./quickomulti.h:32:9
	movslq	32(%rsp,%rdi,4), %rbp
	.loc	5 32 25 is_stmt 0       # ./quickomulti.h:32:25
	movl	%ecx, (%r12,%rbp,4)
	.loc	5 33 20 is_stmt 1       # ./quickomulti.h:33:20
	leal	1(%rbp), %ecx
	movl	%ecx, 32(%rsp,%rdi,4)
.Ltmp1414:
	#DEBUG_VALUE: j <- undef
	.loc	5 27 27                 # ./quickomulti.h:27:27
	cmpq	%rax, %rdx
.Ltmp1415:
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	je	.LBB33_6
.Ltmp1416:
# %bb.4:                                #   in Loop: Header=BB33_3 Depth=1
	#DEBUG_VALUE: index <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 28 46 is_stmt 1       # ./quickomulti.h:28:46
	movl	4(%r14,%rax,4), %ecx
.Ltmp1417:
	.loc	5 0 0 is_stmt 0         # ./quickomulti.h:0:0
	incq	%rax
.Ltmp1418:
	#DEBUG_VALUE: j <- $rax
	jmp	.LBB33_3
.Ltmp1419:
.LBB33_5:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 75 7 is_stmt 1        # ./quickomulti.h:75:7
	movq	%r14, %rdi
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1420:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1421:
.LBB33_6:
	.cfi_def_cfa_offset 176
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	32(%rsp), %rcx
.Ltmp1422:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	cmpq	$8, %rcx
	movq	%rcx, 72(%rsp)          # 8-byte Spill
.Ltmp1423:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_10
.Ltmp1424:
# %bb.7:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	leaq	-7(%rcx), %rax
	.loc	5 40 5                  # ./quickomulti.h:40:5
	leaq	(%r14,%rsi,4), %rcx
	xorl	%edi, %edi
.Ltmp1425:
	.p2align	4, 0x90
.LBB33_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%rcx,%rdi,4)
.Ltmp1426:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rdi
.Ltmp1427:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 14 is_stmt 0       # ./quickomulti.h:40:14
	cmpq	%rax, %rdi
.Ltmp1428:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB33_8
.Ltmp1429:
# %bb.9:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 16 is_stmt 1       # ./quickomulti.h:45:16
	leaq	(%rsi,%rdi), %rax
	movq	72(%rsp), %rcx          # 8-byte Reload
	#DEBUG_VALUE: j <- $rdi
.Ltmp1430:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 0       # ./quickomulti.h:45:14
	cmpq	%rcx, %rdi
.Ltmp1431:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jl	.LBB33_11
	jmp	.LBB33_32
.Ltmp1432:
.LBB33_10:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%edi, %edi
	movq	%rsi, %rax
.Ltmp1433:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rcx, %rdi
.Ltmp1434:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_32
.Ltmp1435:
.LBB33_11:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%rcx, %r10
	subq	%rdi, %r10
	cmpq	$31, %r10
	jbe	.LBB33_24
.Ltmp1436:
# %bb.12:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rcx, %rbx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_15
.Ltmp1437:
# %bb.13:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jae	.LBB33_15
.Ltmp1438:
# %bb.14:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rcx
	jmp	.LBB33_24
.Ltmp1439:
.LBB33_15:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r11d
	andl	$3, %r11d
	cmpq	$96, %rcx
	jae	.LBB33_17
.Ltmp1440:
# %bb.16:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebp, %ebp
	jmp	.LBB33_19
.Ltmp1441:
.LBB33_17:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r11, %r15
	leaq	(%r12,%rdi,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%ebp, %ebp
.Ltmp1442:
	.p2align	4, 0x90
.LBB33_18:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rcx,%rbp,4), %ymm0
	vmovups	-448(%rcx,%rbp,4), %ymm1
	vmovups	-416(%rcx,%rbp,4), %ymm2
	vmovups	-384(%rcx,%rbp,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rbp,4)
	vmovups	%ymm1, -448(%rbx,%rbp,4)
	vmovups	%ymm2, -416(%rbx,%rbp,4)
	vmovups	%ymm3, -384(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rcx,%rbp,4), %ymm0
	vmovups	-320(%rcx,%rbp,4), %ymm1
	vmovups	-288(%rcx,%rbp,4), %ymm2
	vmovups	-256(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rbp,4)
	vmovups	%ymm1, -320(%rbx,%rbp,4)
	vmovups	%ymm2, -288(%rbx,%rbp,4)
	vmovups	%ymm3, -256(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rcx,%rbp,4), %ymm0
	vmovups	-192(%rcx,%rbp,4), %ymm1
	vmovups	-160(%rcx,%rbp,4), %ymm2
	vmovups	-128(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rbp,4)
	vmovups	%ymm1, -192(%rbx,%rbp,4)
	vmovups	%ymm2, -160(%rbx,%rbp,4)
	vmovups	%ymm3, -128(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rcx,%rbp,4), %ymm0
	vmovdqu	-64(%rcx,%rbp,4), %ymm1
	vmovdqu	-32(%rcx,%rbp,4), %ymm2
	vmovups	(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rbp,4)
	vmovdqu	%ymm1, -64(%rbx,%rbp,4)
	vmovdqu	%ymm2, -32(%rbx,%rbp,4)
	vmovups	%ymm3, (%rbx,%rbp,4)
	subq	$-128, %rbp
	addq	$-4, %r15
	jne	.LBB33_18
.Ltmp1443:
.LBB33_19:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r11, %r11
	je	.LBB33_22
.Ltmp1444:
# %bb.20:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbp), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbp
	leaq	(%r12,%rbp,4), %rbx
	negq	%r11
	movl	$96, %ebp
.Ltmp1445:
	.p2align	4, 0x90
.LBB33_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r11
	jne	.LBB33_21
.Ltmp1446:
.LBB33_22:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1447:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r10
	je	.LBB33_32
.Ltmp1448:
# %bb.23:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1449:
	movq	72(%rsp), %rcx          # 8-byte Reload
.Ltmp1450:
.LBB33_24:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ecx, %r15d
	subl	%edi, %r15d
	movq	%rdi, %r9
	notq	%r9
	addq	%rcx, %r9
	andq	$7, %r15
	je	.LBB33_28
.Ltmp1451:
# %bb.25:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r12,%rdi,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%r15
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1452:
	.p2align	4, 0x90
.LBB33_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r11,%rcx)
.Ltmp1453:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r15
	jne	.LBB33_26
.Ltmp1454:
# %bb.27:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	subq	%rbx, %rdi
	subq	%rbx, %rax
.Ltmp1455:
.LBB33_28:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$7, %r9
	jb	.LBB33_32
.Ltmp1456:
# %bb.29:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	72(%rsp), %r9           # 8-byte Reload
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1457:
	.p2align	4, 0x90
.LBB33_30:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1458:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1459:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_30
.Ltmp1460:
# %bb.31:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 40 16 is_stmt 1       # ./quickomulti.h:40:16
	addq	%rdi, %rax
.Ltmp1461:
.LBB33_32:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	movslq	36(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r8
.Ltmp1462:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_37
.Ltmp1463:
# %bb.33:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %r9
	.loc	5 40 5                  # ./quickomulti.h:40:5
	leaq	(%rcx,%rsi), %rbx
	subq	%rdx, %rbx
	addq	$-2, %rbx
	movl	%ebx, %ebp
	shrl	$3, %ebp
	incl	%ebp
	andq	$7, %rbp
	je	.LBB33_38
.Ltmp1464:
# %bb.34:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	negq	%rbp
	movq	%r8, %rdi
.Ltmp1465:
	.p2align	4, 0x90
.LBB33_35:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1466:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rdi
.Ltmp1467:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	incq	%rbp
	jne	.LBB33_35
.Ltmp1468:
# %bb.36:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$56, %rbx
	movq	%r9, %rbx
	jae	.LBB33_39
	jmp	.LBB33_40
.Ltmp1469:
.LBB33_37:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r8, %rdi
	jmp	.LBB33_40
.Ltmp1470:
.LBB33_38:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%r8, %rdi
.Ltmp1471:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	cmpq	$56, %rbx
	movq	%r9, %rbx
	jb	.LBB33_40
.Ltmp1472:
	.p2align	4, 0x90
.LBB33_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovups	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, (%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	32(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 32(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	64(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 64(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	96(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 96(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	128(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 128(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	160(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 160(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	192(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 192(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovdqu	224(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, 224(%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$64, %rax
.Ltmp1473:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$64, %rdi
.Ltmp1474:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 14 is_stmt 0       # ./quickomulti.h:40:14
	cmpq	%rcx, %rdi
.Ltmp1475:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB33_39
.Ltmp1476:
.LBB33_40:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
.Ltmp1477:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jge	.LBB33_61
.Ltmp1478:
# %bb.41:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%rbx, %r10
	subq	%rdi, %r10
	cmpq	$32, %r10
	jb	.LBB33_53
.Ltmp1479:
# %bb.42:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r14,%rax,4), %r11
	leaq	(%r12,%rdi,4), %r15
	leaq	(%r12,%rbx,4), %rcx
	cmpq	%rcx, %r11
	jae	.LBB33_44
.Ltmp1480:
# %bb.43:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	cmpq	%rcx, %r15
	jb	.LBB33_53
.Ltmp1481:
.LBB33_44:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 112(%rsp)         # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r10, %rcx
	andq	$-32, %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	addq	$-32, %rcx
	movq	%rcx, %rbp
	shrq	$5, %rbp
	incq	%rbp
	movl	%ebp, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB33_46
.Ltmp1482:
# %bb.45:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ecx, %ecx
	jmp	.LBB33_48
.Ltmp1483:
.LBB33_46:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %rbp
	leaq	(%r12,%rdi,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %r9
	addq	$480, %r9               # imm = 0x1E0
	xorl	%ecx, %ecx
.Ltmp1484:
	.p2align	4, 0x90
.LBB33_47:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbx,%rcx,4), %ymm0
	vmovups	-448(%rbx,%rcx,4), %ymm1
	vmovups	-416(%rbx,%rcx,4), %ymm2
	vmovups	-384(%rbx,%rcx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%r9,%rcx,4)
	vmovups	%ymm1, -448(%r9,%rcx,4)
	vmovups	%ymm2, -416(%r9,%rcx,4)
	vmovups	%ymm3, -384(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbx,%rcx,4), %ymm0
	vmovups	-320(%rbx,%rcx,4), %ymm1
	vmovups	-288(%rbx,%rcx,4), %ymm2
	vmovups	-256(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%r9,%rcx,4)
	vmovups	%ymm1, -320(%r9,%rcx,4)
	vmovups	%ymm2, -288(%r9,%rcx,4)
	vmovups	%ymm3, -256(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbx,%rcx,4), %ymm0
	vmovups	-192(%rbx,%rcx,4), %ymm1
	vmovups	-160(%rbx,%rcx,4), %ymm2
	vmovups	-128(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%r9,%rcx,4)
	vmovups	%ymm1, -192(%r9,%rcx,4)
	vmovups	%ymm2, -160(%r9,%rcx,4)
	vmovups	%ymm3, -128(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rcx,4), %ymm0
	vmovdqu	-64(%rbx,%rcx,4), %ymm1
	vmovdqu	-32(%rbx,%rcx,4), %ymm2
	vmovups	(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r9,%rcx,4)
	vmovdqu	%ymm1, -64(%r9,%rcx,4)
	vmovdqu	%ymm2, -32(%r9,%rcx,4)
	vmovups	%ymm3, (%r9,%rcx,4)
	subq	$-128, %rcx
	addq	$-4, %rbp
	jne	.LBB33_47
.Ltmp1485:
.LBB33_48:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_51
.Ltmp1486:
# %bb.49:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	96(,%rcx,4), %rcx
	negq	%r13
.Ltmp1487:
	.p2align	4, 0x90
.LBB33_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%r15,%rcx), %ymm0
	vmovdqu	-64(%r15,%rcx), %ymm1
	vmovdqu	-32(%r15,%rcx), %ymm2
	vmovups	(%r15,%rcx), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r11,%rcx)
	vmovdqu	%ymm1, -64(%r11,%rcx)
	vmovdqu	%ymm2, -32(%r11,%rcx)
	vmovups	%ymm3, (%r11,%rcx)
	subq	$-128, %rcx
	incq	%r13
	jne	.LBB33_50
.Ltmp1488:
.LBB33_51:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	movq	16(%rsp), %rcx          # 8-byte Reload
	addq	%rcx, %rax
.Ltmp1489:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%rcx, %r10
	movq	112(%rsp), %rbx         # 8-byte Reload
	je	.LBB33_61
.Ltmp1490:
# %bb.52:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%rcx, %rdi
.Ltmp1491:
.LBB33_53:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r15d
	subl	%edi, %r15d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r15
	je	.LBB33_57
.Ltmp1492:
# %bb.54:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %r13
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%r15
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1493:
	.p2align	4, 0x90
.LBB33_55:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r11,%rcx)
.Ltmp1494:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r15
	jne	.LBB33_55
.Ltmp1495:
# %bb.56:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	%r13, %rbx
.Ltmp1496:
.LBB33_57:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$7, %r9
	jb	.LBB33_61
.Ltmp1497:
# %bb.58:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r10
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1498:
	.p2align	4, 0x90
.LBB33_59:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1499:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1500:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_59
.Ltmp1501:
# %bb.60:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r10, %rbx
.Ltmp1502:
.LBB33_61:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r8d, %ebx
	movl	%ebx, 36(%rsp)
.Ltmp1503:
	#DEBUG_VALUE: index <- 2
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8), %r10
.Ltmp1504:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	40(%rsp), %r15
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r15), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbx, 112(%rsp)         # 8-byte Spill
.Ltmp1505:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_65
.Ltmp1506:
# %bb.62:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rdx,%rdx), %rdi
	leaq	(%rsi,%rsi), %rbp
	subq	%rbp, %rdi
	addq	$2, %rdi
.Ltmp1507:
	.p2align	4, 0x90
.LBB33_63:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1508:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1509:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_63
.Ltmp1510:
# %bb.64:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r15, %rdi
	movq	%rsi, 24(%rsp)          # 8-byte Spill
.Ltmp1511:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_66
	jmp	.LBB33_86
.Ltmp1512:
.LBB33_65:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1513:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r15, %rdi
	movq	%rsi, 24(%rsp)          # 8-byte Spill
.Ltmp1514:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_86
.Ltmp1515:
.LBB33_66:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%r15, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB33_78
.Ltmp1516:
# %bb.67:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r15,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_69
.Ltmp1517:
# %bb.68:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%r15), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB33_78
.Ltmp1518:
.LBB33_69:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r15, 8(%rsp)           # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rbx
	movq	%rbx, %rcx
	shrq	$5, %rcx
	incq	%rcx
	movl	%ecx, %r13d
	andl	$3, %r13d
	cmpq	$96, %rbx
	jae	.LBB33_71
.Ltmp1519:
# %bb.70:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB33_73
.Ltmp1520:
.LBB33_71:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %rcx
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %r15
	addq	$480, %r15              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1521:
	.p2align	4, 0x90
.LBB33_72:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%r15,%rbx,4)
	vmovups	%ymm1, -448(%r15,%rbx,4)
	vmovups	%ymm2, -416(%r15,%rbx,4)
	vmovups	%ymm3, -384(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%r15,%rbx,4)
	vmovups	%ymm1, -320(%r15,%rbx,4)
	vmovups	%ymm2, -288(%r15,%rbx,4)
	vmovups	%ymm3, -256(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%r15,%rbx,4)
	vmovups	%ymm1, -192(%r15,%rbx,4)
	vmovups	%ymm2, -160(%r15,%rbx,4)
	vmovups	%ymm3, -128(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r15,%rbx,4)
	vmovdqu	%ymm1, -64(%r15,%rbx,4)
	vmovdqu	%ymm2, -32(%r15,%rbx,4)
	vmovups	%ymm3, (%r15,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %rcx
	jne	.LBB33_72
.Ltmp1522:
.LBB33_73:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_76
.Ltmp1523:
# %bb.74:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1524:
	.p2align	4, 0x90
.LBB33_75:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_75
.Ltmp1525:
.LBB33_76:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1526:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	je	.LBB33_86
.Ltmp1527:
# %bb.77:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1528:
.LBB33_78:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r15d, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%r15, %r9
	andq	$7, %r13
	je	.LBB33_82
.Ltmp1529:
# %bb.79:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r15, %rsi
.Ltmp1530:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1531:
	.p2align	4, 0x90
.LBB33_80:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1532:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB33_80
.Ltmp1533:
# %bb.81:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	%rsi, %r15
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1534:
.LBB33_82:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB33_86
.Ltmp1535:
# %bb.83:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r15, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1536:
	.p2align	4, 0x90
.LBB33_84:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1537:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1538:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_84
.Ltmp1539:
# %bb.85:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
.Ltmp1540:
.LBB33_86:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %r15d
	movl	%r15d, 40(%rsp)
.Ltmp1541:
	#DEBUG_VALUE: index <- 3
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8,2), %r10
.Ltmp1542:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	44(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
.Ltmp1543:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_90
.Ltmp1544:
# %bb.87:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx,2), %rdi
	leaq	(%rsi,%rsi,2), %rbp
	subq	%rbp, %rdi
	addq	$3, %rdi
.Ltmp1545:
	.p2align	4, 0x90
.LBB33_88:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1546:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1547:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_88
.Ltmp1548:
# %bb.89:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r15, 8(%rsp)           # 8-byte Spill
.Ltmp1549:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_91
	jmp	.LBB33_111
.Ltmp1550:
.LBB33_90:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1551:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r15, 8(%rsp)           # 8-byte Spill
.Ltmp1552:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_111
.Ltmp1553:
.LBB33_91:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbx, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB33_103
.Ltmp1554:
# %bb.92:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_94
.Ltmp1555:
# %bb.93:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB33_103
.Ltmp1556:
.LBB33_94:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 104(%rsp)         # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB33_96
.Ltmp1557:
# %bb.95:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB33_98
.Ltmp1558:
.LBB33_96:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1559:
	.p2align	4, 0x90
.LBB33_97:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB33_97
.Ltmp1560:
.LBB33_98:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_101
.Ltmp1561:
# %bb.99:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1562:
	.p2align	4, 0x90
.LBB33_100:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_100
.Ltmp1563:
.LBB33_101:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1564:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	104(%rsp), %rbx         # 8-byte Reload
	je	.LBB33_111
.Ltmp1565:
# %bb.102:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1566:
.LBB33_103:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r13
	je	.LBB33_107
.Ltmp1567:
# %bb.104:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1568:
	.p2align	4, 0x90
.LBB33_105:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1569:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB33_105
.Ltmp1570:
# %bb.106:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbx
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1571:
.LBB33_107:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB33_111
.Ltmp1572:
# %bb.108:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1573:
	.p2align	4, 0x90
.LBB33_109:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1574:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1575:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_109
.Ltmp1576:
# %bb.110:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbx
.Ltmp1577:
.LBB33_111:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebx
	movl	%ebx, 44(%rsp)
.Ltmp1578:
	#DEBUG_VALUE: index <- 4
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(,%r8,4), %r10
.Ltmp1579:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	48(%rsp), %rbp
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbp), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbx, 104(%rsp)         # 8-byte Spill
.Ltmp1580:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_119
.Ltmp1581:
# %bb.112:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(,%rdx,4), %rdi
	movq	%rbp, %rbx
	movq	%rsi, %r9
	leaq	(,%rsi,4), %rbp
	subq	%rbp, %rdi
	movq	%rbx, %rbp
	addq	$4, %rdi
.Ltmp1582:
	.p2align	4, 0x90
.LBB33_113:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1583:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1584:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_113
.Ltmp1585:
# %bb.114:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbp, %rdi
.Ltmp1586:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jge	.LBB33_120
	jmp	.LBB33_115
.Ltmp1587:
.LBB33_119:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rsi, %r9
	movq	%r10, %rdi
.Ltmp1588:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbp, %rdi
.Ltmp1589:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_120
.Ltmp1590:
.LBB33_115:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbp, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB33_131
.Ltmp1591:
# %bb.116:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	movq	%rbp, %rsi
	leaq	(%r12,%rbp,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_121
.Ltmp1592:
# %bb.117:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rsi), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jae	.LBB33_121
.Ltmp1593:
# %bb.118:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rsi, %rbp
	jmp	.LBB33_131
.Ltmp1594:
.LBB33_121:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rsi, 96(%rsp)          # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %rsi
	andq	$-32, %rsi
	leaq	-32(%rsi), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB33_123
.Ltmp1595:
# %bb.122:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB33_125
.Ltmp1596:
.LBB33_123:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1597:
	.p2align	4, 0x90
.LBB33_124:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB33_124
.Ltmp1598:
.LBB33_125:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_128
.Ltmp1599:
# %bb.126:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1600:
	.p2align	4, 0x90
.LBB33_127:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_127
.Ltmp1601:
.LBB33_128:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%rsi, %rax
.Ltmp1602:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%rsi, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	96(%rsp), %rbp          # 8-byte Reload
	jne	.LBB33_130
.Ltmp1603:
.LBB33_120:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%r9, %rsi
	jmp	.LBB33_139
.Ltmp1604:
.LBB33_130:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	addq	%rsi, %rdi
.Ltmp1605:
.LBB33_131:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebp, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbp, %r9
	andq	$7, %r13
	je	.LBB33_135
.Ltmp1606:
# %bb.132:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbp, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1607:
	.p2align	4, 0x90
.LBB33_133:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1608:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB33_133
.Ltmp1609:
# %bb.134:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbp
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1610:
.LBB33_135:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB33_139
.Ltmp1611:
# %bb.136:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbp, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbp, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1612:
	.p2align	4, 0x90
.LBB33_137:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1613:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1614:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_137
.Ltmp1615:
# %bb.138:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbp
.Ltmp1616:
.LBB33_139:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebp
	movl	%ebp, 48(%rsp)
.Ltmp1617:
	#DEBUG_VALUE: index <- 5
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8,4), %r10
.Ltmp1618:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	52(%rsp), %r9
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r9), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbp, 96(%rsp)          # 8-byte Spill
.Ltmp1619:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_143
.Ltmp1620:
# %bb.140:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx,4), %rdi
	leaq	(%rsi,%rsi,4), %rbp
	subq	%rbp, %rdi
	addq	$5, %rdi
.Ltmp1621:
	.p2align	4, 0x90
.LBB33_141:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1622:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1623:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_141
.Ltmp1624:
# %bb.142:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r9, %rdi
.Ltmp1625:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_144
	jmp	.LBB33_165
.Ltmp1626:
.LBB33_143:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1627:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r9, %rdi
.Ltmp1628:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_165
.Ltmp1629:
.LBB33_144:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	movq	%r9, 16(%rsp)           # 8-byte Spill
	jb	.LBB33_156
.Ltmp1630:
# %bb.145:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r9,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_147
.Ltmp1631:
# %bb.146:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%r9), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB33_156
.Ltmp1632:
.LBB33_147:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB33_149
.Ltmp1633:
# %bb.148:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB33_151
.Ltmp1634:
.LBB33_149:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1635:
	.p2align	4, 0x90
.LBB33_150:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB33_150
.Ltmp1636:
.LBB33_151:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_154
.Ltmp1637:
# %bb.152:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1638:
	.p2align	4, 0x90
.LBB33_153:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_153
.Ltmp1639:
.LBB33_154:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1640:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	je	.LBB33_164
.Ltmp1641:
# %bb.155:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1642:
	movq	16(%rsp), %r9           # 8-byte Reload
.Ltmp1643:
.LBB33_156:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r9d, %r13d
	subl	%edi, %r13d
	movq	%r9, %rcx
	movq	%rdi, %r9
	notq	%r9
	addq	%rcx, %r9
	andq	$7, %r13
	je	.LBB33_160
.Ltmp1644:
# %bb.157:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1645:
	.p2align	4, 0x90
.LBB33_158:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1646:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB33_158
.Ltmp1647:
# %bb.159:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp1648:
.LBB33_160:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	movq	16(%rsp), %r9           # 8-byte Reload
	jb	.LBB33_165
.Ltmp1649:
# %bb.161:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1650:
	.p2align	4, 0x90
.LBB33_162:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1651:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1652:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_162
.Ltmp1653:
# %bb.163:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
.Ltmp1654:
.LBB33_164:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 20 is_stmt 0        # ./quickomulti.h:0:20
	movq	16(%rsp), %r9           # 8-byte Reload
.Ltmp1655:
.LBB33_165:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 49 20                 # ./quickomulti.h:49:20
	subl	%r10d, %r9d
	movl	%r9d, 52(%rsp)
.Ltmp1656:
	#DEBUG_VALUE: index <- 6
	.loc	5 39 23 is_stmt 1       # ./quickomulti.h:39:23
	leaq	(%r8,%r8), %rcx
	leaq	(%rcx,%rcx,2), %r10
.Ltmp1657:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	56(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
.Ltmp1658:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_169
.Ltmp1659:
# %bb.166:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx), %rdi
	leaq	(%rdi,%rdi,2), %rdi
	leaq	(%rsi,%rsi), %rbp
	leaq	(%rbp,%rbp,2), %rbp
	subq	%rbp, %rdi
	addq	$6, %rdi
.Ltmp1660:
	.p2align	4, 0x90
.LBB33_167:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1661:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1662:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_167
.Ltmp1663:
# %bb.168:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r9, 16(%rsp)           # 8-byte Spill
.Ltmp1664:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_170
	jmp	.LBB33_190
.Ltmp1665:
.LBB33_169:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1666:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r9, 16(%rsp)           # 8-byte Spill
.Ltmp1667:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_190
.Ltmp1668:
.LBB33_170:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbx, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB33_182
.Ltmp1669:
# %bb.171:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB33_173
.Ltmp1670:
# %bb.172:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB33_182
.Ltmp1671:
.LBB33_173:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 88(%rsp)          # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB33_175
.Ltmp1672:
# %bb.174:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB33_177
.Ltmp1673:
.LBB33_175:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1674:
	.p2align	4, 0x90
.LBB33_176:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB33_176
.Ltmp1675:
.LBB33_177:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_180
.Ltmp1676:
# %bb.178:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1677:
	.p2align	4, 0x90
.LBB33_179:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_179
.Ltmp1678:
.LBB33_180:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1679:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	88(%rsp), %rbx          # 8-byte Reload
	je	.LBB33_190
.Ltmp1680:
# %bb.181:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1681:
.LBB33_182:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r13
	je	.LBB33_186
.Ltmp1682:
# %bb.183:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1683:
	.p2align	4, 0x90
.LBB33_184:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1684:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB33_184
.Ltmp1685:
# %bb.185:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbx
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1686:
.LBB33_186:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB33_190
.Ltmp1687:
# %bb.187:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1688:
	.p2align	4, 0x90
.LBB33_188:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1689:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1690:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_188
.Ltmp1691:
# %bb.189:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbx
.Ltmp1692:
.LBB33_190:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebx
	movl	%ebx, 56(%rsp)
.Ltmp1693:
	#DEBUG_VALUE: index <- 7
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(,%r8,8), %r9
	movq	%r9, %r11
	subq	%r8, %r11
.Ltmp1694:
	#DEBUG_VALUE: j <- $r11
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	60(%rsp), %r13
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r13), %rdi
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rdi, %r11
	movq	%rbx, 88(%rsp)          # 8-byte Spill
.Ltmp1695:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_194
.Ltmp1696:
# %bb.191:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(,%rdx,8), %rcx
	subq	%rdx, %rcx
	leaq	(,%rsi,8), %rbp
	movq	%rsi, %rbx
	subq	%rbp, %rbx
	addq	%rbx, %rcx
	addq	$7, %rcx
.Ltmp1697:
	.p2align	4, 0x90
.LBB33_192:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rcx,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1698:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rcx
	cmpq	%rdi, %rcx
.Ltmp1699:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_192
.Ltmp1700:
# %bb.193:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r13, %rcx
.Ltmp1701:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_195
	jmp	.LBB33_217
.Ltmp1702:
.LBB33_194:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r11, %rcx
.Ltmp1703:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r13, %rcx
.Ltmp1704:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_217
.Ltmp1705:
.LBB33_195:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %r10
	subq	%rcx, %r10
	cmpq	$32, %r10
	jb	.LBB33_196
.Ltmp1706:
# %bb.197:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rdi
	leaq	(%r12,%r13,4), %rbp
	cmpq	%rbp, %rdi
	jae	.LBB33_200
.Ltmp1707:
# %bb.198:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%r13), %rdi
	subq	%rcx, %rdi
	leaq	(%r14,%rdi,4), %rdi
	leaq	(%r12,%rcx,4), %rbp
	cmpq	%rdi, %rbp
	jae	.LBB33_200
.Ltmp1708:
.LBB33_196:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r9, %rsi
.Ltmp1709:
.LBB33_209:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %rdi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subl	%ecx, %r13d
	movq	%rcx, %r8
	notq	%r8
	movq	%rdi, %r9
	addq	%rdi, %r8
	andq	$7, %r13
	je	.LBB33_213
.Ltmp1710:
# %bb.210:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r12,%rcx,4), %r10
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%edi, %edi
	xorl	%ebx, %ebx
.Ltmp1711:
	.p2align	4, 0x90
.LBB33_211:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rdi), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rdi)
.Ltmp1712:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rdi
	cmpq	%rbx, %r13
	jne	.LBB33_211
.Ltmp1713:
# %bb.212:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rcx
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp1714:
.LBB33_213:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%r9, %r13
	movq	%rsi, %r9
	movq	24(%rsp), %rsi          # 8-byte Reload
	.loc	5 45 5                  # ./quickomulti.h:45:5
	cmpq	$7, %r8
	jb	.LBB33_217
.Ltmp1715:
# %bb.214:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %r8
	subq	%rcx, %r8
	leaq	(%r12,%rcx,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%ecx, %ecx
.Ltmp1716:
	.p2align	4, 0x90
.LBB33_215:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rcx,4), %edi
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%edi, -28(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -24(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -20(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -16(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -12(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -8(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -4(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, (%rbx,%rcx,4)
.Ltmp1717:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rcx
	cmpq	%rcx, %r8
.Ltmp1718:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_215
.Ltmp1719:
# %bb.216:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rcx, %rax
	jmp	.LBB33_217
.Ltmp1720:
.LBB33_200:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 20 is_stmt 0        # ./quickomulti.h:0:20
	movq	%r13, 80(%rsp)          # 8-byte Spill
.Ltmp1721:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	movq	%r10, %r8
.Ltmp1722:
	andq	$-32, %r8
	leaq	-32(%r8), %rdi
	movq	%rdi, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rdi
	jae	.LBB33_202
.Ltmp1723:
# %bb.201:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	xorl	%edi, %edi
	jmp	.LBB33_204
.Ltmp1724:
.LBB33_202:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rcx,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%edi, %edi
.Ltmp1725:
	.p2align	4, 0x90
.LBB33_203:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rdi,4), %ymm0
	vmovups	-448(%rbp,%rdi,4), %ymm1
	vmovups	-416(%rbp,%rdi,4), %ymm2
	vmovups	-384(%rbp,%rdi,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rdi,4)
	vmovups	%ymm1, -448(%rbx,%rdi,4)
	vmovups	%ymm2, -416(%rbx,%rdi,4)
	vmovups	%ymm3, -384(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rdi,4), %ymm0
	vmovups	-320(%rbp,%rdi,4), %ymm1
	vmovups	-288(%rbp,%rdi,4), %ymm2
	vmovups	-256(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rdi,4)
	vmovups	%ymm1, -320(%rbx,%rdi,4)
	vmovups	%ymm2, -288(%rbx,%rdi,4)
	vmovups	%ymm3, -256(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rdi,4), %ymm0
	vmovups	-192(%rbp,%rdi,4), %ymm1
	vmovups	-160(%rbp,%rdi,4), %ymm2
	vmovups	-128(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rdi,4)
	vmovups	%ymm1, -192(%rbx,%rdi,4)
	vmovups	%ymm2, -160(%rbx,%rdi,4)
	vmovups	%ymm3, -128(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rdi,4), %ymm0
	vmovdqu	-64(%rbp,%rdi,4), %ymm1
	vmovdqu	-32(%rbp,%rdi,4), %ymm2
	vmovups	(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rdi,4)
	vmovdqu	%ymm1, -64(%rbx,%rdi,4)
	vmovdqu	%ymm2, -32(%rbx,%rdi,4)
	vmovups	%ymm3, (%rbx,%rdi,4)
	subq	$-128, %rdi
	addq	$-4, %r15
	jne	.LBB33_203
.Ltmp1726:
.LBB33_204:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB33_207
.Ltmp1727:
# %bb.205:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rdi), %rbx
	leaq	(%r14,%rbx,4), %rbx
	addq	%rcx, %rdi
	leaq	(%r12,%rdi,4), %rdi
	negq	%r13
	movl	$96, %ebp
.Ltmp1728:
	.p2align	4, 0x90
.LBB33_206:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rdi,%rbp), %ymm0
	vmovdqu	-64(%rdi,%rbp), %ymm1
	vmovdqu	-32(%rdi,%rbp), %ymm2
	vmovups	(%rdi,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rbp)
	vmovdqu	%ymm1, -64(%rbx,%rbp)
	vmovdqu	%ymm2, -32(%rbx,%rbp)
	vmovups	%ymm3, (%rbx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB33_206
.Ltmp1729:
.LBB33_207:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r8, %rax
.Ltmp1730:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r8, %r10
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	80(%rsp), %r13          # 8-byte Reload
	jne	.LBB33_208
.Ltmp1731:
.LBB33_217:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 49 20                 # ./quickomulti.h:49:20
	subl	%r11d, %r13d
	movq	%r13, 80(%rsp)          # 8-byte Spill
	movl	%r13d, 60(%rsp)
.Ltmp1732:
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: index <- 8
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	64(%rsp), %r13
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r13), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r9
.Ltmp1733:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB33_221
.Ltmp1734:
# %bb.218:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	shlq	$3, %rdx
.Ltmp1735:
	leaq	(,%rsi,8), %rdi
	subq	%rdi, %rdx
	addq	$8, %rdx
.Ltmp1736:
	.p2align	4, 0x90
.LBB33_219:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdx,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1737:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdx
	cmpq	%rcx, %rdx
.Ltmp1738:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB33_219
.Ltmp1739:
# %bb.220:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r13, %rdx
.Ltmp1740:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB33_222
	jmp	.LBB33_241
.Ltmp1741:
.LBB33_221:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r9, %rdx
.Ltmp1742:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r13, %rdx
.Ltmp1743:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB33_241
.Ltmp1744:
.LBB33_222:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r13, %r10
	subq	%rdx, %r10
	cmpq	$32, %r10
	jb	.LBB33_234
.Ltmp1745:
# %bb.223:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r13,4), %rdi
	cmpq	%rdi, %rcx
	jae	.LBB33_225
.Ltmp1746:
# %bb.224:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%rax,%r13), %rcx
	subq	%rdx, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdx,4), %rdi
	cmpq	%rcx, %rdi
	jb	.LBB33_234
.Ltmp1747:
.LBB33_225:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r10, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rcx
	movq	%rcx, %rbp
	shrq	$5, %rbp
	incq	%rbp
	movl	%ebp, %r11d
	andl	$3, %r11d
	cmpq	$96, %rcx
	jae	.LBB33_227
.Ltmp1748:
# %bb.226:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%edi, %edi
	jmp	.LBB33_229
.Ltmp1749:
.LBB33_208:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %rsi
	addq	%r8, %rcx
.Ltmp1750:
	jmp	.LBB33_209
.Ltmp1751:
.LBB33_227:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r11, %rbp
	leaq	(%r12,%rdx,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%edi, %edi
.Ltmp1752:
	.p2align	4, 0x90
.LBB33_228:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rcx,%rdi,4), %ymm0
	vmovups	-448(%rcx,%rdi,4), %ymm1
	vmovups	-416(%rcx,%rdi,4), %ymm2
	vmovups	-384(%rcx,%rdi,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rdi,4)
	vmovups	%ymm1, -448(%rbx,%rdi,4)
	vmovups	%ymm2, -416(%rbx,%rdi,4)
	vmovups	%ymm3, -384(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rcx,%rdi,4), %ymm0
	vmovups	-320(%rcx,%rdi,4), %ymm1
	vmovups	-288(%rcx,%rdi,4), %ymm2
	vmovups	-256(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rdi,4)
	vmovups	%ymm1, -320(%rbx,%rdi,4)
	vmovups	%ymm2, -288(%rbx,%rdi,4)
	vmovups	%ymm3, -256(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rcx,%rdi,4), %ymm0
	vmovups	-192(%rcx,%rdi,4), %ymm1
	vmovups	-160(%rcx,%rdi,4), %ymm2
	vmovups	-128(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rdi,4)
	vmovups	%ymm1, -192(%rbx,%rdi,4)
	vmovups	%ymm2, -160(%rbx,%rdi,4)
	vmovups	%ymm3, -128(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rcx,%rdi,4), %ymm0
	vmovdqu	-64(%rcx,%rdi,4), %ymm1
	vmovdqu	-32(%rcx,%rdi,4), %ymm2
	vmovups	(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rdi,4)
	vmovdqu	%ymm1, -64(%rbx,%rdi,4)
	vmovdqu	%ymm2, -32(%rbx,%rdi,4)
	vmovups	%ymm3, (%rbx,%rdi,4)
	subq	$-128, %rdi
	addq	$-4, %rbp
	jne	.LBB33_228
.Ltmp1753:
.LBB33_229:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r11, %r11
	je	.LBB33_232
.Ltmp1754:
# %bb.230:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%rax,%rdi), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdx, %rdi
	leaq	(%r12,%rdi,4), %rdi
	negq	%r11
	movl	$96, %ebx
.Ltmp1755:
	.p2align	4, 0x90
.LBB33_231:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rdi,%rbx), %ymm0
	vmovdqu	-64(%rdi,%rbx), %ymm1
	vmovdqu	-32(%rdi,%rbx), %ymm2
	vmovups	(%rdi,%rbx), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx)
	vmovdqu	%ymm1, -64(%rcx,%rbx)
	vmovdqu	%ymm2, -32(%rcx,%rbx)
	vmovups	%ymm3, (%rcx,%rbx)
	subq	$-128, %rbx
	incq	%r11
	jne	.LBB33_231
.Ltmp1756:
.LBB33_232:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r8, %r10
	je	.LBB33_241
.Ltmp1757:
# %bb.233:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r8, %rdx
.Ltmp1758:
	addq	%r8, %rax
.Ltmp1759:
.LBB33_234:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r13d, %edi
	subl	%edx, %edi
	movq	%rdx, %r8
	notq	%r8
	addq	%r13, %r8
	andq	$7, %rdi
	je	.LBB33_238
.Ltmp1760:
# %bb.235:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%r12,%rdx,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%rdi
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
.Ltmp1761:
	.p2align	4, 0x90
.LBB33_236:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rbp), %ebx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebx, (%r11,%rbp)
.Ltmp1762:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rcx
	addq	$4, %rbp
	cmpq	%rcx, %rdi
	jne	.LBB33_236
.Ltmp1763:
# %bb.237:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	subq	%rcx, %rdx
	subq	%rcx, %rax
.Ltmp1764:
.LBB33_238:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	cmpq	$7, %r8
	jb	.LBB33_241
.Ltmp1765:
# %bb.239:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r13, %rcx
	subq	%rdx, %rcx
	leaq	(%r12,%rdx,4), %rdx
	addq	$28, %rdx
	leaq	(%r14,%rax,4), %rax
	addq	$28, %rax
	xorl	%edi, %edi
.Ltmp1766:
	.p2align	4, 0x90
.LBB33_240:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rdx,%rdi,4), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, -28(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -24(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -20(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -16(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -12(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -8(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -4(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1767:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %rcx
.Ltmp1768:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB33_240
.Ltmp1769:
.LBB33_241:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	subl	%r9d, %r13d
	movq	72(%rsp), %rbp          # 8-byte Reload
.Ltmp1770:
	.loc	5 71 46                 # ./quickomulti.h:71:46
	leaq	(%rsi,%rbp), %rdx
	decq	%rdx
.Ltmp1771:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: start <- $rsi
	#DEBUG_VALUE: index <- 9
	.loc	5 70 29                 # ./quickomulti.h:70:29
	addq	%rsi, %rbp
.Ltmp1772:
	#DEBUG_VALUE: end <- $rbp
	.loc	5 71 9                  # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r12, %rcx
	vzeroupper
	callq	sort_quick_multi_h
.Ltmp1773:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: start <- $rbp
	.loc	5 70 31                 # ./quickomulti.h:70:31
	movslq	112(%rsp), %rax         # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rax,%rbp), %rbx
.Ltmp1774:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbp), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1775:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	%r15d, %rax
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1776:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1777:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	104(%rsp), %rax         # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1778:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1779:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	96(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1780:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1781:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	16(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1782:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1783:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	88(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1784:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1785:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	80(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1786:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1787:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	%r13d, %rax
.Ltmp1788:
	#DEBUG_VALUE: end <- undef
	.loc	5 71 46                 # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1789:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: start <- undef
.LBB33_242:
	.loc	5 79 1 is_stmt 1        # ./quickomulti.h:79:1
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1790:
.Lfunc_end33:
	.size	sort_quick_multi_h, .Lfunc_end33-sort_quick_multi_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi        # -- Begin function sort_quick_multi
	.p2align	4, 0x90
	.type	sort_quick_multi,@function
sort_quick_multi:                       # @sort_quick_multi
.Lfunc_begin34:
	.loc	5 83 0                  # ./quickomulti.h:83:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp1791:
	#DEBUG_VALUE: sort_quick_multi:high <- $r14
	#DEBUG_VALUE: sort_quick_multi:low <- $r12
	#DEBUG_VALUE: sort_quick_multi:array <- $r15
	.loc	5 84 53 prologue_end    # ./quickomulti.h:84:53
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	5 84 60 is_stmt 0       # ./quickomulti.h:84:60
	shlq	$2, %rax
	leaq	(%rax,%rax,8), %rdi
	.loc	5 84 22                 # ./quickomulti.h:84:22
	callq	malloc
.Ltmp1792:
	movq	%rax, %rbx
.Ltmp1793:
	#DEBUG_VALUE: sort_quick_multi:tmp <- $rbx
	.loc	5 85 3 is_stmt 1        # ./quickomulti.h:85:3
	movq	%r15, %rdi
.Ltmp1794:
	#DEBUG_VALUE: sort_quick_multi:array <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_quick_multi_h
.Ltmp1795:
	.loc	5 86 3                  # ./quickomulti.h:86:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1796:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp1797:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1798:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp1799:
.Lfunc_end34:
	.size	sort_quick_multi, .Lfunc_end34-sort_quick_multi
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi_inplace # -- Begin function partition_quick_multi_inplace
	.p2align	4, 0x90
	.type	partition_quick_multi_inplace,@function
partition_quick_multi_inplace:          # @partition_quick_multi_inplace
.Lfunc_begin35:
	.file	26 "/home/peeters/bachelor" "./quickomultiinplace.h"
	.loc	26 20 0                 # ./quickomultiinplace.h:20:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $rcx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$48, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r15
	movq	%rdx, %r14
	movq	%rsi, %r13
	movq	%rdi, %rbx
.Ltmp1800:
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:low <- $r13
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	.loc	26 21 20 prologue_end   # ./quickomultiinplace.h:21:20
	vmovdqu	(%rdi,%rsi,4), %ymm0
.Ltmp1801:
	#DEBUG_VALUE: partition_quick_multi_inplace:pivots <- undef
	.loc	26 0 20 is_stmt 0       # ./quickomultiinplace.h:0:20
	vmovdqu	%ymm0, (%rsp)           # 32-byte Spill
	.loc	26 22 40 is_stmt 1      # ./quickomultiinplace.h:22:40
	leaq	7(%rsi), %r12
	.loc	26 22 3 is_stmt 0       # ./quickomultiinplace.h:22:3
	movq	%r12, %rdx
	vzeroupper
	callq	sort_quick_optimized
.Ltmp1802:
	.loc	26 0 3                  # ./quickomultiinplace.h:0:3
	vmovdqu	(%rsp), %ymm2           # 32-byte Reload
.Ltmp1803:
	.loc	26 24 24 is_stmt 1      # ./quickomultiinplace.h:24:24
	addq	$8, %r13
.Ltmp1804:
	#DEBUG_VALUE: j <- $r13
	.loc	26 24 31 is_stmt 0      # ./quickomultiinplace.h:24:31
	cmpq	%r14, %r13
.Ltmp1805:
	.loc	26 24 3                 # ./quickomultiinplace.h:24:3
	jg	.LBB35_2
.Ltmp1806:
	.p2align	4, 0x90
.LBB35_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r13
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	#DEBUG_VALUE: j <- undef
	.loc	26 26 46 is_stmt 1      # ./quickomultiinplace.h:26:46
	movl	4(%rbx,%r12,4), %ecx
	.loc	26 26 28 is_stmt 0      # ./quickomultiinplace.h:26:28
	vmovd	%ecx, %xmm0
	vpbroadcastd	%xmm0, %ymm0
.Ltmp1807:
	#DEBUG_VALUE: currentValue <- $ymm0
	.loc	26 27 24 is_stmt 1      # ./quickomultiinplace.h:27:24
	vpcmpgtd	%ymm0, %ymm2, %ymm0
.Ltmp1808:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	24 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm0, %xmm1
	.loc	24 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1809:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	24 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
	vpaddd	%xmm1, %xmm0, %xmm0
.Ltmp1810:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp1811:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1812:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %r8d
.Ltmp1813:
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	xorl	%esi, %esi
.Ltmp1814:
	.loc	26 29 23                # ./quickomultiinplace.h:29:23
	movl	%r8d, %eax
	addl	$8, %eax
.Ltmp1815:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: index <- $eax
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	sete	%sil
.Ltmp1816:
	#DEBUG_VALUE: x <- $ecx
	#DEBUG_VALUE: c <- $esi
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	(%r15), %rdi
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdi,4), %edi
.Ltmp1817:
	#DEBUG_VALUE: y <- $edi
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %edx
	cmovel	%edi, %edx
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edx, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovel	%ecx, %edi
.Ltmp1818:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	(%r15), %rcx
.Ltmp1819:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edi, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	addl	%esi, (%r15)
.Ltmp1820:
	#DEBUG_VALUE: i <- 1
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$2, %eax
.Ltmp1821:
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1822:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	4(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1823:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1824:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	4(%r15), %rcx
.Ltmp1825:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 4(%r15)
.Ltmp1826:
	#DEBUG_VALUE: i <- 2
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$3, %eax
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1827:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	8(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1828:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1829:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	8(%r15), %rcx
.Ltmp1830:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 8(%r15)
.Ltmp1831:
	#DEBUG_VALUE: i <- 3
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$4, %eax
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1832:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	12(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1833:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1834:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	12(%r15), %rcx
.Ltmp1835:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 12(%r15)
.Ltmp1836:
	#DEBUG_VALUE: i <- 4
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$5, %eax
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1837:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	16(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1838:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1839:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	16(%r15), %rcx
.Ltmp1840:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 16(%r15)
.Ltmp1841:
	#DEBUG_VALUE: i <- 5
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$6, %eax
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1842:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	20(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1843:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1844:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	20(%r15), %rcx
.Ltmp1845:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 20(%r15)
.Ltmp1846:
	#DEBUG_VALUE: i <- 6
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$7, %eax
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1847:
	#DEBUG_VALUE: x <- $ecx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	24(%r15), %rdx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1848:
	#DEBUG_VALUE: y <- $edx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1849:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	24(%r15), %rcx
.Ltmp1850:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 24(%r15)
.Ltmp1851:
	#DEBUG_VALUE: i <- 7
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	xorl	%ecx, %ecx
	cmpl	$-9, %r8d
	seta	%cl
.Ltmp1852:
	#DEBUG_VALUE: c <- $ecx
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %edx
.Ltmp1853:
	#DEBUG_VALUE: x <- $edx
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	28(%r15), %rsi
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rsi,4), %esi
.Ltmp1854:
	#DEBUG_VALUE: y <- $esi
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%edx, %edi
	cmoval	%esi, %edi
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edi, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmoval	%edx, %esi
.Ltmp1855:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	28(%r15), %rdx
.Ltmp1856:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%esi, (%rbx,%rdx,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	addl	%ecx, 28(%r15)
.Ltmp1857:
	#DEBUG_VALUE: i <- 8
	.loc	26 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$9, %eax
.Ltmp1858:
	#DEBUG_VALUE: c <- undef
	.loc	26 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %eax
.Ltmp1859:
	#DEBUG_VALUE: x <- $eax
	.loc	26 35 21                # ./quickomultiinplace.h:35:21
	movslq	32(%r15), %rcx
	.loc	26 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rcx,4), %ecx
.Ltmp1860:
	#DEBUG_VALUE: y <- $ecx
	.loc	26 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%eax, %edx
	cmovbl	%ecx, %edx
	.loc	26 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edx, 4(%rbx,%r12,4)
	.loc	26 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%eax, %ecx
.Ltmp1861:
	.loc	26 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	32(%r15), %rax
.Ltmp1862:
	.loc	26 37 25                # ./quickomultiinplace.h:37:25
	movl	%ecx, (%rbx,%rax,4)
	.loc	26 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 32(%r15)
.Ltmp1863:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- 9
	.loc	26 24 31                # ./quickomultiinplace.h:24:31
	incq	%r12
	cmpq	%r14, %r12
.Ltmp1864:
	.loc	26 24 3 is_stmt 0       # ./quickomultiinplace.h:24:3
	jl	.LBB35_1
.Ltmp1865:
.LBB35_2:
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	.loc	26 41 1 is_stmt 1       # ./quickomultiinplace.h:41:1
	addq	$48, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp1866:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1867:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1868:
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1869:
.Lfunc_end35:
	.size	partition_quick_multi_inplace, .Lfunc_end35-partition_quick_multi_inplace
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function sort_quick_multi_inplace_h
.LCPI36_0:
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.text
	.globl	sort_quick_multi_inplace_h
	.p2align	4, 0x90
	.type	sort_quick_multi_inplace_h,@function
sort_quick_multi_inplace_h:             # @sort_quick_multi_inplace_h
.Lfunc_begin36:
	.loc	26 43 0                 # ./quickomultiinplace.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	26 45 11 prologue_end   # ./quickomultiinplace.h:45:11
	movq	%rdx, %rax
	subq	%rsi, %rax
.Ltmp1870:
	.loc	26 45 7 is_stmt 0       # ./quickomultiinplace.h:45:7
	jle	.LBB36_3
.Ltmp1871:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	.loc	26 0 7                  # ./quickomultiinplace.h:0:7
	movq	%rsi, %rbx
.Ltmp1872:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	movq	%rdi, %r14
.Ltmp1873:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	.loc	26 46 20 is_stmt 1      # ./quickomultiinplace.h:46:20
	cmpq	$201, %rax
.Ltmp1874:
	.loc	26 46 9 is_stmt 0       # ./quickomultiinplace.h:46:9
	jl	.LBB36_4
.Ltmp1875:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	.loc	26 47 23 is_stmt 1      # ./quickomultiinplace.h:47:23
	movl	%ebx, (%rsp)
	.loc	26 47 29 is_stmt 0      # ./quickomultiinplace.h:47:29
	vmovd	%ebx, %xmm0
	vpbroadcastd	%xmm0, %ymm0
	vpaddd	.LCPI36_0(%rip), %ymm0, %ymm0
	.loc	26 47 23                # ./quickomultiinplace.h:47:23
	vmovdqu	%ymm0, 4(%rsp)
	movq	%rsp, %rcx
	.loc	26 48 7 is_stmt 1       # ./quickomultiinplace.h:48:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	vzeroupper
	callq	partition_quick_multi_inplace
.Ltmp1876:
	.loc	26 55 46                # ./quickomultiinplace.h:55:46
	movslq	(%rsp), %r15
	.loc	26 55 56 is_stmt 0      # ./quickomultiinplace.h:55:56
	leaq	-1(%r15), %rdx
	.loc	26 55 7                 # ./quickomultiinplace.h:55:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1877:
	#DEBUG_VALUE: index <- 1
	.loc	26 57 62 is_stmt 1      # ./quickomultiinplace.h:57:62
	movslq	4(%rsp), %rbx
.Ltmp1878:
	.loc	26 57 76 is_stmt 0      # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1879:
	#DEBUG_VALUE: index <- 2
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	8(%rsp), %r15
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1880:
	#DEBUG_VALUE: index <- 3
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	12(%rsp), %rbx
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1881:
	#DEBUG_VALUE: index <- 4
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	16(%rsp), %r15
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1882:
	#DEBUG_VALUE: index <- 5
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	20(%rsp), %rbx
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1883:
	#DEBUG_VALUE: index <- 6
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	24(%rsp), %r15
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1884:
	#DEBUG_VALUE: index <- 7
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	28(%rsp), %rbx
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1885:
	#DEBUG_VALUE: index <- 8
	.loc	26 57 62                # ./quickomultiinplace.h:57:62
	movslq	32(%rsp), %rdx
	.loc	26 57 76                # ./quickomultiinplace.h:57:76
	decq	%rdx
	.loc	26 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1886:
	#DEBUG_VALUE: index <- 9
.LBB36_3:
	.loc	26 64 1 is_stmt 1       # ./quickomultiinplace.h:64:1
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB36_4:
	.cfi_def_cfa_offset 80
.Ltmp1887:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	.loc	26 60 7                 # ./quickomultiinplace.h:60:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp1888:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1889:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1890:
.Lfunc_end36:
	.size	sort_quick_multi_inplace_h, .Lfunc_end36-sort_quick_multi_inplace_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_inplace # -- Begin function sort_quick_multi_inplace
	.p2align	4, 0x90
	.type	sort_quick_multi_inplace,@function
sort_quick_multi_inplace:               # @sort_quick_multi_inplace
.Lfunc_begin37:
	.loc	26 66 0                 # ./quickomultiinplace.h:66:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace:high <- $rdx
	.loc	26 67 47 prologue_end   # ./quickomultiinplace.h:67:47
	incq	%rdx
.Ltmp1891:
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	.loc	26 67 3 is_stmt 0       # ./quickomultiinplace.h:67:3
	jmp	sort_quick_multi_inplace_h # TAILCALL
.Ltmp1892:
.Lfunc_end37:
	.size	sort_quick_multi_inplace, .Lfunc_end37-sort_quick_multi_inplace
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multix4 # -- Begin function partition_quick_multix4
	.p2align	4, 0x90
	.type	partition_quick_multix4,@function
partition_quick_multix4:                # @partition_quick_multix4
.Lfunc_begin38:
	.loc	6 20 0 is_stmt 1        # ./quickomultix4.h:20:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp1893:
	#DEBUG_VALUE: partition_quick_multix4:pivots <- undef
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	6 26 27 prologue_end    # ./quickomultix4.h:26:27
	movq	%rdx, %r9
	subq	%rsi, %r9
.Ltmp1894:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	.loc	6 26 3 is_stmt 0        # ./quickomultix4.h:26:3
	jle	.LBB38_3
.Ltmp1895:
# %bb.1:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	vmovdqu	(%rdi,%rsi,4), %xmm0
.Ltmp1896:
	.loc	6 26 3                  # ./quickomultix4.h:26:3
	vmovd	%xmm0, %r10d
	leaq	1(%rsi), %r11
.Ltmp1897:
	.p2align	4, 0x90
.LBB38_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	6 27 28 is_stmt 1       # ./quickomultix4.h:27:28
	vmovd	%r10d, %xmm1
	vpbroadcastd	%xmm1, %xmm1
.Ltmp1898:
	#DEBUG_VALUE: currentValue <- $xmm1
	.loc	6 28 24                 # ./quickomultix4.h:28:24
	vpcmpgtd	%xmm1, %xmm0, %xmm1
.Ltmp1899:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	24 10 19                # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1900:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1901:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1902:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %eax
.Ltmp1903:
	.loc	6 30 23                 # ./quickomultix4.h:30:23
	addl	$4, %eax
.Ltmp1904:
	#DEBUG_VALUE: index <- $rax
	.loc	6 31 9                  # ./quickomultix4.h:31:9
	movslq	(%rcx,%rax,4), %rbx
	.loc	6 31 25 is_stmt 0       # ./quickomultix4.h:31:25
	movl	%r10d, (%r8,%rbx,4)
	.loc	6 32 20 is_stmt 1       # ./quickomultix4.h:32:20
	incl	(%rcx,%rax,4)
.Ltmp1905:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	6 26 27                 # ./quickomultix4.h:26:27
	cmpq	%r11, %rdx
.Ltmp1906:
	.loc	6 26 3 is_stmt 0        # ./quickomultix4.h:26:3
	je	.LBB38_3
.Ltmp1907:
# %bb.5:                                #   in Loop: Header=BB38_2 Depth=1
	#DEBUG_VALUE: index <- $rax
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 27 43 is_stmt 1       # ./quickomultix4.h:27:43
	movl	(%rdi,%r11,4), %r10d
.Ltmp1908:
	.loc	6 26 3                  # ./quickomultix4.h:26:3
	incq	%r11
	jmp	.LBB38_2
.Ltmp1909:
.LBB38_3:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movl	(%rcx), %eax
	.loc	6 39 14 is_stmt 0       # ./quickomultix4.h:39:14
	cmpl	$8, %eax
.Ltmp1910:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_4
.Ltmp1911:
# %bb.11:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	leaq	(%rdi,%rsi,4), %r10
	xorl	%edx, %edx
.Ltmp1912:
	.p2align	4, 0x90
.LBB38_12:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- undef
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%r10,%rdx,4)
.Ltmp1913:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1914:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1915:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_12
.Ltmp1916:
# %bb.6:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	addq	%rdx, %rsi
.Ltmp1917:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1918:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_8
	jmp	.LBB38_9
.Ltmp1919:
.LBB38_4:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	xorl	%edx, %edx
.Ltmp1920:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1921:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB38_9
.Ltmp1922:
	.p2align	4, 0x90
.LBB38_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1923:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1924:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1925:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_8
.Ltmp1926:
.LBB38_9:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	movl	%eax, (%rcx)
.Ltmp1927:
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: index <- 1
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	4(%rcx), %rdx
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rdx, %rax
	addq	$-7, %rax
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rax, %r9
.Ltmp1928:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB38_10
.Ltmp1929:
# %bb.13:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r9, %rax
.Ltmp1930:
	.p2align	4, 0x90
.LBB38_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rax,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1931:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rax
.Ltmp1932:
	#DEBUG_VALUE: j <- $rax
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	4(%rcx), %rdx
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rdx), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rax
.Ltmp1933:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_14
.Ltmp1934:
# %bb.15:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%edx, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rax
.Ltmp1935:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB38_17
.Ltmp1936:
	.p2align	4, 0x90
.LBB38_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rax,4), %edx
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%edx, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1937:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rax
.Ltmp1938:
	#DEBUG_VALUE: j <- $rax
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	4(%rcx), %rdx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rdx, %rax
.Ltmp1939:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_16
.Ltmp1940:
.LBB38_17:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r9d, %edx
	movl	%edx, 4(%rcx)
.Ltmp1941:
	#DEBUG_VALUE: index <- 2
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	leaq	(%r9,%r9), %r10
.Ltmp1942:
	#DEBUG_VALUE: j <- $r10
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	8(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r10
.Ltmp1943:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB38_18
.Ltmp1944:
# %bb.19:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r10, %rdx
.Ltmp1945:
	.p2align	4, 0x90
.LBB38_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1946:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1947:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	8(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1948:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_20
.Ltmp1949:
# %bb.21:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1950:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB38_23
.Ltmp1951:
	.p2align	4, 0x90
.LBB38_22:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1952:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1953:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	8(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1954:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_22
.Ltmp1955:
.LBB38_23:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r10d, %eax
	movl	%eax, 8(%rcx)
.Ltmp1956:
	#DEBUG_VALUE: index <- 3
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	leaq	(%r9,%r9,2), %r10
.Ltmp1957:
	#DEBUG_VALUE: j <- $r10
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	12(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r10
.Ltmp1958:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB38_24
.Ltmp1959:
# %bb.25:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r10, %rdx
.Ltmp1960:
	.p2align	4, 0x90
.LBB38_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1961:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1962:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	12(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1963:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_26
.Ltmp1964:
# %bb.27:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1965:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB38_29
.Ltmp1966:
	.p2align	4, 0x90
.LBB38_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1967:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1968:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	12(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1969:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_28
.Ltmp1970:
.LBB38_29:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r10d, %eax
	movl	%eax, 12(%rcx)
.Ltmp1971:
	#DEBUG_VALUE: index <- 4
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	shlq	$2, %r9
.Ltmp1972:
	#DEBUG_VALUE: j <- $r9
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	16(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r9
.Ltmp1973:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB38_30
.Ltmp1974:
# %bb.31:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r9, %rdx
.Ltmp1975:
	.p2align	4, 0x90
.LBB38_32:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1976:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1977:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	16(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1978:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB38_32
.Ltmp1979:
# %bb.33:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1980:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_34
	jmp	.LBB38_36
.Ltmp1981:
.LBB38_10:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r9, %rax
.Ltmp1982:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%edx, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rax
.Ltmp1983:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_16
	jmp	.LBB38_17
.Ltmp1984:
.LBB38_18:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r10, %rdx
.Ltmp1985:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1986:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_22
	jmp	.LBB38_23
.Ltmp1987:
.LBB38_24:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r10, %rdx
.Ltmp1988:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1989:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_28
	jmp	.LBB38_29
.Ltmp1990:
.LBB38_30:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r9, %rdx
.Ltmp1991:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1992:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB38_36
.Ltmp1993:
.LBB38_34:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	leaq	(%rdi,%rsi,4), %rsi
.Ltmp1994:
	.p2align	4, 0x90
.LBB38_35:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- undef
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rsi)
.Ltmp1995:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	6 44 33 is_stmt 1       # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1996:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	16(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	addq	$4, %rsi
	cmpq	%rax, %rdx
.Ltmp1997:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB38_35
.Ltmp1998:
.LBB38_36:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r9d, %eax
	movl	%eax, 16(%rcx)
.Ltmp1999:
	#DEBUG_VALUE: index <- 5
	.loc	6 50 1                  # ./quickomultix4.h:50:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp2000:
.Lfunc_end38:
	.size	partition_quick_multix4, .Lfunc_end38-partition_quick_multix4
	.cfi_endproc
                                        # -- End function
	.globl	hsum_epi32_avx          # -- Begin function hsum_epi32_avx
	.p2align	4, 0x90
	.type	hsum_epi32_avx,@function
hsum_epi32_avx:                         # @hsum_epi32_avx
.Lfunc_begin39:
	.loc	24 8 0                  # ./simd.h:8:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: hsum_epi32_avx:x <- $xmm0
	#DEBUG_VALUE: hsum_epi32_avx:x <- $xmm0
	.loc	24 9 18 prologue_end    # ./simd.h:9:18
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
.Ltmp2001:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	.loc	24 10 19                # ./simd.h:10:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp2002:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	24 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp2003:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	24 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp2004:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	24 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %eax
	.loc	24 13 3 is_stmt 0       # ./simd.h:13:3
	retq
.Ltmp2005:
.Lfunc_end39:
	.size	hsum_epi32_avx, .Lfunc_end39-hsum_epi32_avx
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multix4_h    # -- Begin function sort_quick_multix4_h
	.p2align	4, 0x90
	.type	sort_quick_multix4_h,@function
sort_quick_multix4_h:                   # @sort_quick_multix4_h
.Lfunc_begin40:
	.loc	6 52 0 is_stmt 1        # ./quickomultix4.h:52:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	6 53 11 prologue_end    # ./quickomultix4.h:53:11
	movq	%rdx, %rax
	subq	%rsi, %rax
.Ltmp2006:
	.loc	6 53 7 is_stmt 0        # ./quickomultix4.h:53:7
	jle	.LBB40_3
.Ltmp2007:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	.loc	6 0 7                   # ./quickomultix4.h:0:7
	movq	%rsi, %rbx
.Ltmp2008:
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	movq	%rdi, %r15
.Ltmp2009:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	.loc	6 54 20 is_stmt 1       # ./quickomultix4.h:54:20
	cmpq	$41, %rax
.Ltmp2010:
	.loc	6 54 9 is_stmt 0        # ./quickomultix4.h:54:9
	jl	.LBB40_4
.Ltmp2011:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	.loc	6 0 9                   # ./quickomultix4.h:0:9
	movq	%rcx, %r14
.Ltmp2012:
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $r14
	.loc	6 55 18 is_stmt 1       # ./quickomultix4.h:55:18
	leal	1(%rax), %ecx
.Ltmp2013:
	#DEBUG_VALUE: size <- $ecx
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	$0, (%rsp)
	movl	%ecx, 4(%rsp)
	.loc	6 56 42 is_stmt 0       # ./quickomultix4.h:56:42
	leal	(%rax,%rax), %esi
	addl	$2, %esi
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%esi, 8(%rsp)
	.loc	6 56 52                 # ./quickomultix4.h:56:52
	leal	(%rcx,%rcx,2), %ecx
.Ltmp2014:
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%ecx, 12(%rsp)
	.loc	6 56 62                 # ./quickomultix4.h:56:62
	leal	4(,%rax,4), %eax
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%eax, 16(%rsp)
	.loc	6 57 48 is_stmt 1       # ./quickomultix4.h:57:48
	incq	%rdx
.Ltmp2015:
	.loc	6 0 48 is_stmt 0        # ./quickomultix4.h:0:48
	movq	%rsp, %rcx
	.loc	6 57 7                  # ./quickomultix4.h:57:7
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %r8
	callq	partition_quick_multix4
.Ltmp2016:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	(%rsp), %r12
	.loc	6 63 48                 # ./quickomultix4.h:63:48
	leaq	(%r12,%rbx), %rdx
	decq	%rdx
	.loc	6 62 29                 # ./quickomultix4.h:62:29
	addq	%rbx, %r12
.Ltmp2017:
	#DEBUG_VALUE: end <- $r12
	.loc	6 63 9                  # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp2018:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: start <- $r12
	.loc	6 62 31                 # ./quickomultix4.h:62:31
	movslq	4(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%r12,%rax), %rbx
.Ltmp2019:
	#DEBUG_VALUE: end <- $rbx
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%r12), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp2020:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	8(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%rbx,%rax), %r12
.Ltmp2021:
	#DEBUG_VALUE: end <- $r12
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp2022:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: start <- $r12
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	12(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%r12,%rax), %rbx
.Ltmp2023:
	#DEBUG_VALUE: end <- $rbx
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%r12), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp2024:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	16(%rsp), %rax
.Ltmp2025:
	#DEBUG_VALUE: end <- undef
	.loc	6 63 48                 # ./quickomultix4.h:63:48
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp2026:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: start <- undef
.LBB40_3:
	.loc	6 70 1 is_stmt 1        # ./quickomultix4.h:70:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB40_4:
	.cfi_def_cfa_offset 64
.Ltmp2027:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	.loc	6 67 7                  # ./quickomultix4.h:67:7
	movq	%r15, %rdi
	movq	%rbx, %rsi
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp2028:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2029:
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp2030:
.Lfunc_end40:
	.size	sort_quick_multix4_h, .Lfunc_end40-sort_quick_multix4_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multix4      # -- Begin function sort_quick_multix4
	.p2align	4, 0x90
	.type	sort_quick_multix4,@function
sort_quick_multix4:                     # @sort_quick_multix4
.Lfunc_begin41:
	.loc	6 72 0                  # ./quickomultix4.h:72:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multix4:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp2031:
	#DEBUG_VALUE: sort_quick_multix4:high <- $r14
	#DEBUG_VALUE: sort_quick_multix4:low <- $r12
	#DEBUG_VALUE: sort_quick_multix4:array <- $r15
	.loc	6 73 53 prologue_end    # ./quickomultix4.h:73:53
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	6 73 60 is_stmt 0       # ./quickomultix4.h:73:60
	shlq	$2, %rax
	leaq	(%rax,%rax,4), %rdi
	.loc	6 73 22                 # ./quickomultix4.h:73:22
	callq	malloc
.Ltmp2032:
	movq	%rax, %rbx
.Ltmp2033:
	#DEBUG_VALUE: sort_quick_multix4:tmp <- $rbx
	.loc	6 74 3 is_stmt 1        # ./quickomultix4.h:74:3
	movq	%r15, %rdi
.Ltmp2034:
	#DEBUG_VALUE: sort_quick_multix4:array <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_quick_multix4_h
.Ltmp2035:
	.loc	6 75 3                  # ./quickomultix4.h:75:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp2036:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp2037:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2038:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp2039:
.Lfunc_end41:
	.size	sort_quick_multix4, .Lfunc_end41-sort_quick_multix4
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi_x4_inplace # -- Begin function partition_quick_multi_x4_inplace
	.p2align	4, 0x90
	.type	partition_quick_multi_x4_inplace,@function
partition_quick_multi_x4_inplace:       # @partition_quick_multi_x4_inplace
.Lfunc_begin42:
	.file	27 "/home/peeters/bachelor" "./quickomultix4inplace.h"
	.loc	27 23 0                 # ./quickomultix4inplace.h:23:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	.loc	4 26 11 prologue_end    # ./median.h:26:11
	movl	(%rdi,%rsi,4), %r11d
.Ltmp2040:
	#DEBUG_VALUE: sort_pair:x <- $r11d
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%rdi,%rsi,4), %r10d
.Ltmp2041:
	#DEBUG_VALUE: sort_pair:y <- $r10d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r10d, %r11d
.Ltmp2042:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r10d, %r9d
	cmovll	%r11d, %r9d
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%r9d, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r10d, %r11d
.Ltmp2043:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%r11d, 4(%rdi,%rsi,4)
.Ltmp2044:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	.loc	27 44 24 is_stmt 1      # ./quickomultix4inplace.h:44:24
	leaq	2(%rsi), %rax
.Ltmp2045:
	#DEBUG_VALUE: j <- $rax
	.loc	27 44 31 is_stmt 0      # ./quickomultix4inplace.h:44:31
	cmpq	%rdx, %rax
.Ltmp2046:
	.loc	27 44 3                 # ./quickomultix4inplace.h:44:3
	jg	.LBB42_3
.Ltmp2047:
# %bb.1:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	incq	%rsi
.Ltmp2048:
	.p2align	4, 0x90
.LBB42_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	27 45 13 is_stmt 1      # ./quickomultix4inplace.h:45:13
	movl	4(%rdi,%rsi,4), %eax
.Ltmp2049:
	#DEBUG_VALUE: x <- $eax
	.loc	27 52 19                # ./quickomultix4inplace.h:52:19
	movslq	(%rcx), %r10
	.loc	27 52 13 is_stmt 0      # ./quickomultix4inplace.h:52:13
	movl	(%rdi,%r10,4), %r14d
.Ltmp2050:
	#DEBUG_VALUE: a <- $r14d
	.loc	27 53 15 is_stmt 1      # ./quickomultix4inplace.h:53:15
	xorl	%ebp, %ebp
	cmpl	%r9d, %eax
	setl	%bpl
.Ltmp2051:
	#DEBUG_VALUE: c <- $ebp
	.loc	27 54 18                # ./quickomultix4inplace.h:54:18
	movl	%r14d, %ebx
	cmovll	%eax, %ebx
	.loc	27 54 16 is_stmt 0      # ./quickomultix4inplace.h:54:16
	movl	%ebx, (%rdi,%r10,4)
	.loc	27 55 9 is_stmt 1       # ./quickomultix4inplace.h:55:9
	cmovll	%r14d, %eax
.Ltmp2052:
	#DEBUG_VALUE: x <- $eax
	.loc	27 56 9                 # ./quickomultix4inplace.h:56:9
	addl	%ebp, (%rcx)
	.loc	27 58 15                # ./quickomultix4inplace.h:58:15
	movslq	(%r8), %r14
.Ltmp2053:
	.loc	27 58 9 is_stmt 0       # ./quickomultix4inplace.h:58:9
	movl	(%rdi,%r14,4), %r10d
.Ltmp2054:
	#DEBUG_VALUE: a <- $r10d
	.loc	27 59 11 is_stmt 1      # ./quickomultix4inplace.h:59:11
	xorl	%ebx, %ebx
	cmpl	%r11d, %eax
	setl	%bl
.Ltmp2055:
	#DEBUG_VALUE: c <- $ebx
	.loc	27 60 18                # ./quickomultix4inplace.h:60:18
	movl	%r10d, %ebp
	cmovll	%eax, %ebp
	.loc	27 60 16 is_stmt 0      # ./quickomultix4inplace.h:60:16
	movl	%ebp, (%rdi,%r14,4)
	.loc	27 61 9 is_stmt 1       # ./quickomultix4inplace.h:61:9
	cmovll	%r10d, %eax
.Ltmp2056:
	#DEBUG_VALUE: x <- $eax
	.loc	27 62 9                 # ./quickomultix4inplace.h:62:9
	addl	%ebx, (%r8)
	.loc	27 76 14                # ./quickomultix4inplace.h:76:14
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp2057:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	27 44 31                # ./quickomultix4inplace.h:44:31
	incq	%rsi
	cmpq	%rdx, %rsi
.Ltmp2058:
	.loc	27 44 3 is_stmt 0       # ./quickomultix4inplace.h:44:3
	jl	.LBB42_2
.Ltmp2059:
.LBB42_3:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	.loc	27 78 1 is_stmt 1       # ./quickomultix4inplace.h:78:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2060:
.Lfunc_end42:
	.size	partition_quick_multi_x4_inplace, .Lfunc_end42-partition_quick_multi_x4_inplace
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_x4_inplace_h # -- Begin function sort_quick_multi_x4_inplace_h
	.p2align	4, 0x90
	.type	sort_quick_multi_x4_inplace_h,@function
sort_quick_multi_x4_inplace_h:          # @sort_quick_multi_x4_inplace_h
.Lfunc_begin43:
	.loc	27 80 0                 # ./quickomultix4inplace.h:80:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	27 82 11 prologue_end   # ./quickomultix4inplace.h:82:11
	cmpq	%rsi, %rdx
.Ltmp2061:
	.loc	27 82 7 is_stmt 0       # ./quickomultix4inplace.h:82:7
	jle	.LBB43_8
.Ltmp2062:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	.loc	27 0 7                  # ./quickomultix4inplace.h:0:7
	movq	%rdx, %r14
.Ltmp2063:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	movq	%rdi, %r15
.Ltmp2064:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	jmp	.LBB43_2
.Ltmp2065:
	.p2align	4, 0x90
.LBB43_4:                               #   in Loop: Header=BB43_2 Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: t1 <- $r12d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	movl	%esi, %ebx
.Ltmp2066:
.LBB43_7:                               #   in Loop: Header=BB43_2 Depth=1
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: t0 <- $ebx
	.loc	27 96 52 is_stmt 1      # ./quickomultix4inplace.h:96:52
	leal	-1(%rbx), %eax
	.loc	27 96 49 is_stmt 0      # ./quickomultix4inplace.h:96:49
	movslq	%eax, %rdx
	.loc	27 96 7                 # ./quickomultix4inplace.h:96:7
	movq	%r15, %rdi
	callq	sort_quick_multi_x4_inplace_h
.Ltmp2067:
	.loc	27 97 44 is_stmt 1      # ./quickomultix4inplace.h:97:44
	movslq	%ebx, %rsi
.Ltmp2068:
	#DEBUG_VALUE: t1 <- $r12d
	.loc	27 97 51 is_stmt 0      # ./quickomultix4inplace.h:97:51
	leal	-1(%r12), %eax
	.loc	27 97 48                # ./quickomultix4inplace.h:97:48
	movslq	%eax, %rdx
	.loc	27 97 7                 # ./quickomultix4inplace.h:97:7
	movq	%r15, %rdi
	callq	sort_quick_multi_x4_inplace_h
.Ltmp2069:
	.loc	27 101 44 is_stmt 1     # ./quickomultix4inplace.h:101:44
	movslq	%r12d, %rsi
.Ltmp2070:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	27 82 11                # ./quickomultix4inplace.h:82:11
	cmpq	%r14, %rsi
.Ltmp2071:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- undef
	.loc	27 82 7 is_stmt 0       # ./quickomultix4inplace.h:82:7
	jge	.LBB43_8
.Ltmp2072:
.LBB43_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB43_6 Depth 2
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	27 83 14 is_stmt 1      # ./quickomultix4inplace.h:83:14
	movq	%r14, %rax
	subq	%rsi, %rax
	.loc	27 83 20 is_stmt 0      # ./quickomultix4inplace.h:83:20
	cmpq	$1001, %rax             # imm = 0x3E9
.Ltmp2073:
	.loc	27 83 9                 # ./quickomultix4inplace.h:83:9
	jl	.LBB43_9
.Ltmp2074:
# %bb.3:                                #   in Loop: Header=BB43_2 Depth=1
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: t0 <- $esi
	.loc	27 86 16 is_stmt 1      # ./quickomultix4inplace.h:86:16
	leal	1(%rsi), %r12d
.Ltmp2075:
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: t1 <- $r12d
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%r15,%rsi,4), %edx
.Ltmp2076:
	#DEBUG_VALUE: sort_pair:x <- $edx
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%r15,%rsi,4), %r9d
.Ltmp2077:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2078:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r8d
	cmovll	%edx, %r8d
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%r8d, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2079:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%r9d, 4(%r15,%rsi,4)
.Ltmp2080:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	.loc	27 44 24 is_stmt 1      # ./quickomultix4inplace.h:44:24
	leaq	2(%rsi), %rdx
.Ltmp2081:
	#DEBUG_VALUE: j <- $rdx
	.loc	27 44 31 is_stmt 0      # ./quickomultix4inplace.h:44:31
	cmpq	%r14, %rdx
.Ltmp2082:
	.loc	27 44 3                 # ./quickomultix4inplace.h:44:3
	jg	.LBB43_4
.Ltmp2083:
# %bb.5:                                #   in Loop: Header=BB43_2 Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: t1 <- $r12d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	leaq	1(%rsi), %rdx
.Ltmp2084:
	.loc	27 0 0                  # ./quickomultix4inplace.h:0:0
	movl	%esi, %ebx
.Ltmp2085:
	.p2align	4, 0x90
.LBB43_6:                               #   Parent Loop BB43_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	.loc	27 45 13 is_stmt 1      # ./quickomultix4inplace.h:45:13
	movl	4(%r15,%rdx,4), %edi
.Ltmp2086:
	#DEBUG_VALUE: x <- $edi
	.loc	27 52 13                # ./quickomultix4inplace.h:52:13
	movslq	%ebx, %rbx
	movl	(%r15,%rbx,4), %r10d
.Ltmp2087:
	#DEBUG_VALUE: a <- $r10d
	.loc	27 53 15                # ./quickomultix4inplace.h:53:15
	xorl	%eax, %eax
	cmpl	%r8d, %edi
	setl	%al
.Ltmp2088:
	#DEBUG_VALUE: c <- $eax
	.loc	27 54 18                # ./quickomultix4inplace.h:54:18
	movl	%r10d, %ecx
	cmovll	%edi, %ecx
	.loc	27 54 16 is_stmt 0      # ./quickomultix4inplace.h:54:16
	movl	%ecx, (%r15,%rbx,4)
	.loc	27 55 9 is_stmt 1       # ./quickomultix4inplace.h:55:9
	cmovll	%r10d, %edi
.Ltmp2089:
	#DEBUG_VALUE: x <- $edi
	.loc	27 56 9                 # ./quickomultix4inplace.h:56:9
	addl	%eax, %ebx
	.loc	27 58 9                 # ./quickomultix4inplace.h:58:9
	movslq	%r12d, %r12
	movl	(%r15,%r12,4), %r10d
.Ltmp2090:
	#DEBUG_VALUE: a <- $r10d
	.loc	27 59 11                # ./quickomultix4inplace.h:59:11
	xorl	%ecx, %ecx
	cmpl	%r9d, %edi
	setl	%cl
.Ltmp2091:
	#DEBUG_VALUE: c <- $ecx
	.loc	27 60 18                # ./quickomultix4inplace.h:60:18
	movl	%r10d, %eax
	cmovll	%edi, %eax
	.loc	27 60 16 is_stmt 0      # ./quickomultix4inplace.h:60:16
	movl	%eax, (%r15,%r12,4)
	.loc	27 61 9 is_stmt 1       # ./quickomultix4inplace.h:61:9
	cmovll	%r10d, %edi
.Ltmp2092:
	#DEBUG_VALUE: x <- $edi
	.loc	27 62 9                 # ./quickomultix4inplace.h:62:9
	addl	%ecx, %r12d
	.loc	27 76 14                # ./quickomultix4inplace.h:76:14
	movl	%edi, 4(%r15,%rdx,4)
.Ltmp2093:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	27 44 31                # ./quickomultix4inplace.h:44:31
	incq	%rdx
	cmpq	%r14, %rdx
.Ltmp2094:
	.loc	27 44 3 is_stmt 0       # ./quickomultix4inplace.h:44:3
	jl	.LBB43_6
	jmp	.LBB43_7
.Ltmp2095:
.LBB43_8:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	27 107 1 is_stmt 1      # ./quickomultix4inplace.h:107:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp2096:
.LBB43_9:
	.cfi_def_cfa_offset 48
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	27 103 7                # ./quickomultix4inplace.h:103:7
	movq	%r15, %rdi
	movq	%r14, %rdx
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2097:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2098:
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp2099:
.Lfunc_end43:
	.size	sort_quick_multi_x4_inplace_h, .Lfunc_end43-sort_quick_multi_x4_inplace_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_x4_inplace # -- Begin function sort_quick_multi_x4_inplace
	.p2align	4, 0x90
	.type	sort_quick_multi_x4_inplace,@function
sort_quick_multi_x4_inplace:            # @sort_quick_multi_x4_inplace
.Lfunc_begin44:
	.loc	27 109 0                # ./quickomultix4inplace.h:109:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:high <- $rdx
	.loc	27 110 50 prologue_end  # ./quickomultix4inplace.h:110:50
	incq	%rdx
.Ltmp2100:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	.loc	27 110 3 is_stmt 0      # ./quickomultix4inplace.h:110:3
	jmp	sort_quick_multi_x4_inplace_h # TAILCALL
.Ltmp2101:
.Lfunc_end44:
	.size	sort_quick_multi_x4_inplace, .Lfunc_end44-sort_quick_multi_x4_inplace
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_simd    # -- Begin function partition_quick_simd
	.p2align	4, 0x90
	.type	partition_quick_simd,@function
partition_quick_simd:                   # @partition_quick_simd
.Lfunc_begin45:
	.file	28 "/home/peeters/bachelor" "./quickosimd.h"
	.loc	28 23 0 is_stmt 1       # ./quickosimd.h:23:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- undef
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
.Ltmp2102:
	pushq	%rbx
	andq	$-32, %rsp
	subq	$96, %rsp
	.cfi_offset %rbx, -24
.Ltmp2103:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r9
	subq	%rsi, %r9
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r9
.Ltmp2104:
	#DEBUG_VALUE: partition_quick_simd:zeros <- undef
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB45_2
.Ltmp2105:
# %bb.1:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2106:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2107:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2108:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2109:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2110:
	.loc	28 28 17 is_stmt 1      # ./quickosimd.h:28:17
	addq	%rsi, %rdx
.Ltmp2111:
	.loc	28 28 25 is_stmt 0      # ./quickosimd.h:28:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2112:
	.loc	28 79 1 is_stmt 1       # ./quickosimd.h:79:1
	leaq	-8(%rbp), %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	retq
.Ltmp2113:
.LBB45_2:
	.cfi_def_cfa %rbp, 16
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2114:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2115:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r8d
.Ltmp2116:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2117:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ecx
.Ltmp2118:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r8d, %ecx
.Ltmp2119:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2120:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r8d
.Ltmp2121:
	cmovll	%ecx, %r8d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2122:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ebx
.Ltmp2123:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %r11d
.Ltmp2124:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r8d
.Ltmp2125:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2126:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r9
.Ltmp2127:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB45_5
.Ltmp2128:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r8d, (%rdi,%r10,4)
.Ltmp2129:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 0 16 is_stmt 0        # ./median.h:0:16
	jmp	.LBB45_4
.Ltmp2130:
.LBB45_5:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r8d, (%rdi,%rdx,4)
.Ltmp2131:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2132:
	#DEBUG_VALUE: partition_quick_simd:p <- undef
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	.loc	28 33 19                # ./quickosimd.h:33:19
	leaq	-7(%rdx), %r9
	.loc	28 33 12 is_stmt 0      # ./quickosimd.h:33:12
	cmpq	%rsi, %r9
.Ltmp2133:
	.loc	28 33 3                 # ./quickosimd.h:33:3
	jle	.LBB45_11
.Ltmp2134:
# %bb.6:
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	28 0 3                  # ./quickosimd.h:0:3
	vmovd	%r8d, %xmm0
	vpbroadcastd	%xmm0, %ymm0
.Ltmp2135:
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	movq	%rsi, %rcx
.Ltmp2136:
	.p2align	4, 0x90
.LBB45_7:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: values <- undef
	.loc	28 36 18 is_stmt 1      # ./quickosimd.h:36:18
	vpcmpgtd	(%rdi,%rcx,4), %ymm0, %ymm1
	vpsrld	$31, %ymm1, %ymm1
.Ltmp2137:
	#DEBUG_VALUE: cs <- $ymm1
	.loc	28 53 14                # ./quickosimd.h:53:14
	vmovups	(%rdi,%rcx,4), %xmm2
.Ltmp2138:
	.loc	28 39 5                 # ./quickosimd.h:39:5
	vmovdqa	%ymm1, 32(%rsp)
.Ltmp2139:
	#DEBUG_VALUE: k <- 0
	.loc	28 42 15                # ./quickosimd.h:42:15
	vmovd	%xmm1, %ebx
.Ltmp2140:
	#DEBUG_VALUE: c <- $ebx
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %eax
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%eax, 24(%rsp)
	.loc	28 53 12 is_stmt 1      # ./quickosimd.h:53:12
	vmovss	%xmm2, 28(%rsp)
	.loc	28 54 18                # ./quickosimd.h:54:18
	movl	24(%rsp,%rbx,4), %eax
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%eax, (%rdi,%rsi,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rbx, %rsi
.Ltmp2141:
	#DEBUG_VALUE: k <- 1
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
                                        # kill: def $ebx killed $ebx killed $rbx def $rbx
	.loc	28 55 22                # ./quickosimd.h:55:22
	xorl	$1, %ebx
.Ltmp2142:
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rbx,4), %eax
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%eax, (%rdi,%rcx,4)
	.loc	28 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vpextrd	$1, %xmm1, %eax
.Ltmp2143:
	#DEBUG_VALUE: c <- $eax
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	4(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2144:
	#DEBUG_VALUE: k <- 2
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
                                        # kill: def $eax killed $eax killed $rax def $rax
	.loc	28 55 22                # ./quickosimd.h:55:22
	xorl	$1, %eax
.Ltmp2145:
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rax,4), %eax
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%eax, 4(%rdi,%rcx,4)
	.loc	28 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vpextrd	$2, %xmm1, %eax
.Ltmp2146:
	#DEBUG_VALUE: c <- $eax
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	8(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2147:
	#DEBUG_VALUE: k <- 3
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
                                        # kill: def $eax killed $eax killed $rax def $rax
	.loc	28 55 22                # ./quickosimd.h:55:22
	xorl	$1, %eax
.Ltmp2148:
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rax,4), %eax
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%eax, 8(%rdi,%rcx,4)
	.loc	28 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vpextrd	$3, %xmm1, %eax
.Ltmp2149:
	#DEBUG_VALUE: c <- $eax
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	12(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2150:
	#DEBUG_VALUE: k <- 4
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
                                        # kill: def $eax killed $eax killed $rax def $rax
	.loc	28 55 22                # ./quickosimd.h:55:22
	xorl	$1, %eax
.Ltmp2151:
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rax,4), %eax
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%eax, 12(%rdi,%rcx,4)
	.loc	28 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vextracti128	$1, %ymm1, %xmm1
.Ltmp2152:
	vmovd	%xmm1, %eax
.Ltmp2153:
	#DEBUG_VALUE: c <- $eax
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	16(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2154:
	#DEBUG_VALUE: k <- 5
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
                                        # kill: def $eax killed $eax killed $rax def $rax
	.loc	28 55 22                # ./quickosimd.h:55:22
	xorl	$1, %eax
.Ltmp2155:
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rax,4), %eax
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%eax, 16(%rdi,%rcx,4)
	.loc	28 42 15 is_stmt 1      # ./quickosimd.h:42:15
	movslq	52(%rsp), %rax
.Ltmp2156:
	#DEBUG_VALUE: c <- undef
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	20(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 55 22 is_stmt 1      # ./quickosimd.h:55:22
	movl	$1, %ebx
	subq	%rax, %rbx
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rbx,4), %ebx
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%ebx, 20(%rdi,%rcx,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2157:
	#DEBUG_VALUE: k <- 6
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	28 42 15                # ./quickosimd.h:42:15
	movslq	56(%rsp), %rax
	#DEBUG_VALUE: c <- undef
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	24(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 55 22 is_stmt 1      # ./quickosimd.h:55:22
	movl	$1, %ebx
	subq	%rax, %rbx
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rbx,4), %ebx
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%ebx, 24(%rdi,%rcx,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2158:
	#DEBUG_VALUE: k <- 7
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	28 42 15                # ./quickosimd.h:42:15
	movslq	60(%rsp), %rax
	#DEBUG_VALUE: c <- undef
	.loc	28 52 14                # ./quickosimd.h:52:14
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 52 12 is_stmt 0      # ./quickosimd.h:52:12
	movl	%ebx, 24(%rsp)
	.loc	28 53 14 is_stmt 1      # ./quickosimd.h:53:14
	movl	28(%rdi,%rcx,4), %ebx
	.loc	28 53 12 is_stmt 0      # ./quickosimd.h:53:12
	movl	%ebx, 28(%rsp)
	.loc	28 54 18 is_stmt 1      # ./quickosimd.h:54:18
	movl	24(%rsp,%rax,4), %ebx
	.loc	28 54 16 is_stmt 0      # ./quickosimd.h:54:16
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 55 22 is_stmt 1      # ./quickosimd.h:55:22
	movl	$1, %ebx
	subq	%rax, %rbx
	.loc	28 55 18 is_stmt 0      # ./quickosimd.h:55:18
	movl	24(%rsp,%rbx,4), %ebx
	.loc	28 55 16                # ./quickosimd.h:55:16
	movl	%ebx, 28(%rdi,%rcx,4)
	.loc	28 56 9 is_stmt 1       # ./quickosimd.h:56:9
	addq	%rax, %rsi
.Ltmp2159:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	28 57 8                 # ./quickosimd.h:57:8
	addq	$8, %rcx
.Ltmp2160:
	#DEBUG_VALUE: k <- 8
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 33 12                # ./quickosimd.h:33:12
	cmpq	%r9, %rcx
.Ltmp2161:
	.loc	28 33 3 is_stmt 0       # ./quickosimd.h:33:3
	jl	.LBB45_7
.Ltmp2162:
# %bb.8:
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 60 12 is_stmt 1      # ./quickosimd.h:60:12
	cmpq	%rdx, %rcx
.Ltmp2163:
	.loc	28 60 3 is_stmt 0       # ./quickosimd.h:60:3
	jge	.LBB45_12
.Ltmp2164:
.LBB45_9:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	movl	%edx, %eax
	subl	%ecx, %eax
	movq	%rcx, %r9
	notq	%r9
	testb	$1, %al
	jne	.LBB45_13
.Ltmp2165:
# %bb.10:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
                                        # implicit-def: $rax
	addq	%rdx, %r9
	jne	.LBB45_14
	jmp	.LBB45_16
.Ltmp2166:
.LBB45_11:
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	28 31 11 is_stmt 1      # ./quickosimd.h:31:11
	movq	%rsi, %rcx
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
.Ltmp2167:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 60 12                # ./quickosimd.h:60:12
	cmpq	%rdx, %rcx
.Ltmp2168:
	.loc	28 60 3 is_stmt 0       # ./quickosimd.h:60:3
	jl	.LBB45_9
.Ltmp2169:
.LBB45_12:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	28 0 0                  # ./quickosimd.h:0:0
	movq	%rsi, %rax
	jmp	.LBB45_16
.Ltmp2170:
.LBB45_13:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 61 21 is_stmt 1      # ./quickosimd.h:61:21
	movl	(%rdi,%rcx,4), %r10d
	.loc	28 61 19 is_stmt 0      # ./quickosimd.h:61:19
	xorl	%r11d, %r11d
	xorl	%eax, %eax
	cmpl	%r10d, %r8d
	setle	%r11b
	setg	%al
.Ltmp2171:
	#DEBUG_VALUE: c <- $al
	.loc	28 71 12 is_stmt 1      # ./quickosimd.h:71:12
	movl	(%rdi,%rsi,4), %ebx
	.loc	28 71 10 is_stmt 0      # ./quickosimd.h:71:10
	movl	%ebx, 32(%rsp)
	.loc	28 72 10 is_stmt 1      # ./quickosimd.h:72:10
	movl	%r10d, 36(%rsp)
	.loc	28 73 16                # ./quickosimd.h:73:16
	movl	32(%rsp,%rax,4), %ebx
	.loc	28 73 14 is_stmt 0      # ./quickosimd.h:73:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 74 16 is_stmt 1      # ./quickosimd.h:74:16
	movl	32(%rsp,%r11,4), %ebx
	.loc	28 74 14 is_stmt 0      # ./quickosimd.h:74:14
	movl	%ebx, (%rdi,%rcx,4)
	.loc	28 75 7 is_stmt 1       # ./quickosimd.h:75:7
	addq	%rax, %rsi
.Ltmp2172:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	28 60 21                # ./quickosimd.h:60:21
	incq	%rcx
.Ltmp2173:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 0 21 is_stmt 0       # ./quickosimd.h:0:21
	movq	%rsi, %rax
.Ltmp2174:
	.loc	28 60 3                 # ./quickosimd.h:60:3
	addq	%rdx, %r9
	je	.LBB45_16
.Ltmp2175:
.LBB45_14:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	28 0 3                  # ./quickosimd.h:0:3
	movq	%rsi, %rax
.Ltmp2176:
	.p2align	4, 0x90
.LBB45_15:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 61 21 is_stmt 1      # ./quickosimd.h:61:21
	movl	(%rdi,%rcx,4), %r9d
	.loc	28 61 19 is_stmt 0      # ./quickosimd.h:61:19
	xorl	%r10d, %r10d
	xorl	%esi, %esi
	cmpl	%r9d, %r8d
	setle	%r10b
	setg	%sil
.Ltmp2177:
	#DEBUG_VALUE: c <- $sil
	.loc	28 71 12 is_stmt 1      # ./quickosimd.h:71:12
	movl	(%rdi,%rax,4), %ebx
	.loc	28 71 10 is_stmt 0      # ./quickosimd.h:71:10
	movl	%ebx, 32(%rsp)
	.loc	28 72 10 is_stmt 1      # ./quickosimd.h:72:10
	movl	%r9d, 36(%rsp)
	.loc	28 73 16                # ./quickosimd.h:73:16
	movl	32(%rsp,%rsi,4), %ebx
	.loc	28 73 14 is_stmt 0      # ./quickosimd.h:73:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	28 74 16 is_stmt 1      # ./quickosimd.h:74:16
	movl	32(%rsp,%r10,4), %ebx
	.loc	28 74 14 is_stmt 0      # ./quickosimd.h:74:14
	movl	%ebx, (%rdi,%rcx,4)
	.loc	28 75 7 is_stmt 1       # ./quickosimd.h:75:7
	addq	%rsi, %rax
.Ltmp2178:
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	.loc	28 61 21                # ./quickosimd.h:61:21
	movl	4(%rdi,%rcx,4), %r9d
	.loc	28 61 19 is_stmt 0      # ./quickosimd.h:61:19
	xorl	%r10d, %r10d
	xorl	%esi, %esi
.Ltmp2179:
	cmpl	%r9d, %r8d
	setle	%r10b
	setg	%sil
.Ltmp2180:
	#DEBUG_VALUE: c <- $sil
	.loc	28 71 12 is_stmt 1      # ./quickosimd.h:71:12
	movl	(%rdi,%rax,4), %ebx
	.loc	28 71 10 is_stmt 0      # ./quickosimd.h:71:10
	movl	%ebx, 32(%rsp)
	.loc	28 72 10 is_stmt 1      # ./quickosimd.h:72:10
	movl	%r9d, 36(%rsp)
	.loc	28 73 16                # ./quickosimd.h:73:16
	movl	32(%rsp,%rsi,4), %ebx
	.loc	28 73 14 is_stmt 0      # ./quickosimd.h:73:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	28 74 16 is_stmt 1      # ./quickosimd.h:74:16
	movl	32(%rsp,%r10,4), %ebx
	.loc	28 74 14 is_stmt 0      # ./quickosimd.h:74:14
	movl	%ebx, 4(%rdi,%rcx,4)
	.loc	28 75 7 is_stmt 1       # ./quickosimd.h:75:7
	addq	%rsi, %rax
.Ltmp2181:
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	.loc	28 60 21                # ./quickosimd.h:60:21
	addq	$2, %rcx
.Ltmp2182:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	.loc	28 60 12 is_stmt 0      # ./quickosimd.h:60:12
	cmpq	%rcx, %rdx
.Ltmp2183:
	.loc	28 60 3                 # ./quickosimd.h:60:3
	jne	.LBB45_15
.Ltmp2184:
.LBB45_16:
	#DEBUG_VALUE: partition_quick_simd:j <- $rcx
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp2185:
	#DEBUG_VALUE: swap:t <- $ecx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
.Ltmp2186:
.LBB45_4:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	28 0 0                  # ./quickosimd.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2187:
	#DEBUG_VALUE: swap:b <- undef
	.loc	28 79 1 is_stmt 1       # ./quickosimd.h:79:1
	leaq	-8(%rbp), %rsp
	popq	%rbx
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	vzeroupper
	retq
.Ltmp2188:
.Lfunc_end45:
	.size	partition_quick_simd, .Lfunc_end45-partition_quick_simd
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_simd         # -- Begin function sort_quick_simd
	.p2align	4, 0x90
	.type	sort_quick_simd,@function
sort_quick_simd:                        # @sort_quick_simd
.Lfunc_begin46:
	.loc	28 81 0                 # ./quickosimd.h:81:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	28 83 11 prologue_end   # ./quickosimd.h:83:11
	cmpq	%rdx, %rsi
.Ltmp2189:
	.loc	28 83 7 is_stmt 0       # ./quickosimd.h:83:7
	jge	.LBB46_3
.Ltmp2190:
# %bb.1:
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	.loc	28 0 7                  # ./quickosimd.h:0:7
	movq	%rdx, %r14
.Ltmp2191:
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	movq	%rsi, %r12
.Ltmp2192:
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	movq	%rdi, %r15
.Ltmp2193:
	#DEBUG_VALUE: sort_quick_simd:array <- $r15
	.p2align	4, 0x90
.LBB46_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_simd:array <- $r15
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	.loc	28 84 18 is_stmt 1      # ./quickosimd.h:84:18
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	partition_quick_simd
.Ltmp2194:
	movq	%rax, %rbx
.Ltmp2195:
	#DEBUG_VALUE: pi <- $rbx
	.loc	28 86 36                # ./quickosimd.h:86:36
	leaq	-1(%rax), %rdx
	.loc	28 86 5 is_stmt 0       # ./quickosimd.h:86:5
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	sort_quick_simd
.Ltmp2196:
	.loc	28 87 31 is_stmt 1      # ./quickosimd.h:87:31
	incq	%rbx
.Ltmp2197:
	#DEBUG_VALUE: sort_quick_simd:low <- $rbx
	.loc	28 0 31 is_stmt 0       # ./quickosimd.h:0:31
	movq	%rbx, %r12
.Ltmp2198:
	.loc	28 83 11 is_stmt 1      # ./quickosimd.h:83:11
	cmpq	%r14, %rbx
.Ltmp2199:
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:array <- undef
	.loc	28 83 7 is_stmt 0       # ./quickosimd.h:83:7
	jl	.LBB46_2
.Ltmp2200:
.LBB46_3:
	.loc	28 89 1 is_stmt 1       # ./quickosimd.h:89:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp2201:
.Lfunc_end46:
	.size	sort_quick_simd, .Lfunc_end46-sort_quick_simd
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function partition_quick_stable
.LCPI47_0:
	.long	7                       # 0x7
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.text
	.globl	partition_quick_stable
	.p2align	4, 0x90
	.type	partition_quick_stable,@function
partition_quick_stable:                 # @partition_quick_stable
.Lfunc_begin47:
	.loc	7 20 0                  # ./quickostable.h:20:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_stable:array <- $rdi
	#DEBUG_VALUE: partition_quick_stable:tmp <- $rsi
	#DEBUG_VALUE: partition_quick_stable:reverse <- $edx
	#DEBUG_VALUE: partition_quick_stable:low <- $rcx
	#DEBUG_VALUE: partition_quick_stable:high <- $r8
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r9
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r9, %r15
	movq	%r8, %r13
	movq	%rcx, %rbx
	movq	%rsi, %r14
	movq	%rdi, %r12
	movq	64(%rsp), %rbp
.Ltmp2202:
	#DEBUG_VALUE: partition_quick_stable:k <- $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	#DEBUG_VALUE: partition_quick_stable:to <- undef
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r15
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:low <- $rbx
	#DEBUG_VALUE: partition_quick_stable:reverse <- $edx
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	.loc	7 21 15 prologue_end    # ./quickostable.h:21:15
	testl	%edx, %edx
	movq	%rsi, %rdi
	cmoveq	%r12, %rdi
.Ltmp2203:
	#DEBUG_VALUE: partition_quick_stable:from <- $rdi
	.loc	7 24 15                 # ./quickostable.h:24:15
	movq	%rcx, %rsi
	movq	%r8, %rdx
.Ltmp2204:
	callq	median_of_three_stable
.Ltmp2205:
	#DEBUG_VALUE: partition_quick_stable:pivot <- $eax
	.loc	7 28 26                 # ./quickostable.h:28:26
	movq	%r13, %rdi
	subq	%rbx, %rdi
	.loc	7 28 33 is_stmt 0       # ./quickostable.h:28:33
	addq	%r15, %rdi
.Ltmp2206:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdi
	.loc	7 30 3 is_stmt 1        # ./quickostable.h:30:3
	movq	%rdi, %rcx
	#APP
	movq	%rbx, %r11
.Ltmp2207:

	movl	(%r12,%r11,4), %r8d
	cmpl	%eax, %r8d
	xorq	%r10, %r10
	setl	%r10b
	cmovgl	%r8d, %r9d
	movl	%r9d, (%r12,%r15,4)
	addq	%r10, %r15
	xorq	%r10, %r10
	setl	%r10b
	cmovll	%r8d, %r9d
	movl	%r9d, (%r14,%rbx,4)
	addq	%r10, %rbx
	xorq	%r10, %r10
	setl	%r10b
	cmovel	%r8d, %r9d
	movl	%r9d, (%r14,%rcx,4)
	subq	%r10, %rcx

	incq	%r11
	cmpq	%r11, %r13
	jle	.Ltmp2207

	#NO_APP
.Ltmp2208:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:k <- $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 76 16                 # ./quickostable.h:76:16
	leaq	-1(%r15), %rdx
	.loc	7 76 12 is_stmt 0       # ./quickostable.h:76:12
	movq	%rdx, (%rbp)
	.loc	7 77 15 is_stmt 1       # ./quickostable.h:77:15
	decq	%rbx
.Ltmp2209:
	.loc	7 77 11 is_stmt 0       # ./quickostable.h:77:11
	movq	72(%rsp), %rax
.Ltmp2210:
	movq	%rbx, (%rax)
.Ltmp2211:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	.loc	7 78 41 is_stmt 1       # ./quickostable.h:78:41
	movslq	%edi, %rax
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	cmpq	%rax, %rcx
.Ltmp2212:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jge	.LBB47_15
.Ltmp2213:
# %bb.1:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	movslq	%edi, %rax
	movq	%rax, %rdx
	subq	%rcx, %rdx
	cmpq	$31, %rdx
	jbe	.LBB47_2
.Ltmp2214:
# %bb.4:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	leaq	(%r12,%r15,4), %rbp
	movslq	%edi, %rsi
	leaq	(%r14,%rsi,4), %rbx
	addq	$4, %rbx
	cmpq	%rbx, %rbp
	jae	.LBB47_6
.Ltmp2215:
# %bb.5:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	addq	%r15, %rsi
	subq	%rcx, %rsi
	leaq	(%r12,%rsi,4), %rsi
	leaq	(%r14,%rcx,4), %rbp
	addq	$4, %rbp
	cmpq	%rsi, %rbp
	jb	.LBB47_2
.Ltmp2216:
.LBB47_6:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	movq	%rdx, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rsi
	movq	%rsi, %rbx
	shrq	$5, %rbx
	incq	%rbx
	movl	%ebx, %r9d
	andl	$1, %r9d
	testq	%rsi, %rsi
	je	.LBB47_7
.Ltmp2217:
# %bb.8:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	subq	%r9, %rbx
	movslq	%edi, %rsi
	leaq	(%r14,%rsi,4), %rsi
	addq	$-28, %rsi
	leaq	(%r12,%r15,4), %rbp
	addq	$224, %rbp
	xorl	%edi, %edi
.Ltmp2218:
	.loc	7 0 3                   # ./quickostable.h:0:3
	vmovaps	.LCPI47_0(%rip), %ymm0  # ymm0 = [7,6,5,4,3,2,1,0]
.Ltmp2219:
	.p2align	4, 0x90
.LBB47_9:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	vpermps	(%rsi), %ymm0, %ymm1
	vpermps	-32(%rsi), %ymm0, %ymm2
	vpermps	-64(%rsi), %ymm0, %ymm3
	vpermps	-96(%rsi), %ymm0, %ymm4
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	vmovups	%ymm1, -224(%rbp,%rdi,4)
	vmovups	%ymm2, -192(%rbp,%rdi,4)
	vmovups	%ymm3, -160(%rbp,%rdi,4)
	vmovups	%ymm4, -128(%rbp,%rdi,4)
	.loc	7 79 18                 # ./quickostable.h:79:18
	vpermps	-128(%rsi), %ymm0, %ymm1
	vpermps	-160(%rsi), %ymm0, %ymm2
	vpermps	-192(%rsi), %ymm0, %ymm3
	vpermps	-224(%rsi), %ymm0, %ymm4
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm1, -96(%rbp,%rdi,4)
	vmovups	%ymm2, -64(%rbp,%rdi,4)
	vmovups	%ymm3, -32(%rbp,%rdi,4)
	vmovups	%ymm4, (%rbp,%rdi,4)
	addq	$64, %rdi
	addq	$-256, %rsi
	addq	$-2, %rbx
	jne	.LBB47_9
.Ltmp2220:
# %bb.10:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 0 16                  # ./quickostable.h:0:16
	testq	%r9, %r9
	je	.LBB47_12
.Ltmp2221:
.LBB47_11:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	movq	%rax, %rsi
	subq	%rdi, %rsi
	addq	%r15, %rdi
	.loc	7 79 18                 # ./quickostable.h:79:18
	vmovaps	.LCPI47_0(%rip), %ymm0  # ymm0 = [7,6,5,4,3,2,1,0]
	vpermps	-28(%r14,%rsi,4), %ymm0, %ymm1
	vpermps	-60(%r14,%rsi,4), %ymm0, %ymm2
	vpermps	-92(%r14,%rsi,4), %ymm0, %ymm3
	vpermps	-124(%r14,%rsi,4), %ymm0, %ymm0
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm1, (%r12,%rdi,4)
	vmovups	%ymm2, 32(%r12,%rdi,4)
	vmovups	%ymm3, 64(%r12,%rdi,4)
	vmovups	%ymm0, 96(%r12,%rdi,4)
.Ltmp2222:
.LBB47_12:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 78 3 is_stmt 1        # ./quickostable.h:78:3
	cmpq	%r8, %rdx
	jne	.LBB47_13
.Ltmp2223:
# %bb.14:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 0 3 is_stmt 0         # ./quickostable.h:0:3
	leaq	(%r8,%r15), %rdx
	decq	%rdx
	jmp	.LBB47_15
.Ltmp2224:
.LBB47_13:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	subq	%r8, %rax
	addq	%r8, %r15
.Ltmp2225:
.LBB47_2:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	.loc	7 78 3                  # ./quickostable.h:78:3
	decq	%r15
	movq	%r15, %rdx
.Ltmp2226:
	.p2align	4, 0x90
.LBB47_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- undef
	#DEBUG_VALUE: j <- $rax
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	movl	(%r14,%rax,4), %esi
.Ltmp2227:
	#DEBUG_VALUE: partition_quick_stable:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	movl	%esi, 4(%r12,%rdx,4)
.Ltmp2228:
	.loc	7 78 49 is_stmt 1       # ./quickostable.h:78:49
	decq	%rax
.Ltmp2229:
	#DEBUG_VALUE: j <- $rax
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	incq	%rdx
	cmpq	%rax, %rcx
.Ltmp2230:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jl	.LBB47_3
.Ltmp2231:
.LBB47_15:
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- undef
	.loc	7 81 10 is_stmt 1       # ./quickostable.h:81:10
	movq	80(%rsp), %rax
	movq	%rdx, (%rax)
	.loc	7 82 1                  # ./quickostable.h:82:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp2232:
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2233:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2234:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp2235:
.LBB47_7:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: partition_quick_stable:h <- $rcx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:smaller <- [DW_OP_plus_uconst 64] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:larger <- [DW_OP_plus_uconst 72] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:equal <- [DW_OP_plus_uconst 80] [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r15
	.loc	7 0 1 is_stmt 0         # ./quickostable.h:0:1
	xorl	%edi, %edi
.Ltmp2236:
	testq	%r9, %r9
	jne	.LBB47_11
	jmp	.LBB47_12
.Lfunc_end47:
	.size	partition_quick_stable, .Lfunc_end47-partition_quick_stable
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function sort_quick_stable_reverse_h
.LCPI48_0:
	.long	7                       # 0x7
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.text
	.globl	sort_quick_stable_reverse_h
	.p2align	4, 0x90
	.type	sort_quick_stable_reverse_h,@function
sort_quick_stable_reverse_h:            # @sort_quick_stable_reverse_h
.Lfunc_begin48:
	.loc	7 86 0 is_stmt 1        # ./quickostable.h:86:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $rsi
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rdx
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $rcx
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%r8, %r14
	movq	%rcx, %r13
	movq	%rdx, %rbp
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp2237:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	.loc	7 87 12 prologue_end    # ./quickostable.h:87:12
	movq	%rcx, %rbx
	subq	%rdx, %rbx
	.loc	7 87 18 is_stmt 0       # ./quickostable.h:87:18
	cmpq	$3, %rbx
.Ltmp2238:
	.loc	7 87 7                  # ./quickostable.h:87:7
	jl	.LBB48_16
.Ltmp2239:
# %bb.1:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:low <- $rbp
	#DEBUG_VALUE: partition_quick_stable:high <- $r13
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:to <- undef
	.loc	7 24 15 is_stmt 1       # ./quickostable.h:24:15
	movq	%r12, %rdi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	median_of_three_stable
.Ltmp2240:
	#DEBUG_VALUE: partition_quick_stable:k <- $rbp
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:pivot <- $eax
	.loc	7 28 33                 # ./quickostable.h:28:33
	addq	%r14, %rbx
.Ltmp2241:
	#DEBUG_VALUE: partition_quick_stable:h <- $rbx
	.loc	7 0 33 is_stmt 0        # ./quickostable.h:0:33
	movq	%rbp, (%rsp)            # 8-byte Spill
.Ltmp2242:
	#DEBUG_VALUE: partition_quick_stable:k <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	.loc	7 30 3 is_stmt 1        # ./quickostable.h:30:3
	movq	%rbp, %rcx
	movq	%r14, %rbp
.Ltmp2243:
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:low_target <- $rbp
	movq	%rbx, %rdx
	#APP
	movq	%rcx, %r11
.Ltmp2244:

	movl	(%r15,%r11,4), %r8d
	cmpl	%eax, %r8d
	xorq	%r10, %r10
	setl	%r10b
	cmovgl	%r8d, %r9d
	movl	%r9d, (%r15,%r14,4)
	addq	%r10, %r14
	xorq	%r10, %r10
	setl	%r10b
	cmovll	%r8d, %r9d
	movl	%r9d, (%r12,%rcx,4)
	addq	%r10, %rcx
	xorq	%r10, %r10
	setl	%r10b
	cmovel	%r8d, %r9d
	movl	%r9d, (%r12,%rdx,4)
	subq	%r10, %rdx

	incq	%r11
	cmpq	%r11, %r13
	jle	.Ltmp2244

	#NO_APP
.Ltmp2245:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:k <- $rcx
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	.loc	7 76 16                 # ./quickostable.h:76:16
	leaq	-1(%r14), %r13
.Ltmp2246:
	.loc	7 77 15                 # ./quickostable.h:77:15
	decq	%rcx
.Ltmp2247:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	7 78 41                 # ./quickostable.h:78:41
	movslq	%ebx, %rax
.Ltmp2248:
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	cmpq	%rax, %rdx
.Ltmp2249:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jge	.LBB48_15
.Ltmp2250:
# %bb.2:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low_target <- $rbp
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	movslq	%ebx, %r10
	subq	%rdx, %r10
	cmpq	$32, %r10
	jb	.LBB48_14
.Ltmp2251:
# %bb.3:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low_target <- $rbp
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 3                   # ./quickostable.h:0:3
	movq	%rbp, %r11
	.loc	7 78 3                  # ./quickostable.h:78:3
	leaq	(%r15,%r14,4), %rdi
	movslq	%ebx, %rsi
	leaq	(%r12,%rsi,4), %rbp
.Ltmp2252:
	addq	$4, %rbp
	cmpq	%rbp, %rdi
	jae	.LBB48_6
.Ltmp2253:
# %bb.4:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	addq	%r14, %rsi
	subq	%rdx, %rsi
	leaq	(%r15,%rsi,4), %rsi
	leaq	(%r12,%rdx,4), %rdi
	addq	$4, %rdi
	cmpq	%rsi, %rdi
	jae	.LBB48_6
.Ltmp2254:
# %bb.5:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 3                   # ./quickostable.h:0:3
	movq	%r11, %rbp
	jmp	.LBB48_14
.Ltmp2255:
.LBB48_16:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	.loc	7 92 18 is_stmt 1       # ./quickostable.h:92:18
	cmpq	%rbp, %r13
.Ltmp2256:
	.loc	7 92 14 is_stmt 0       # ./quickostable.h:92:14
	jle	.LBB48_20
.Ltmp2257:
# %bb.17:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	.loc	7 93 5 is_stmt 1        # ./quickostable.h:93:5
	movq	%r12, %rdi
	movq	%rbp, %rsi
	movq	%r13, %rdx
	callq	median_of_three_stable
.Ltmp2258:
	#DEBUG_VALUE: i <- 0
	.loc	7 94 23                 # ./quickostable.h:94:23
	testq	%rbx, %rbx
.Ltmp2259:
	.loc	7 94 5 is_stmt 0        # ./quickostable.h:94:5
	js	.LBB48_20
.Ltmp2260:
# %bb.18:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	leaq	(%r15,%r14,4), %rax
	leaq	(%r12,%rbp,4), %rcx
	xorl	%edx, %edx
.Ltmp2261:
	.p2align	4, 0x90
.LBB48_19:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	#DEBUG_VALUE: i <- $rdx
	.loc	7 95 31 is_stmt 1       # ./quickostable.h:95:31
	movl	(%rcx,%rdx,4), %esi
	.loc	7 95 29 is_stmt 0       # ./quickostable.h:95:29
	movl	%esi, (%rax,%rdx,4)
.Ltmp2262:
	.loc	7 94 39 is_stmt 1       # ./quickostable.h:94:39
	incq	%rdx
.Ltmp2263:
	#DEBUG_VALUE: i <- $rdx
	.loc	7 94 23 is_stmt 0       # ./quickostable.h:94:23
	cmpq	%rdx, %rbx
.Ltmp2264:
	.loc	7 94 5                  # ./quickostable.h:94:5
	jge	.LBB48_19
.Ltmp2265:
.LBB48_20:
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low <- $rbp
	#DEBUG_VALUE: sort_quick_stable_reverse_h:high <- $r13
	#DEBUG_VALUE: sort_quick_stable_reverse_h:low_target <- $r14
	.loc	7 98 1 is_stmt 1        # ./quickostable.h:98:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp2266:
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2267:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2268:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2269:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp2270:
	.cfi_def_cfa_offset 8
	retq
.LBB48_6:
	.cfi_def_cfa_offset 64
.Ltmp2271:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 78 3                  # ./quickostable.h:78:3
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rsi
	movq	%rsi, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %r8d
	andl	$1, %r8d
	testq	%rsi, %rsi
	je	.LBB48_7
.Ltmp2272:
# %bb.8:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	subq	%r8, %rdi
	movslq	%ebx, %rsi
	leaq	(%r12,%rsi,4), %rsi
	addq	$-28, %rsi
	leaq	(%r15,%r14,4), %rbp
	addq	$224, %rbp
	xorl	%ebx, %ebx
.Ltmp2273:
	.loc	7 0 3 is_stmt 0         # ./quickostable.h:0:3
	vmovaps	.LCPI48_0(%rip), %ymm0  # ymm0 = [7,6,5,4,3,2,1,0]
.Ltmp2274:
	.p2align	4, 0x90
.LBB48_9:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	vpermps	(%rsi), %ymm0, %ymm1
	vpermps	-32(%rsi), %ymm0, %ymm2
	vpermps	-64(%rsi), %ymm0, %ymm3
	vpermps	-96(%rsi), %ymm0, %ymm4
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	vmovups	%ymm1, -224(%rbp,%rbx,4)
	vmovups	%ymm2, -192(%rbp,%rbx,4)
	vmovups	%ymm3, -160(%rbp,%rbx,4)
	vmovups	%ymm4, -128(%rbp,%rbx,4)
	.loc	7 79 18                 # ./quickostable.h:79:18
	vpermps	-128(%rsi), %ymm0, %ymm1
	vpermps	-160(%rsi), %ymm0, %ymm2
	vpermps	-192(%rsi), %ymm0, %ymm3
	vpermps	-224(%rsi), %ymm0, %ymm4
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm1, -96(%rbp,%rbx,4)
	vmovups	%ymm2, -64(%rbp,%rbx,4)
	vmovups	%ymm3, -32(%rbp,%rbx,4)
	vmovups	%ymm4, (%rbp,%rbx,4)
	addq	$64, %rbx
	addq	$-256, %rsi
	addq	$-2, %rdi
	jne	.LBB48_9
.Ltmp2275:
# %bb.10:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 16                  # ./quickostable.h:0:16
	testq	%r8, %r8
	je	.LBB48_12
.Ltmp2276:
.LBB48_11:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	movq	%rax, %rsi
	subq	%rbx, %rsi
	addq	%r14, %rbx
	.loc	7 79 18                 # ./quickostable.h:79:18
	vmovaps	.LCPI48_0(%rip), %ymm0  # ymm0 = [7,6,5,4,3,2,1,0]
	vpermps	-28(%r12,%rsi,4), %ymm0, %ymm1
	vpermps	-60(%r12,%rsi,4), %ymm0, %ymm2
	vpermps	-92(%r12,%rsi,4), %ymm0, %ymm3
	vpermps	-124(%r12,%rsi,4), %ymm0, %ymm0
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm1, (%r15,%rbx,4)
	vmovups	%ymm2, 32(%r15,%rbx,4)
	vmovups	%ymm3, 64(%r15,%rbx,4)
	vmovups	%ymm0, 96(%r15,%rbx,4)
.Ltmp2277:
.LBB48_12:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 16                  # ./quickostable.h:0:16
	addq	%r9, %r14
.Ltmp2278:
	.loc	7 78 3 is_stmt 1        # ./quickostable.h:78:3
	cmpq	%r9, %r10
	movq	%r11, %rbp
	je	.LBB48_15
.Ltmp2279:
# %bb.13:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 3 is_stmt 0         # ./quickostable.h:0:3
	subq	%r9, %rax
.Ltmp2280:
	.p2align	4, 0x90
.LBB48_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: j <- $rax
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	movl	(%r12,%rax,4), %esi
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	movl	%esi, (%r15,%r14,4)
	.loc	7 79 12                 # ./quickostable.h:79:12
	incq	%r14
.Ltmp2281:
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	.loc	7 78 49 is_stmt 1       # ./quickostable.h:78:49
	decq	%rax
.Ltmp2282:
	#DEBUG_VALUE: j <- $rax
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	cmpq	%rax, %rdx
.Ltmp2283:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jl	.LBB48_14
.Ltmp2284:
.LBB48_15:
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:i <- undef
	#DEBUG_VALUE: larger <- $rcx
	#DEBUG_VALUE: equal <- undef
	.loc	7 90 5 is_stmt 1        # ./quickostable.h:90:5
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	(%rsp), %rdx            # 8-byte Reload
.Ltmp2285:
	movq	%r14, %r8
	vzeroupper
	callq	sort_quick_stable_reverse_h
.Ltmp2286:
	#DEBUG_VALUE: smaller <- $r13
	.loc	7 91 5                  # ./quickostable.h:91:5
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	movq	%r13, %rcx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp2287:
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp2288:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp2289:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_stable_h     # TAILCALL
.Ltmp2290:
.LBB48_7:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:h <- $rdx
	#DEBUG_VALUE: partition_quick_stable:low <- [$rsp+0]
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:reverse <- 1
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r12
	#DEBUG_VALUE: partition_quick_stable:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:array <- $r15
	#DEBUG_VALUE: sort_quick_stable_reverse_h:tmp <- $r12
	.loc	7 0 5 is_stmt 0         # ./quickostable.h:0:5
	xorl	%ebx, %ebx
.Ltmp2291:
	testq	%r8, %r8
	jne	.LBB48_11
	jmp	.LBB48_12
.Lfunc_end48:
	.size	sort_quick_stable_reverse_h, .Lfunc_end48-sort_quick_stable_reverse_h
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function sort_quick_stable_h
.LCPI49_0:
	.long	7                       # 0x7
	.long	6                       # 0x6
	.long	5                       # 0x5
	.long	4                       # 0x4
	.long	3                       # 0x3
	.long	2                       # 0x2
	.long	1                       # 0x1
	.long	0                       # 0x0
	.text
	.globl	sort_quick_stable_h
	.p2align	4, 0x90
	.type	sort_quick_stable_h,@function
sort_quick_stable_h:                    # @sort_quick_stable_h
.Lfunc_begin49:
	.loc	7 100 0 is_stmt 1       # ./quickostable.h:100:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_stable_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $rsi
	#DEBUG_VALUE: sort_quick_stable_h:low <- $rdx
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rcx, %rbx
	movq	%rdx, %r14
	movq	%rdi, %r12
.Ltmp2292:
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $rsi
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	.loc	7 101 12 prologue_end   # ./quickostable.h:101:12
	movq	%rcx, %rax
	subq	%rdx, %rax
	.loc	7 101 18 is_stmt 0      # ./quickostable.h:101:18
	cmpq	$3, %rax
.Ltmp2293:
	.loc	7 101 7                 # ./quickostable.h:101:7
	jl	.LBB49_19
.Ltmp2294:
# %bb.1:
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $rsi
	.loc	7 0 7                   # ./quickostable.h:0:7
	movq	%rsi, %r15
.Ltmp2295:
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	.loc	7 78 3 is_stmt 1        # ./quickostable.h:78:3
	leaq	4(%rsi), %rax
	movq	%rax, 16(%rsp)          # 8-byte Spill
	leaq	-28(%rsi), %rax
	movq	%rax, 8(%rsp)           # 8-byte Spill
	leaq	224(%r12), %rax
	movq	%rax, (%rsp)            # 8-byte Spill
	jmp	.LBB49_2
.Ltmp2296:
	.p2align	4, 0x90
.LBB49_3:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 0 3 is_stmt 0         # ./quickostable.h:0:3
	movq	%r11, %rbx
.Ltmp2297:
.LBB49_18:                              #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:i <- undef
	#DEBUG_VALUE: larger <- $rcx
	#DEBUG_VALUE: equal <- undef
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	.loc	7 104 5 is_stmt 1       # ./quickostable.h:104:5
	movq	%r12, %rdi
	movq	%r15, %rsi
	movq	%r14, %rdx
	movq	%rbp, %r8
	vzeroupper
	callq	sort_quick_stable_reverse_h
.Ltmp2298:
	#DEBUG_VALUE: smaller <- $rbx
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 101 12                # ./quickostable.h:101:12
	movq	%rbx, %rax
	subq	%r14, %rax
	.loc	7 101 18 is_stmt 0      # ./quickostable.h:101:18
	cmpq	$2, %rax
.Ltmp2299:
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- undef
	#DEBUG_VALUE: sort_quick_stable_h:array <- undef
	.loc	7 101 7                 # ./quickostable.h:101:7
	jle	.LBB49_19
.Ltmp2300:
.LBB49_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB49_12 Depth 2
                                        #     Child Loop BB49_17 Depth 2
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:to <- undef
	.loc	7 24 15 is_stmt 1       # ./quickostable.h:24:15
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	callq	median_of_three_stable
.Ltmp2301:
	#DEBUG_VALUE: partition_quick_stable:h <- $rbx
	#DEBUG_VALUE: partition_quick_stable:k <- $r14
	#DEBUG_VALUE: partition_quick_stable:i <- $r14
	#DEBUG_VALUE: partition_quick_stable:pivot <- $eax
	.loc	7 30 3                  # ./quickostable.h:30:3
	movq	%rbx, %r13
	movq	%r14, %rbp
	movq	%r14, %rcx
	#APP
	movq	%rcx, %r11
.Ltmp2302:

	movl	(%r12,%r11,4), %r8d
	cmpl	%eax, %r8d
	xorq	%r10, %r10
	setl	%r10b
	cmovgl	%r8d, %r9d
	movl	%r9d, (%r12,%rbp,4)
	addq	%r10, %rbp
	xorq	%r10, %r10
	setl	%r10b
	cmovll	%r8d, %r9d
	movl	%r9d, (%r15,%rcx,4)
	addq	%r10, %rcx
	xorq	%r10, %r10
	setl	%r10b
	cmovel	%r8d, %r9d
	movl	%r9d, (%r15,%r13,4)
	subq	%r10, %r13

	incq	%r11
	cmpq	%r11, %rbx
	jle	.Ltmp2302

	#NO_APP
.Ltmp2303:
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:k <- $rcx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	.loc	7 76 16                 # ./quickostable.h:76:16
	leaq	-1(%rbp), %r11
	.loc	7 77 15                 # ./quickostable.h:77:15
	decq	%rcx
.Ltmp2304:
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	7 78 41                 # ./quickostable.h:78:41
	movslq	%ebx, %rax
.Ltmp2305:
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	cmpq	%rax, %r13
.Ltmp2306:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jge	.LBB49_3
.Ltmp2307:
# %bb.4:                                #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	movslq	%ebx, %r10
	subq	%r13, %r10
	cmpq	$32, %r10
	jae	.LBB49_6
.Ltmp2308:
# %bb.5:                                #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 0 3                   # ./quickostable.h:0:3
	movq	%r11, %rbx
.Ltmp2309:
	jmp	.LBB49_17
.Ltmp2310:
	.p2align	4, 0x90
.LBB49_6:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 78 3                  # ./quickostable.h:78:3
	leaq	(%r12,%rbp,4), %r8
	movslq	%ebx, %rdx
	movq	16(%rsp), %rsi          # 8-byte Reload
	leaq	(%rsi,%rdx,4), %rdi
	cmpq	%rdi, %r8
	vmovaps	.LCPI49_0(%rip), %ymm4  # ymm4 = [7,6,5,4,3,2,1,0]
	jae	.LBB49_9
.Ltmp2311:
# %bb.7:                                #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	addq	%rbp, %rdx
	subq	%r13, %rdx
	leaq	(%r12,%rdx,4), %rdx
	leaq	(%rsi,%r13,4), %rsi
	cmpq	%rdx, %rsi
	jae	.LBB49_9
.Ltmp2312:
# %bb.8:                                #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 0 3                   # ./quickostable.h:0:3
	movq	%r11, %rbx
.Ltmp2313:
	jmp	.LBB49_17
.Ltmp2314:
.LBB49_9:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 78 3                  # ./quickostable.h:78:3
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rdx
	movq	%rdx, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %r8d
	andl	$1, %r8d
	testq	%rdx, %rdx
	je	.LBB49_10
.Ltmp2315:
# %bb.11:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	subq	%r8, %rdi
	movslq	%ebx, %rdx
	movq	8(%rsp), %rsi           # 8-byte Reload
	leaq	(%rsi,%rdx,4), %rbx
.Ltmp2316:
	.loc	7 0 3                   # ./quickostable.h:0:3
	movq	(%rsp), %rdx            # 8-byte Reload
	.loc	7 78 3                  # ./quickostable.h:78:3
	leaq	(%rdx,%rbp,4), %rdx
	xorl	%esi, %esi
.Ltmp2317:
	.p2align	4, 0x90
.LBB49_12:                              #   Parent Loop BB49_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	vpermps	(%rbx), %ymm4, %ymm0
	vpermps	-32(%rbx), %ymm4, %ymm1
	vpermps	-64(%rbx), %ymm4, %ymm2
	vpermps	-96(%rbx), %ymm4, %ymm3
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	vmovups	%ymm0, -224(%rdx,%rsi,4)
	vmovups	%ymm1, -192(%rdx,%rsi,4)
	vmovups	%ymm2, -160(%rdx,%rsi,4)
	vmovups	%ymm3, -128(%rdx,%rsi,4)
	.loc	7 79 18                 # ./quickostable.h:79:18
	vpermps	-128(%rbx), %ymm4, %ymm0
	vpermps	-160(%rbx), %ymm4, %ymm1
	vpermps	-192(%rbx), %ymm4, %ymm2
	vpermps	-224(%rbx), %ymm4, %ymm3
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm0, -96(%rdx,%rsi,4)
	vmovups	%ymm1, -64(%rdx,%rsi,4)
	vmovups	%ymm2, -32(%rdx,%rsi,4)
	vmovups	%ymm3, (%rdx,%rsi,4)
	addq	$64, %rsi
	addq	$-256, %rbx
	addq	$-2, %rdi
	jne	.LBB49_12
.Ltmp2318:
# %bb.13:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	.loc	7 0 16                  # ./quickostable.h:0:16
	testq	%r8, %r8
	je	.LBB49_15
.Ltmp2319:
.LBB49_14:                              #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	movq	%rax, %rdx
	subq	%rsi, %rdx
	addq	%rbp, %rsi
	.loc	7 79 18                 # ./quickostable.h:79:18
	vpermps	-28(%r15,%rdx,4), %ymm4, %ymm0
	vpermps	-60(%r15,%rdx,4), %ymm4, %ymm1
	vpermps	-92(%r15,%rdx,4), %ymm4, %ymm2
	vpermps	-124(%r15,%rdx,4), %ymm4, %ymm3
	.loc	7 79 16                 # ./quickostable.h:79:16
	vmovups	%ymm0, (%r12,%rsi,4)
	vmovups	%ymm1, 32(%r12,%rsi,4)
	vmovups	%ymm2, 64(%r12,%rsi,4)
	vmovups	%ymm3, 96(%r12,%rsi,4)
.Ltmp2320:
.LBB49_15:                              #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	.loc	7 0 16                  # ./quickostable.h:0:16
	addq	%r9, %rbp
.Ltmp2321:
	.loc	7 78 3 is_stmt 1        # ./quickostable.h:78:3
	cmpq	%r9, %r10
	movq	%r11, %rbx
	je	.LBB49_18
.Ltmp2322:
# %bb.16:                               #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	.loc	7 0 3 is_stmt 0         # ./quickostable.h:0:3
	subq	%r9, %rax
.Ltmp2323:
	.p2align	4, 0x90
.LBB49_17:                              #   Parent Loop BB49_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: j <- $rax
	.loc	7 79 18 is_stmt 1       # ./quickostable.h:79:18
	movl	(%r15,%rax,4), %edx
	.loc	7 79 16 is_stmt 0       # ./quickostable.h:79:16
	movl	%edx, (%r12,%rbp,4)
	.loc	7 79 12                 # ./quickostable.h:79:12
	incq	%rbp
.Ltmp2324:
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	.loc	7 78 49 is_stmt 1       # ./quickostable.h:78:49
	decq	%rax
.Ltmp2325:
	#DEBUG_VALUE: j <- $rax
	.loc	7 78 43 is_stmt 0       # ./quickostable.h:78:43
	cmpq	%rax, %r13
.Ltmp2326:
	.loc	7 78 3                  # ./quickostable.h:78:3
	jl	.LBB49_17
	jmp	.LBB49_18
.Ltmp2327:
.LBB49_10:                              #   in Loop: Header=BB49_2 Depth=1
	#DEBUG_VALUE: j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_stable:i <- $rbp
	#DEBUG_VALUE: partition_quick_stable:h <- $r13
	#DEBUG_VALUE: partition_quick_stable:from <- $r12
	#DEBUG_VALUE: partition_quick_stable:low_target <- $r14
	#DEBUG_VALUE: partition_quick_stable:high <- $rbx
	#DEBUG_VALUE: partition_quick_stable:low <- $r14
	#DEBUG_VALUE: partition_quick_stable:reverse <- 0
	#DEBUG_VALUE: partition_quick_stable:tmp <- $r15
	#DEBUG_VALUE: partition_quick_stable:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:tmp <- $r15
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 0 3                   # ./quickostable.h:0:3
	xorl	%esi, %esi
	testq	%r8, %r8
	jne	.LBB49_14
	jmp	.LBB49_15
.Ltmp2328:
.LBB49_19:
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 106 18 is_stmt 1      # ./quickostable.h:106:18
	cmpq	%r14, %rbx
.Ltmp2329:
	.loc	7 106 14 is_stmt 0      # ./quickostable.h:106:14
	jle	.LBB49_20
.Ltmp2330:
# %bb.21:
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 107 5 is_stmt 1       # ./quickostable.h:107:5
	movq	%r12, %rdi
	movq	%r14, %rsi
	movq	%rbx, %rdx
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2331:
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp2332:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2333:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	median_of_three_stable  # TAILCALL
.Ltmp2334:
.LBB49_20:
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: sort_quick_stable_h:array <- $r12
	#DEBUG_VALUE: sort_quick_stable_h:low <- $r14
	#DEBUG_VALUE: sort_quick_stable_h:high <- $rbx
	.loc	7 109 1                 # ./quickostable.h:109:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp2335:
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp2336:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp2337:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2338:
.Lfunc_end49:
	.size	sort_quick_stable_h, .Lfunc_end49-sort_quick_stable_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_stable       # -- Begin function sort_quick_stable
	.p2align	4, 0x90
	.type	sort_quick_stable,@function
sort_quick_stable:                      # @sort_quick_stable
.Lfunc_begin50:
	.loc	7 112 0                 # ./quickostable.h:112:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_stable:array <- $rdi
	#DEBUG_VALUE: sort_quick_stable:low <- $rsi
	#DEBUG_VALUE: sort_quick_stable:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp2339:
	#DEBUG_VALUE: sort_quick_stable:high <- $r14
	#DEBUG_VALUE: sort_quick_stable:low <- $r12
	#DEBUG_VALUE: sort_quick_stable:array <- $r15
	.loc	7 113 53 prologue_end   # ./quickostable.h:113:53
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	7 113 45 is_stmt 0      # ./quickostable.h:113:45
	leaq	(,%rax,4), %rdi
	.loc	7 113 22                # ./quickostable.h:113:22
	callq	malloc
.Ltmp2340:
	movq	%rax, %rbx
.Ltmp2341:
	#DEBUG_VALUE: sort_quick_stable:tmp <- $rbx
	.loc	7 114 3 is_stmt 1       # ./quickostable.h:114:3
	movq	%r15, %rdi
.Ltmp2342:
	#DEBUG_VALUE: sort_quick_stable:array <- $rdi
	movq	%rax, %rsi
	movq	%r12, %rdx
	movq	%r14, %rcx
	callq	sort_quick_stable_h
.Ltmp2343:
	.loc	7 115 3                 # ./quickostable.h:115:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp2344:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp2345:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2346:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp2347:
.Lfunc_end50:
	.size	sort_quick_stable, .Lfunc_end50-sort_quick_stable
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_arith # -- Begin function partition_quick_optimized_swap_arith
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_arith,@function
partition_quick_optimized_swap_arith:   # @partition_quick_optimized_swap_arith
.Lfunc_begin51:
	.file	29 "/home/peeters/bachelor" "./quickoswaparith.h"
	.loc	29 21 0                 # ./quickoswaparith.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp2348:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r9
	subq	%rsi, %r9
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r9
.Ltmp2349:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB51_2
.Ltmp2350:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2351:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2352:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2353:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2354:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2355:
	.loc	29 25 17 is_stmt 1      # ./quickoswaparith.h:25:17
	addq	%rsi, %rdx
.Ltmp2356:
	.loc	29 25 25 is_stmt 0      # ./quickoswaparith.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2357:
	.loc	29 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2358:
.LBB51_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2359:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2360:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r8d
.Ltmp2361:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2362:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ecx
.Ltmp2363:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r8d, %ecx
.Ltmp2364:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2365:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r8d
.Ltmp2366:
	cmovll	%ecx, %r8d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2367:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ebx
.Ltmp2368:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %r11d
.Ltmp2369:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r8d
.Ltmp2370:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2371:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r9
.Ltmp2372:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB51_4
.Ltmp2373:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r8d, (%rdi,%r10,4)
.Ltmp2374:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	29 0 0 is_stmt 0        # ./quickoswaparith.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2375:
	#DEBUG_VALUE: swap:b <- undef
	.loc	29 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2376:
.LBB51_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r8d, (%rdi,%rdx,4)
.Ltmp2377:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2378:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	29 29 27                # ./quickoswaparith.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2379:
	.loc	29 29 3 is_stmt 0       # ./quickoswaparith.h:29:3
	jle	.LBB51_5
.Ltmp2380:
# %bb.6:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r9
	notq	%r9
	testb	$1, %al
	jne	.LBB51_8
.Ltmp2381:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
                                        # implicit-def: $rax
	.loc	29 0 3                  # ./quickoswaparith.h:0:3
	movq	%rsi, %r10
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	addq	%rdx, %r9
	jne	.LBB51_10
	jmp	.LBB51_12
.Ltmp2382:
.LBB51_5:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	29 0 0                  # ./quickoswaparith.h:0:0
	movq	%rsi, %rax
.Ltmp2383:
	jmp	.LBB51_12
.Ltmp2384:
.LBB51_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	29 30 19 is_stmt 1      # ./quickoswaparith.h:30:19
	xorl	%eax, %eax
	cmpl	(%rdi,%rsi,4), %r8d
	setg	%al
.Ltmp2385:
	#DEBUG_VALUE: f <- undef
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: y <- undef
	#DEBUG_VALUE: x <- undef
	#DEBUG_VALUE: c <- $al
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rax
.Ltmp2386:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	.loc	29 29 36                # ./quickoswaparith.h:29:36
	movq	%rsi, %r10
.Ltmp2387:
	#DEBUG_VALUE: j <- $r10
	incq	%r10
.Ltmp2388:
	#DEBUG_VALUE: j <- $r10
	.loc	29 0 36 is_stmt 0       # ./quickoswaparith.h:0:36
	movq	%rax, %rsi
.Ltmp2389:
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	addq	%rdx, %r9
	je	.LBB51_12
.Ltmp2390:
.LBB51_10:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	29 0 3                  # ./quickoswaparith.h:0:3
	movq	%rsi, %rax
.Ltmp2391:
	.p2align	4, 0x90
.LBB51_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	#DEBUG_VALUE: j <- $r10
	.loc	29 30 21 is_stmt 1      # ./quickoswaparith.h:30:21
	movl	(%rdi,%r10,4), %r9d
	.loc	29 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%esi, %esi
	cmpl	%r9d, %r8d
	setg	%sil
.Ltmp2392:
	#DEBUG_VALUE: c <- $sil
	.loc	29 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%rdi,%rax,4), %ebx
.Ltmp2393:
	#DEBUG_VALUE: y <- $r9d
	#DEBUG_VALUE: x <- $ebx
	.loc	29 33 19                # ./quickoswaparith.h:33:19
	movl	%r9d, %ecx
	cmovgl	%ebx, %ecx
.Ltmp2394:
	#DEBUG_VALUE: d <- $ecx
	.loc	29 34 15                # ./quickoswaparith.h:34:15
	addl	%r9d, %ebx
.Ltmp2395:
	.loc	29 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%ecx, %ebx
.Ltmp2396:
	#DEBUG_VALUE: f <- $ebx
	.loc	29 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%ecx, (%rdi,%r10,4)
	.loc	29 36 14                # ./quickoswaparith.h:36:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rax, %rsi
.Ltmp2397:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	.loc	29 30 21                # ./quickoswaparith.h:30:21
	movl	4(%rdi,%r10,4), %r9d
.Ltmp2398:
	.loc	29 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%eax, %eax
	cmpl	%r9d, %r8d
	setg	%al
.Ltmp2399:
	#DEBUG_VALUE: c <- $al
	.loc	29 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%rdi,%rsi,4), %ebx
.Ltmp2400:
	#DEBUG_VALUE: y <- $r9d
	#DEBUG_VALUE: x <- $ebx
	.loc	29 33 19                # ./quickoswaparith.h:33:19
	movl	%r9d, %ecx
.Ltmp2401:
	cmovgl	%ebx, %ecx
.Ltmp2402:
	#DEBUG_VALUE: d <- $ecx
	.loc	29 34 15                # ./quickoswaparith.h:34:15
	addl	%r9d, %ebx
.Ltmp2403:
	.loc	29 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%ecx, %ebx
.Ltmp2404:
	#DEBUG_VALUE: f <- $ebx
	.loc	29 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%ecx, 4(%rdi,%r10,4)
	.loc	29 36 14                # ./quickoswaparith.h:36:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rax
.Ltmp2405:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	.loc	29 29 36                # ./quickoswaparith.h:29:36
	addq	$2, %r10
.Ltmp2406:
	#DEBUG_VALUE: j <- $r10
	.loc	29 29 27 is_stmt 0      # ./quickoswaparith.h:29:27
	cmpq	%r10, %rdx
.Ltmp2407:
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	jne	.LBB51_11
.Ltmp2408:
.LBB51_12:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp2409:
	#DEBUG_VALUE: swap:t <- $ecx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
.Ltmp2410:
	.loc	29 0 0                  # ./quickoswaparith.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2411:
	#DEBUG_VALUE: swap:b <- undef
	.loc	29 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2412:
.Lfunc_end51:
	.size	partition_quick_optimized_swap_arith, .Lfunc_end51-partition_quick_optimized_swap_arith
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_arith # -- Begin function sort_quick_optimized_swap_arith
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_arith,@function
sort_quick_optimized_swap_arith:        # @sort_quick_optimized_swap_arith
.Lfunc_begin52:
	.loc	29 43 0                 # ./quickoswaparith.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	29 44 11 prologue_end   # ./quickoswaparith.h:44:11
	cmpq	%rsi, %rdx
.Ltmp2413:
	.loc	29 44 7 is_stmt 0       # ./quickoswaparith.h:44:7
	jle	.LBB52_30
.Ltmp2414:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	.loc	29 0 7                  # ./quickoswaparith.h:0:7
	movq	%rdx, %r14
.Ltmp2415:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	movq	%rdi, %r12
.Ltmp2416:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	movq	%rdx, %r15
	negq	%r15
	jmp	.LBB52_2
.Ltmp2417:
	.p2align	4, 0x90
.LBB52_4:                               #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r12,%rsi,4), %eax
.Ltmp2418:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r12,%r14,4), %ecx
.Ltmp2419:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2420:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r12,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2421:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r12,%r14,4)
.Ltmp2422:
	.loc	29 25 17 is_stmt 1      # ./quickoswaparith.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	29 25 25 is_stmt 0      # ./quickoswaparith.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2423:
.LBB52_11:                              #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	29 47 54 is_stmt 1      # ./quickoswaparith.h:47:54
	leaq	-1(%rbx), %rdx
	.loc	29 47 7 is_stmt 0       # ./quickoswaparith.h:47:7
	movq	%r12, %rdi
	callq	sort_quick_optimized_swap_arith
.Ltmp2424:
	.loc	29 48 49 is_stmt 1      # ./quickoswaparith.h:48:49
	incq	%rbx
.Ltmp2425:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rbx
	.loc	29 0 49 is_stmt 0       # ./quickoswaparith.h:0:49
	movq	%rbx, %rsi
.Ltmp2426:
	.loc	29 44 11 is_stmt 1      # ./quickoswaparith.h:44:11
	cmpq	%r14, %rbx
.Ltmp2427:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- undef
	.loc	29 44 7 is_stmt 0       # ./quickoswaparith.h:44:7
	jge	.LBB52_30
.Ltmp2428:
.LBB52_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB52_31 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	29 45 20 is_stmt 1      # ./quickoswaparith.h:45:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2429:
	.loc	29 45 9 is_stmt 0       # ./quickoswaparith.h:45:9
	jle	.LBB52_12
.Ltmp2430:
# %bb.3:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2431:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB52_4
.Ltmp2432:
# %bb.5:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2433:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r12,%rsi,4), %ecx
.Ltmp2434:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r12,%r8,4), %eax
.Ltmp2435:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r12,%r14,4), %ebp
.Ltmp2436:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2437:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2438:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2439:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %r9d
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2440:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2441:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebp
.Ltmp2442:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2443:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r12,%rsi,4)
.Ltmp2444:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2445:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB52_7
.Ltmp2446:
# %bb.6:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%r12,%r8,4)
.Ltmp2447:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r12,%r14,4)
.Ltmp2448:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB52_11
.Ltmp2449:
	.p2align	4, 0x90
.LBB52_7:                               #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r9d, (%r12,%r14,4)
.Ltmp2450:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r12,%r8,4)
.Ltmp2451:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	movl	%r14d, %edi
	subl	%esi, %edi
	movq	%rsi, %rdx
	notq	%rdx
	movq	%rsi, %rbx
.Ltmp2452:
	.loc	29 0 3 is_stmt 0        # ./quickoswaparith.h:0:3
	movq	%rsi, %rcx
.Ltmp2453:
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	testb	$1, %dil
	je	.LBB52_9
.Ltmp2454:
# %bb.8:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	29 30 19 is_stmt 1      # ./quickoswaparith.h:30:19
	xorl	%ebx, %ebx
	cmpl	(%r12,%rsi,4), %r9d
	setg	%bl
.Ltmp2455:
	#DEBUG_VALUE: f <- undef
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: y <- undef
	#DEBUG_VALUE: x <- undef
	#DEBUG_VALUE: c <- $bl
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rbx
.Ltmp2456:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	.loc	29 29 36                # ./quickoswaparith.h:29:36
	leaq	1(%rsi), %rcx
.Ltmp2457:
	#DEBUG_VALUE: j <- $rcx
.LBB52_9:                               #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	29 29 3 is_stmt 0       # ./quickoswaparith.h:29:3
	cmpq	%r15, %rdx
	je	.LBB52_10
.Ltmp2458:
	.p2align	4, 0x90
.LBB52_31:                              #   Parent Loop BB52_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	29 30 21 is_stmt 1      # ./quickoswaparith.h:30:21
	movl	(%r12,%rcx,4), %eax
	.loc	29 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2459:
	#DEBUG_VALUE: c <- $dl
	.loc	29 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%r12,%rbx,4), %ebp
.Ltmp2460:
	#DEBUG_VALUE: y <- $eax
	#DEBUG_VALUE: x <- $ebp
	.loc	29 33 19                # ./quickoswaparith.h:33:19
	movl	%eax, %edi
	cmovgl	%ebp, %edi
.Ltmp2461:
	#DEBUG_VALUE: d <- $edi
	.loc	29 34 15                # ./quickoswaparith.h:34:15
	addl	%eax, %ebp
.Ltmp2462:
	.loc	29 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%edi, %ebp
.Ltmp2463:
	#DEBUG_VALUE: f <- $ebp
	.loc	29 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%edi, (%r12,%rcx,4)
	.loc	29 36 14                # ./quickoswaparith.h:36:14
	movl	%ebp, (%r12,%rbx,4)
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rbx, %rdx
.Ltmp2464:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rdx
	.loc	29 30 21                # ./quickoswaparith.h:30:21
	movl	4(%r12,%rcx,4), %ebp
.Ltmp2465:
	.loc	29 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%ebx, %ebx
	cmpl	%ebp, %r9d
	setg	%bl
.Ltmp2466:
	#DEBUG_VALUE: c <- $bl
	.loc	29 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%r12,%rdx,4), %edi
.Ltmp2467:
	#DEBUG_VALUE: y <- $ebp
	#DEBUG_VALUE: x <- $edi
	.loc	29 33 19                # ./quickoswaparith.h:33:19
	movl	%ebp, %eax
	cmovgl	%edi, %eax
.Ltmp2468:
	#DEBUG_VALUE: d <- $eax
	.loc	29 34 15                # ./quickoswaparith.h:34:15
	addl	%ebp, %edi
.Ltmp2469:
	.loc	29 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%eax, %edi
.Ltmp2470:
	#DEBUG_VALUE: f <- $edi
	.loc	29 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%eax, 4(%r12,%rcx,4)
	.loc	29 36 14                # ./quickoswaparith.h:36:14
	movl	%edi, (%r12,%rdx,4)
	.loc	29 37 7                 # ./quickoswaparith.h:37:7
	addq	%rdx, %rbx
.Ltmp2471:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	.loc	29 29 36                # ./quickoswaparith.h:29:36
	addq	$2, %rcx
.Ltmp2472:
	#DEBUG_VALUE: j <- $rcx
	.loc	29 29 27 is_stmt 0      # ./quickoswaparith.h:29:27
	cmpq	%rcx, %r14
.Ltmp2473:
	.loc	29 29 3                 # ./quickoswaparith.h:29:3
	jne	.LBB52_31
.Ltmp2474:
.LBB52_10:                              #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp2475:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
	jmp	.LBB52_11
.Ltmp2476:
.LBB52_12:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	29 50 43                # ./quickoswaparith.h:50:43
	incl	%edi
.Ltmp2477:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	19 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2478:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB52_30
.Ltmp2479:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%rsi,4), %rax
.Ltmp2480:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2481:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2482:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB52_14
.Ltmp2483:
.LBB52_24:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB52_30
.Ltmp2484:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2485:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2486:
	.p2align	4, 0x90
.LBB52_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_29
.Ltmp2487:
# %bb.27:                               #   in Loop: Header=BB52_26 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2488:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2489:
	leaq	-1(%r15), %r15
.Ltmp2490:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_26
.Ltmp2491:
# %bb.28:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2492:
.LBB52_29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2493:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB52_30:
	.loc	29 53 1 is_stmt 1       # ./quickoswaparith.h:53:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB52_14:
	.cfi_def_cfa_offset 48
.Ltmp2494:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	29 0 1 is_stmt 0        # ./quickoswaparith.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2495:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2496:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB52_15
.Ltmp2497:
	.p2align	4, 0x90
.LBB52_23:                              #   in Loop: Header=BB52_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2498:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2499:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB52_24
.Ltmp2500:
.LBB52_15:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB52_16 Depth 2
                                        #     Child Loop BB52_20 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2501:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2502:
	.p2align	4, 0x90
.LBB52_16:                              #   Parent Loop BB52_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_19
.Ltmp2503:
# %bb.17:                               #   in Loop: Header=BB52_16 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2504:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2505:
	leaq	-1(%rdi), %rdi
.Ltmp2506:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_16
.Ltmp2507:
# %bb.18:                               #   in Loop: Header=BB52_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2508:
.LBB52_19:                              #   in Loop: Header=BB52_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2509:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2510:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2511:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2512:
	.p2align	4, 0x90
.LBB52_20:                              #   Parent Loop BB52_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_23
.Ltmp2513:
# %bb.21:                               #   in Loop: Header=BB52_20 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2514:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2515:
	leaq	-1(%rdi), %rdi
.Ltmp2516:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_20
.Ltmp2517:
# %bb.22:                               #   in Loop: Header=BB52_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB52_23
.Lfunc_end52:
	.size	sort_quick_optimized_swap_arith, .Lfunc_end52-sort_quick_optimized_swap_arith
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_array # -- Begin function partition_quick_optimized_swap_array
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_array,@function
partition_quick_optimized_swap_array:   # @partition_quick_optimized_swap_array
.Lfunc_begin53:
	.file	30 "/home/peeters/bachelor" "./quickoswaparray.h"
	.loc	30 21 0 is_stmt 1       # ./quickoswaparray.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp2518:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2519:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB53_2
.Ltmp2520:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2521:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2522:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2523:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2524:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2525:
	.loc	30 25 17 is_stmt 1      # ./quickoswaparray.h:25:17
	addq	%rsi, %rdx
.Ltmp2526:
	.loc	30 25 25 is_stmt 0      # ./quickoswaparray.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2527:
	.loc	30 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2528:
.LBB53_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2529:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2530:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r9d
.Ltmp2531:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2532:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ecx
.Ltmp2533:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r9d, %ecx
.Ltmp2534:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2535:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r9d
.Ltmp2536:
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2537:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ebx
.Ltmp2538:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r11d
.Ltmp2539:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r9d
.Ltmp2540:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2541:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2542:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB53_4
.Ltmp2543:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%rdi,%r10,4)
.Ltmp2544:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	30 0 0 is_stmt 0        # ./quickoswaparray.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2545:
	#DEBUG_VALUE: swap:b <- undef
	.loc	30 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2546:
.LBB53_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp2547:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2548:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	30 29 27                # ./quickoswaparray.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2549:
	.loc	30 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	jle	.LBB53_5
.Ltmp2550:
# %bb.6:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r8
	notq	%r8
	testb	$1, %al
	jne	.LBB53_8
.Ltmp2551:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	30 0 3                  # ./quickoswaparray.h:0:3
	movq	%rsi, %rax
	.loc	30 29 3                 # ./quickoswaparray.h:29:3
	addq	%rdx, %r8
	jne	.LBB53_13
	jmp	.LBB53_10
.Ltmp2552:
.LBB53_5:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	30 0 0                  # ./quickoswaparray.h:0:0
	movq	%rsi, %rax
.Ltmp2553:
	jmp	.LBB53_10
.Ltmp2554:
.LBB53_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	.loc	30 30 21 is_stmt 1      # ./quickoswaparray.h:30:21
	movl	(%rdi,%rsi,4), %ecx
	.loc	30 30 19 is_stmt 0      # ./quickoswaparray.h:30:19
	xorl	%eax, %eax
	xorl	%ebx, %ebx
	cmpl	%ecx, %r9d
	setg	%al
.Ltmp2555:
	#DEBUG_VALUE: c <- $al
	setle	%bl
	.loc	30 31 10 is_stmt 1      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	30 32 12                # ./quickoswaparray.h:32:12
	movl	(%rdi,%rsi,4), %ecx
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rax,4), %ecx
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rsi, %rax
.Ltmp2556:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	30 29 36                # ./quickoswaparray.h:29:36
	incq	%rsi
.Ltmp2557:
	.loc	30 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	addq	%rdx, %r8
	je	.LBB53_10
.Ltmp2558:
	.p2align	4, 0x90
.LBB53_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	30 30 19 is_stmt 1      # ./quickoswaparray.h:30:19
	xorl	%r8d, %r8d
	xorl	%ebx, %ebx
	cmpl	(%rdi,%rsi,4), %r9d
	setg	%r8b
.Ltmp2559:
	#DEBUG_VALUE: c <- $r8b
	setle	%bl
	.loc	30 31 12                # ./quickoswaparray.h:31:12
	movl	(%rdi,%rax,4), %ecx
	.loc	30 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	30 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	(%rdi,%rsi,4), %ecx
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%r8,4), %ecx
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%r8, %rax
.Ltmp2560:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	30 30 19                # ./quickoswaparray.h:30:19
	xorl	%r8d, %r8d
.Ltmp2561:
	xorl	%ebx, %ebx
	cmpl	4(%rdi,%rsi,4), %r9d
	setg	%r8b
.Ltmp2562:
	#DEBUG_VALUE: c <- $r8b
	setle	%bl
	.loc	30 31 12                # ./quickoswaparray.h:31:12
	movl	(%rdi,%rax,4), %ecx
	.loc	30 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	30 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	4(%rdi,%rsi,4), %ecx
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, 4(%rdi,%rsi,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%r8,4), %ecx
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%r8, %rax
.Ltmp2563:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	30 29 36                # ./quickoswaparray.h:29:36
	addq	$2, %rsi
.Ltmp2564:
	#DEBUG_VALUE: j <- $rsi
	.loc	30 29 27 is_stmt 0      # ./quickoswaparray.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2565:
	.loc	30 29 3                 # ./quickoswaparray.h:29:3
	jne	.LBB53_13
.Ltmp2566:
.LBB53_10:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp2567:
	#DEBUG_VALUE: swap:t <- $ecx
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
.Ltmp2568:
	.loc	30 0 0                  # ./quickoswaparray.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2569:
	#DEBUG_VALUE: swap:b <- undef
	.loc	30 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2570:
.Lfunc_end53:
	.size	partition_quick_optimized_swap_array, .Lfunc_end53-partition_quick_optimized_swap_array
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_array # -- Begin function sort_quick_optimized_swap_array
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_array,@function
sort_quick_optimized_swap_array:        # @sort_quick_optimized_swap_array
.Lfunc_begin54:
	.loc	30 41 0                 # ./quickoswaparray.h:41:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	30 42 11 prologue_end   # ./quickoswaparray.h:42:11
	cmpq	%rsi, %rdx
.Ltmp2571:
	.loc	30 42 7 is_stmt 0       # ./quickoswaparray.h:42:7
	jle	.LBB54_30
.Ltmp2572:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	.loc	30 0 7                  # ./quickoswaparray.h:0:7
	movq	%rdx, %r14
.Ltmp2573:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	movq	%rdi, %r12
.Ltmp2574:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	movq	%rdx, %r15
	negq	%r15
	jmp	.LBB54_2
.Ltmp2575:
	.p2align	4, 0x90
.LBB54_4:                               #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r12,%rsi,4), %eax
.Ltmp2576:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r12,%r14,4), %ecx
.Ltmp2577:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2578:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r12,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2579:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r12,%r14,4)
.Ltmp2580:
	.loc	30 25 17 is_stmt 1      # ./quickoswaparray.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	30 25 25 is_stmt 0      # ./quickoswaparray.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2581:
.LBB54_11:                              #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	30 45 54 is_stmt 1      # ./quickoswaparray.h:45:54
	leaq	-1(%rbx), %rdx
	.loc	30 45 7 is_stmt 0       # ./quickoswaparray.h:45:7
	movq	%r12, %rdi
	callq	sort_quick_optimized_swap_array
.Ltmp2582:
	.loc	30 46 49 is_stmt 1      # ./quickoswaparray.h:46:49
	incq	%rbx
.Ltmp2583:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rbx
	.loc	30 0 49 is_stmt 0       # ./quickoswaparray.h:0:49
	movq	%rbx, %rsi
.Ltmp2584:
	.loc	30 42 11 is_stmt 1      # ./quickoswaparray.h:42:11
	cmpq	%r14, %rbx
.Ltmp2585:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- undef
	.loc	30 42 7 is_stmt 0       # ./quickoswaparray.h:42:7
	jge	.LBB54_30
.Ltmp2586:
.LBB54_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_31 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	30 43 20 is_stmt 1      # ./quickoswaparray.h:43:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2587:
	.loc	30 43 9 is_stmt 0       # ./quickoswaparray.h:43:9
	jle	.LBB54_12
.Ltmp2588:
# %bb.3:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2589:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB54_4
.Ltmp2590:
# %bb.5:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2591:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r12,%rsi,4), %ecx
.Ltmp2592:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r12,%r8,4), %eax
.Ltmp2593:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r12,%r14,4), %ebp
.Ltmp2594:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2595:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2596:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2597:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %eax
.Ltmp2598:
	cmovll	%ecx, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2599:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %edx
.Ltmp2600:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebp
.Ltmp2601:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %eax
.Ltmp2602:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r12,%rsi,4)
.Ltmp2603:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2604:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB54_7
.Ltmp2605:
# %bb.6:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%eax, (%r12,%r8,4)
.Ltmp2606:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r12,%r14,4)
.Ltmp2607:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB54_11
.Ltmp2608:
	.p2align	4, 0x90
.LBB54_7:                               #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%eax, (%r12,%r14,4)
.Ltmp2609:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r12,%r8,4)
.Ltmp2610:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	30 29 3                 # ./quickoswaparray.h:29:3
	movl	%r14d, %edi
	subl	%esi, %edi
	movq	%rsi, %rdx
	notq	%rdx
	movq	%rsi, %rcx
.Ltmp2611:
	.loc	30 0 3 is_stmt 0        # ./quickoswaparray.h:0:3
	movq	%rsi, %rbx
.Ltmp2612:
	.loc	30 29 3                 # ./quickoswaparray.h:29:3
	testb	$1, %dil
	je	.LBB54_9
.Ltmp2613:
# %bb.8:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	.loc	30 30 21 is_stmt 1      # ./quickoswaparray.h:30:21
	movl	(%r12,%rsi,4), %ecx
	.loc	30 30 19 is_stmt 0      # ./quickoswaparray.h:30:19
	xorl	%ebx, %ebx
	xorl	%edi, %edi
	cmpl	%ecx, %eax
	setg	%bl
.Ltmp2614:
	#DEBUG_VALUE: c <- $bl
	setle	%dil
	.loc	30 31 10 is_stmt 1      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	30 32 12                # ./quickoswaparray.h:32:12
	movl	(%r12,%rsi,4), %ecx
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %ecx
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%r12,%rsi,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rbx,4), %ecx
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%r12,%rsi,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rsi, %rbx
.Ltmp2615:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	30 29 36                # ./quickoswaparray.h:29:36
	leaq	1(%rsi), %rcx
.Ltmp2616:
	#DEBUG_VALUE: j <- $rcx
.LBB54_9:                               #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	30 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	cmpq	%r15, %rdx
	je	.LBB54_10
.Ltmp2617:
	.p2align	4, 0x90
.LBB54_31:                              #   Parent Loop BB54_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	30 30 19 is_stmt 1      # ./quickoswaparray.h:30:19
	xorl	%edx, %edx
	xorl	%edi, %edi
	cmpl	(%r12,%rcx,4), %eax
	setg	%dl
.Ltmp2618:
	#DEBUG_VALUE: c <- $dl
	setle	%dil
	.loc	30 31 12                # ./quickoswaparray.h:31:12
	movl	(%r12,%rbx,4), %ebp
	.loc	30 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ebp, x(%rip)
	.loc	30 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	(%r12,%rcx,4), %ebp
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ebp, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %edi
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%edi, (%r12,%rcx,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rdx,4), %edi
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%edi, (%r12,%rbx,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rdx, %rbx
.Ltmp2619:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	30 30 19                # ./quickoswaparray.h:30:19
	xorl	%edx, %edx
.Ltmp2620:
	xorl	%edi, %edi
	cmpl	4(%r12,%rcx,4), %eax
	setg	%dl
.Ltmp2621:
	#DEBUG_VALUE: c <- $dl
	setle	%dil
	.loc	30 31 12                # ./quickoswaparray.h:31:12
	movl	(%r12,%rbx,4), %ebp
	.loc	30 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ebp, x(%rip)
	.loc	30 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	4(%r12,%rcx,4), %ebp
	.loc	30 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ebp, x+4(%rip)
	.loc	30 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %edi
	.loc	30 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%edi, 4(%r12,%rcx,4)
	.loc	30 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rdx,4), %edi
	.loc	30 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%edi, (%r12,%rbx,4)
	.loc	30 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rdx, %rbx
.Ltmp2622:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	30 29 36                # ./quickoswaparray.h:29:36
	addq	$2, %rcx
.Ltmp2623:
	#DEBUG_VALUE: j <- $rcx
	.loc	30 29 27 is_stmt 0      # ./quickoswaparray.h:29:27
	cmpq	%rcx, %r14
.Ltmp2624:
	.loc	30 29 3                 # ./quickoswaparray.h:29:3
	jne	.LBB54_31
.Ltmp2625:
.LBB54_10:                              #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp2626:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
	jmp	.LBB54_11
.Ltmp2627:
.LBB54_12:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	30 48 43                # ./quickoswaparray.h:48:43
	incl	%edi
.Ltmp2628:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	19 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2629:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB54_30
.Ltmp2630:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%rsi,4), %rax
.Ltmp2631:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2632:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2633:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB54_14
.Ltmp2634:
.LBB54_24:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB54_30
.Ltmp2635:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2636:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2637:
	.p2align	4, 0x90
.LBB54_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB54_29
.Ltmp2638:
# %bb.27:                               #   in Loop: Header=BB54_26 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2639:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2640:
	leaq	-1(%r15), %r15
.Ltmp2641:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB54_26
.Ltmp2642:
# %bb.28:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2643:
.LBB54_29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2644:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB54_30:
	.loc	30 51 1 is_stmt 1       # ./quickoswaparray.h:51:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB54_14:
	.cfi_def_cfa_offset 48
.Ltmp2645:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	30 0 1 is_stmt 0        # ./quickoswaparray.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2646:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2647:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB54_15
.Ltmp2648:
	.p2align	4, 0x90
.LBB54_23:                              #   in Loop: Header=BB54_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2649:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2650:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB54_24
.Ltmp2651:
.LBB54_15:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_16 Depth 2
                                        #     Child Loop BB54_20 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2652:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2653:
	.p2align	4, 0x90
.LBB54_16:                              #   Parent Loop BB54_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB54_19
.Ltmp2654:
# %bb.17:                               #   in Loop: Header=BB54_16 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2655:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2656:
	leaq	-1(%rdi), %rdi
.Ltmp2657:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB54_16
.Ltmp2658:
# %bb.18:                               #   in Loop: Header=BB54_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2659:
.LBB54_19:                              #   in Loop: Header=BB54_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2660:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2661:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2662:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2663:
	.p2align	4, 0x90
.LBB54_20:                              #   Parent Loop BB54_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB54_23
.Ltmp2664:
# %bb.21:                               #   in Loop: Header=BB54_20 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2665:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2666:
	leaq	-1(%rdi), %rdi
.Ltmp2667:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB54_20
.Ltmp2668:
# %bb.22:                               #   in Loop: Header=BB54_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB54_23
.Lfunc_end54:
	.size	sort_quick_optimized_swap_array, .Lfunc_end54-sort_quick_optimized_swap_array
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_asm # -- Begin function partition_quick_optimized_swap_asm
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_asm,@function
partition_quick_optimized_swap_asm:     # @partition_quick_optimized_swap_asm
.Lfunc_begin55:
	.file	31 "/home/peeters/bachelor" "./quickoswapasm.h"
	.loc	31 21 0 is_stmt 1       # ./quickoswapasm.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%r12
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %r12, -16
.Ltmp2669:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2670:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB55_2
.Ltmp2671:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2672:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %ebx
.Ltmp2673:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %eax
.Ltmp2674:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ebx, %eax
.Ltmp2675:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2676:
	.loc	31 25 17 is_stmt 1      # ./quickoswapasm.h:25:17
	addq	%rsi, %rdx
.Ltmp2677:
	.loc	31 25 25 is_stmt 0      # ./quickoswapasm.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2678:
	.loc	31 96 1 is_stmt 1       # ./quickoswapasm.h:96:1
	popq	%rbx
.Ltmp2679:
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2680:
.LBB55_2:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2681:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2682:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r9
	movl	(%rdi,%r9,4), %ebx
.Ltmp2683:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r10d
.Ltmp2684:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r10d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %ecx
.Ltmp2685:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %r11d
	cmovll	%ecx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebx, %ecx
.Ltmp2686:
	#DEBUG_VALUE: sort_pair:y <- $r10d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r10d, %ecx
.Ltmp2687:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r10d, %ebx
.Ltmp2688:
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r10d, %ecx
.Ltmp2689:
	#DEBUG_VALUE: sort_pair:x <- $r11d
	#DEBUG_VALUE: sort_pair:y <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %r11d
.Ltmp2690:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %r10d
.Ltmp2691:
	cmovll	%r11d, %r10d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%r11d, %ebx
.Ltmp2692:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r10d, (%rdi,%rsi,4)
.Ltmp2693:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2694:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB55_4
.Ltmp2695:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%ebx, (%rdi,%r9,4)
.Ltmp2696:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2697:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	31 96 1                 # ./quickoswapasm.h:96:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2698:
.LBB55_4:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%ebx, (%rdi,%rdx,4)
.Ltmp2699:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r9,4)
.Ltmp2700:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:pivot <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	31 28 3                 # ./quickoswapasm.h:28:3
	#APP
	movq	%rsi, %r12
.Ltmp2701:

	movl	(%rdi,%r12,4), %r8d
	movl	(%rdi,%rsi,4), %r9d
	xorq	%r10, %r10
	cmpl	%ebx, %r8d
	setl	%r10b
	movl	%r8d, %r11d
	cmovll	%r9d, %r11d
	movl	%r11d, (%rdi,%r12,4)
	cmovll	%r8d, %r9d
	movl	%r9d, (%rdi,%rsi,4)
	addq	%r10, %rsi

	incq	%r12
	cmpq	%r12, %rdx
	jne	.Ltmp2701

	movl	(%rdi,%rsi,4), %r9d
	movl	(%rdi,%rdx,4), %r8d
	movl	%r9d, (%rdi,%rdx,4)
	movl	%r8d, (%rdi,%rsi,4)

	#NO_APP
.Ltmp2702:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	.loc	31 96 1                 # ./quickoswapasm.h:96:1
	movq	%rsi, %rax
.Ltmp2703:
	popq	%rbx
.Ltmp2704:
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2705:
.Lfunc_end55:
	.size	partition_quick_optimized_swap_asm, .Lfunc_end55-partition_quick_optimized_swap_asm
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_asm # -- Begin function sort_quick_optimized_swap_asm
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_asm,@function
sort_quick_optimized_swap_asm:          # @sort_quick_optimized_swap_asm
.Lfunc_begin56:
	.loc	31 98 0                 # ./quickoswapasm.h:98:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	31 99 11 prologue_end   # ./quickoswapasm.h:99:11
	cmpq	%rsi, %rdx
.Ltmp2706:
	.loc	31 99 7 is_stmt 0       # ./quickoswapasm.h:99:7
	jle	.LBB56_27
.Ltmp2707:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	.loc	31 0 7                  # ./quickoswapasm.h:0:7
	movq	%rdx, %r14
.Ltmp2708:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	movq	%rdi, %r15
.Ltmp2709:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	jmp	.LBB56_2
.Ltmp2710:
	.p2align	4, 0x90
.LBB56_4:                               #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2711:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r15,%r14,4), %ecx
.Ltmp2712:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2713:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2714:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r15,%r14,4)
.Ltmp2715:
	.loc	31 25 17 is_stmt 1      # ./quickoswapasm.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	31 25 25 is_stmt 0      # ./quickoswapasm.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2716:
.LBB56_8:                               #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	31 102 52 is_stmt 1     # ./quickoswapasm.h:102:52
	leaq	-1(%rbx), %rdx
	.loc	31 102 7 is_stmt 0      # ./quickoswapasm.h:102:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_swap_asm
.Ltmp2717:
	.loc	31 103 47 is_stmt 1     # ./quickoswapasm.h:103:47
	incq	%rbx
.Ltmp2718:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rbx
	.loc	31 0 47 is_stmt 0       # ./quickoswapasm.h:0:47
	movq	%rbx, %rsi
.Ltmp2719:
	.loc	31 99 11 is_stmt 1      # ./quickoswapasm.h:99:11
	cmpq	%r14, %rbx
.Ltmp2720:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- undef
	.loc	31 99 7 is_stmt 0       # ./quickoswapasm.h:99:7
	jge	.LBB56_27
.Ltmp2721:
.LBB56_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	31 100 20 is_stmt 1     # ./quickoswapasm.h:100:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2722:
	.loc	31 100 9 is_stmt 0      # ./quickoswapasm.h:100:9
	jle	.LBB56_9
.Ltmp2723:
# %bb.3:                                #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2724:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB56_4
.Ltmp2725:
# %bb.5:                                #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2726:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2727:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $eax
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r15,%r8,4), %edx
.Ltmp2728:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r15,%r14,4), %ebp
.Ltmp2729:
	#DEBUG_VALUE: sort_pair:y <- $edx
	#DEBUG_VALUE: sort_pair:x <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %eax
.Ltmp2730:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %ecx
	cmovll	%eax, %ecx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%edx, %eax
.Ltmp2731:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %eax
.Ltmp2732:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %edx
.Ltmp2733:
	cmovll	%eax, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %eax
.Ltmp2734:
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: sort_pair:y <- $edx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %ecx
.Ltmp2735:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %ebp
.Ltmp2736:
	cmovll	%ecx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ecx, %edx
.Ltmp2737:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r15,%rsi,4)
.Ltmp2738:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2739:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB56_7
.Ltmp2740:
# %bb.6:                                #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%edx, (%r15,%r8,4)
.Ltmp2741:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $eax
	.loc	4 53 17                 # ./median.h:53:17
	movl	%eax, (%r15,%r14,4)
.Ltmp2742:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB56_8
.Ltmp2743:
	.p2align	4, 0x90
.LBB56_7:                               #   in Loop: Header=BB56_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%edx, (%r15,%r14,4)
.Ltmp2744:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $eax
	.loc	4 59 14                 # ./median.h:59:14
	movl	%eax, (%r15,%r8,4)
.Ltmp2745:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:pivot <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	31 28 3                 # ./quickoswapasm.h:28:3
	movq	%rsi, %rbx
.Ltmp2746:
	#APP
	movq	%rbx, %r12
.Ltmp2747:

	movl	(%r15,%r12,4), %r8d
	movl	(%r15,%rbx,4), %r9d
	xorq	%r10, %r10
	cmpl	%edx, %r8d
	setl	%r10b
	movl	%r8d, %r11d
	cmovll	%r9d, %r11d
	movl	%r11d, (%r15,%r12,4)
	cmovll	%r8d, %r9d
	movl	%r9d, (%r15,%rbx,4)
	addq	%r10, %rbx

	incq	%r12
	cmpq	%r12, %r14
	jne	.Ltmp2747

	movl	(%r15,%rbx,4), %r9d
	movl	(%r15,%r14,4), %r8d
	movl	%r9d, (%r15,%r14,4)
	movl	%r8d, (%r15,%rbx,4)

	#NO_APP
.Ltmp2748:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rbx
	.loc	31 0 3 is_stmt 0        # ./quickoswapasm.h:0:3
	jmp	.LBB56_8
.Ltmp2749:
.LBB56_9:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	31 105 43 is_stmt 1     # ./quickoswapasm.h:105:43
	incl	%edi
.Ltmp2750:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	19 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2751:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB56_27
.Ltmp2752:
# %bb.10:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r15,%rsi,4), %rax
.Ltmp2753:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2754:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2755:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp2756:
	cmpl	$2, %edi
	jne	.LBB56_11
.Ltmp2757:
.LBB56_21:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB56_27
.Ltmp2758:
# %bb.22:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2759:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2760:
	.p2align	4, 0x90
.LBB56_23:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB56_26
.Ltmp2761:
# %bb.24:                               #   in Loop: Header=BB56_23 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2762:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2763:
	leaq	-1(%r15), %r15
.Ltmp2764:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB56_23
.Ltmp2765:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2766:
.LBB56_26:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2767:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB56_27:
	.loc	31 108 1 is_stmt 1      # ./quickoswapasm.h:108:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB56_11:
	.cfi_def_cfa_offset 48
.Ltmp2768:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	31 0 1 is_stmt 0        # ./quickoswapasm.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2769:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2770:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB56_12
.Ltmp2771:
	.p2align	4, 0x90
.LBB56_20:                              #   in Loop: Header=BB56_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2772:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2773:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB56_21
.Ltmp2774:
.LBB56_12:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB56_13 Depth 2
                                        #     Child Loop BB56_17 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2775:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2776:
	.p2align	4, 0x90
.LBB56_13:                              #   Parent Loop BB56_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB56_16
.Ltmp2777:
# %bb.14:                               #   in Loop: Header=BB56_13 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2778:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2779:
	leaq	-1(%rdi), %rdi
.Ltmp2780:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB56_13
.Ltmp2781:
# %bb.15:                               #   in Loop: Header=BB56_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2782:
.LBB56_16:                              #   in Loop: Header=BB56_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2783:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2784:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2785:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2786:
	.p2align	4, 0x90
.LBB56_17:                              #   Parent Loop BB56_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB56_20
.Ltmp2787:
# %bb.18:                               #   in Loop: Header=BB56_17 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2788:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2789:
	leaq	-1(%rdi), %rdi
.Ltmp2790:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB56_17
.Ltmp2791:
# %bb.19:                               #   in Loop: Header=BB56_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB56_20
.Lfunc_end56:
	.size	sort_quick_optimized_swap_asm, .Lfunc_end56-sort_quick_optimized_swap_asm
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_cmov # -- Begin function partition_quick_optimized_swap_cmov
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_cmov,@function
partition_quick_optimized_swap_cmov:    # @partition_quick_optimized_swap_cmov
.Lfunc_begin57:
	.file	32 "/home/peeters/bachelor" "./quickoswapcmov.h"
	.loc	32 21 0 is_stmt 1       # ./quickoswapcmov.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp2792:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2793:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB57_2
.Ltmp2794:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2795:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2796:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2797:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2798:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2799:
	.loc	32 25 17 is_stmt 1      # ./quickoswapcmov.h:25:17
	addq	%rsi, %rdx
.Ltmp2800:
	.loc	32 25 25 is_stmt 0      # ./quickoswapcmov.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2801:
	.loc	32 39 1 is_stmt 1       # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2802:
.LBB57_2:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2803:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2804:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r9d
.Ltmp2805:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2806:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ecx
.Ltmp2807:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r9d, %ecx
.Ltmp2808:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2809:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r9d
.Ltmp2810:
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2811:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ebx
.Ltmp2812:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r11d
.Ltmp2813:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r9d
.Ltmp2814:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2815:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2816:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB57_4
.Ltmp2817:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%rdi,%r10,4)
.Ltmp2818:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2819:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	32 39 1                 # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2820:
.LBB57_4:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp2821:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2822:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	32 29 27                # ./quickoswapcmov.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2823:
	.loc	32 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	jle	.LBB57_8
.Ltmp2824:
# %bb.5:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	movl	%edx, %r10d
	subl	%esi, %r10d
	movq	%rsi, %r8
	notq	%r8
	addq	%rdx, %r8
	movq	%rsi, %rax
	andq	$3, %r10
	je	.LBB57_7
.Ltmp2825:
	.p2align	4, 0x90
.LBB57_6:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	32 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%rdi,%rax,4), %ebx
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ecx, %ecx
	cmpl	%ebx, %r9d
	setg	%cl
.Ltmp2826:
	#DEBUG_VALUE: c <- $sil
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r11d
.Ltmp2827:
	#DEBUG_VALUE: z <- $ebx
	#DEBUG_VALUE: y <- $r11d
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%r11d, %ebp
	cmovgl	%ebx, %ebp
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%rdi,%rsi,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r11d, %ebx
.Ltmp2828:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rcx, %rsi
.Ltmp2829:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	32 29 36                # ./quickoswapcmov.h:29:36
	incq	%rax
.Ltmp2830:
	#DEBUG_VALUE: j <- $rax
	.loc	32 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	decq	%r10
	jne	.LBB57_6
.Ltmp2831:
.LBB57_7:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	cmpq	$3, %r8
	jb	.LBB57_8
.Ltmp2832:
	.p2align	4, 0x90
.LBB57_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	32 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%rdi,%rax,4), %ecx
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebp, %ebp
	cmpl	%ecx, %r9d
	setg	%bpl
.Ltmp2833:
	#DEBUG_VALUE: c <- $bpl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2834:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2835:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rsi, %rbp
.Ltmp2836:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbp
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	4(%rdi,%rax,4), %ecx
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%esi, %esi
	cmpl	%ecx, %r9d
	setg	%sil
.Ltmp2837:
	#DEBUG_VALUE: c <- $sil
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rbp,4), %r8d
.Ltmp2838:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rbp,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2839:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 4(%rdi,%rax,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbp, %rsi
.Ltmp2840:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	8(%rdi,%rax,4), %ecx
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebp, %ebp
	cmpl	%ecx, %r9d
	setg	%bpl
.Ltmp2841:
	#DEBUG_VALUE: c <- $bpl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2842:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2843:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 8(%rdi,%rax,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rsi, %rbp
.Ltmp2844:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbp
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	12(%rdi,%rax,4), %ecx
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%esi, %esi
	cmpl	%ecx, %r9d
	setg	%sil
.Ltmp2845:
	#DEBUG_VALUE: c <- $sil
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rbp,4), %r8d
.Ltmp2846:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rbp,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2847:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 12(%rdi,%rax,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbp, %rsi
.Ltmp2848:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	32 29 36                # ./quickoswapcmov.h:29:36
	addq	$4, %rax
.Ltmp2849:
	#DEBUG_VALUE: j <- $rax
	.loc	32 29 27 is_stmt 0      # ./quickoswapcmov.h:29:27
	cmpq	%rax, %rdx
.Ltmp2850:
	.loc	32 29 3                 # ./quickoswapcmov.h:29:3
	jne	.LBB57_10
.Ltmp2851:
.LBB57_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2852:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi,%rsi,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2853:
	#DEBUG_VALUE: swap:b <- undef
	.loc	32 0 0 is_stmt 0        # ./quickoswapcmov.h:0:0
	movq	%rsi, %rax
.Ltmp2854:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rax
	.loc	32 39 1 is_stmt 1       # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2855:
.Lfunc_end57:
	.size	partition_quick_optimized_swap_cmov, .Lfunc_end57-partition_quick_optimized_swap_cmov
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_cmov # -- Begin function sort_quick_optimized_swap_cmov
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_cmov,@function
sort_quick_optimized_swap_cmov:         # @sort_quick_optimized_swap_cmov
.Lfunc_begin58:
	.loc	32 41 0                 # ./quickoswapcmov.h:41:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	32 42 11 prologue_end   # ./quickoswapcmov.h:42:11
	cmpq	%rsi, %rdx
.Ltmp2856:
	.loc	32 42 7 is_stmt 0       # ./quickoswapcmov.h:42:7
	jle	.LBB58_31
.Ltmp2857:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	.loc	32 0 7                  # ./quickoswapcmov.h:0:7
	movq	%rdx, %r14
.Ltmp2858:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	movq	%rdi, %r15
.Ltmp2859:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	jmp	.LBB58_2
.Ltmp2860:
	.p2align	4, 0x90
.LBB58_4:                               #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2861:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r15,%r14,4), %ecx
.Ltmp2862:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2863:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2864:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r15,%r14,4)
.Ltmp2865:
	.loc	32 25 17 is_stmt 1      # ./quickoswapcmov.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	32 25 25 is_stmt 0      # ./quickoswapcmov.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2866:
.LBB58_12:                              #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	32 45 53 is_stmt 1      # ./quickoswapcmov.h:45:53
	leaq	-1(%rbx), %rdx
	.loc	32 45 7 is_stmt 0       # ./quickoswapcmov.h:45:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_swap_cmov
.Ltmp2867:
	.loc	32 46 48 is_stmt 1      # ./quickoswapcmov.h:46:48
	incq	%rbx
.Ltmp2868:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rbx
	.loc	32 0 48 is_stmt 0       # ./quickoswapcmov.h:0:48
	movq	%rbx, %rsi
.Ltmp2869:
	.loc	32 42 11 is_stmt 1      # ./quickoswapcmov.h:42:11
	cmpq	%r14, %rbx
.Ltmp2870:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- undef
	.loc	32 42 7 is_stmt 0       # ./quickoswapcmov.h:42:7
	jge	.LBB58_31
.Ltmp2871:
.LBB58_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB58_9 Depth 2
                                        #     Child Loop BB58_32 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	32 43 20 is_stmt 1      # ./quickoswapcmov.h:43:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2872:
	.loc	32 43 9 is_stmt 0       # ./quickoswapcmov.h:43:9
	jle	.LBB58_13
.Ltmp2873:
# %bb.3:                                #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2874:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB58_4
.Ltmp2875:
# %bb.5:                                #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2876:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r15,%rsi,4), %ecx
.Ltmp2877:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r15,%r8,4), %eax
.Ltmp2878:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r15,%r14,4), %ebp
.Ltmp2879:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2880:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2881:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2882:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %r9d
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2883:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2884:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebp
.Ltmp2885:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2886:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r15,%rsi,4)
.Ltmp2887:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2888:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB58_7
.Ltmp2889:
# %bb.6:                                #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%r15,%r8,4)
.Ltmp2890:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r15,%r14,4)
.Ltmp2891:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB58_12
.Ltmp2892:
	.p2align	4, 0x90
.LBB58_7:                               #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r9d, (%r15,%r14,4)
.Ltmp2893:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r15,%r8,4)
.Ltmp2894:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	32 29 3                 # ./quickoswapcmov.h:29:3
	movl	%r14d, %r10d
	subl	%esi, %r10d
	movq	%rsi, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%rsi, %rbx
.Ltmp2895:
	.loc	32 0 3 is_stmt 0        # ./quickoswapcmov.h:0:3
	movq	%rsi, %rcx
.Ltmp2896:
	.loc	32 29 3                 # ./quickoswapcmov.h:29:3
	andq	$3, %r10
	je	.LBB58_10
.Ltmp2897:
# %bb.8:                                #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	32 0 3                  # ./quickoswapcmov.h:0:3
	movq	%rsi, %rbx
	movq	%rsi, %rcx
.Ltmp2898:
	.p2align	4, 0x90
.LBB58_9:                               #   Parent Loop BB58_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	32 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%r15,%rcx,4), %ebp
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%ebp, %r9d
	setg	%dl
.Ltmp2899:
	#DEBUG_VALUE: c <- $bl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rbx,4), %edi
.Ltmp2900:
	#DEBUG_VALUE: z <- $ebp
	#DEBUG_VALUE: y <- $edi
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%edi, %eax
	cmovgl	%ebp, %eax
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%eax, (%r15,%rbx,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%edi, %ebp
.Ltmp2901:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ebp, (%r15,%rcx,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rbx
.Ltmp2902:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	.loc	32 29 36                # ./quickoswapcmov.h:29:36
	incq	%rcx
.Ltmp2903:
	#DEBUG_VALUE: j <- $rcx
	.loc	32 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	decq	%r10
	jne	.LBB58_9
.Ltmp2904:
.LBB58_10:                              #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	cmpq	$3, %r8
	jb	.LBB58_11
.Ltmp2905:
	.p2align	4, 0x90
.LBB58_32:                              #   Parent Loop BB58_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	32 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%r15,%rcx,4), %eax
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2906:
	#DEBUG_VALUE: c <- $dl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rbx,4), %ebp
.Ltmp2907:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebp
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebp, %edi
	cmovgl	%eax, %edi
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%edi, (%r15,%rbx,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebp, %eax
.Ltmp2908:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, (%r15,%rcx,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbx, %rdx
.Ltmp2909:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdx
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	4(%r15,%rcx,4), %eax
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edi, %edi
	cmpl	%eax, %r9d
	setg	%dil
.Ltmp2910:
	#DEBUG_VALUE: c <- $dil
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdx,4), %ebx
.Ltmp2911:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebx
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebx, %ebp
	cmovgl	%eax, %ebp
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%r15,%rdx,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebx, %eax
.Ltmp2912:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 4(%r15,%rcx,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rdi
.Ltmp2913:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdi
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	8(%r15,%rcx,4), %eax
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2914:
	#DEBUG_VALUE: c <- $dl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdi,4), %ebx
.Ltmp2915:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebx
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebx, %ebp
	cmovgl	%eax, %ebp
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%r15,%rdi,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebx, %eax
.Ltmp2916:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 8(%r15,%rcx,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdi, %rdx
.Ltmp2917:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdx
	.loc	32 30 21                # ./quickoswapcmov.h:30:21
	movl	12(%r15,%rcx,4), %eax
	.loc	32 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebx, %ebx
.Ltmp2918:
	cmpl	%eax, %r9d
	setg	%bl
.Ltmp2919:
	#DEBUG_VALUE: c <- $bl
	.loc	32 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdx,4), %ebp
.Ltmp2920:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebp
	.loc	32 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebp, %edi
	cmovgl	%eax, %edi
	.loc	32 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%edi, (%r15,%rdx,4)
	.loc	32 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebp, %eax
.Ltmp2921:
	.loc	32 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 12(%r15,%rcx,4)
	.loc	32 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rbx
.Ltmp2922:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	.loc	32 29 36                # ./quickoswapcmov.h:29:36
	addq	$4, %rcx
.Ltmp2923:
	#DEBUG_VALUE: j <- $rcx
	.loc	32 29 27 is_stmt 0      # ./quickoswapcmov.h:29:27
	cmpq	%rcx, %r14
.Ltmp2924:
	.loc	32 29 3                 # ./quickoswapcmov.h:29:3
	jne	.LBB58_32
.Ltmp2925:
.LBB58_11:                              #   in Loop: Header=BB58_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r15,%rbx,4), %eax
.Ltmp2926:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r15,%rbx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
	jmp	.LBB58_12
.Ltmp2927:
.LBB58_13:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	32 48 43                # ./quickoswapcmov.h:48:43
	incl	%edi
.Ltmp2928:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	19 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2929:
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB58_31
.Ltmp2930:
# %bb.14:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%r15,%rsi,4), %rax
.Ltmp2931:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2932:
	.loc	19 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2933:
	.loc	19 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp2934:
	cmpl	$2, %edi
	jne	.LBB58_15
.Ltmp2935:
.LBB58_25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB58_31
.Ltmp2936:
# %bb.26:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2937:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2938:
	.p2align	4, 0x90
.LBB58_27:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB58_30
.Ltmp2939:
# %bb.28:                               #   in Loop: Header=BB58_27 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2940:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2941:
	leaq	-1(%r15), %r15
.Ltmp2942:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB58_27
.Ltmp2943:
# %bb.29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2944:
.LBB58_30:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2945:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB58_31:
	.loc	32 51 1 is_stmt 1       # ./quickoswapcmov.h:51:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB58_15:
	.cfi_def_cfa_offset 48
.Ltmp2946:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	32 0 1 is_stmt 0        # ./quickoswapcmov.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2947:
	.loc	19 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2948:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB58_16
.Ltmp2949:
	.p2align	4, 0x90
.LBB58_24:                              #   in Loop: Header=BB58_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2950:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2951:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB58_25
.Ltmp2952:
.LBB58_16:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB58_17 Depth 2
                                        #     Child Loop BB58_21 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	19 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2953:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2954:
	.p2align	4, 0x90
.LBB58_17:                              #   Parent Loop BB58_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB58_20
.Ltmp2955:
# %bb.18:                               #   in Loop: Header=BB58_17 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2956:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2957:
	leaq	-1(%rdi), %rdi
.Ltmp2958:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB58_17
.Ltmp2959:
# %bb.19:                               #   in Loop: Header=BB58_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2960:
.LBB58_20:                              #   in Loop: Header=BB58_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	19 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2961:
	.loc	19 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2962:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	19 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2963:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2964:
	.p2align	4, 0x90
.LBB58_21:                              #   Parent Loop BB58_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	19 21 5                 # ./insertionssort.h:21:5
	jle	.LBB58_24
.Ltmp2965:
# %bb.22:                               #   in Loop: Header=BB58_21 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2966:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2967:
	leaq	-1(%rdi), %rdi
.Ltmp2968:
	.loc	19 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB58_21
.Ltmp2969:
# %bb.23:                               #   in Loop: Header=BB58_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB58_24
.Lfunc_end58:
	.size	sort_quick_optimized_swap_cmov, .Lfunc_end58-sort_quick_optimized_swap_cmov
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_standard # -- Begin function partition_quick_standard
	.p2align	4, 0x90
	.type	partition_quick_standard,@function
partition_quick_standard:               # @partition_quick_standard
.Lfunc_begin59:
	.file	33 "/home/peeters/bachelor" "./quicku.h"
	.loc	33 11 0 is_stmt 1       # ./quicku.h:11:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp2970:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB59_2
.Ltmp2971:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %r9d
.Ltmp2972:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	33 14 21                # ./quicku.h:14:21
	movslq	%esi, %rcx
.Ltmp2973:
	.loc	33 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %eax
.Ltmp2974:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 14 23                # ./quicku.h:14:23
	cmpq	%rdx, %rcx
.Ltmp2975:
	.loc	33 14 3 is_stmt 0       # ./quicku.h:14:3
	jl	.LBB59_4
	jmp	.LBB59_18
.Ltmp2976:
.LBB59_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	4 9 18 is_stmt 1        # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp2977:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %r10d
.Ltmp2978:
	#DEBUG_VALUE: median_of_three:x <- $r10d
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r8
	movl	(%rdi,%r8,4), %r9d
.Ltmp2979:
	#DEBUG_VALUE: median_of_three:y <- $r9d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2980:
	#DEBUG_VALUE: median_of_three:z <- $r11d
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r9d, %r10d
.Ltmp2981:
	#DEBUG_VALUE: min:y <- $r9d
	#DEBUG_VALUE: min:x <- $r10d
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r9d, %eax
	cmovlel	%r10d, %eax
.Ltmp2982:
	#DEBUG_VALUE: max:y <- $r9d
	#DEBUG_VALUE: max:x <- $r10d
	.loc	16 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r9d, %ecx
.Ltmp2983:
	cmovgel	%r10d, %ecx
.Ltmp2984:
	#DEBUG_VALUE: min:y <- $r11d
	#DEBUG_VALUE: min:x <- $eax
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r11d, %eax
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%r11d, %eax
.Ltmp2985:
	#DEBUG_VALUE: max:y <- $r11d
	#DEBUG_VALUE: median_of_three:smallest <- $eax
	#DEBUG_VALUE: max:x <- $ecx
	.loc	16 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%r11d, %ecx
	.loc	16 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%r11d, %ecx
.Ltmp2986:
	#DEBUG_VALUE: median_of_three:largest <- $ecx
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%r10d, %r9d
.Ltmp2987:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%r11d, %r9d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%eax, %r9d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ecx, %r9d
.Ltmp2988:
	#DEBUG_VALUE: median_of_three:median <- $r9d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%eax, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r9d, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ecx, (%rdi,%r8,4)
.Ltmp2989:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	33 14 21                # ./quicku.h:14:21
	movslq	%esi, %rcx
.Ltmp2990:
	.loc	33 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %eax
.Ltmp2991:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 14 23                # ./quicku.h:14:23
	cmpq	%rdx, %rcx
.Ltmp2992:
	.loc	33 14 3 is_stmt 0       # ./quicku.h:14:3
	jge	.LBB59_18
.Ltmp2993:
.LBB59_4:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	movslq	%esi, %rsi
.Ltmp2994:
	movl	%edx, %ecx
	subl	%esi, %ecx
	movq	%rsi, %r8
	notq	%r8
	addq	%rdx, %r8
	andq	$3, %rcx
	jne	.LBB59_5
.Ltmp2995:
.LBB59_8:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	cmpq	$3, %r8
	jae	.LBB59_9
.Ltmp2996:
.LBB59_18:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 20 9 is_stmt 1       # ./quicku.h:20:9
	movslq	%eax, %rcx
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 20 17 is_stmt 0      # ./quicku.h:20:17
	incl	%eax
.Ltmp2997:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	17 2 11 is_stmt 1       # ./swap.h:2:11
	movl	4(%rdi,%rcx,4), %esi
.Ltmp2998:
	#DEBUG_VALUE: swap:t <- $esi
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %ebx
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, 4(%rdi,%rcx,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%esi, (%rdi,%rdx,4)
.Ltmp2999:
	.loc	33 21 3                 # ./quicku.h:21:3
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp3000:
	.p2align	4, 0x90
.LBB59_7:                               #   in Loop: Header=BB59_5 Depth=1
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 14 32                # ./quicku.h:14:32
	incq	%rsi
.Ltmp3001:
	#DEBUG_VALUE: j <- $rsi
	.loc	33 14 3 is_stmt 0       # ./quicku.h:14:3
	decq	%rcx
	je	.LBB59_8
.Ltmp3002:
.LBB59_5:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: j <- $rsi
	.loc	33 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rdi,%rsi,4), %r10d
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %r10d
.Ltmp3003:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB59_7
.Ltmp3004:
# %bb.6:                                #   in Loop: Header=BB59_5 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %r11
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp3005:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%r11,4), %ebx
.Ltmp3006:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%r10d, 4(%rdi,%r11,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%ebx, (%rdi,%rsi,4)
	jmp	.LBB59_7
.Ltmp3007:
	.p2align	4, 0x90
.LBB59_17:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 14 32                # ./quicku.h:14:32
	addq	$4, %rsi
.Ltmp3008:
	#DEBUG_VALUE: j <- $rsi
	.loc	33 14 23 is_stmt 0      # ./quicku.h:14:23
	cmpq	%rdx, %rsi
.Ltmp3009:
	.loc	33 14 3                 # ./quicku.h:14:3
	jge	.LBB59_18
.Ltmp3010:
.LBB59_9:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: j <- $rsi
	.loc	33 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rdi,%rsi,4), %ecx
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3011:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB59_10
.Ltmp3012:
# %bb.11:                               #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	4(%rdi,%rsi,4), %ecx
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3013:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB59_12
.Ltmp3014:
.LBB59_13:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	8(%rdi,%rsi,4), %ecx
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3015:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB59_14
.Ltmp3016:
.LBB59_15:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	12(%rdi,%rsi,4), %ecx
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3017:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB59_17
	jmp	.LBB59_16
.Ltmp3018:
	.p2align	4, 0x90
.LBB59_10:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp3019:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp3020:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%r8d, (%rdi,%rsi,4)
.Ltmp3021:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	4(%rdi,%rsi,4), %ecx
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3022:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB59_13
.Ltmp3023:
.LBB59_12:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp3024:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp3025:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%r8d, 4(%rdi,%rsi,4)
.Ltmp3026:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	8(%rdi,%rsi,4), %ecx
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3027:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB59_15
.Ltmp3028:
.LBB59_14:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp3029:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp3030:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%r8d, 8(%rdi,%rsi,4)
.Ltmp3031:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	12(%rdi,%rsi,4), %ecx
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp3032:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB59_17
.Ltmp3033:
.LBB59_16:                              #   in Loop: Header=BB59_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp3034:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp3035:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%r8d, 12(%rdi,%rsi,4)
	jmp	.LBB59_17
.Ltmp3036:
.Lfunc_end59:
	.size	partition_quick_standard, .Lfunc_end59-partition_quick_standard
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_standard     # -- Begin function sort_quick_standard
	.p2align	4, 0x90
	.type	sort_quick_standard,@function
sort_quick_standard:                    # @sort_quick_standard
.Lfunc_begin60:
	.loc	33 24 0                 # ./quicku.h:24:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	33 25 11 prologue_end   # ./quicku.h:25:11
	cmpq	%rsi, %rdx
.Ltmp3037:
	.loc	33 25 7 is_stmt 0       # ./quicku.h:25:7
	jle	.LBB60_37
.Ltmp3038:
# %bb.1:
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	.loc	33 0 7                  # ./quicku.h:0:7
	movq	%rdx, %r14
.Ltmp3039:
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	movq	%rdi, %rbx
.Ltmp3040:
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	jmp	.LBB60_2
.Ltmp3041:
	.p2align	4, 0x90
.LBB60_18:                              #   in Loop: Header=BB60_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 20 9 is_stmt 1       # ./quicku.h:20:9
	movslq	%ecx, %r15
.Ltmp3042:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%r15,4), %eax
.Ltmp3043:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	17 3 8                  # ./swap.h:3:8
	movl	(%rbx,%r14,4), %ecx
.Ltmp3044:
	.loc	17 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, 4(%rbx,%r15,4)
	.loc	17 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rbx,%r14,4)
.Ltmp3045:
	#DEBUG_VALUE: pi <- undef
	.loc	33 28 7                 # ./quicku.h:28:7
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	sort_quick_standard
.Ltmp3046:
	.loc	33 29 37                # ./quicku.h:29:37
	addq	$2, %r15
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
.Ltmp3047:
	#DEBUG_VALUE: sort_quick_standard:low <- $r15
	.loc	33 0 37 is_stmt 0       # ./quicku.h:0:37
	movq	%r15, %rsi
.Ltmp3048:
	.loc	33 25 11 is_stmt 1      # ./quicku.h:25:11
	cmpq	%r14, %r15
.Ltmp3049:
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- undef
	.loc	33 25 7 is_stmt 0       # ./quicku.h:25:7
	jge	.LBB60_37
.Ltmp3050:
.LBB60_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB60_5 Depth 2
                                        #     Child Loop BB60_9 Depth 2
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 26 14 is_stmt 1      # ./quicku.h:26:14
	movq	%r14, %rdi
	subq	%rsi, %rdi
	.loc	33 26 20 is_stmt 0      # ./quicku.h:26:20
	cmpq	$31, %rdi
.Ltmp3051:
	.loc	33 26 9                 # ./quicku.h:26:9
	jl	.LBB60_19
.Ltmp3052:
# %bb.3:                                #   in Loop: Header=BB60_2 Depth=1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: median_of_three:array <- $rbx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $r14
	.loc	4 9 18 is_stmt 1        # ./median.h:9:18
	leaq	(%rsi,%r14), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp3053:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rbx,%rsi,4), %eax
.Ltmp3054:
	#DEBUG_VALUE: median_of_three:x <- $eax
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %rcx
.Ltmp3055:
	movl	(%rbx,%rcx,4), %r9d
.Ltmp3056:
	#DEBUG_VALUE: median_of_three:y <- $r9d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rbx,%r14,4), %edx
.Ltmp3057:
	#DEBUG_VALUE: median_of_three:z <- $edx
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r9d, %eax
.Ltmp3058:
	#DEBUG_VALUE: min:y <- $r9d
	#DEBUG_VALUE: min:x <- $eax
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r9d, %edi
	cmovlel	%eax, %edi
.Ltmp3059:
	#DEBUG_VALUE: max:y <- $r9d
	#DEBUG_VALUE: max:x <- $eax
	.loc	16 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r9d, %ebp
	cmovgel	%eax, %ebp
.Ltmp3060:
	#DEBUG_VALUE: min:y <- $edx
	#DEBUG_VALUE: min:x <- $edi
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%edx, %edi
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%edx, %edi
.Ltmp3061:
	#DEBUG_VALUE: max:y <- $edx
	#DEBUG_VALUE: median_of_three:smallest <- $edi
	#DEBUG_VALUE: max:x <- $ebp
	.loc	16 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%edx, %ebp
	.loc	16 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%edx, %ebp
.Ltmp3062:
	#DEBUG_VALUE: median_of_three:largest <- $ebp
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%eax, %r9d
.Ltmp3063:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%edx, %r9d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%edi, %r9d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ebp, %r9d
.Ltmp3064:
	#DEBUG_VALUE: median_of_three:median <- $r9d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%edi, (%rbx,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r9d, (%rbx,%r14,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ebp, (%rbx,%rcx,4)
.Ltmp3065:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	33 14 21                # ./quicku.h:14:21
	movslq	%esi, %rdx
.Ltmp3066:
	.loc	33 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %ecx
.Ltmp3067:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 14 23                # ./quicku.h:14:23
	cmpq	%r14, %rdx
.Ltmp3068:
	.loc	33 14 3 is_stmt 0       # ./quicku.h:14:3
	jge	.LBB60_18
.Ltmp3069:
# %bb.4:                                #   in Loop: Header=BB60_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	movslq	%esi, %r8
	movl	%r14d, %edi
	subl	%r8d, %edi
	notq	%r8
	addq	%r14, %r8
	andq	$3, %rdi
	jne	.LBB60_5
.Ltmp3070:
.LBB60_8:                               #   in Loop: Header=BB60_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	cmpq	$3, %r8
	jae	.LBB60_9
	jmp	.LBB60_18
.Ltmp3071:
	.p2align	4, 0x90
.LBB60_7:                               #   in Loop: Header=BB60_5 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 14 32                # ./quicku.h:14:32
	incq	%rdx
.Ltmp3072:
	#DEBUG_VALUE: j <- $rdx
	.loc	33 14 3                 # ./quicku.h:14:3
	decq	%rdi
	je	.LBB60_8
.Ltmp3073:
.LBB60_5:                               #   Parent Loop BB60_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: j <- $rdx
	.loc	33 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rbx,%rdx,4), %eax
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3074:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB60_7
.Ltmp3075:
# %bb.6:                                #   in Loop: Header=BB60_5 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rbp
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp3076:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rbp,4), %r10d
.Ltmp3077:
	#DEBUG_VALUE: swap:t <- $r10d
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rbp,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%r10d, (%rbx,%rdx,4)
	jmp	.LBB60_7
.Ltmp3078:
	.p2align	4, 0x90
.LBB60_17:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 14 32                # ./quicku.h:14:32
	addq	$4, %rdx
.Ltmp3079:
	#DEBUG_VALUE: j <- $rdx
	.loc	33 14 23 is_stmt 0      # ./quicku.h:14:23
	cmpq	%rdx, %r14
.Ltmp3080:
	.loc	33 14 3                 # ./quicku.h:14:3
	je	.LBB60_18
.Ltmp3081:
.LBB60_9:                               #   Parent Loop BB60_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: j <- $rdx
	.loc	33 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rbx,%rdx,4), %eax
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3082:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB60_10
.Ltmp3083:
# %bb.11:                               #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	4(%rbx,%rdx,4), %eax
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3084:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB60_12
.Ltmp3085:
.LBB60_13:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	8(%rbx,%rdx,4), %eax
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3086:
	.loc	33 15 9                 # ./quicku.h:15:9
	jle	.LBB60_14
.Ltmp3087:
.LBB60_15:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	12(%rbx,%rdx,4), %eax
	.loc	33 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3088:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB60_17
	jmp	.LBB60_16
.Ltmp3089:
	.p2align	4, 0x90
.LBB60_10:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp3090:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp3091:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%ebp, (%rbx,%rdx,4)
.Ltmp3092:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	4(%rbx,%rdx,4), %eax
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3093:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB60_13
.Ltmp3094:
.LBB60_12:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp3095:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp3096:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%ebp, 4(%rbx,%rdx,4)
.Ltmp3097:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	8(%rbx,%rdx,4), %eax
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3098:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB60_15
.Ltmp3099:
.LBB60_14:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp3100:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp3101:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%ebp, 8(%rbx,%rdx,4)
.Ltmp3102:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	33 15 9                 # ./quicku.h:15:9
	movl	12(%rbx,%rdx,4), %eax
	.loc	33 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp3103:
	.loc	33 15 9                 # ./quicku.h:15:9
	jg	.LBB60_17
.Ltmp3104:
.LBB60_16:                              #   in Loop: Header=BB60_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	33 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp3105:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	17 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp3106:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	17 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	17 4 6                  # ./swap.h:4:6
	movl	%ebp, 12(%rbx,%rdx,4)
	jmp	.LBB60_17
.Ltmp3107:
.LBB60_19:
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 31 34                # ./quicku.h:31:34
	incl	%edi
.Ltmp3108:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:array <- undef
	#DEBUG_VALUE: insertionSort:n <- $edi
	.loc	19 3 17                 # ./insertionssort.h:3:17
	cmpl	$2, %edi
.Ltmp3109:
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB60_37
.Ltmp3110:
# %bb.20:
	#DEBUG_VALUE: insertionSort:n <- $edi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	19 0 3                  # ./insertionssort.h:0:3
	leaq	(%rbx,%rsi,4), %rax
.Ltmp3111:
	#DEBUG_VALUE: insertionSort:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp3112:
	.loc	19 3 17                 # ./insertionssort.h:3:17
	movl	%edi, %r10d
.Ltmp3113:
	.loc	19 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB60_21
.Ltmp3114:
.LBB60_31:
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB60_37
.Ltmp3115:
# %bb.32:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp3116:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp3117:
	.p2align	4, 0x90
.LBB60_33:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 7 31                 # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB60_36
.Ltmp3118:
# %bb.34:                               #   in Loop: Header=BB60_33 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp3119:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp3120:
	leaq	-1(%r15), %r15
.Ltmp3121:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB60_33
.Ltmp3122:
# %bb.35:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp3123:
.LBB60_36:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rcx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp3124:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB60_37:
	.loc	33 34 1 is_stmt 1       # ./quicku.h:34:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB60_21:
	.cfi_def_cfa_offset 48
.Ltmp3125:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:n <- $edi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	33 0 1 is_stmt 0        # ./quicku.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp3126:
	.loc	19 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp3127:
	.loc	19 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB60_22
.Ltmp3128:
	.p2align	4, 0x90
.LBB60_30:                              #   in Loop: Header=BB60_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp3129:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp3130:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB60_31
.Ltmp3131:
.LBB60_22:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB60_23 Depth 2
                                        #     Child Loop BB60_27 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	19 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp3132:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp3133:
	.p2align	4, 0x90
.LBB60_23:                              #   Parent Loop BB60_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB60_26
.Ltmp3134:
# %bb.24:                               #   in Loop: Header=BB60_23 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp3135:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp3136:
	leaq	-1(%rdi), %rdi
.Ltmp3137:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB60_23
.Ltmp3138:
# %bb.25:                               #   in Loop: Header=BB60_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp3139:
.LBB60_26:                              #   in Loop: Header=BB60_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	19 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp3140:
	.loc	19 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rdi
.Ltmp3141:
	#DEBUG_VALUE: insertionSort:i <- $rdi
	.loc	19 4 15                 # ./insertionssort.h:4:15
	movl	4(%rax,%r15,4), %esi
.Ltmp3142:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp3143:
	.p2align	4, 0x90
.LBB60_27:                              #   Parent Loop BB60_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	19 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	19 7 5                  # ./insertionssort.h:7:5
	jle	.LBB60_30
.Ltmp3144:
# %bb.28:                               #   in Loop: Header=BB60_27 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp3145:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	19 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp3146:
	leaq	-1(%rdi), %rdi
.Ltmp3147:
	.loc	19 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB60_27
.Ltmp3148:
# %bb.29:                               #   in Loop: Header=BB60_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB60_30
.Lfunc_end60:
	.size	sort_quick_standard, .Lfunc_end60-sort_quick_standard
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3               # -- Begin function merge
.LCPI61_0:
	.quad	8                       # 0x8
	.text
	.globl	merge
	.p2align	4, 0x90
	.type	merge,@function
merge:                                  # @merge
.Lfunc_begin61:
	.file	34 "/home/peeters/bachelor" "./timsort.h"
	.loc	34 11 0 is_stmt 1       # ./timsort.h:11:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: merge:arr <- $rdi
	#DEBUG_VALUE: merge:l <- $esi
	#DEBUG_VALUE: merge:m <- $edx
	#DEBUG_VALUE: merge:r <- $ecx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
	pushq	%r15
	pushq	%r14
	pushq	%r13
	pushq	%r12
	pushq	%rbx
	subq	$40, %rsp
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	movl	%ecx, %r13d
	movl	%edx, %r11d
	movl	%esi, %ebx
	movq	%rdi, %r12
.Ltmp3149:
	#DEBUG_VALUE: merge:r <- $r13d
	#DEBUG_VALUE: merge:m <- $r11d
	#DEBUG_VALUE: merge:l <- $ebx
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 12 18 prologue_end   # ./timsort.h:12:18
	movl	%edx, %r10d
	subl	%esi, %r10d
	.loc	34 12 22 is_stmt 0      # ./timsort.h:12:22
	leal	1(%r10), %edx
.Ltmp3150:
	#DEBUG_VALUE: merge:len1 <- $edx
	.loc	34 12 36                # ./timsort.h:12:36
	movl	%ecx, %r9d
	subl	%r11d, %r9d
.Ltmp3151:
	#DEBUG_VALUE: merge:len2 <- $r9d
	.loc	34 13 5 is_stmt 1       # ./timsort.h:13:5
	leaq	15(,%rdx,4), %rax
	andq	$-16, %rax
	movq	%rsp, %rdi
	subq	%rax, %rdi
.Ltmp3152:
	#DEBUG_VALUE: merge:left <- [$rdi+0]
	movq	%rdi, %rsp
.Ltmp3153:
	#DEBUG_VALUE: merge:__vla_expr0 <- undef
	leaq	15(,%r9,4), %rax
	andq	$-16, %rax
	movq	%rsp, %r15
	subq	%rax, %r15
.Ltmp3154:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	movq	%r15, %rsp
.Ltmp3155:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:__vla_expr1 <- $r9
	.loc	34 14 23                # ./timsort.h:14:23
	testl	%r10d, %r10d
	movq	%r11, -72(%rbp)         # 8-byte Spill
	movl	%ecx, -60(%rbp)         # 4-byte Spill
.Ltmp3156:
	.loc	34 14 5 is_stmt 0       # ./timsort.h:14:5
	js	.LBB61_2
.Ltmp3157:
# %bb.1:
	#DEBUG_VALUE: merge:__vla_expr1 <- $r9
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:left <- [$rdi+0]
	#DEBUG_VALUE: merge:len2 <- $r9d
	#DEBUG_VALUE: merge:len1 <- $edx
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	#DEBUG_VALUE: merge:m <- $r11d
	#DEBUG_VALUE: merge:r <- $r13d
	movslq	%ebx, %rax
	leaq	(%r12,%rax,4), %rsi
	shlq	$2, %rdx
.Ltmp3158:
	.loc	34 0 5                  # ./timsort.h:0:5
	movq	%r9, %r13
.Ltmp3159:
	#DEBUG_VALUE: merge:__vla_expr1 <- $r13
	movq	%rdi, -56(%rbp)         # 8-byte Spill
	movq	%r10, %r14
.Ltmp3160:
	.loc	34 15 17 is_stmt 1      # ./timsort.h:15:17
	callq	memcpy
.Ltmp3161:
	.loc	34 0 17 is_stmt 0       # ./timsort.h:0:17
	movq	-72(%rbp), %r11         # 8-byte Reload
	movq	%r14, %r10
	movq	-56(%rbp), %rdi         # 8-byte Reload
	movq	%r13, %r9
.Ltmp3162:
	#DEBUG_VALUE: i <- undef
.LBB61_2:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	#DEBUG_VALUE: i <- 0
	.loc	34 16 23 is_stmt 1      # ./timsort.h:16:23
	testl	%r9d, %r9d
.Ltmp3163:
	.loc	34 16 5 is_stmt 0       # ./timsort.h:16:5
	jle	.LBB61_3
.Ltmp3164:
# %bb.4:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	cmpl	$31, %r9d
	ja	.LBB61_12
.Ltmp3165:
# %bb.5:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 0 5                  # ./timsort.h:0:5
	xorl	%eax, %eax
	jmp	.LBB61_6
.Ltmp3166:
.LBB61_3:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	xorl	%eax, %eax
	jmp	.LBB61_24
.Ltmp3167:
.LBB61_12:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 16 5                 # ./timsort.h:16:5
	leaq	-1(%r9), %rcx
	leal	1(%r11), %edx
	leal	(%r11,%rcx), %esi
	incl	%esi
	xorl	%eax, %eax
	cmpl	%edx, %esi
	jl	.LBB61_6
.Ltmp3168:
# %bb.13:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	shrq	$32, %rcx
	jne	.LBB61_6
.Ltmp3169:
# %bb.14:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	movl	%r9d, %eax
	andl	$-32, %eax
	leaq	-32(%rax), %rdx
	movq	%rdx, %r14
	shrq	$5, %r14
	incq	%r14
	movl	%r14d, %r8d
	andl	$3, %r8d
	cmpq	$96, %rdx
	jae	.LBB61_16
.Ltmp3170:
# %bb.15:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 0 5                  # ./timsort.h:0:5
	xorl	%edx, %edx
	jmp	.LBB61_18
.Ltmp3171:
.LBB61_16:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 16 5                 # ./timsort.h:16:5
	subq	%r8, %r14
	leal	97(%r11), %esi
	xorl	%edx, %edx
.Ltmp3172:
	.p2align	4, 0x90
.LBB61_17:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 17 20 is_stmt 1      # ./timsort.h:17:20
	leal	-96(%rsi), %ecx
	movslq	%ecx, %rcx
	vmovups	(%r12,%rcx,4), %ymm0
	vmovups	32(%r12,%rcx,4), %ymm1
	vmovups	64(%r12,%rcx,4), %ymm2
	vmovups	96(%r12,%rcx,4), %ymm3
	.loc	34 17 18 is_stmt 0      # ./timsort.h:17:18
	vmovups	%ymm0, (%r15,%rdx,4)
	vmovups	%ymm1, 32(%r15,%rdx,4)
	vmovups	%ymm2, 64(%r15,%rdx,4)
	vmovups	%ymm3, 96(%r15,%rdx,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	-64(%rsi), %ecx
	movslq	%ecx, %rcx
	vmovups	(%r12,%rcx,4), %ymm0
	vmovups	32(%r12,%rcx,4), %ymm1
	vmovups	64(%r12,%rcx,4), %ymm2
	vmovups	96(%r12,%rcx,4), %ymm3
	.loc	34 17 18                # ./timsort.h:17:18
	vmovups	%ymm0, 128(%r15,%rdx,4)
	vmovups	%ymm1, 160(%r15,%rdx,4)
	vmovups	%ymm2, 192(%r15,%rdx,4)
	vmovups	%ymm3, 224(%r15,%rdx,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	-32(%rsi), %ecx
	movslq	%ecx, %rcx
	vmovups	(%r12,%rcx,4), %ymm0
	vmovups	32(%r12,%rcx,4), %ymm1
	vmovups	64(%r12,%rcx,4), %ymm2
	vmovups	96(%r12,%rcx,4), %ymm3
	.loc	34 17 18                # ./timsort.h:17:18
	vmovups	%ymm0, 256(%r15,%rdx,4)
	vmovups	%ymm1, 288(%r15,%rdx,4)
	vmovups	%ymm2, 320(%r15,%rdx,4)
	vmovups	%ymm3, 352(%r15,%rdx,4)
	.loc	34 17 20                # ./timsort.h:17:20
	movslq	%esi, %rsi
	vmovdqu	(%r12,%rsi,4), %ymm0
	vmovdqu	32(%r12,%rsi,4), %ymm1
	vmovdqu	64(%r12,%rsi,4), %ymm2
	vmovdqu	96(%r12,%rsi,4), %ymm3
	.loc	34 17 18                # ./timsort.h:17:18
	vmovdqu	%ymm0, 384(%r15,%rdx,4)
	vmovdqu	%ymm1, 416(%r15,%rdx,4)
	vmovdqu	%ymm2, 448(%r15,%rdx,4)
	vmovdqu	%ymm3, 480(%r15,%rdx,4)
	.loc	34 16 32 is_stmt 1      # ./timsort.h:16:32
	subq	$-128, %rdx
	subl	$-128, %esi
	addq	$-4, %r14
	jne	.LBB61_17
.Ltmp3173:
.LBB61_18:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	testq	%r8, %r8
	je	.LBB61_21
.Ltmp3174:
# %bb.19:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	negq	%r8
.Ltmp3175:
	.p2align	4, 0x90
.LBB61_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 17 30                # ./timsort.h:17:30
	movl	%edx, %ecx
	orl	$1, %ecx
	addl	%r11d, %ecx
	.loc	34 17 20 is_stmt 0      # ./timsort.h:17:20
	movslq	%ecx, %rcx
	vmovdqu	(%r12,%rcx,4), %ymm0
	vmovdqu	32(%r12,%rcx,4), %ymm1
	vmovdqu	64(%r12,%rcx,4), %ymm2
	vmovdqu	96(%r12,%rcx,4), %ymm3
	.loc	34 17 18                # ./timsort.h:17:18
	vmovdqu	%ymm0, (%r15,%rdx,4)
	vmovdqu	%ymm1, 32(%r15,%rdx,4)
	vmovdqu	%ymm2, 64(%r15,%rdx,4)
	vmovdqu	%ymm3, 96(%r15,%rdx,4)
	.loc	34 16 32 is_stmt 1      # ./timsort.h:16:32
	addq	$32, %rdx
	incq	%r8
	jne	.LBB61_20
.Ltmp3176:
.LBB61_21:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 16 5 is_stmt 0       # ./timsort.h:16:5
	cmpq	%r9, %rax
	je	.LBB61_22
.Ltmp3177:
.LBB61_6:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	movq	%rax, %r8
	notq	%r8
	addq	%r9, %r8
	movq	%r9, %rdx
	andq	$7, %rdx
	je	.LBB61_9
.Ltmp3178:
# %bb.7:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	leal	1(%r11), %esi
.Ltmp3179:
	.p2align	4, 0x90
.LBB61_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	#DEBUG_VALUE: i <- $rax
	.loc	34 17 20 is_stmt 1      # ./timsort.h:17:20
	leal	(%rsi,%rax), %ecx
	movslq	%ecx, %rcx
	movl	(%r12,%rcx,4), %ecx
	.loc	34 17 18 is_stmt 0      # ./timsort.h:17:18
	movl	%ecx, (%r15,%rax,4)
	.loc	34 16 32 is_stmt 1      # ./timsort.h:16:32
	incq	%rax
.Ltmp3180:
	#DEBUG_VALUE: i <- $rax
	.loc	34 16 5 is_stmt 0       # ./timsort.h:16:5
	decq	%rdx
	jne	.LBB61_8
.Ltmp3181:
.LBB61_9:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	cmpq	$7, %r8
	jb	.LBB61_22
.Ltmp3182:
# %bb.10:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	movl	%r11d, %ecx
.Ltmp3183:
	.p2align	4, 0x90
.LBB61_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	#DEBUG_VALUE: i <- $rax
	.loc	34 17 20 is_stmt 1      # ./timsort.h:17:20
	leal	(%rcx,%rax), %edx
	incl	%edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18 is_stmt 0      # ./timsort.h:17:18
	movl	%edx, (%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	2(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 4(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	3(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 8(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	4(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 12(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	5(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 16(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	6(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 20(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	7(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 24(%r15,%rax,4)
	.loc	34 17 20                # ./timsort.h:17:20
	leal	8(%rcx,%rax), %edx
	movslq	%edx, %rdx
	movl	(%r12,%rdx,4), %edx
	.loc	34 17 18                # ./timsort.h:17:18
	movl	%edx, 28(%r15,%rax,4)
	.loc	34 16 32 is_stmt 1      # ./timsort.h:16:32
	addq	$8, %rax
.Ltmp3184:
	#DEBUG_VALUE: i <- $rax
	.loc	34 16 23 is_stmt 0      # ./timsort.h:16:23
	cmpq	%rax, %r9
.Ltmp3185:
	.loc	34 16 5                 # ./timsort.h:16:5
	jne	.LBB61_11
.Ltmp3186:
.LBB61_22:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 0 5                  # ./timsort.h:0:5
	xorl	%eax, %eax
.Ltmp3187:
	#DEBUG_VALUE: merge:i <- 0
	#DEBUG_VALUE: merge:j <- 0
	#DEBUG_VALUE: merge:k <- $ebx
	.loc	34 21 14 is_stmt 1      # ./timsort.h:21:14
	testl	%r10d, %r10d
	.loc	34 21 5 is_stmt 0       # ./timsort.h:21:5
	js	.LBB61_24
.Ltmp3188:
# %bb.23:
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:j <- 0
	#DEBUG_VALUE: merge:i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	testl	%r9d, %r9d
	jle	.LBB61_24
.Ltmp3189:
# %bb.43:
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:j <- 0
	#DEBUG_VALUE: merge:i <- 0
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	movslq	%ebx, %rax
	leaq	(%r12,%rax,4), %rcx
	xorl	%r13d, %r13d
	xorl	%eax, %eax
.Ltmp3190:
	.p2align	4, 0x90
.LBB61_44:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:k <- undef
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:i <- $eax
	.loc	34 22 13 is_stmt 1      # ./timsort.h:22:13
	movslq	%eax, %rdx
	movl	(%rdi,%rdx,4), %edx
	.loc	34 22 24 is_stmt 0      # ./timsort.h:22:24
	movslq	%r13d, %rsi
	movl	(%r15,%rsi,4), %esi
	.loc	34 22 21                # ./timsort.h:22:21
	cmpl	%esi, %edx
.Ltmp3191:
	.loc	34 22 13                # ./timsort.h:22:13
	jle	.LBB61_45
.Ltmp3192:
# %bb.46:                               #   in Loop: Header=BB61_44 Depth=1
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 26 20 is_stmt 1      # ./timsort.h:26:20
	movl	%esi, (%rcx)
	.loc	34 27 14                # ./timsort.h:27:14
	incl	%r13d
.Ltmp3193:
	#DEBUG_VALUE: merge:j <- $r13d
	.loc	34 21 5                 # ./timsort.h:21:5
	incl	%ebx
.Ltmp3194:
	#DEBUG_VALUE: merge:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	.loc	34 21 14 is_stmt 0      # ./timsort.h:21:14
	cmpl	%r10d, %eax
	jle	.LBB61_48
	jmp	.LBB61_25
.Ltmp3195:
	.p2align	4, 0x90
.LBB61_45:                              #   in Loop: Header=BB61_44 Depth=1
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 23 20 is_stmt 1      # ./timsort.h:23:20
	movl	%edx, (%rcx)
	.loc	34 24 14                # ./timsort.h:24:14
	incl	%eax
.Ltmp3196:
	#DEBUG_VALUE: merge:i <- $eax
	.loc	34 21 5                 # ./timsort.h:21:5
	incl	%ebx
.Ltmp3197:
	#DEBUG_VALUE: merge:k <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	.loc	34 21 14 is_stmt 0      # ./timsort.h:21:14
	cmpl	%r10d, %eax
	.loc	34 21 5                 # ./timsort.h:21:5
	jg	.LBB61_25
.Ltmp3198:
.LBB61_48:                              #   in Loop: Header=BB61_44 Depth=1
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	addq	$4, %rcx
	cmpl	%r9d, %r13d
	jl	.LBB61_44
	jmp	.LBB61_25
.Ltmp3199:
.LBB61_24:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:l <- $ebx
	.loc	34 19 9 is_stmt 1       # ./timsort.h:19:9
	xorl	%r13d, %r13d
.Ltmp3200:
.LBB61_25:
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:i <- $eax
	.loc	34 31 14                # ./timsort.h:31:14
	movl	%r10d, %ecx
	subl	%eax, %ecx
	.loc	34 31 5 is_stmt 0       # ./timsort.h:31:5
	jl	.LBB61_31
.Ltmp3201:
# %bb.26:
	#DEBUG_VALUE: merge:i <- $eax
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 5                  # ./timsort.h:0:5
	movq	%r9, -48(%rbp)          # 8-byte Spill
	.loc	34 31 5                 # ./timsort.h:31:5
	movslq	%ebx, %rbx
.Ltmp3202:
	.loc	34 0 5                  # ./timsort.h:0:5
	movq	%rdi, %rdx
	.loc	34 31 5                 # ./timsort.h:31:5
	movslq	%eax, %r14
	movslq	%r10d, %rax
.Ltmp3203:
	.loc	34 0 5                  # ./timsort.h:0:5
	movq	%rax, -56(%rbp)         # 8-byte Spill
	.loc	34 31 5                 # ./timsort.h:31:5
	leaq	(%r12,%rbx,4), %rdi
	leaq	(%rdx,%r14,4), %rsi
	leaq	4(,%rcx,4), %rdx
.Ltmp3204:
	.loc	34 32 16 is_stmt 1      # ./timsort.h:32:16
	vzeroupper
	callq	memcpy
.Ltmp3205:
	.loc	34 0 16 is_stmt 0       # ./timsort.h:0:16
	movq	-56(%rbp), %rax         # 8-byte Reload
.Ltmp3206:
	.loc	34 31 5 is_stmt 1       # ./timsort.h:31:5
	movq	%rax, %rcx
	subq	%r14, %rcx
	incq	%rcx
	cmpq	$15, %rcx
	ja	.LBB61_34
.Ltmp3207:
# %bb.27:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 5 is_stmt 0        # ./timsort.h:0:5
	movq	-48(%rbp), %r9          # 8-byte Reload
	jmp	.LBB61_28
.Ltmp3208:
.LBB61_34:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 31 5                 # ./timsort.h:31:5
	movq	%rcx, %r8
	andq	$-16, %r8
	vmovq	%rbx, %xmm0
	leaq	-16(%r8), %rsi
	movq	%rsi, %rdi
	shrq	$4, %rdi
	incq	%rdi
	movl	%edi, %edx
	andl	$7, %edx
	cmpq	$112, %rsi
	jae	.LBB61_36
.Ltmp3209:
# %bb.35:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 5                  # ./timsort.h:0:5
	vpxor	%xmm1, %xmm1, %xmm1
	vpxor	%xmm2, %xmm2, %xmm2
	vpxor	%xmm3, %xmm3, %xmm3
	movq	-48(%rbp), %r9          # 8-byte Reload
	jmp	.LBB61_38
.Ltmp3210:
.LBB61_36:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 31 5                 # ./timsort.h:31:5
	movq	%rdx, %rsi
	subq	%rdi, %rsi
	vpxor	%xmm1, %xmm1, %xmm1
	vpbroadcastq	.LCPI61_0(%rip), %ymm4 # ymm4 = [8,8,8,8]
	vpxor	%xmm2, %xmm2, %xmm2
	vpxor	%xmm3, %xmm3, %xmm3
	movq	-48(%rbp), %r9          # 8-byte Reload
.Ltmp3211:
	.p2align	4, 0x90
.LBB61_37:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 33 10 is_stmt 1      # ./timsort.h:33:10
	vpaddq	%ymm4, %ymm0, %ymm0
	vpaddq	%ymm4, %ymm1, %ymm1
	vpaddq	%ymm4, %ymm2, %ymm2
	vpaddq	%ymm4, %ymm3, %ymm3
	addq	$8, %rsi
	jne	.LBB61_37
.Ltmp3212:
.LBB61_38:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 10 is_stmt 0       # ./timsort.h:0:10
	testq	%rdx, %rdx
	je	.LBB61_41
.Ltmp3213:
# %bb.39:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	negq	%rdx
	vpcmpeqd	%ymm4, %ymm4, %ymm4
.Ltmp3214:
	.p2align	4, 0x90
.LBB61_40:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 33 10                # ./timsort.h:33:10
	vpsubq	%ymm4, %ymm0, %ymm0
	vpsubq	%ymm4, %ymm1, %ymm1
	vpsubq	%ymm4, %ymm2, %ymm2
	vpsubq	%ymm4, %ymm3, %ymm3
	incq	%rdx
	jne	.LBB61_40
.Ltmp3215:
.LBB61_41:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 31 5 is_stmt 1       # ./timsort.h:31:5
	vpaddq	%ymm3, %ymm1, %ymm1
	vpaddq	%ymm2, %ymm0, %ymm0
	vpaddq	%ymm1, %ymm0, %ymm0
	vextracti128	$1, %ymm0, %xmm1
	vpaddq	%xmm1, %xmm0, %xmm0
	vpshufd	$78, %xmm0, %xmm1       # xmm1 = xmm0[2,3,0,1]
	vpaddq	%xmm1, %xmm0, %xmm0
	vmovq	%xmm0, %rbx
	cmpq	%r8, %rcx
	je	.LBB61_30
.Ltmp3216:
# %bb.42:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 5 is_stmt 0        # ./timsort.h:0:5
	addq	%r8, %r14
.Ltmp3217:
.LBB61_28:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 31 5                 # ./timsort.h:31:5
	decq	%r14
.Ltmp3218:
	.p2align	4, 0x90
.LBB61_29:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:k <- $rbx
	#DEBUG_VALUE: merge:i <- undef
	.loc	34 33 10 is_stmt 1      # ./timsort.h:33:10
	incq	%rbx
.Ltmp3219:
	#DEBUG_VALUE: merge:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: merge:k <- $rbx
	.loc	34 31 14                # ./timsort.h:31:14
	incq	%r14
	cmpq	%rax, %r14
	.loc	34 31 5 is_stmt 0       # ./timsort.h:31:5
	jl	.LBB61_29
.Ltmp3220:
.LBB61_30:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 0 5                  # ./timsort.h:0:5
	movq	-72(%rbp), %r11         # 8-byte Reload
.Ltmp3221:
.LBB61_31:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:j <- $r13d
	.loc	34 36 14 is_stmt 1      # ./timsort.h:36:14
	cmpl	%r9d, %r13d
	.loc	34 36 5 is_stmt 0       # ./timsort.h:36:5
	jge	.LBB61_33
.Ltmp3222:
# %bb.32:
	#DEBUG_VALUE: merge:j <- $r13d
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	movslq	%ebx, %rax
	movslq	%r13d, %rcx
	leaq	(%r12,%rax,4), %rdi
	leaq	(%r15,%rcx,4), %rsi
	notl	%r13d
.Ltmp3223:
	addl	-60(%rbp), %r13d        # 4-byte Folded Reload
	subl	%r11d, %r13d
	leaq	4(,%r13,4), %rdx
.Ltmp3224:
	.loc	34 37 16 is_stmt 1      # ./timsort.h:37:16
	vzeroupper
	callq	memcpy
.Ltmp3225:
	#DEBUG_VALUE: merge:j <- undef
	#DEBUG_VALUE: merge:k <- undef
.LBB61_33:
	#DEBUG_VALUE: merge:k <- $ebx
	#DEBUG_VALUE: merge:right <- [$r15+0]
	#DEBUG_VALUE: merge:arr <- $r12
	.loc	34 41 1                 # ./timsort.h:41:1
	leaq	-40(%rbp), %rsp
	popq	%rbx
.Ltmp3226:
	popq	%r12
.Ltmp3227:
	popq	%r13
	popq	%r14
	popq	%r15
.Ltmp3228:
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	vzeroupper
	retq
.Ltmp3229:
.Lfunc_end61:
	.size	merge, .Lfunc_end61-merge
	.cfi_endproc
                                        # -- End function
	.globl	timsort_h               # -- Begin function timsort_h
	.p2align	4, 0x90
	.type	timsort_h,@function
timsort_h:                              # @timsort_h
.Lfunc_begin62:
	.loc	34 43 0                 # ./timsort.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: timsort_h:arr <- $rdi
	#DEBUG_VALUE: timsort_h:n <- $esi
	#DEBUG_VALUE: timsort_h:n <- $esi
	#DEBUG_VALUE: timsort_h:arr <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp3230:
	#DEBUG_VALUE: i <- 0
	.loc	34 44 23 prologue_end   # ./timsort.h:44:23
	testl	%esi, %esi
.Ltmp3231:
	.loc	34 44 5 is_stmt 0       # ./timsort.h:44:5
	jle	.LBB62_13
.Ltmp3232:
# %bb.1:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: timsort_h:n <- $esi
	#DEBUG_VALUE: timsort_h:arr <- $rdi
	.loc	34 0 5                  # ./timsort.h:0:5
	movl	%esi, %r14d
.Ltmp3233:
	#DEBUG_VALUE: timsort_h:n <- $r14d
	movq	%rdi, %rbx
.Ltmp3234:
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	leal	-1(%r14), %eax
.Ltmp3235:
	.loc	34 44 5                 # ./timsort.h:44:5
	movslq	%eax, %r9
	movl	%esi, %r8d
	movl	$1, %r10d
	xorl	%r11d, %r11d
	xorl	%r15d, %r15d
	jmp	.LBB62_2
.Ltmp3236:
	.p2align	4, 0x90
.LBB62_28:                              #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	34 44 30                # ./timsort.h:44:30
	addq	$32, %r15
.Ltmp3237:
	#DEBUG_VALUE: i <- $r15
	.loc	34 44 5                 # ./timsort.h:44:5
	incq	%r11
	addq	$32, %r10
.Ltmp3238:
	.loc	34 44 23                # ./timsort.h:44:23
	cmpq	%r8, %r15
.Ltmp3239:
	.loc	34 44 5                 # ./timsort.h:44:5
	jae	.LBB62_8
.Ltmp3240:
.LBB62_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB62_5 Depth 2
                                        #     Child Loop BB62_18 Depth 2
                                        #       Child Loop BB62_19 Depth 3
                                        #       Child Loop BB62_23 Depth 3
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: i <- $r15
	.loc	34 45 41 is_stmt 1      # ./timsort.h:45:41
	movq	%r15, %rax
	orq	$31, %rax
.Ltmp3241:
	#DEBUG_VALUE: min:x <- $rax
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpq	%r9, %rax
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgel	%r9d, %eax
.Ltmp3242:
	.loc	34 45 34 is_stmt 1      # ./timsort.h:45:34
	movslq	%eax, %rcx
.Ltmp3243:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	.loc	19 32 23                # ./insertionssort.h:32:23
	cmpq	%rcx, %r15
.Ltmp3244:
	#DEBUG_VALUE: min:y <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14d
	.loc	19 32 3 is_stmt 0       # ./insertionssort.h:32:3
	jge	.LBB62_28
.Ltmp3245:
# %bb.3:                                #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	34 45 41 is_stmt 1      # ./timsort.h:45:41
	movq	%r11, %rdx
	shlq	$5, %rdx
	notq	%rdx
	movq	%r15, %rdi
.Ltmp3246:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	testb	$1, %cl
	je	.LBB62_16
.Ltmp3247:
# %bb.4:                                #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	movq	%r15, %rdi
	orq	$1, %rdi
.Ltmp3248:
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	(%rbx,%rdi,4), %esi
.Ltmp3249:
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r10, %rax
.Ltmp3250:
	.p2align	4, 0x90
.LBB62_5:                               #   Parent Loop BB62_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	-4(%rbx,%rax,4), %ebp
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%esi, %ebp
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB62_14
.Ltmp3251:
# %bb.6:                                #   in Loop: Header=BB62_5 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ebp, (%rbx,%rax,4)
.Ltmp3252:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	19 36 14                # ./insertionssort.h:36:14
	decq	%rax
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB62_5
.Ltmp3253:
# %bb.7:                                #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 0 19                 # ./insertionssort.h:0:19
	movq	$-1, %rax
	jmp	.LBB62_15
.Ltmp3254:
.LBB62_14:                              #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 36 5                 # ./insertionssort.h:36:5
	decq	%rax
.Ltmp3255:
.LBB62_15:                              #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r15
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%esi, 4(%rbx,%rax,4)
.Ltmp3256:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdi
.LBB62_16:                              #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	%rcx, %rdx
	je	.LBB62_28
.Ltmp3257:
# %bb.17:                               #   in Loop: Header=BB62_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	leaq	2(%rdi), %rax
	jmp	.LBB62_18
.Ltmp3258:
	.p2align	4, 0x90
.LBB62_26:                              #   in Loop: Header=BB62_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 36 5                 # ./insertionssort.h:36:5
	decq	%rdx
.Ltmp3259:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18                # ./insertionssort.h:40:18
	movl	%esi, 4(%rbx,%rdx,4)
.Ltmp3260:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdi
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	$2, %rax
.Ltmp3261:
	.loc	19 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rcx, %rdi
.Ltmp3262:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	je	.LBB62_28
.Ltmp3263:
.LBB62_18:                              #   Parent Loop BB62_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB62_19 Depth 3
                                        #       Child Loop BB62_23 Depth 3
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rbx,%rdi,4), %edx
.Ltmp3264:
	#DEBUG_VALUE: insertionSortStd:j <- $rdi
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%rdi, %rsi
.Ltmp3265:
	.p2align	4, 0x90
.LBB62_19:                              #   Parent Loop BB62_2 Depth=1
                                        #     Parent Loop BB62_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	(%rbx,%rsi,4), %ebp
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%edx, %ebp
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB62_22
.Ltmp3266:
# %bb.20:                               #   in Loop: Header=BB62_19 Depth=3
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ebp, 4(%rbx,%rsi,4)
.Ltmp3267:
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%rsi, %rsi
.Ltmp3268:
	.loc	19 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rsi), %rsi
.Ltmp3269:
	.loc	19 36 19                # ./insertionssort.h:36:19
	jg	.LBB62_19
.Ltmp3270:
# %bb.21:                               #   in Loop: Header=BB62_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	movq	$-1, %rsi
.Ltmp3271:
.LBB62_22:                              #   in Loop: Header=BB62_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%edx, 4(%rbx,%rsi,4)
	.loc	19 33 15                # ./insertionssort.h:33:15
	movl	8(%rbx,%rdi,4), %esi
.Ltmp3272:
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	addq	$2, %rdi
.Ltmp3273:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	movq	%rax, %rdx
.Ltmp3274:
	.p2align	4, 0x90
.LBB62_23:                              #   Parent Loop BB62_2 Depth=1
                                        #     Parent Loop BB62_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	-4(%rbx,%rdx,4), %ebp
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%esi, %ebp
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB62_26
.Ltmp3275:
# %bb.24:                               #   in Loop: Header=BB62_23 Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ebp, (%rbx,%rdx,4)
.Ltmp3276:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	19 36 14                # ./insertionssort.h:36:14
	decq	%rdx
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB62_23
.Ltmp3277:
# %bb.25:                               #   in Loop: Header=BB62_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rcx
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r15
	#DEBUG_VALUE: i <- $r15
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	19 0 19                 # ./insertionssort.h:0:19
	movq	$-1, %rdx
.Ltmp3278:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%esi, 4(%rbx,%rdx,4)
.Ltmp3279:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rdi
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	$2, %rax
.Ltmp3280:
	.loc	19 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rcx, %rdi
.Ltmp3281:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	jne	.LBB62_18
	jmp	.LBB62_28
.Ltmp3282:
.LBB62_8:
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: s <- 32
	.loc	34 47 29 is_stmt 1      # ./timsort.h:47:29
	cmpl	$33, %r14d
.Ltmp3283:
	.loc	34 47 5 is_stmt 0       # ./timsort.h:47:5
	jl	.LBB62_13
.Ltmp3284:
# %bb.9:
	#DEBUG_VALUE: s <- 32
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	.loc	34 0 5                  # ./timsort.h:0:5
	movl	$32, %r15d
.Ltmp3285:
	.p2align	4, 0x90
.LBB62_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB62_11 Depth 2
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: s <- $r15d
	#DEBUG_VALUE: left <- 0
	leal	-1(%r15), %r12d
	addl	%r15d, %r15d
.Ltmp3286:
	xorl	%esi, %esi
.Ltmp3287:
	.p2align	4, 0x90
.LBB62_11:                              #   Parent Loop BB62_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: left <- $esi
	.loc	34 53 32 is_stmt 1      # ./timsort.h:53:32
	leal	(%r12,%rsi), %edx
.Ltmp3288:
	#DEBUG_VALUE: mid <- $edx
	.loc	34 54 35                # ./timsort.h:54:35
	leal	(%rsi,%r15), %ebp
.Ltmp3289:
	#DEBUG_VALUE: min:y <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14d
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebp
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r14d, %ebp
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r14d, %ecx
	cmovlel	%ebp, %ecx
	decl	%ecx
.Ltmp3290:
	#DEBUG_VALUE: right <- $ecx
	.loc	34 55 13 is_stmt 1      # ./timsort.h:55:13
	movq	%rbx, %rdi
                                        # kill: def $esi killed $esi killed $rsi
	callq	merge
.Ltmp3291:
	#DEBUG_VALUE: left <- $ebp
	.loc	34 0 13 is_stmt 0       # ./timsort.h:0:13
	movl	%ebp, %esi
.Ltmp3292:
	.loc	16 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%r14d, %ebp
.Ltmp3293:
	#DEBUG_VALUE: min:y <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r14d
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebp
	#DEBUG_VALUE: left <- $esi
	.loc	34 52 9                 # ./timsort.h:52:9
	jl	.LBB62_11
.Ltmp3294:
# %bb.12:                               #   in Loop: Header=BB62_10 Depth=1
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r14d
	#DEBUG_VALUE: s <- $r15d
	.loc	34 47 29                # ./timsort.h:47:29
	cmpl	%r14d, %r15d
.Ltmp3295:
	.loc	34 47 5 is_stmt 0       # ./timsort.h:47:5
	jl	.LBB62_10
.Ltmp3296:
.LBB62_13:
	.loc	34 58 1 is_stmt 1       # ./timsort.h:58:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3297:
.Lfunc_end62:
	.size	timsort_h, .Lfunc_end62-timsort_h
	.cfi_endproc
                                        # -- End function
	.globl	timsort                 # -- Begin function timsort
	.p2align	4, 0x90
	.type	timsort,@function
timsort:                                # @timsort
.Lfunc_begin63:
	.loc	34 60 0                 # ./timsort.h:60:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: timsort:array <- $rdi
	#DEBUG_VALUE: timsort:low <- $esi
	#DEBUG_VALUE: timsort:high <- $edx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebx
	movq	%rdi, %r14
	#DEBUG_VALUE: timsort:high <- $edx
.Ltmp3298:
	#DEBUG_VALUE: timsort:low <- $ebx
	#DEBUG_VALUE: timsort:array <- $r14
	.loc	34 61 71 prologue_end   # ./timsort.h:61:71
	movl	%edx, %r12d
	subl	%esi, %r12d
	.loc	34 61 77 is_stmt 0      # ./timsort.h:61:77
	leal	1(%r12), %r15d
	.loc	34 61 5                 # ./timsort.h:61:5
	movl	$.L.str, %edi
	movl	%r15d, %ecx
	xorl	%eax, %eax
	callq	printf
.Ltmp3299:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: timsort_h:arr <- undef
	.loc	34 44 23 is_stmt 1      # ./timsort.h:44:23
	testl	%r12d, %r12d
.Ltmp3300:
	.loc	34 44 5 is_stmt 0       # ./timsort.h:44:5
	js	.LBB63_13
.Ltmp3301:
# %bb.1:
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: timsort:array <- $r14
	#DEBUG_VALUE: timsort:low <- $ebx
	.loc	34 0 0                  # ./timsort.h:0:0
	movslq	%ebx, %rax
	leaq	(%r14,%rax,4), %rbx
.Ltmp3302:
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	.loc	34 44 5                 # ./timsort.h:44:5
	movl	%r12d, %r8d
	movl	%r15d, %r9d
	movl	$1, %r10d
	xorl	%r11d, %r11d
	xorl	%r14d, %r14d
.Ltmp3303:
	.loc	34 0 5                  # ./timsort.h:0:5
	jmp	.LBB63_2
.Ltmp3304:
	.p2align	4, 0x90
.LBB63_28:                              #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	34 44 30                # ./timsort.h:44:30
	addq	$32, %r14
.Ltmp3305:
	#DEBUG_VALUE: i <- $r14
	.loc	34 44 5                 # ./timsort.h:44:5
	incq	%r11
	addq	$32, %r10
.Ltmp3306:
	.loc	34 44 23                # ./timsort.h:44:23
	cmpq	%r9, %r14
.Ltmp3307:
	.loc	34 44 5                 # ./timsort.h:44:5
	jae	.LBB63_8
.Ltmp3308:
.LBB63_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB63_5 Depth 2
                                        #     Child Loop BB63_18 Depth 2
                                        #       Child Loop BB63_19 Depth 3
                                        #       Child Loop BB63_23 Depth 3
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: i <- $r14
	.loc	34 45 41 is_stmt 1      # ./timsort.h:45:41
	movq	%r14, %rax
	orq	$31, %rax
.Ltmp3309:
	#DEBUG_VALUE: min:y <- $r12d
	#DEBUG_VALUE: min:x <- $rax
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpq	%r8, %rax
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovael	%r12d, %eax
.Ltmp3310:
	.loc	34 45 34 is_stmt 1      # ./timsort.h:45:34
	cltq
.Ltmp3311:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	.loc	19 32 23                # ./insertionssort.h:32:23
	cmpq	%rax, %r14
.Ltmp3312:
	.loc	19 32 3 is_stmt 0       # ./insertionssort.h:32:3
	jge	.LBB63_28
.Ltmp3313:
# %bb.3:                                #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	34 45 41 is_stmt 1      # ./timsort.h:45:41
	movq	%r11, %rdx
	shlq	$5, %rdx
	notq	%rdx
	movq	%r14, %rcx
.Ltmp3314:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	testb	$1, %al
	je	.LBB63_16
.Ltmp3315:
# %bb.4:                                #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	movq	%r14, %rcx
	orq	$1, %rcx
.Ltmp3316:
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	(%rbx,%rcx,4), %ebp
.Ltmp3317:
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r10, %rsi
.Ltmp3318:
	.p2align	4, 0x90
.LBB63_5:                               #   Parent Loop BB63_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	-4(%rbx,%rsi,4), %edi
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%ebp, %edi
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB63_14
.Ltmp3319:
# %bb.6:                                #   in Loop: Header=BB63_5 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%edi, (%rbx,%rsi,4)
.Ltmp3320:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	19 36 14                # ./insertionssort.h:36:14
	decq	%rsi
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB63_5
.Ltmp3321:
# %bb.7:                                #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 0 19                 # ./insertionssort.h:0:19
	movq	$-1, %rsi
	jmp	.LBB63_15
.Ltmp3322:
.LBB63_14:                              #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 36 5                 # ./insertionssort.h:36:5
	decq	%rsi
.Ltmp3323:
.LBB63_15:                              #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:j <- $r14
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%ebp, 4(%rbx,%rsi,4)
.Ltmp3324:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
.LBB63_16:                              #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	%rax, %rdx
	je	.LBB63_28
.Ltmp3325:
# %bb.17:                               #   in Loop: Header=BB63_2 Depth=1
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	leaq	2(%rcx), %rsi
	jmp	.LBB63_18
.Ltmp3326:
	.p2align	4, 0x90
.LBB63_26:                              #   in Loop: Header=BB63_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 36 5                 # ./insertionssort.h:36:5
	decq	%rdx
.Ltmp3327:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18                # ./insertionssort.h:40:18
	movl	%ebp, 4(%rbx,%rdx,4)
.Ltmp3328:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	$2, %rsi
.Ltmp3329:
	.loc	19 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rax, %rcx
.Ltmp3330:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	je	.LBB63_28
.Ltmp3331:
.LBB63_18:                              #   Parent Loop BB63_2 Depth=1
                                        # =>  This Loop Header: Depth=2
                                        #       Child Loop BB63_19 Depth 3
                                        #       Child Loop BB63_23 Depth 3
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rbx,%rcx,4), %edx
.Ltmp3332:
	#DEBUG_VALUE: insertionSortStd:j <- $rcx
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	.loc	19 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%rcx, %rdi
.Ltmp3333:
	.p2align	4, 0x90
.LBB63_19:                              #   Parent Loop BB63_2 Depth=1
                                        #     Parent Loop BB63_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: insertionSortStd:j <- $rdi
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	(%rbx,%rdi,4), %ebp
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%edx, %ebp
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB63_22
.Ltmp3334:
# %bb.20:                               #   in Loop: Header=BB63_19 Depth=3
	#DEBUG_VALUE: insertionSortStd:j <- $rdi
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ebp, 4(%rbx,%rdi,4)
.Ltmp3335:
	#DEBUG_VALUE: insertionSortStd:j <- $rdi
	.loc	19 36 14                # ./insertionssort.h:36:14
	testq	%rdi, %rdi
.Ltmp3336:
	.loc	19 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rdi), %rdi
.Ltmp3337:
	.loc	19 36 19                # ./insertionssort.h:36:19
	jg	.LBB63_19
.Ltmp3338:
# %bb.21:                               #   in Loop: Header=BB63_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 0 19 is_stmt 0       # ./insertionssort.h:0:19
	movq	$-1, %rdi
.Ltmp3339:
.LBB63_22:                              #   in Loop: Header=BB63_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $edx
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%edx, 4(%rbx,%rdi,4)
	.loc	19 33 15                # ./insertionssort.h:33:15
	movl	8(%rbx,%rcx,4), %ebp
.Ltmp3340:
	.loc	19 0 0 is_stmt 0        # ./insertionssort.h:0:0
	addq	$2, %rcx
.Ltmp3341:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	movq	%rsi, %rdx
.Ltmp3342:
	.p2align	4, 0x90
.LBB63_23:                              #   Parent Loop BB63_2 Depth=1
                                        #     Parent Loop BB63_18 Depth=2
                                        # =>    This Inner Loop Header: Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 36 22 is_stmt 1      # ./insertionssort.h:36:22
	movl	-4(%rbx,%rdx,4), %edi
	.loc	19 36 31 is_stmt 0      # ./insertionssort.h:36:31
	cmpl	%ebp, %edi
	.loc	19 36 5                 # ./insertionssort.h:36:5
	jle	.LBB63_26
.Ltmp3343:
# %bb.24:                               #   in Loop: Header=BB63_23 Depth=3
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%edi, (%rbx,%rdx,4)
.Ltmp3344:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	19 36 14                # ./insertionssort.h:36:14
	decq	%rdx
	.loc	19 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB63_23
.Ltmp3345:
# %bb.25:                               #   in Loop: Header=BB63_18 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $ebp
	#DEBUG_VALUE: insertionSortStd:high <- $rax
	#DEBUG_VALUE: insertionSortStd:array <- $rbx
	#DEBUG_VALUE: insertionSortStd:low <- $r14
	#DEBUG_VALUE: i <- $r14
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	19 0 19                 # ./insertionssort.h:0:19
	movq	$-1, %rdx
.Ltmp3346:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	19 40 18 is_stmt 1      # ./insertionssort.h:40:18
	movl	%ebp, 4(%rbx,%rdx,4)
.Ltmp3347:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rcx
	.loc	19 32 3                 # ./insertionssort.h:32:3
	addq	$2, %rsi
.Ltmp3348:
	.loc	19 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rax, %rcx
.Ltmp3349:
	.loc	19 32 3                 # ./insertionssort.h:32:3
	jne	.LBB63_18
	jmp	.LBB63_28
.Ltmp3350:
.LBB63_8:
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: s <- 32
	.loc	34 47 29 is_stmt 1      # ./timsort.h:47:29
	cmpl	$32, %r12d
.Ltmp3351:
	.loc	34 47 5 is_stmt 0       # ./timsort.h:47:5
	jl	.LBB63_13
.Ltmp3352:
# %bb.9:
	#DEBUG_VALUE: s <- 32
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	.loc	34 0 5                  # ./timsort.h:0:5
	movl	$32, %r14d
.Ltmp3353:
	.p2align	4, 0x90
.LBB63_10:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB63_11 Depth 2
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: s <- $r14d
	#DEBUG_VALUE: left <- 0
	leal	-1(%r14), %r13d
	addl	%r14d, %r14d
.Ltmp3354:
	xorl	%esi, %esi
.Ltmp3355:
	.p2align	4, 0x90
.LBB63_11:                              #   Parent Loop BB63_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: left <- $esi
	.loc	34 53 32 is_stmt 1      # ./timsort.h:53:32
	leal	(%rsi,%r13), %edx
.Ltmp3356:
	#DEBUG_VALUE: mid <- $edx
	.loc	34 54 35                # ./timsort.h:54:35
	leal	(%rsi,%r14), %ebp
.Ltmp3357:
	#DEBUG_VALUE: min:y <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15d
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebp
	.loc	16 3 42                 # ./minmax.h:3:42
	cmpl	%r12d, %ebp
	.loc	16 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r15d, %ecx
	cmovlel	%ebp, %ecx
	decl	%ecx
.Ltmp3358:
	#DEBUG_VALUE: right <- $ecx
	.loc	34 55 13 is_stmt 1      # ./timsort.h:55:13
	movq	%rbx, %rdi
                                        # kill: def $esi killed $esi killed $rsi
	callq	merge
.Ltmp3359:
	#DEBUG_VALUE: left <- $ebp
	.loc	34 0 13 is_stmt 0       # ./timsort.h:0:13
	movl	%ebp, %esi
.Ltmp3360:
	.loc	16 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%r12d, %ebp
.Ltmp3361:
	#DEBUG_VALUE: min:y <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15d
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: min:x <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ebp
	#DEBUG_VALUE: left <- $esi
	.loc	34 52 9                 # ./timsort.h:52:9
	jle	.LBB63_11
.Ltmp3362:
# %bb.12:                               #   in Loop: Header=BB63_10 Depth=1
	#DEBUG_VALUE: timsort_h:arr <- $rbx
	#DEBUG_VALUE: timsort_h:n <- $r15d
	#DEBUG_VALUE: s <- $r14d
	.loc	34 47 29                # ./timsort.h:47:29
	cmpl	%r12d, %r14d
.Ltmp3363:
	.loc	34 47 5 is_stmt 0       # ./timsort.h:47:5
	jle	.LBB63_10
.Ltmp3364:
.LBB63_13:
	.loc	34 64 1 is_stmt 1       # ./timsort.h:64:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3365:
.Lfunc_end63:
	.size	timsort, .Lfunc_end63-timsort
	.cfi_endproc
                                        # -- End function
	.globl	shuffle_data            # -- Begin function shuffle_data
	.p2align	4, 0x90
	.type	shuffle_data,@function
shuffle_data:                           # @shuffle_data
.Lfunc_begin64:
	.loc	9 43 0                  # benchy.c:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp3366:
	#DEBUG_VALUE: shuffle_data:i <- 0
	.loc	9 45 17 prologue_end    # benchy.c:45:17
	testl	%esi, %esi
.Ltmp3367:
	.loc	9 45 3 is_stmt 0        # benchy.c:45:3
	je	.LBB64_6
.Ltmp3368:
# %bb.1:
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	.loc	9 0 3                   # benchy.c:0:3
	movl	%esi, %r14d
.Ltmp3369:
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	movq	%rdi, %rbx
.Ltmp3370:
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	movslq	%esi, %r15
	xorl	%ebp, %ebp
	jmp	.LBB64_2
.Ltmp3371:
	.p2align	4, 0x90
.LBB64_4:                               #   in Loop: Header=BB64_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	xorl	%edx, %edx
	divq	%r15
.Ltmp3372:
.LBB64_5:                               #   in Loop: Header=BB64_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	#DEBUG_VALUE: j <- $rdx
	.loc	9 47 13 is_stmt 1       # benchy.c:47:13
	movl	(%rbx,%rdx,4), %eax
.Ltmp3373:
	#DEBUG_VALUE: t <- $eax
	.loc	9 48 23                 # benchy.c:48:23
	movl	(%rbx,%rbp,4), %ecx
	.loc	9 48 21 is_stmt 0       # benchy.c:48:21
	movl	%ecx, (%rbx,%rdx,4)
	.loc	9 49 21 is_stmt 1       # benchy.c:49:21
	movl	%eax, (%rbx,%rbp,4)
.Ltmp3374:
	.loc	9 45 26                 # benchy.c:45:26
	incq	%rbp
.Ltmp3375:
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	9 45 17 is_stmt 0       # benchy.c:45:17
	cmpq	%r15, %rbp
.Ltmp3376:
	.loc	9 45 3                  # benchy.c:45:3
	jae	.LBB64_6
.Ltmp3377:
.LBB64_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	9 46 21 is_stmt 1       # benchy.c:46:21
	callq	rand
.Ltmp3378:
	cltq
	.loc	9 46 19 is_stmt 0       # benchy.c:46:19
	addq	%rbp, %rax
	movq	%rax, %rcx
	orq	%r15, %rcx
	shrq	$32, %rcx
	jne	.LBB64_4
.Ltmp3379:
# %bb.3:                                #   in Loop: Header=BB64_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
                                        # kill: def $eax killed $eax killed $rax
	.loc	9 0 19                  # benchy.c:0:19
	xorl	%edx, %edx
	divl	%r14d
                                        # kill: def $edx killed $edx def $rdx
	jmp	.LBB64_5
.Ltmp3380:
.LBB64_6:
	.loc	9 52 1 is_stmt 1        # benchy.c:52:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3381:
.Lfunc_end64:
	.size	shuffle_data, .Lfunc_end64-shuffle_data
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function bench
.LCPI65_0:
	.long	1232348160              # float 1.0E+6
.LCPI65_1:
	.long	1148846080              # float 1000
.LCPI65_2:
	.long	1065353216              # float 1
.LCPI65_3:
	.long	1092616192              # float 10
.LCPI65_4:
	.long	1120403456              # float 100
	.text
	.globl	bench
	.p2align	4, 0x90
	.type	bench,@function
bench:                                  # @bench
.Lfunc_begin65:
	.loc	9 58 0                  # benchy.c:58:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: bench:name <- $rdi
	#DEBUG_VALUE: bench:fun <- $rsi
	#DEBUG_VALUE: bench:array_size <- $edx
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 8(%rsp)           # 8-byte Spill
	movq	%rdi, %rsi
.Ltmp3382:
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:name <- $rsi
	.loc	9 60 18 prologue_end    # benchy.c:60:18
	cmpl	$-1, %edx
.Ltmp3383:
	.loc	9 60 7 is_stmt 0        # benchy.c:60:7
	je	.LBB65_16
.Ltmp3384:
# %bb.1:
	#DEBUG_VALUE: bench:name <- $rsi
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	.loc	9 0 7                   # benchy.c:0:7
	movq	%rcx, %rbx
.Ltmp3385:
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:runs <- 0
	movq	%rsi, 16(%rsp)          # 8-byte Spill
.Ltmp3386:
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	movslq	%edx, %r15
	movl	%edx, 4(%rsp)           # 4-byte Spill
.Ltmp3387:
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	movl	%edx, %eax
	subl	$1, %eax
.Ltmp3388:
	movslq	%eax, %r13
.Ltmp3389:
	.loc	9 69 29 is_stmt 1       # benchy.c:69:29
	jae	.LBB65_2
.Ltmp3390:
# %bb.6:
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- 0
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 29 is_stmt 0        # benchy.c:0:29
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp3391:
	.p2align	4, 0x90
.LBB65_7:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB65_12 Depth 2
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- undef
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- 0
	.loc	9 74 22 is_stmt 1       # benchy.c:74:22
	rdtsc
	movq	%rdx, %rbp
	shlq	$32, %rbp
	orq	%rax, %rbp
.Ltmp3392:
	#DEBUG_VALUE: start <- $rbp
	.loc	9 75 5                  # benchy.c:75:5
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	callq	*8(%rsp)                # 8-byte Folded Reload
.Ltmp3393:
	.loc	9 76 21                 # benchy.c:76:21
	rdtsc
	shlq	$32, %rdx
	orq	%rax, %rdx
.Ltmp3394:
	#DEBUG_VALUE: stop <- $rdx
	.loc	9 77 20                 # benchy.c:77:20
	subq	%rbp, %rdx
.Ltmp3395:
	#DEBUG_VALUE: bench:total <- undef
	.loc	9 78 34                 # benchy.c:78:34
	js	.LBB65_8
.Ltmp3396:
# %bb.9:                                #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 34 is_stmt 0        # benchy.c:0:34
	vcvtsi2ss	%rdx, %xmm1, %xmm0
	jmp	.LBB65_10
.Ltmp3397:
	.p2align	4, 0x90
.LBB65_8:                               #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rdx, %rax
	shrq	%rax
	movl	%edx, %ecx
	andl	$1, %ecx
	orq	%rax, %rcx
	vcvtsi2ss	%rcx, %xmm1, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
.Ltmp3398:
.LBB65_10:                              #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- undef
	#DEBUG_VALUE: bench:runs <- undef
	.loc	9 78 56                 # benchy.c:78:56
	vdivss	.LCPI65_0(%rip), %xmm0, %xmm0
	.loc	9 78 73                 # benchy.c:78:73
	vmulss	.LCPI65_1(%rip), %xmm0, %xmm0
	.loc	9 78 32                 # benchy.c:78:32
	vmovss	%xmm0, individual_times(,%r14,4)
.Ltmp3399:
	.loc	9 88 14 is_stmt 1       # benchy.c:88:14
	testq	%r14, %r14
.Ltmp3400:
	.loc	9 88 9 is_stmt 0        # benchy.c:88:9
	je	.LBB65_11
.Ltmp3401:
.LBB65_13:                              #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- $r14
	.loc	9 0 0                   # benchy.c:0:0
	addq	%rdx, %r12
.Ltmp3402:
	#DEBUG_VALUE: bench:total <- $r12
	.loc	9 69 17 is_stmt 1       # benchy.c:69:17
	cmpq	$400000000, %r12        # imm = 0x17D78400
	setl	%al
	.loc	9 69 37 is_stmt 0       # benchy.c:69:37
	cmpq	$9, %r14
	setb	%cl
	.loc	9 70 15 is_stmt 1       # benchy.c:70:15
	cmpq	$9998, %r14             # imm = 0x270E
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	leaq	1(%r14), %r14
.Ltmp3403:
	.loc	9 69 29 is_stmt 1       # benchy.c:69:29
	ja	.LBB65_32
.Ltmp3404:
# %bb.14:                               #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	orb	%al, %cl
	jne	.LBB65_7
	jmp	.LBB65_32
.Ltmp3405:
	.p2align	4, 0x90
.LBB65_11:                              #   in Loop: Header=BB65_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	xorl	%ebp, %ebp
.Ltmp3406:
	.p2align	4, 0x90
.LBB65_12:                              #   Parent Loop BB65_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- $rbp
	.loc	9 89 33 is_stmt 1       # benchy.c:89:33
	cmpq	%r13, %rbp
.Ltmp3407:
	.loc	9 89 7 is_stmt 0        # benchy.c:89:7
	jge	.LBB65_13
.Ltmp3408:
# %bb.15:                               #   in Loop: Header=BB65_12 Depth=2
	#DEBUG_VALUE: index <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 90 13 is_stmt 1       # benchy.c:90:13
	movl	(%rbx,%rbp,4), %eax
	.loc	9 90 33 is_stmt 0       # benchy.c:90:33
	cmpl	4(%rbx,%rbp,4), %eax
	.loc	9 90 54                 # benchy.c:90:54
	leaq	1(%rbp), %rbp
.Ltmp3409:
	.loc	9 90 13                 # benchy.c:90:13
	jle	.LBB65_12
	jmp	.LBB65_26
.Ltmp3410:
.LBB65_16:
	#DEBUG_VALUE: bench:name <- $rsi
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	.loc	9 61 5 is_stmt 1        # benchy.c:61:5
	movl	$.L.str.1, %edi
	xorl	%eax, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	printf                  # TAILCALL
.Ltmp3411:
.LBB65_2:
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- 0
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 5 is_stmt 0         # benchy.c:0:5
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp3412:
	.p2align	4, 0x90
.LBB65_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB65_4 Depth 2
                                        #     Child Loop BB65_24 Depth 2
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- $r14
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	xorl	%ebp, %ebp
	jmp	.LBB65_4
.Ltmp3413:
	.p2align	4, 0x90
.LBB65_17:                              #   in Loop: Header=BB65_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	xorl	%edx, %edx
	divq	%r15
.Ltmp3414:
.LBB65_18:                              #   in Loop: Header=BB65_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: j <- $rdx
	.loc	9 47 13 is_stmt 1       # benchy.c:47:13
	movl	(%rbx,%rdx,4), %eax
.Ltmp3415:
	#DEBUG_VALUE: t <- $eax
	.loc	9 48 23                 # benchy.c:48:23
	movl	(%rbx,%rbp,4), %ecx
	.loc	9 48 21 is_stmt 0       # benchy.c:48:21
	movl	%ecx, (%rbx,%rdx,4)
	.loc	9 49 21 is_stmt 1       # benchy.c:49:21
	movl	%eax, (%rbx,%rbp,4)
.Ltmp3416:
	.loc	9 45 26                 # benchy.c:45:26
	incq	%rbp
.Ltmp3417:
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	9 45 17 is_stmt 0       # benchy.c:45:17
	cmpq	%r15, %rbp
.Ltmp3418:
	.loc	9 45 3                  # benchy.c:45:3
	jae	.LBB65_19
.Ltmp3419:
.LBB65_4:                               #   Parent Loop BB65_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	9 46 21 is_stmt 1       # benchy.c:46:21
	callq	rand
.Ltmp3420:
	cltq
	.loc	9 46 19 is_stmt 0       # benchy.c:46:19
	addq	%rbp, %rax
	movq	%rax, %rcx
	orq	%r15, %rcx
	shrq	$32, %rcx
	jne	.LBB65_17
.Ltmp3421:
# %bb.5:                                #   in Loop: Header=BB65_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
                                        # kill: def $eax killed $eax killed $rax
	.loc	9 0 19                  # benchy.c:0:19
	xorl	%edx, %edx
	divl	4(%rsp)                 # 4-byte Folded Reload
                                        # kill: def $edx killed $edx def $rdx
	jmp	.LBB65_18
.Ltmp3422:
	.p2align	4, 0x90
.LBB65_19:                              #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 74 22 is_stmt 1       # benchy.c:74:22
	rdtsc
	movq	%rdx, %rbp
	shlq	$32, %rbp
	orq	%rax, %rbp
.Ltmp3423:
	#DEBUG_VALUE: start <- $rbp
	.loc	9 75 5                  # benchy.c:75:5
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	callq	*8(%rsp)                # 8-byte Folded Reload
.Ltmp3424:
	.loc	9 76 21                 # benchy.c:76:21
	rdtsc
	shlq	$32, %rdx
	orq	%rax, %rdx
.Ltmp3425:
	#DEBUG_VALUE: stop <- $rdx
	.loc	9 77 20                 # benchy.c:77:20
	subq	%rbp, %rdx
.Ltmp3426:
	#DEBUG_VALUE: bench:total <- undef
	.loc	9 78 34                 # benchy.c:78:34
	js	.LBB65_20
.Ltmp3427:
# %bb.21:                               #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 34 is_stmt 0        # benchy.c:0:34
	vcvtsi2ss	%rdx, %xmm1, %xmm0
	jmp	.LBB65_22
.Ltmp3428:
	.p2align	4, 0x90
.LBB65_20:                              #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rdx, %rax
	shrq	%rax
	movl	%edx, %ecx
	andl	$1, %ecx
	orq	%rax, %rcx
	vcvtsi2ss	%rcx, %xmm1, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
.Ltmp3429:
.LBB65_22:                              #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- undef
	.loc	9 78 56                 # benchy.c:78:56
	vdivss	.LCPI65_0(%rip), %xmm0, %xmm0
	.loc	9 78 73                 # benchy.c:78:73
	vmulss	.LCPI65_1(%rip), %xmm0, %xmm0
	.loc	9 78 32                 # benchy.c:78:32
	vmovss	%xmm0, individual_times(,%r14,4)
.Ltmp3430:
	.loc	9 88 14 is_stmt 1       # benchy.c:88:14
	testq	%r14, %r14
.Ltmp3431:
	.loc	9 88 9 is_stmt 0        # benchy.c:88:9
	je	.LBB65_23
.Ltmp3432:
.LBB65_30:                              #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 0                   # benchy.c:0:0
	addq	%rdx, %r12
.Ltmp3433:
	#DEBUG_VALUE: bench:runs <- $r14
	#DEBUG_VALUE: bench:total <- $r12
	.loc	9 69 17 is_stmt 1       # benchy.c:69:17
	cmpq	$400000000, %r12        # imm = 0x17D78400
	setl	%al
	.loc	9 69 37 is_stmt 0       # benchy.c:69:37
	cmpq	$9, %r14
	setb	%cl
	.loc	9 70 15 is_stmt 1       # benchy.c:70:15
	cmpq	$9998, %r14             # imm = 0x270E
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	leaq	1(%r14), %r14
.Ltmp3434:
	.loc	9 69 29 is_stmt 1       # benchy.c:69:29
	ja	.LBB65_32
.Ltmp3435:
# %bb.31:                               #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	orb	%al, %cl
	jne	.LBB65_3
	jmp	.LBB65_32
.Ltmp3436:
	.p2align	4, 0x90
.LBB65_23:                              #   in Loop: Header=BB65_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	xorl	%ebp, %ebp
.Ltmp3437:
	.p2align	4, 0x90
.LBB65_24:                              #   Parent Loop BB65_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- $rbp
	.loc	9 89 33 is_stmt 1       # benchy.c:89:33
	cmpq	%r13, %rbp
.Ltmp3438:
	.loc	9 89 7 is_stmt 0        # benchy.c:89:7
	jge	.LBB65_30
.Ltmp3439:
# %bb.25:                               #   in Loop: Header=BB65_24 Depth=2
	#DEBUG_VALUE: index <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 90 13 is_stmt 1       # benchy.c:90:13
	movl	(%rbx,%rbp,4), %eax
	.loc	9 90 33 is_stmt 0       # benchy.c:90:33
	cmpl	4(%rbx,%rbp,4), %eax
	.loc	9 90 54                 # benchy.c:90:54
	leaq	1(%rbp), %rbp
.Ltmp3440:
	.loc	9 90 13                 # benchy.c:90:13
	jle	.LBB65_24
.Ltmp3441:
.LBB65_26:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 91 11 is_stmt 1       # benchy.c:91:11
	movl	$.L.str.2, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp3442:
	#DEBUG_VALUE: pindex <- 0
	.loc	9 92 43                 # benchy.c:92:43
	cmpl	$0, 4(%rsp)             # 4-byte Folded Reload
.Ltmp3443:
	.loc	9 92 11 is_stmt 0       # benchy.c:92:11
	js	.LBB65_29
.Ltmp3444:
# %bb.27:
	#DEBUG_VALUE: pindex <- 0
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	incq	%r15
	xorl	%r14d, %r14d
.Ltmp3445:
.LBB65_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: pindex <- $r14
	.loc	9 93 27 is_stmt 1       # benchy.c:93:27
	movl	(%rbx,%r14,4), %esi
	.loc	9 93 13 is_stmt 0       # benchy.c:93:13
	movl	$.L.str.3, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp3446:
	.loc	9 92 64 is_stmt 1       # benchy.c:92:64
	incq	%r14
.Ltmp3447:
	#DEBUG_VALUE: pindex <- $r14
	.loc	9 92 43 is_stmt 0       # benchy.c:92:43
	cmpq	%r14, %r15
.Ltmp3448:
	.loc	9 92 11                 # benchy.c:92:11
	jne	.LBB65_28
.Ltmp3449:
.LBB65_29:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 97 11 is_stmt 1       # benchy.c:97:11
	movl	$.L.str.4, %edi
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3450:
	#DEBUG_VALUE: bench:name <- $rsi
	movl	%ebp, %edx
	xorl	%eax, %eax
	callq	printf
.Ltmp3451:
	.loc	9 99 11                 # benchy.c:99:11
	movl	$1, %edi
	callq	exit
.Ltmp3452:
.LBB65_32:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- $r14d
	.loc	9 105 16                # benchy.c:105:16
	vcvtsi2ss	%r12, %xmm1, %xmm0
	.loc	9 105 30 is_stmt 0      # benchy.c:105:30
	vmulss	.LCPI65_1(%rip), %xmm0, %xmm0
	.loc	9 105 36                # benchy.c:105:36
	vdivss	.LCPI65_0(%rip), %xmm0, %xmm1
	.loc	9 105 55                # benchy.c:105:55
	vcvtsi2ss	%r14d, %xmm2, %xmm0
	.loc	9 105 53                # benchy.c:105:53
	vdivss	%xmm0, %xmm1, %xmm3
.Ltmp3453:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: bench:mean <- $xmm3
	.loc	9 107 3 is_stmt 1       # benchy.c:107:3
	leaq	-1(%r14), %rcx
	movl	%r14d, %eax
	andl	$7, %eax
	cmpq	$7, %rcx
	jae	.LBB65_44
.Ltmp3454:
# %bb.33:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:runs <- $r14d
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 3 is_stmt 0         # benchy.c:0:3
	vxorps	%xmm1, %xmm1, %xmm1
	xorl	%ecx, %ecx
	jmp	.LBB65_34
.Ltmp3455:
.LBB65_44:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:runs <- $r14d
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 107 3                 # benchy.c:107:3
	subq	%rax, %r14
.Ltmp3456:
	.loc	9 0 3                   # benchy.c:0:3
	vxorps	%xmm1, %xmm1, %xmm1
	xorl	%ecx, %ecx
.Ltmp3457:
	.p2align	4, 0x90
.LBB65_45:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	#DEBUG_VALUE: index <- $rcx
	.loc	9 108 23 is_stmt 1      # benchy.c:108:23
	vsubss	individual_times(,%rcx,4), %xmm3, %xmm2
.Ltmp3458:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3459:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3460:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+4(,%rcx,4), %xmm3, %xmm2
.Ltmp3461:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3462:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3463:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+8(,%rcx,4), %xmm3, %xmm2
.Ltmp3464:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3465:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3466:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+12(,%rcx,4), %xmm3, %xmm2
.Ltmp3467:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3468:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3469:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+16(,%rcx,4), %xmm3, %xmm2
.Ltmp3470:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3471:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3472:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+20(,%rcx,4), %xmm3, %xmm2
.Ltmp3473:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3474:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3475:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+24(,%rcx,4), %xmm3, %xmm2
.Ltmp3476:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3477:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3478:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 108 23                # benchy.c:108:23
	vsubss	individual_times+28(,%rcx,4), %xmm3, %xmm2
.Ltmp3479:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3480:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3481:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 107 42                # benchy.c:107:42
	addq	$8, %rcx
.Ltmp3482:
	#DEBUG_VALUE: index <- $rcx
	.loc	9 107 3 is_stmt 0       # benchy.c:107:3
	cmpq	%rcx, %r14
	jne	.LBB65_45
.Ltmp3483:
.LBB65_34:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	testq	%rax, %rax
	je	.LBB65_37
.Ltmp3484:
# %bb.35:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	individual_times(,%rcx,4), %rcx
	xorl	%edx, %edx
.Ltmp3485:
	.p2align	4, 0x90
.LBB65_36:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	#DEBUG_VALUE: index <- undef
	.loc	9 108 23 is_stmt 1      # benchy.c:108:23
	vsubss	(%rcx,%rdx,4), %xmm3, %xmm2
.Ltmp3486:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	9 109 20                # benchy.c:109:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3487:
	#DEBUG_VALUE: square <- $xmm2
	.loc	9 110 9                 # benchy.c:110:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3488:
	#DEBUG_VALUE: index <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 107 3                 # benchy.c:107:3
	incq	%rdx
	cmpq	%rdx, %rax
	jne	.LBB65_36
.Ltmp3489:
.LBB65_37:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	9 112 29                # benchy.c:112:29
	vdivss	%xmm0, %xmm1, %xmm0
	vxorps	%xmm1, %xmm1, %xmm1
.Ltmp3490:
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	vucomiss	%xmm1, %xmm0
	vmovss	%xmm3, 4(%rsp)          # 4-byte Spill
.Ltmp3491:
	#DEBUG_VALUE: bench:array_size <- undef
	jb	.LBB65_39
.Ltmp3492:
# %bb.38:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	vsqrtss	%xmm0, %xmm0, %xmm0
	jmp	.LBB65_40
.Ltmp3493:
.LBB65_39:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	callq	sqrtf
.Ltmp3494:
	vxorps	%xmm1, %xmm1, %xmm1
	vmovss	4(%rsp), %xmm3          # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
.Ltmp3495:
.LBB65_40:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	vmovss	%xmm0, 8(%rsp)          # 4-byte Spill
.Ltmp3496:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 114 7 is_stmt 1       # benchy.c:114:7
	vmovss	reference_value(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
.Ltmp3497:
	.loc	9 114 7 is_stmt 0       # benchy.c:114:7
	vucomiss	%xmm1, %xmm0
	jne	.LBB65_42
	jp	.LBB65_42
.Ltmp3498:
# %bb.41:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 115 21 is_stmt 1      # benchy.c:115:21
	vmovss	%xmm3, reference_value(%rip)
	vmovaps	%xmm3, %xmm0
.Ltmp3499:
.LBB65_42:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 21 is_stmt 0        # benchy.c:0:21
	vmovss	%xmm0, 16(%rsp)         # 4-byte Spill
.Ltmp3500:
	#DEBUG_VALUE: bench:name <- undef
	.loc	9 118 26 is_stmt 1      # benchy.c:118:26
	movl	$20, %edi
	callq	malloc
.Ltmp3501:
	.loc	9 0 26 is_stmt 0        # benchy.c:0:26
	vmovss	4(%rsp), %xmm3          # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	.loc	9 118 26                # benchy.c:118:26
	movq	%rax, %rbx
.Ltmp3502:
	#DEBUG_VALUE: bench:output <- $rbx
	.loc	9 119 3 is_stmt 1       # benchy.c:119:3
	vmovups	.L.str.5(%rip), %xmm0
	vmovups	%xmm0, (%rax)
	movl	$2105376, 16(%rax)      # imm = 0x202020
	vmovss	.LCPI65_2(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
.Ltmp3503:
	.loc	9 121 12                # benchy.c:121:12
	vucomiss	%xmm3, %xmm0
.Ltmp3504:
	.loc	9 121 7 is_stmt 0       # benchy.c:121:7
	jbe	.LBB65_46
.Ltmp3505:
# %bb.43:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 122 42 is_stmt 1      # benchy.c:122:42
	vcvtss2sd	%xmm3, %xmm3, %xmm0
	vmovss	8(%rsp), %xmm1          # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	.loc	9 122 48 is_stmt 0      # benchy.c:122:48
	vcvtss2sd	%xmm1, %xmm1, %xmm1
	.loc	9 122 62                # benchy.c:122:62
	vdivss	16(%rsp), %xmm3, %xmm2  # 4-byte Folded Reload
	.loc	9 122 80                # benchy.c:122:80
	vmulss	.LCPI65_4(%rip), %xmm2, %xmm2
	.loc	9 122 57                # benchy.c:122:57
	vcvtss2sd	%xmm2, %xmm2, %xmm2
	.loc	9 122 5                 # benchy.c:122:5
	movl	$.L.str.6, %esi
	jmp	.LBB65_49
.Ltmp3506:
.LBB65_46:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 5                   # benchy.c:0:5
	vmovss	.LCPI65_3(%rip), %xmm2  # xmm2 = mem[0],zero,zero,zero
.Ltmp3507:
	vcvtss2sd	%xmm3, %xmm3, %xmm0
	vmovss	8(%rsp), %xmm1          # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vcvtss2sd	%xmm1, %xmm1, %xmm1
	.loc	9 123 19 is_stmt 1      # benchy.c:123:19
	vucomiss	%xmm3, %xmm2
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	vdivss	16(%rsp), %xmm3, %xmm2  # 4-byte Folded Reload
	vmulss	.LCPI65_4(%rip), %xmm2, %xmm2
	vcvtss2sd	%xmm2, %xmm2, %xmm2
.Ltmp3508:
	.loc	9 123 14                # benchy.c:123:14
	jbe	.LBB65_48
.Ltmp3509:
# %bb.47:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 124 5 is_stmt 1       # benchy.c:124:5
	movl	$.L.str.7, %esi
	jmp	.LBB65_49
.Ltmp3510:
.LBB65_48:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 126 5                 # benchy.c:126:5
	movl	$.L.str.8, %esi
.Ltmp3511:
.LBB65_49:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 0 0 is_stmt 0         # benchy.c:0:0
	movq	%rbx, %rdi
	movb	$3, %al
	callq	sprintf
.Ltmp3512:
	#DEBUG_VALUE: index <- 0
	.loc	9 130 23 is_stmt 1      # benchy.c:130:23
	cmpb	$0, (%rbx)
.Ltmp3513:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	je	.LBB65_50
.Ltmp3514:
# %bb.51:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 1
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 1(%rbx)
.Ltmp3515:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_52
.Ltmp3516:
.LBB65_53:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 2
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 2(%rbx)
.Ltmp3517:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_54
.Ltmp3518:
.LBB65_55:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 3
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 3(%rbx)
.Ltmp3519:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_56
.Ltmp3520:
.LBB65_57:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 4
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 4(%rbx)
.Ltmp3521:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_58
.Ltmp3522:
.LBB65_59:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 5
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 5(%rbx)
.Ltmp3523:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_60
.Ltmp3524:
.LBB65_61:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 6
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 6(%rbx)
.Ltmp3525:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_62
.Ltmp3526:
.LBB65_63:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 7
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 7(%rbx)
.Ltmp3527:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_64
.Ltmp3528:
.LBB65_65:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 8
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 8(%rbx)
.Ltmp3529:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_66
.Ltmp3530:
.LBB65_67:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 9
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 9(%rbx)
.Ltmp3531:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_68
.Ltmp3532:
.LBB65_69:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 10
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 10(%rbx)
.Ltmp3533:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_70
.Ltmp3534:
.LBB65_71:
	#DEBUG_VALUE: index <- 10
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 11
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 11(%rbx)
.Ltmp3535:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_72
.Ltmp3536:
.LBB65_73:
	#DEBUG_VALUE: index <- 11
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 12
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 12(%rbx)
.Ltmp3537:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_74
.Ltmp3538:
.LBB65_75:
	#DEBUG_VALUE: index <- 12
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 13
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 13(%rbx)
.Ltmp3539:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_76
.Ltmp3540:
.LBB65_77:
	#DEBUG_VALUE: index <- 13
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 14
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 14(%rbx)
.Ltmp3541:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_78
.Ltmp3542:
.LBB65_79:
	#DEBUG_VALUE: index <- 14
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 15
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 15(%rbx)
.Ltmp3543:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_80
.Ltmp3544:
.LBB65_81:
	#DEBUG_VALUE: index <- 15
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 16
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 16(%rbx)
.Ltmp3545:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_82
.Ltmp3546:
.LBB65_83:
	#DEBUG_VALUE: index <- 16
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 17
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 17(%rbx)
.Ltmp3547:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_84
.Ltmp3548:
.LBB65_85:
	#DEBUG_VALUE: index <- 17
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 18
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 18(%rbx)
.Ltmp3549:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_86
.Ltmp3550:
.LBB65_87:
	#DEBUG_VALUE: index <- 18
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 19
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 19(%rbx)
.Ltmp3551:
	.loc	9 130 9                 # benchy.c:130:9
	je	.LBB65_88
.Ltmp3552:
.LBB65_89:
	#DEBUG_VALUE: index <- 19
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 20
	.loc	9 134 3 is_stmt 1       # benchy.c:134:3
	movl	$.L.str.1, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	callq	printf
.Ltmp3553:
	.loc	9 136 3                 # benchy.c:136:3
	movq	%rbx, %rdi
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp3554:
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp3555:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp3556:
.LBB65_50:
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21                # benchy.c:131:21
	movb	$32, (%rbx)
.Ltmp3557:
	#DEBUG_VALUE: index <- 1
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 1(%rbx)
.Ltmp3558:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_53
.Ltmp3559:
.LBB65_52:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 1(%rbx)
.Ltmp3560:
	#DEBUG_VALUE: index <- 2
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 2(%rbx)
.Ltmp3561:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_55
.Ltmp3562:
.LBB65_54:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 2(%rbx)
.Ltmp3563:
	#DEBUG_VALUE: index <- 3
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 3(%rbx)
.Ltmp3564:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_57
.Ltmp3565:
.LBB65_56:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 3(%rbx)
.Ltmp3566:
	#DEBUG_VALUE: index <- 4
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 4(%rbx)
.Ltmp3567:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_59
.Ltmp3568:
.LBB65_58:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 4(%rbx)
.Ltmp3569:
	#DEBUG_VALUE: index <- 5
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 5(%rbx)
.Ltmp3570:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_61
.Ltmp3571:
.LBB65_60:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 5(%rbx)
.Ltmp3572:
	#DEBUG_VALUE: index <- 6
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 6(%rbx)
.Ltmp3573:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_63
.Ltmp3574:
.LBB65_62:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 6(%rbx)
.Ltmp3575:
	#DEBUG_VALUE: index <- 7
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 7(%rbx)
.Ltmp3576:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_65
.Ltmp3577:
.LBB65_64:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 7(%rbx)
.Ltmp3578:
	#DEBUG_VALUE: index <- 8
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 8(%rbx)
.Ltmp3579:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_67
.Ltmp3580:
.LBB65_66:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 8(%rbx)
.Ltmp3581:
	#DEBUG_VALUE: index <- 9
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 9(%rbx)
.Ltmp3582:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_69
.Ltmp3583:
.LBB65_68:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 9(%rbx)
.Ltmp3584:
	#DEBUG_VALUE: index <- 10
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 10(%rbx)
.Ltmp3585:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_71
.Ltmp3586:
.LBB65_70:
	#DEBUG_VALUE: index <- 10
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 10(%rbx)
.Ltmp3587:
	#DEBUG_VALUE: index <- 11
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 11(%rbx)
.Ltmp3588:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_73
.Ltmp3589:
.LBB65_72:
	#DEBUG_VALUE: index <- 11
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 11(%rbx)
.Ltmp3590:
	#DEBUG_VALUE: index <- 12
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 12(%rbx)
.Ltmp3591:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_75
.Ltmp3592:
.LBB65_74:
	#DEBUG_VALUE: index <- 12
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 12(%rbx)
.Ltmp3593:
	#DEBUG_VALUE: index <- 13
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 13(%rbx)
.Ltmp3594:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_77
.Ltmp3595:
.LBB65_76:
	#DEBUG_VALUE: index <- 13
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 13(%rbx)
.Ltmp3596:
	#DEBUG_VALUE: index <- 14
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 14(%rbx)
.Ltmp3597:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_79
.Ltmp3598:
.LBB65_78:
	#DEBUG_VALUE: index <- 14
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 14(%rbx)
.Ltmp3599:
	#DEBUG_VALUE: index <- 15
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 15(%rbx)
.Ltmp3600:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_81
.Ltmp3601:
.LBB65_80:
	#DEBUG_VALUE: index <- 15
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 15(%rbx)
.Ltmp3602:
	#DEBUG_VALUE: index <- 16
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 16(%rbx)
.Ltmp3603:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_83
.Ltmp3604:
.LBB65_82:
	#DEBUG_VALUE: index <- 16
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 16(%rbx)
.Ltmp3605:
	#DEBUG_VALUE: index <- 17
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 17(%rbx)
.Ltmp3606:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_85
.Ltmp3607:
.LBB65_84:
	#DEBUG_VALUE: index <- 17
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 17(%rbx)
.Ltmp3608:
	#DEBUG_VALUE: index <- 18
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 18(%rbx)
.Ltmp3609:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_87
.Ltmp3610:
.LBB65_86:
	#DEBUG_VALUE: index <- 18
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 18(%rbx)
.Ltmp3611:
	#DEBUG_VALUE: index <- 19
	.loc	9 130 23                # benchy.c:130:23
	cmpb	$0, 19(%rbx)
.Ltmp3612:
	.loc	9 130 9 is_stmt 0       # benchy.c:130:9
	jne	.LBB65_89
.Ltmp3613:
.LBB65_88:
	#DEBUG_VALUE: index <- 19
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	9 131 21 is_stmt 1      # benchy.c:131:21
	movb	$32, 19(%rbx)
	jmp	.LBB65_89
.Ltmp3614:
.Lfunc_end65:
	.size	bench, .Lfunc_end65-bench
	.cfi_endproc
	.file	35 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "stddef.h"
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function main
.LCPI66_0:
	.quad	4                       # 0x4
	.quad	5                       # 0x5
	.quad	6                       # 0x6
	.quad	7                       # 0x7
.LCPI66_1:
	.quad	0                       # 0x0
	.quad	1                       # 0x1
	.quad	2                       # 0x2
	.quad	3                       # 0x3
.LCPI66_2:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	7                       # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI66_3:
	.long	9                       # 0x9
.LCPI66_4:
	.long	17                      # 0x11
.LCPI66_5:
	.long	25                      # 0x19
.LCPI66_6:
	.long	33                      # 0x21
.LCPI66_7:
	.long	41                      # 0x29
.LCPI66_8:
	.long	49                      # 0x31
.LCPI66_9:
	.long	57                      # 0x39
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI66_10:
	.quad	64                      # 0x40
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin66:
	.loc	9 158 0                 # benchy.c:158:0
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$8000000, %rsp          # imm = 0x7A1200
	.cfi_def_cfa_offset 8000032
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	.loc	9 159 3 prologue_end    # benchy.c:159:3
	movl	$.Lstr, %edi
	callq	puts
.Ltmp3615:
	.loc	9 168 3                 # benchy.c:168:3
	movl	$.Lstr.28, %edi
	callq	puts
.Ltmp3616:
	#DEBUG_VALUE: random_data:amount <- 2000000
	#DEBUG_VALUE: random_data:array <- $rsp
	.loc	20 5 9                  # ./data-random.h:5:9
	callq	clock
.Ltmp3617:
	.loc	20 5 3 is_stmt 0        # ./data-random.h:5:3
	movl	%eax, %edi
	callq	srand
.Ltmp3618:
	.loc	20 0 3                  # ./data-random.h:0:3
	vmovdqa	.LCPI66_0(%rip), %ymm0  # ymm0 = [4,5,6,7]
	vmovdqa	.LCPI66_1(%rip), %ymm1  # ymm1 = [0,1,2,3]
	movl	$56, %eax
.Ltmp3619:
	#DEBUG_VALUE: i <- 0
	vmovdqa	.LCPI66_2(%rip), %ymm2  # ymm2 = [0,2,4,6,4,6,6,7]
	vpcmpeqd	%ymm3, %ymm3, %ymm3
	vpbroadcastd	.LCPI66_3(%rip), %ymm4 # ymm4 = [9,9,9,9,9,9,9,9]
	vpbroadcastd	.LCPI66_4(%rip), %ymm5 # ymm5 = [17,17,17,17,17,17,17,17]
	vpbroadcastd	.LCPI66_5(%rip), %ymm6 # ymm6 = [25,25,25,25,25,25,25,25]
	vpbroadcastd	.LCPI66_6(%rip), %ymm7 # ymm7 = [33,33,33,33,33,33,33,33]
	vpbroadcastd	.LCPI66_7(%rip), %ymm8 # ymm8 = [41,41,41,41,41,41,41,41]
	vpbroadcastd	.LCPI66_8(%rip), %ymm9 # ymm9 = [49,49,49,49,49,49,49,49]
	vpbroadcastd	.LCPI66_9(%rip), %ymm10 # ymm10 = [57,57,57,57,57,57,57,57]
	vpbroadcastq	.LCPI66_10(%rip), %ymm11 # ymm11 = [64,64,64,64]
.Ltmp3620:
	.p2align	4, 0x90
.LBB66_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rsp
	#DEBUG_VALUE: random_data:amount <- 2000000
	.loc	20 7 14 is_stmt 1       # ./data-random.h:7:14
	vpermd	%ymm1, %ymm2, %ymm12
	vpermd	%ymm0, %ymm2, %ymm13
	vinserti128	$1, %xmm13, %ymm12, %ymm12
	vpsubd	%ymm3, %ymm12, %ymm13
	vmovdqu	%ymm13, -224(%rsp,%rax,4)
	vpaddd	%ymm4, %ymm12, %ymm13
	vmovdqu	%ymm13, -192(%rsp,%rax,4)
	vpaddd	%ymm5, %ymm12, %ymm13
	vmovdqu	%ymm13, -160(%rsp,%rax,4)
	vpaddd	%ymm6, %ymm12, %ymm13
	vmovdqu	%ymm13, -128(%rsp,%rax,4)
	vpaddd	%ymm7, %ymm12, %ymm13
	vmovdqu	%ymm13, -96(%rsp,%rax,4)
	vpaddd	%ymm8, %ymm12, %ymm13
	vmovdqu	%ymm13, -64(%rsp,%rax,4)
	vpaddd	%ymm9, %ymm12, %ymm13
	vmovdqu	%ymm13, -32(%rsp,%rax,4)
	vpaddd	%ymm10, %ymm12, %ymm12
	vmovdqu	%ymm12, (%rsp,%rax,4)
	vpaddq	%ymm1, %ymm11, %ymm1
	vpaddq	%ymm0, %ymm11, %ymm0
	.loc	20 7 18 is_stmt 0       # ./data-random.h:7:18
	addq	$64, %rax
	cmpq	$2000056, %rax          # imm = 0x1E84B8
	jne	.LBB66_1
.Ltmp3621:
# %bb.2:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rsp
	#DEBUG_VALUE: random_data:amount <- 2000000
	.loc	20 0 18                 # ./data-random.h:0:18
	xorl	%ebx, %ebx
	movq	%rsp, %r14
	jmp	.LBB66_3
.Ltmp3622:
	.p2align	4, 0x90
.LBB66_5:                               #   in Loop: Header=BB66_3 Depth=1
	#DEBUG_VALUE: i <- $rbx
	.loc	9 208 5 is_stmt 1       # benchy.c:208:5
	movl	$10, %edi
	callq	putchar
.Ltmp3623:
	.loc	9 171 68                # benchy.c:171:68
	incq	%rbx
.Ltmp3624:
	#DEBUG_VALUE: i <- $rbx
	.loc	9 171 21 is_stmt 0      # benchy.c:171:21
	cmpq	$6, %rbx
.Ltmp3625:
	.loc	9 171 3                 # benchy.c:171:3
	je	.LBB66_6
.Ltmp3626:
.LBB66_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- $rbx
	.loc	9 172 21 is_stmt 1      # benchy.c:172:21
	movl	$0, reference_value(%rip)
	.loc	9 173 55                # benchy.c:173:55
	movl	.L__const.main.array_sizes(,%rbx,4), %ebp
	.loc	9 173 5 is_stmt 0       # benchy.c:173:5
	movl	$.L.str.11, %edi
	movl	$sort_quick_standard, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	vzeroupper
	callq	bench
.Ltmp3627:
	.loc	9 175 5 is_stmt 1       # benchy.c:175:5
	movl	$.L.str.12, %edi
	movl	$sort_quick_optimized, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3628:
	.loc	9 176 5                 # benchy.c:176:5
	movl	$.L.str.13, %edi
	movl	$sort_quick_simd, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3629:
	.loc	9 177 5                 # benchy.c:177:5
	movl	$.L.str.14, %edi
	movl	$sort_quick_optimized_swap_arith, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3630:
	.loc	9 179 5                 # benchy.c:179:5
	movl	$.L.str.15, %edi
	movl	$sort_quick_optimized_swap_cmov, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3631:
	.loc	9 181 5                 # benchy.c:181:5
	movl	$.L.str.16, %edi
	movl	$sort_quick_optimized_swap_array, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3632:
	.loc	9 183 5                 # benchy.c:183:5
	movl	$.L.str.17, %edi
	movl	$sort_quick_optimized_swap_asm, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3633:
	.loc	9 185 5                 # benchy.c:185:5
	movl	$.L.str.18, %edi
	movl	$sort_quick_stable, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3634:
	.loc	9 186 5                 # benchy.c:186:5
	movl	$.L.str.19, %edi
	movl	$sort_quick_multi, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3635:
	.loc	9 187 5                 # benchy.c:187:5
	movl	$.L.str.20, %edi
	movl	$sort_quick_multix4, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3636:
	.loc	9 195 5                 # benchy.c:195:5
	movl	$.L.str.21, %edi
	movl	$sort_quick_block, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3637:
	.loc	9 197 5                 # benchy.c:197:5
	movl	$.L.str.22, %edi
	movl	$sort_merge_standard, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3638:
	.loc	9 199 5                 # benchy.c:199:5
	movl	$.L.str.23, %edi
	movl	$sort_merge_optimized, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3639:
	.loc	9 201 5                 # benchy.c:201:5
	movl	$.L.str.24, %edi
	movl	$heapsort, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3640:
	.loc	9 202 5                 # benchy.c:202:5
	movl	$.L.str.25, %edi
	movl	$heapsorto, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3641:
	.loc	9 204 24                # benchy.c:204:24
	movq	%rbx, %rax
	orq	$1, %rax
	cmpq	$5, %rax
.Ltmp3642:
	.loc	9 204 9 is_stmt 0       # benchy.c:204:9
	je	.LBB66_5
.Ltmp3643:
# %bb.4:                                #   in Loop: Header=BB66_3 Depth=1
	#DEBUG_VALUE: i <- $rbx
	.loc	9 205 7 is_stmt 1       # benchy.c:205:7
	movl	$.L.str.26, %edi
	movl	$insertionSortStd, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3644:
	.loc	9 0 7 is_stmt 0         # benchy.c:0:7
	jmp	.LBB66_5
.Ltmp3645:
.LBB66_6:
	.loc	9 227 1 is_stmt 1       # benchy.c:227:1
	xorl	%eax, %eax
	addq	$8000000, %rsp          # imm = 0x7A1200
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3646:
.Lfunc_end66:
	.size	main, .Lfunc_end66-main
	.cfi_endproc
                                        # -- End function
	.type	INSERTION_SORT_THRESH_BLOCK,@object # @INSERTION_SORT_THRESH_BLOCK
	.section	.rodata,"a",@progbits
	.globl	INSERTION_SORT_THRESH_BLOCK
	.p2align	2
INSERTION_SORT_THRESH_BLOCK:
	.long	20                      # 0x14
	.size	INSERTION_SORT_THRESH_BLOCK, 4

	.type	blocksize,@object       # @blocksize
	.globl	blocksize
	.p2align	2
blocksize:
	.long	128                     # 0x80
	.size	blocksize, 4

	.type	count,@object           # @count
	.bss
	.globl	count
	.p2align	2
count:
	.long	0                       # 0x0
	.size	count, 4

	.type	b,@object               # @b
	.comm	b,4000000,16
	.type	x,@object               # @x
	.comm	x,8,4
	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"Sorting from %d to %d aka %d elements\n"
	.size	.L.str, 39

	.type	reference_value,@object # @reference_value
	.bss
	.globl	reference_value
	.p2align	2
reference_value:
	.long	0                       # float 0
	.size	reference_value, 4

	.type	.L.str.1,@object        # @.str.1
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.1:
	.asciz	"%s"
	.size	.L.str.1, 3

	.type	individual_times,@object # @individual_times
	.comm	individual_times,40000,16
	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"\nArray "
	.size	.L.str.2, 8

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"%d "
	.size	.L.str.3, 4

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"Integrity check failed for %s at index %d\n"
	.size	.L.str.4, 43

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"                   "
	.size	.L.str.5, 20

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"%.2f\302\261%.2f %.0f%%"
	.size	.L.str.6, 18

	.type	.L.str.7,@object        # @.str.7
.L.str.7:
	.asciz	"%.1f\302\261%.1f %.0f%%"
	.size	.L.str.7, 18

	.type	.L.str.8,@object        # @.str.8
.L.str.8:
	.asciz	"%.0f\302\261%.0f %.0f%%"
	.size	.L.str.8, 18

	.type	.L__const.main.array_sizes,@object # @__const.main.array_sizes
	.section	.rodata,"a",@progbits
	.p2align	4
.L__const.main.array_sizes:
	.long	4294967295              # 0xffffffff
	.long	100                     # 0x64
	.long	1000                    # 0x3e8
	.long	10000                   # 0x2710
	.long	100000                  # 0x186a0
	.long	1000000                 # 0xf4240
	.size	.L__const.main.array_sizes, 24

	.type	.L.str.11,@object       # @.str.11
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.11:
	.asciz	"QStd               "
	.size	.L.str.11, 20

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"QOpt               "
	.size	.L.str.12, 20

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"QSIMD              "
	.size	.L.str.13, 20

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"QArith             "
	.size	.L.str.14, 20

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"QCMov              "
	.size	.L.str.15, 20

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"QArray             "
	.size	.L.str.16, 20

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"QAsm               "
	.size	.L.str.17, 20

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"QStable            "
	.size	.L.str.18, 20

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"QMultx8            "
	.size	.L.str.19, 20

	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"QMultx4            "
	.size	.L.str.20, 20

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"QBlock             "
	.size	.L.str.21, 20

	.type	.L.str.22,@object       # @.str.22
.L.str.22:
	.asciz	"MSStd              "
	.size	.L.str.22, 20

	.type	.L.str.23,@object       # @.str.23
.L.str.23:
	.asciz	"MSOpt              "
	.size	.L.str.23, 20

	.type	.L.str.24,@object       # @.str.24
.L.str.24:
	.asciz	"Heap               "
	.size	.L.str.24, 20

	.type	.L.str.25,@object       # @.str.25
.L.str.25:
	.asciz	"HeapO              "
	.size	.L.str.25, 20

	.type	.L.str.26,@object       # @.str.26
.L.str.26:
	.asciz	"Insertion          "
	.size	.L.str.26, 20

	.type	original_data,@object   # @original_data
	.comm	original_data,8000000,16
	.type	.Lstr,@object           # @str
.Lstr:
	.asciz	"Starting"
	.size	.Lstr, 9

	.type	.Lstr.28,@object        # @str.28
.Lstr.28:
	.asciz	"Generating random data"
	.size	.Lstr.28, 23

	.file	36 "/usr/include/x86_64-linux-gnu/bits/types" "clock_t.h"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 10.0.0-4ubuntu1 " # string offset=0
.Linfo_string1:
	.asciz	"benchy.c"              # string offset=31
.Linfo_string2:
	.asciz	"/home/peeters/bachelor" # string offset=40
.Linfo_string3:
	.asciz	"median_of_three"       # string offset=63
.Linfo_string4:
	.asciz	"int"                   # string offset=79
.Linfo_string5:
	.asciz	"long int"              # string offset=83
.Linfo_string6:
	.asciz	"min"                   # string offset=92
.Linfo_string7:
	.asciz	"swap"                  # string offset=96
.Linfo_string8:
	.asciz	"insertionSort"         # string offset=101
.Linfo_string9:
	.asciz	"clock"                 # string offset=115
.Linfo_string10:
	.asciz	"srand"                 # string offset=121
.Linfo_string11:
	.asciz	"unsigned int"          # string offset=127
.Linfo_string12:
	.asciz	"max"                   # string offset=140
.Linfo_string13:
	.asciz	"free"                  # string offset=144
.Linfo_string14:
	.asciz	"hsum_8x32"             # string offset=149
.Linfo_string15:
	.asciz	"long long int"         # string offset=159
.Linfo_string16:
	.asciz	"__ARRAY_SIZE_TYPE__"   # string offset=173
.Linfo_string17:
	.asciz	"hsum_epi32_avx"        # string offset=193
.Linfo_string18:
	.asciz	"sort_quick_stable_h"   # string offset=208
.Linfo_string19:
	.asciz	"rand"                  # string offset=228
.Linfo_string20:
	.asciz	"INSERTION_SORT_THRESH_BLOCK" # string offset=233
.Linfo_string21:
	.asciz	"blocksize"             # string offset=261
.Linfo_string22:
	.asciz	"count"                 # string offset=271
.Linfo_string23:
	.asciz	"reference_value"       # string offset=277
.Linfo_string24:
	.asciz	"float"                 # string offset=293
.Linfo_string25:
	.asciz	"x"                     # string offset=299
.Linfo_string26:
	.asciz	"b"                     # string offset=301
.Linfo_string27:
	.asciz	"original_data"         # string offset=303
.Linfo_string28:
	.asciz	"individual_times"      # string offset=317
.Linfo_string29:
	.asciz	"__m256i"               # string offset=334
.Linfo_string30:
	.asciz	"__m128i"               # string offset=342
.Linfo_string31:
	.asciz	"__m256i_u"             # string offset=350
.Linfo_string32:
	.asciz	"__v4si"                # string offset=360
.Linfo_string33:
	.asciz	"__v4di"                # string offset=367
.Linfo_string34:
	.asciz	"__clock_t"             # string offset=374
.Linfo_string35:
	.asciz	"char"                  # string offset=384
.Linfo_string36:
	.asciz	"__v"                   # string offset=389
.Linfo_string37:
	.asciz	"__storeu_si256"        # string offset=393
.Linfo_string38:
	.asciz	"__loadu_si256"         # string offset=408
.Linfo_string39:
	.asciz	"__v8si"                # string offset=422
.Linfo_string40:
	.asciz	"__m128i_u"             # string offset=429
.Linfo_string41:
	.asciz	"__loadu_si128"         # string offset=439
.Linfo_string42:
	.asciz	"__v8su"                # string offset=453
.Linfo_string43:
	.asciz	"__v2di"                # string offset=460
.Linfo_string44:
	.asciz	"__v4su"                # string offset=467
.Linfo_string45:
	.asciz	"array"                 # string offset=474
.Linfo_string46:
	.asciz	"low"                   # string offset=480
.Linfo_string47:
	.asciz	"__int64_t"             # string offset=484
.Linfo_string48:
	.asciz	"int64_t"               # string offset=494
.Linfo_string49:
	.asciz	"high"                  # string offset=502
.Linfo_string50:
	.asciz	"mid"                   # string offset=507
.Linfo_string51:
	.asciz	"y"                     # string offset=511
.Linfo_string52:
	.asciz	"z"                     # string offset=513
.Linfo_string53:
	.asciz	"smallest"              # string offset=515
.Linfo_string54:
	.asciz	"largest"               # string offset=524
.Linfo_string55:
	.asciz	"median"                # string offset=532
.Linfo_string56:
	.asciz	"a"                     # string offset=539
.Linfo_string57:
	.asciz	"t"                     # string offset=541
.Linfo_string58:
	.asciz	"n"                     # string offset=543
.Linfo_string59:
	.asciz	"i"                     # string offset=545
.Linfo_string60:
	.asciz	"j"                     # string offset=547
.Linfo_string61:
	.asciz	"element"               # string offset=549
.Linfo_string62:
	.asciz	"heapify"               # string offset=557
.Linfo_string63:
	.asciz	"arr"                   # string offset=565
.Linfo_string64:
	.asciz	"l"                     # string offset=569
.Linfo_string65:
	.asciz	"r"                     # string offset=571
.Linfo_string66:
	.asciz	"heapifyo"              # string offset=573
.Linfo_string67:
	.asciz	"c"                     # string offset=582
.Linfo_string68:
	.asciz	"sort_indexes"          # string offset=584
.Linfo_string69:
	.asciz	"i1"                    # string offset=597
.Linfo_string70:
	.asciz	"i2"                    # string offset=600
.Linfo_string71:
	.asciz	"sort_pair"             # string offset=603
.Linfo_string72:
	.asciz	"median_of_three_auto_finish" # string offset=613
.Linfo_string73:
	.asciz	"done"                  # string offset=641
.Linfo_string74:
	.asciz	"merging_optimzed"      # string offset=646
.Linfo_string75:
	.asciz	"l2"                    # string offset=663
.Linfo_string76:
	.asciz	"l1"                    # string offset=666
.Linfo_string77:
	.asciz	"merging_standard"      # string offset=669
.Linfo_string78:
	.asciz	"partition_quick_optimized" # string offset=686
.Linfo_string79:
	.asciz	"pivot"                 # string offset=712
.Linfo_string80:
	.asciz	"insertionSortOptimized" # string offset=718
.Linfo_string81:
	.asciz	"partition_quick_optimized_dual" # string offset=741
.Linfo_string82:
	.asciz	"plow"                  # string offset=772
.Linfo_string83:
	.asciz	"phigh"                 # string offset=777
.Linfo_string84:
	.asciz	"k"                     # string offset=783
.Linfo_string85:
	.asciz	"pivot_high"            # string offset=785
.Linfo_string86:
	.asciz	"pivot_low"             # string offset=796
.Linfo_string87:
	.asciz	"g"                     # string offset=806
.Linfo_string88:
	.asciz	"__uint32_t"            # string offset=808
.Linfo_string89:
	.asciz	"uint32_t"              # string offset=819
.Linfo_string90:
	.asciz	"v"                     # string offset=828
.Linfo_string91:
	.asciz	"sum128"                # string offset=830
.Linfo_string92:
	.asciz	"hi64"                  # string offset=837
.Linfo_string93:
	.asciz	"sum64"                 # string offset=842
.Linfo_string94:
	.asciz	"hi32"                  # string offset=848
.Linfo_string95:
	.asciz	"sum32"                 # string offset=853
.Linfo_string96:
	.asciz	"partition_quick_multi" # string offset=859
.Linfo_string97:
	.asciz	"targets"               # string offset=881
.Linfo_string98:
	.asciz	"tmp"                   # string offset=889
.Linfo_string99:
	.asciz	"size"                  # string offset=893
.Linfo_string100:
	.asciz	"pivots"                # string offset=898
.Linfo_string101:
	.asciz	"arrayIndex"            # string offset=905
.Linfo_string102:
	.asciz	"currentValue"          # string offset=916
.Linfo_string103:
	.asciz	"compares"              # string offset=929
.Linfo_string104:
	.asciz	"index"                 # string offset=938
.Linfo_string105:
	.asciz	"partition_quick_multi_x4_inplace" # string offset=944
.Linfo_string106:
	.asciz	"t0"                    # string offset=977
.Linfo_string107:
	.asciz	"t1"                    # string offset=980
.Linfo_string108:
	.asciz	"p2"                    # string offset=983
.Linfo_string109:
	.asciz	"p1"                    # string offset=986
.Linfo_string110:
	.asciz	"partition_quick_stable" # string offset=989
.Linfo_string111:
	.asciz	"reverse"               # string offset=1012
.Linfo_string112:
	.asciz	"low_target"            # string offset=1020
.Linfo_string113:
	.asciz	"smaller"               # string offset=1031
.Linfo_string114:
	.asciz	"larger"                # string offset=1039
.Linfo_string115:
	.asciz	"equal"                 # string offset=1046
.Linfo_string116:
	.asciz	"from"                  # string offset=1052
.Linfo_string117:
	.asciz	"to"                    # string offset=1057
.Linfo_string118:
	.asciz	"h"                     # string offset=1060
.Linfo_string119:
	.asciz	"partition_quick_optimized_swap_arith" # string offset=1062
.Linfo_string120:
	.asciz	"f"                     # string offset=1099
.Linfo_string121:
	.asciz	"d"                     # string offset=1101
.Linfo_string122:
	.asciz	"partition_quick_optimized_swap_array" # string offset=1103
.Linfo_string123:
	.asciz	"partition_quick_optimized_swap_asm" # string offset=1140
.Linfo_string124:
	.asciz	"partition_quick_optimized_swap_cmov" # string offset=1175
.Linfo_string125:
	.asciz	"partition_quick_standard" # string offset=1211
.Linfo_string126:
	.asciz	"insertionSortStd"      # string offset=1236
.Linfo_string127:
	.asciz	"timsort_h"             # string offset=1253
.Linfo_string128:
	.asciz	"s"                     # string offset=1263
.Linfo_string129:
	.asciz	"left"                  # string offset=1265
.Linfo_string130:
	.asciz	"right"                 # string offset=1270
.Linfo_string131:
	.asciz	"shuffle_data"          # string offset=1276
.Linfo_string132:
	.asciz	"data_to_sort"          # string offset=1289
.Linfo_string133:
	.asciz	"long unsigned int"     # string offset=1302
.Linfo_string134:
	.asciz	"size_t"                # string offset=1320
.Linfo_string135:
	.asciz	"random_data"           # string offset=1327
.Linfo_string136:
	.asciz	"amount"                # string offset=1339
.Linfo_string137:
	.asciz	"partition_quick_block" # string offset=1346
.Linfo_string138:
	.asciz	"sort_quick_block"      # string offset=1368
.Linfo_string139:
	.asciz	"heapsort_h"            # string offset=1385
.Linfo_string140:
	.asciz	"heapsort"              # string offset=1396
.Linfo_string141:
	.asciz	"heapsorto_h"           # string offset=1405
.Linfo_string142:
	.asciz	"heapsorto"             # string offset=1417
.Linfo_string143:
	.asciz	"median_of_three_stable" # string offset=1427
.Linfo_string144:
	.asciz	"median_of_three_of_median_of_three_auto_finish" # string offset=1450
.Linfo_string145:
	.asciz	"sign"                  # string offset=1497
.Linfo_string146:
	.asciz	"sort_merge_o"          # string offset=1502
.Linfo_string147:
	.asciz	"sort_merge_optimized"  # string offset=1515
.Linfo_string148:
	.asciz	"sort_merge_standard"   # string offset=1536
.Linfo_string149:
	.asciz	"sort_quick_optimized"  # string offset=1556
.Linfo_string150:
	.asciz	"sort_quick_optimized_dual" # string offset=1577
.Linfo_string151:
	.asciz	"sort_quick_multi_h"    # string offset=1603
.Linfo_string152:
	.asciz	"sort_quick_multi"      # string offset=1622
.Linfo_string153:
	.asciz	"partition_quick_multi_inplace" # string offset=1639
.Linfo_string154:
	.asciz	"sort_quick_multi_inplace_h" # string offset=1669
.Linfo_string155:
	.asciz	"sort_quick_multi_inplace" # string offset=1696
.Linfo_string156:
	.asciz	"partition_quick_multix4" # string offset=1721
.Linfo_string157:
	.asciz	"sort_quick_multix4_h"  # string offset=1745
.Linfo_string158:
	.asciz	"sort_quick_multix4"    # string offset=1766
.Linfo_string159:
	.asciz	"sort_quick_multi_x4_inplace_h" # string offset=1785
.Linfo_string160:
	.asciz	"sort_quick_multi_x4_inplace" # string offset=1815
.Linfo_string161:
	.asciz	"partition_quick_simd"  # string offset=1843
.Linfo_string162:
	.asciz	"sort_quick_simd"       # string offset=1864
.Linfo_string163:
	.asciz	"sort_quick_stable_reverse_h" # string offset=1880
.Linfo_string164:
	.asciz	"sort_quick_stable"     # string offset=1908
.Linfo_string165:
	.asciz	"sort_quick_optimized_swap_arith" # string offset=1926
.Linfo_string166:
	.asciz	"sort_quick_optimized_swap_array" # string offset=1958
.Linfo_string167:
	.asciz	"sort_quick_optimized_swap_asm" # string offset=1990
.Linfo_string168:
	.asciz	"sort_quick_optimized_swap_cmov" # string offset=2020
.Linfo_string169:
	.asciz	"sort_quick_standard"   # string offset=2051
.Linfo_string170:
	.asciz	"merge"                 # string offset=2071
.Linfo_string171:
	.asciz	"timsort"               # string offset=2077
.Linfo_string172:
	.asciz	"bench"                 # string offset=2085
.Linfo_string173:
	.asciz	"main"                  # string offset=2091
.Linfo_string174:
	.asciz	"offsetsL"              # string offset=2096
.Linfo_string175:
	.asciz	"offsetsR"              # string offset=2105
.Linfo_string176:
	.asciz	"pivot_position"        # string offset=2114
.Linfo_string177:
	.asciz	"numR"                  # string offset=2129
.Linfo_string178:
	.asciz	"numL"                  # string offset=2134
.Linfo_string179:
	.asciz	"startR"                # string offset=2139
.Linfo_string180:
	.asciz	"startL"                # string offset=2146
.Linfo_string181:
	.asciz	"num"                   # string offset=2153
.Linfo_string182:
	.asciz	"shiftR"                # string offset=2157
.Linfo_string183:
	.asciz	"shiftL"                # string offset=2164
.Linfo_string184:
	.asciz	"lower"                 # string offset=2171
.Linfo_string185:
	.asciz	"upper"                 # string offset=2177
.Linfo_string186:
	.asciz	"pi"                    # string offset=2183
.Linfo_string187:
	.asciz	"offset"                # string offset=2186
.Linfo_string188:
	.asciz	"lowmid"                # string offset=2193
.Linfo_string189:
	.asciz	"highmid"               # string offset=2200
.Linfo_string190:
	.asciz	"e"                     # string offset=2208
.Linfo_string191:
	.asciz	"start"                 # string offset=2210
.Linfo_string192:
	.asciz	"end"                   # string offset=2216
.Linfo_string193:
	.asciz	"carray"                # string offset=2220
.Linfo_string194:
	.asciz	"zeros"                 # string offset=2227
.Linfo_string195:
	.asciz	"p"                     # string offset=2233
.Linfo_string196:
	.asciz	"values"                # string offset=2235
.Linfo_string197:
	.asciz	"cs"                    # string offset=2242
.Linfo_string198:
	.asciz	"m"                     # string offset=2245
.Linfo_string199:
	.asciz	"len1"                  # string offset=2247
.Linfo_string200:
	.asciz	"len2"                  # string offset=2252
.Linfo_string201:
	.asciz	"__vla_expr0"           # string offset=2257
.Linfo_string202:
	.asciz	"__vla_expr1"           # string offset=2269
.Linfo_string203:
	.asciz	"name"                  # string offset=2281
.Linfo_string204:
	.asciz	"fun"                   # string offset=2286
.Linfo_string205:
	.asciz	"array_size"            # string offset=2290
.Linfo_string206:
	.asciz	"total"                 # string offset=2301
.Linfo_string207:
	.asciz	"clock_t"               # string offset=2307
.Linfo_string208:
	.asciz	"runs"                  # string offset=2315
.Linfo_string209:
	.asciz	"__uint64_t"            # string offset=2320
.Linfo_string210:
	.asciz	"uint64_t"              # string offset=2331
.Linfo_string211:
	.asciz	"stop"                  # string offset=2340
.Linfo_string212:
	.asciz	"pindex"                # string offset=2345
.Linfo_string213:
	.asciz	"sum"                   # string offset=2352
.Linfo_string214:
	.asciz	"mean"                  # string offset=2356
.Linfo_string215:
	.asciz	"diff"                  # string offset=2361
.Linfo_string216:
	.asciz	"square"                # string offset=2366
.Linfo_string217:
	.asciz	"std_dev"               # string offset=2373
.Linfo_string218:
	.asciz	"output"                # string offset=2381
.Linfo_string219:
	.asciz	"array_sizes"           # string offset=2388
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp24-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp190-.Lfunc_begin0
	.quad	.Ltmp196-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp196-.Lfunc_begin0
	.quad	.Ltmp197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp197-.Lfunc_begin0
	.quad	.Ltmp230-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp230-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp247-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp257-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp3-.Lfunc_begin0
	.quad	.Ltmp9-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp4-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp6-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp10-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp10-.Lfunc_begin0
	.quad	.Ltmp11-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp12-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp14-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp165-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp17-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp17-.Lfunc_begin0
	.quad	.Ltmp204-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp204-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp227-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp232-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp232-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp245-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp45-.Lfunc_begin0
	.quad	.Ltmp47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp47-.Lfunc_begin0
	.quad	.Ltmp49-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp49-.Lfunc_begin0
	.quad	.Ltmp51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp51-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp103-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp129-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp129-.Lfunc_begin0
	.quad	.Ltmp131-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp131-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp137-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp140-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp144-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp148-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp148-.Lfunc_begin0
	.quad	.Ltmp149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp150-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp150-.Lfunc_begin0
	.quad	.Ltmp151-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp151-.Lfunc_begin0
	.quad	.Ltmp152-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp152-.Lfunc_begin0
	.quad	.Ltmp154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp157-.Lfunc_begin0
	.quad	.Ltmp158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp159-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp194-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp197-.Lfunc_begin0
	.quad	.Ltmp199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp219-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp34-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp34-.Lfunc_begin0
	.quad	.Ltmp35-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp35-.Lfunc_begin0
	.quad	.Ltmp36-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp36-.Lfunc_begin0
	.quad	.Ltmp37-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp37-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp112-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp112-.Lfunc_begin0
	.quad	.Ltmp113-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp114-.Lfunc_begin0
	.quad	.Ltmp115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp116-.Lfunc_begin0
	.quad	.Ltmp117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp118-.Lfunc_begin0
	.quad	.Ltmp123-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp124-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp128-.Lfunc_begin0
	.quad	.Ltmp130-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp130-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp135-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	.Ltmp139-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp139-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp204-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp217-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp232-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp21-.Lfunc_begin0
	.quad	.Ltmp43-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp58-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp88-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp91-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp106-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp110-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp147-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp193-.Lfunc_begin0
	.quad	.Ltmp212-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp20-.Lfunc_begin0
	.quad	.Ltmp32-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp40-.Lfunc_begin0
	.quad	.Ltmp62-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp89-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp91-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp109-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp161-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp198-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp198-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp28-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp59-.Lfunc_begin0
	.quad	.Ltmp73-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # -96
	.byte	127                     # 
	.quad	.Ltmp73-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp33-.Lfunc_begin0
	.quad	.Ltmp38-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp44-.Lfunc_begin0
	.quad	.Ltmp46-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp52-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp63-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp74-.Lfunc_begin0
	.quad	.Ltmp78-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp65-.Lfunc_begin0
	.quad	.Ltmp67-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp69-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp77-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp94-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp94-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp262-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp93-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp93-.Lfunc_begin0
	.quad	.Ltmp100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp167-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp168-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp91-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp111-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp111-.Lfunc_begin0
	.quad	.Ltmp120-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp122-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp96-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp136-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp148-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp148-.Lfunc_begin0
	.quad	.Ltmp154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp162-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp169-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp180-.Lfunc_begin0
	.quad	.Ltmp182-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp162-.Lfunc_begin0
	.quad	.Ltmp203-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp246-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp171-.Lfunc_begin0
	.quad	.Ltmp173-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp175-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp199-.Lfunc_begin0
	.quad	.Ltmp200-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp201-.Lfunc_begin0
	.quad	.Ltmp202-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp208-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp231-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp231-.Lfunc_begin0
	.quad	.Ltmp235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp200-.Lfunc_begin0
	.quad	.Ltmp210-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp239-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp213-.Lfunc_begin0
	.quad	.Ltmp214-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp215-.Lfunc_begin0
	.quad	.Ltmp216-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp223-.Lfunc_begin0
	.quad	.Ltmp226-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp244-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp244-.Lfunc_begin0
	.quad	.Ltmp248-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp225-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp250-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp254-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp237-.Lfunc_begin0
	.quad	.Ltmp239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp252-.Lfunc_begin0
	.quad	.Ltmp254-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp268-.Lfunc_begin0
	.quad	.Ltmp273-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp269-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp270-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp271-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp274-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp275-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp275-.Lfunc_begin0
	.quad	.Ltmp276-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Ltmp277-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp277-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp279-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp281-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp281-.Lfunc_begin0
	.quad	.Ltmp282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp284-.Lfunc_begin0
	.quad	.Lfunc_end3-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp290-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp290-.Lfunc_begin0
	.quad	.Ltmp298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp299-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp320-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp289-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp289-.Lfunc_begin0
	.quad	.Ltmp296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp296-.Lfunc_begin0
	.quad	.Ltmp298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp298-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp288-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp306-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp294-.Lfunc_begin0
	.quad	.Ltmp296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp308-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp321-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp323-.Lfunc_begin0
	.quad	.Ltmp334-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp334-.Lfunc_begin0
	.quad	.Ltmp336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp303-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp321-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp309-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp312-.Lfunc_begin0
	.quad	.Ltmp314-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp325-.Lfunc_begin0
	.quad	.Ltmp326-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp328-.Lfunc_begin0
	.quad	.Ltmp330-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp335-.Lfunc_begin0
	.quad	.Ltmp336-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp338-.Lfunc_begin0
	.quad	.Ltmp340-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp309-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp321-.Lfunc_begin0
	.quad	.Ltmp324-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp325-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin5-.Lfunc_begin0
	.quad	.Ltmp347-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp358-.Lfunc_begin0
	.quad	.Ltmp360-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp342-.Lfunc_begin0
	.quad	.Ltmp347-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp348-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp358-.Lfunc_begin0
	.quad	.Ltmp360-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp362-.Lfunc_begin0
	.quad	.Ltmp373-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp373-.Lfunc_begin0
	.quad	.Ltmp375-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp349-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp352-.Lfunc_begin0
	.quad	.Ltmp354-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp364-.Lfunc_begin0
	.quad	.Ltmp365-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp367-.Lfunc_begin0
	.quad	.Ltmp369-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp374-.Lfunc_begin0
	.quad	.Ltmp375-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp377-.Lfunc_begin0
	.quad	.Ltmp379-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp349-.Lfunc_begin0
	.quad	.Ltmp357-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp360-.Lfunc_begin0
	.quad	.Ltmp363-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp364-.Lfunc_begin0
	.quad	.Lfunc_end5-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp381-.Lfunc_begin0
	.quad	.Ltmp399-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp381-.Lfunc_begin0
	.quad	.Ltmp400-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp383-.Lfunc_begin0
	.quad	.Ltmp394-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp394-.Lfunc_begin0
	.quad	.Ltmp395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp395-.Lfunc_begin0
	.quad	.Ltmp397-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp397-.Lfunc_begin0
	.quad	.Ltmp398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp422-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp404-.Lfunc_begin0
	.quad	.Ltmp409-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp422-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp424-.Lfunc_begin0
	.quad	.Ltmp435-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp435-.Lfunc_begin0
	.quad	.Ltmp437-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp411-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp414-.Lfunc_begin0
	.quad	.Ltmp416-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp426-.Lfunc_begin0
	.quad	.Ltmp427-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp429-.Lfunc_begin0
	.quad	.Ltmp431-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp436-.Lfunc_begin0
	.quad	.Ltmp437-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp439-.Lfunc_begin0
	.quad	.Ltmp441-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Ltmp411-.Lfunc_begin0
	.quad	.Ltmp419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp422-.Lfunc_begin0
	.quad	.Ltmp425-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp426-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp456-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp461-.Lfunc_begin0
	.quad	.Ltmp464-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	.Ltmp453-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp465-.Lfunc_begin0
	.quad	.Ltmp467-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp467-.Lfunc_begin0
	.quad	.Ltmp471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp459-.Lfunc_begin0
	.quad	.Ltmp464-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp465-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp503-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp504-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp489-.Lfunc_begin0
	.quad	.Ltmp493-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp493-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp483-.Lfunc_begin0
	.quad	.Ltmp488-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp489-.Lfunc_begin0
	.quad	.Ltmp492-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Ltmp497-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp502-.Lfunc_begin0
	.quad	.Ltmp504-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin10-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp506-.Lfunc_begin0
	.quad	.Ltmp509-.Lfunc_begin0
	.short	14                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	50                      # DW_OP_lit2
	.byte	27                      # DW_OP_div
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp509-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp519-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp519-.Lfunc_begin0
	.quad	.Ltmp521-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp521-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp515-.Lfunc_begin0
	.quad	.Ltmp520-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp521-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp529-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp534-.Lfunc_begin0
	.quad	.Ltmp535-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp536-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp541-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp549-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp549-.Lfunc_begin0
	.quad	.Ltmp551-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp551-.Lfunc_begin0
	.quad	.Ltmp555-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp555-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp564-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp545-.Lfunc_begin0
	.quad	.Ltmp548-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp546-.Lfunc_begin0
	.quad	.Ltmp559-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp567-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp569-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp568-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp587-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp588-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp573-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp573-.Lfunc_begin0
	.quad	.Ltmp575-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp575-.Lfunc_begin0
	.quad	.Ltmp578-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp578-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp571-.Lfunc_begin0
	.quad	.Ltmp574-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp575-.Lfunc_begin0
	.quad	.Ltmp577-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp572-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp572-.Lfunc_begin0
	.quad	.Ltmp581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp586-.Lfunc_begin0
	.quad	.Ltmp588-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin13-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp590-.Lfunc_begin0
	.quad	.Ltmp593-.Lfunc_begin0
	.short	14                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	50                      # DW_OP_lit2
	.byte	27                      # DW_OP_div
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp593-.Lfunc_begin0
	.quad	.Ltmp597-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp614-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp601-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp601-.Lfunc_begin0
	.quad	.Ltmp603-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp603-.Lfunc_begin0
	.quad	.Ltmp606-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp606-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp599-.Lfunc_begin0
	.quad	.Ltmp602-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp603-.Lfunc_begin0
	.quad	.Ltmp605-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp600-.Lfunc_begin0
	.quad	.Ltmp609-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp614-.Lfunc_begin0
	.quad	.Ltmp615-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp617-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp620-.Lfunc_begin0
	.quad	.Ltmp622-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp629-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp629-.Lfunc_begin0
	.quad	.Ltmp631-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp631-.Lfunc_begin0
	.quad	.Ltmp634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp634-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp642-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp626-.Lfunc_begin0
	.quad	.Ltmp628-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp627-.Lfunc_begin0
	.quad	.Ltmp637-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp645-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp647-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp646-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Lfunc_begin15-.Lfunc_begin0
	.quad	.Ltmp649-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp649-.Lfunc_begin0
	.quad	.Ltmp650-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Ltmp652-.Lfunc_begin0
	.quad	.Ltmp655-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Ltmp653-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Lfunc_begin17-.Lfunc_begin0
	.quad	.Ltmp665-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp684-.Lfunc_begin0
	.quad	.Ltmp700-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp701-.Lfunc_begin0
	.quad	.Lfunc_end17-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Lfunc_begin17-.Lfunc_begin0
	.quad	.Ltmp657-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp657-.Lfunc_begin0
	.quad	.Ltmp672-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp684-.Lfunc_begin0
	.quad	.Ltmp706-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp707-.Lfunc_begin0
	.quad	.Lfunc_end17-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Ltmp661-.Lfunc_begin0
	.quad	.Ltmp663-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp662-.Lfunc_begin0
	.quad	.Ltmp666-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp682-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp666-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp665-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp669-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp669-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp670-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	.Ltmp672-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	.Ltmp673-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp672-.Lfunc_begin0
	.quad	.Ltmp677-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp672-.Lfunc_begin0
	.quad	.Ltmp676-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Ltmp675-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	.Ltmp679-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	.Ltmp680-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Ltmp679-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp679-.Lfunc_begin0
	.quad	.Ltmp684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Ltmp679-.Lfunc_begin0
	.quad	.Ltmp682-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Ltmp687-.Lfunc_begin0
	.quad	.Ltmp690-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Ltmp688-.Lfunc_begin0
	.quad	.Ltmp692-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Ltmp691-.Lfunc_begin0
	.quad	.Ltmp694-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Ltmp692-.Lfunc_begin0
	.quad	.Ltmp697-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Ltmp696-.Lfunc_begin0
	.quad	.Ltmp699-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp697-.Lfunc_begin0
	.quad	.Ltmp701-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Ltmp702-.Lfunc_begin0
	.quad	.Ltmp705-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp703-.Lfunc_begin0
	.quad	.Ltmp707-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Ltmp710-.Lfunc_begin0
	.quad	.Ltmp713-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp711-.Lfunc_begin0
	.quad	.Lfunc_end18-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Lfunc_begin19-.Lfunc_begin0
	.quad	.Ltmp749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Lfunc_begin19-.Lfunc_begin0
	.quad	.Ltmp715-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp715-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Lfunc_begin19-.Lfunc_begin0
	.quad	.Ltmp718-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Ltmp771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp719-.Lfunc_begin0
	.quad	.Ltmp749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp719-.Lfunc_begin0
	.quad	.Ltmp745-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp720-.Lfunc_begin0
	.quad	.Ltmp723-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp723-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp749-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp727-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp731-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp733-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	123                     # DW_OP_breg11
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Ltmp728-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Ltmp728-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Ltmp728-.Lfunc_begin0
	.quad	.Ltmp730-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp732-.Lfunc_begin0
	.quad	.Ltmp736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp733-.Lfunc_begin0
	.quad	.Ltmp737-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp763-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp737-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	123                     # DW_OP_breg11
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp736-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp739-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp737-.Lfunc_begin0
	.quad	.Ltmp739-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Ltmp737-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp737-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	123                     # DW_OP_breg11
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp743-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp742-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp743-.Lfunc_begin0
	.quad	.Ltmp748-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp748-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp747-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp747-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp753-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	.Ltmp756-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	.Ltmp755-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	.Ltmp758-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc217:
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc218:
	.quad	.Ltmp758-.Lfunc_begin0
	.quad	.Ltmp761-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc219:
	.quad	.Ltmp758-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc220:
	.quad	.Ltmp758-.Lfunc_begin0
	.quad	.Ltmp760-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc221:
	.quad	.Ltmp760-.Lfunc_begin0
	.quad	.Ltmp764-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc222:
	.quad	.Ltmp760-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc223:
	.quad	.Ltmp760-.Lfunc_begin0
	.quad	.Ltmp763-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc224:
	.quad	.Ltmp764-.Lfunc_begin0
	.quad	.Ltmp766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc225:
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Ltmp771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc226:
	.quad	.Ltmp770-.Lfunc_begin0
	.quad	.Ltmp773-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc227:
	.quad	.Ltmp771-.Lfunc_begin0
	.quad	.Ltmp775-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc228:
	.quad	.Ltmp776-.Lfunc_begin0
	.quad	.Ltmp778-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc229:
	.quad	.Ltmp777-.Lfunc_begin0
	.quad	.Ltmp781-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp789-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc230:
	.quad	.Ltmp778-.Lfunc_begin0
	.quad	.Ltmp783-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp790-.Lfunc_begin0
	.quad	.Ltmp793-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp794-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc231:
	.quad	.Ltmp779-.Lfunc_begin0
	.quad	.Ltmp783-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc232:
	.quad	.Ltmp779-.Lfunc_begin0
	.quad	.Ltmp781-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc233:
	.quad	.Ltmp779-.Lfunc_begin0
	.quad	.Ltmp791-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp791-.Lfunc_begin0
	.quad	.Ltmp793-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp793-.Lfunc_begin0
	.quad	.Ltmp795-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp795-.Lfunc_begin0
	.quad	.Lfunc_end19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc234:
	.quad	.Ltmp781-.Lfunc_begin0
	.quad	.Ltmp788-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc235:
	.quad	.Ltmp781-.Lfunc_begin0
	.quad	.Ltmp784-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc236:
	.quad	.Ltmp784-.Lfunc_begin0
	.quad	.Ltmp788-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc237:
	.quad	.Ltmp784-.Lfunc_begin0
	.quad	.Ltmp786-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc238:
	.quad	.Lfunc_begin20-.Lfunc_begin0
	.quad	.Ltmp804-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp807-.Lfunc_begin0
	.quad	.Lfunc_end20-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc239:
	.quad	.Ltmp801-.Lfunc_begin0
	.quad	.Ltmp805-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc240:
	.quad	.Ltmp802-.Lfunc_begin0
	.quad	.Ltmp807-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc241:
	.quad	.Ltmp808-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc242:
	.quad	.Ltmp809-.Lfunc_begin0
	.quad	.Ltmp813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp822-.Lfunc_begin0
	.quad	.Lfunc_end20-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc243:
	.quad	.Ltmp810-.Lfunc_begin0
	.quad	.Ltmp815-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp823-.Lfunc_begin0
	.quad	.Ltmp826-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp827-.Lfunc_begin0
	.quad	.Lfunc_end20-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc244:
	.quad	.Ltmp811-.Lfunc_begin0
	.quad	.Ltmp815-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc245:
	.quad	.Ltmp811-.Lfunc_begin0
	.quad	.Ltmp813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc246:
	.quad	.Ltmp811-.Lfunc_begin0
	.quad	.Ltmp818-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp824-.Lfunc_begin0
	.quad	.Ltmp826-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp828-.Lfunc_begin0
	.quad	.Lfunc_end20-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc247:
	.quad	.Ltmp813-.Lfunc_begin0
	.quad	.Ltmp818-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc248:
	.quad	.Ltmp813-.Lfunc_begin0
	.quad	.Ltmp816-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc249:
	.quad	.Ltmp816-.Lfunc_begin0
	.quad	.Ltmp821-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc250:
	.quad	.Ltmp816-.Lfunc_begin0
	.quad	.Ltmp819-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc251:
	.quad	.Lfunc_begin22-.Lfunc_begin0
	.quad	.Ltmp884-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc252:
	.quad	.Lfunc_begin22-.Lfunc_begin0
	.quad	.Ltmp866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc253:
	.quad	.Ltmp831-.Lfunc_begin0
	.quad	.Ltmp832-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp834-.Lfunc_begin0
	.quad	.Ltmp836-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp837-.Lfunc_begin0
	.quad	.Ltmp839-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp839-.Lfunc_begin0
	.quad	.Ltmp844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp844-.Lfunc_begin0
	.quad	.Ltmp846-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp846-.Lfunc_begin0
	.quad	.Ltmp860-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc254:
	.quad	.Ltmp837-.Lfunc_begin0
	.quad	.Ltmp844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp846-.Lfunc_begin0
	.quad	.Ltmp858-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp861-.Lfunc_begin0
	.quad	.Ltmp877-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp882-.Lfunc_begin0
	.quad	.Ltmp902-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc255:
	.quad	.Ltmp832-.Lfunc_begin0
	.quad	.Ltmp837-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp837-.Lfunc_begin0
	.quad	.Ltmp840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp840-.Lfunc_begin0
	.quad	.Ltmp878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc256:
	.quad	.Ltmp838-.Lfunc_begin0
	.quad	.Ltmp840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc257:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp913-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp913-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc258:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp912-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp912-.Lfunc_begin0
	.quad	.Ltmp968-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc259:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp911-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp911-.Lfunc_begin0
	.quad	.Ltmp921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp929-.Lfunc_begin0
	.quad	.Ltmp931-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc260:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp910-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp910-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc261:
	.quad	.Ltmp914-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc262:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp922-.Lfunc_begin0
	.quad	.Ltmp929-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp929-.Lfunc_begin0
	.quad	.Ltmp931-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp931-.Lfunc_begin0
	.quad	.Ltmp943-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp946-.Lfunc_begin0
	.quad	.Ltmp961-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp966-.Lfunc_begin0
	.quad	.Ltmp986-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc263:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp922-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp922-.Lfunc_begin0
	.quad	.Ltmp925-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp925-.Lfunc_begin0
	.quad	.Ltmp962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc264:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp922-.Lfunc_begin0
	.quad	.Ltmp924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp924-.Lfunc_begin0
	.quad	.Ltmp929-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp929-.Lfunc_begin0
	.quad	.Ltmp931-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp931-.Lfunc_begin0
	.quad	.Ltmp945-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc265:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc266:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc267:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp968-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc268:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc269:
	.quad	.Ltmp917-.Lfunc_begin0
	.quad	.Ltmp990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc270:
	.quad	.Ltmp923-.Lfunc_begin0
	.quad	.Ltmp925-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc271:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp992-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp992-.Lfunc_begin0
	.quad	.Ltmp995-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp995-.Lfunc_begin0
	.quad	.Ltmp996-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc272:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp992-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp992-.Lfunc_begin0
	.quad	.Ltmp998-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc273:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp992-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp992-.Lfunc_begin0
	.quad	.Ltmp999-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc274:
	.quad	.Ltmp994-.Lfunc_begin0
	.quad	.Ltmp997-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc275:
	.quad	.Lfunc_begin25-.Lfunc_begin0
	.quad	.Ltmp1066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc276:
	.quad	.Lfunc_begin25-.Lfunc_begin0
	.quad	.Ltmp1037-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc277:
	.quad	.Ltmp1001-.Lfunc_begin0
	.quad	.Ltmp1006-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1006-.Lfunc_begin0
	.quad	.Ltmp1016-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1016-.Lfunc_begin0
	.quad	.Ltmp1017-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1017-.Lfunc_begin0
	.quad	.Ltmp1031-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc278:
	.quad	.Ltmp1002-.Lfunc_begin0
	.quad	.Ltmp1006-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1006-.Lfunc_begin0
	.quad	.Ltmp1016-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1016-.Lfunc_begin0
	.quad	.Ltmp1017-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1017-.Lfunc_begin0
	.quad	.Ltmp1029-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1032-.Lfunc_begin0
	.quad	.Ltmp1048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1052-.Lfunc_begin0
	.quad	.Ltmp1066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc279:
	.quad	.Ltmp1002-.Lfunc_begin0
	.quad	.Ltmp1049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc280:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1076-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1076-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc281:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1075-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1075-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc282:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1074-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1074-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc283:
	.quad	.Ltmp1077-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc284:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1083-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1083-.Lfunc_begin0
	.quad	.Ltmp1093-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1093-.Lfunc_begin0
	.quad	.Ltmp1094-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1094-.Lfunc_begin0
	.quad	.Ltmp1106-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1109-.Lfunc_begin0
	.quad	.Ltmp1124-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1128-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc285:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1125-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc286:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1083-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1083-.Lfunc_begin0
	.quad	.Ltmp1093-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1093-.Lfunc_begin0
	.quad	.Ltmp1094-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1094-.Lfunc_begin0
	.quad	.Ltmp1108-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc287:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc288:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc289:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc290:
	.quad	.Ltmp1079-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc291:
	.quad	.Lfunc_begin27-.Lfunc_begin0
	.quad	.Ltmp1148-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1187-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc292:
	.quad	.Lfunc_begin27-.Lfunc_begin0
	.quad	.Ltmp1148-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc293:
	.quad	.Lfunc_begin27-.Lfunc_begin0
	.quad	.Ltmp1148-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1153-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc294:
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1149-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1149-.Lfunc_begin0
	.quad	.Ltmp1150-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1152-.Lfunc_begin0
	.quad	.Lfunc_end27-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	0
	.quad	0
.Ldebug_loc295:
	.quad	.Ltmp1150-.Lfunc_begin0
	.quad	.Ltmp1185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc296:
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1169-.Lfunc_begin0
	.quad	.Ltmp1173-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1173-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1177-.Lfunc_begin0
	.quad	.Ltmp1181-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1181-.Lfunc_begin0
	.quad	.Ltmp1186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc297:
	.quad	.Ltmp1155-.Lfunc_begin0
	.quad	.Ltmp1158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1158-.Lfunc_begin0
	.quad	.Ltmp1164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1165-.Lfunc_begin0
	.quad	.Ltmp1184-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc298:
	.quad	.Ltmp1159-.Lfunc_begin0
	.quad	.Ltmp1162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1166-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1170-.Lfunc_begin0
	.quad	.Ltmp1173-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1174-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1178-.Lfunc_begin0
	.quad	.Ltmp1181-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc299:
	.quad	.Ltmp1160-.Lfunc_begin0
	.quad	.Ltmp1161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1167-.Lfunc_begin0
	.quad	.Ltmp1168-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1171-.Lfunc_begin0
	.quad	.Ltmp1172-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1175-.Lfunc_begin0
	.quad	.Ltmp1176-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1179-.Lfunc_begin0
	.quad	.Ltmp1180-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc300:
	.quad	.Ltmp1160-.Lfunc_begin0
	.quad	.Ltmp1164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1167-.Lfunc_begin0
	.quad	.Ltmp1184-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc301:
	.quad	.Ltmp1185-.Lfunc_begin0
	.quad	.Ltmp1186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc302:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1192-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1252-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Lfunc_end28-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc303:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1189-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1189-.Lfunc_begin0
	.quad	.Ltmp1207-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1254-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc304:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1194-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1200-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1253-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Ltmp1257-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc305:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc306:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc307:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc308:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1195-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1195-.Lfunc_begin0
	.quad	.Ltmp1196-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1198-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	0
	.quad	0
.Ldebug_loc309:
	.quad	.Ltmp1196-.Lfunc_begin0
	.quad	.Ltmp1199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1248-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc310:
	.quad	.Ltmp1201-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1209-.Lfunc_begin0
	.quad	.Ltmp1211-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Ltmp1257-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1259-.Lfunc_begin0
	.quad	.Ltmp1270-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1270-.Lfunc_begin0
	.quad	.Ltmp1272-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc311:
	.quad	.Ltmp1204-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Lfunc_end28-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc312:
	.quad	.Ltmp1201-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Ltmp1257-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc313:
	.quad	.Ltmp1210-.Lfunc_begin0
	.quad	.Ltmp1211-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1213-.Lfunc_begin0
	.quad	.Ltmp1215-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1261-.Lfunc_begin0
	.quad	.Ltmp1262-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1264-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1271-.Lfunc_begin0
	.quad	.Ltmp1272-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1274-.Lfunc_begin0
	.quad	.Ltmp1276-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc314:
	.quad	.Ltmp1210-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1257-.Lfunc_begin0
	.quad	.Ltmp1260-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1261-.Lfunc_begin0
	.quad	.Lfunc_end28-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc315:
	.quad	.Ltmp1220-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1227-.Lfunc_begin0
	.quad	.Ltmp1231-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1231-.Lfunc_begin0
	.quad	.Ltmp1235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1235-.Lfunc_begin0
	.quad	.Ltmp1239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1239-.Lfunc_begin0
	.quad	.Ltmp1244-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1244-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc316:
	.quad	.Ltmp1220-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1227-.Lfunc_begin0
	.quad	.Ltmp1247-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc317:
	.quad	.Ltmp1221-.Lfunc_begin0
	.quad	.Ltmp1224-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1228-.Lfunc_begin0
	.quad	.Ltmp1231-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1232-.Lfunc_begin0
	.quad	.Ltmp1235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1236-.Lfunc_begin0
	.quad	.Ltmp1239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1241-.Lfunc_begin0
	.quad	.Ltmp1244-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc318:
	.quad	.Ltmp1222-.Lfunc_begin0
	.quad	.Ltmp1223-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1229-.Lfunc_begin0
	.quad	.Ltmp1230-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1233-.Lfunc_begin0
	.quad	.Ltmp1234-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1237-.Lfunc_begin0
	.quad	.Ltmp1238-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1242-.Lfunc_begin0
	.quad	.Ltmp1243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc319:
	.quad	.Ltmp1222-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1229-.Lfunc_begin0
	.quad	.Ltmp1233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1233-.Lfunc_begin0
	.quad	.Ltmp1240-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1242-.Lfunc_begin0
	.quad	.Ltmp1247-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc320:
	.quad	.Ltmp1248-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc321:
	.quad	.Ltmp1249-.Lfunc_begin0
	.quad	.Ltmp1251-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc322:
	.quad	.Lfunc_begin29-.Lfunc_begin0
	.quad	.Ltmp1303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc323:
	.quad	.Ltmp1278-.Lfunc_begin0
	.quad	.Ltmp1282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1288-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc324:
	.quad	.Ltmp1279-.Lfunc_begin0
	.quad	.Ltmp1286-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1288-.Lfunc_begin0
	.quad	.Ltmp1289-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1292-.Lfunc_begin0
	.quad	.Ltmp1293-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc325:
	.quad	.Ltmp1287-.Lfunc_begin0
	.quad	.Ltmp1290-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1291-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc326:
	.quad	.Ltmp1281-.Lfunc_begin0
	.quad	.Lfunc_end29-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc327:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Lfunc_end29-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc328:
	.quad	.Ltmp1283-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc329:
	.quad	.Ltmp1283-.Lfunc_begin0
	.quad	.Ltmp1286-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1286-.Lfunc_begin0
	.quad	.Ltmp1294-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1296-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc330:
	.quad	.Ltmp1284-.Lfunc_begin0
	.quad	.Ltmp1297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc331:
	.quad	.Ltmp1298-.Lfunc_begin0
	.quad	.Ltmp1302-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc332:
	.quad	.Ltmp1302-.Lfunc_begin0
	.quad	.Lfunc_end29-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc333:
	.quad	.Lfunc_begin30-.Lfunc_begin0
	.quad	.Ltmp1312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1312-.Lfunc_begin0
	.quad	.Ltmp1322-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1323-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1345-.Lfunc_begin0
	.quad	.Ltmp1347-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc334:
	.quad	.Lfunc_begin30-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1320-.Lfunc_begin0
	.quad	.Ltmp1322-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1322-.Lfunc_begin0
	.quad	.Ltmp1348-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc335:
	.quad	.Lfunc_begin30-.Lfunc_begin0
	.quad	.Ltmp1311-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1311-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1345-.Lfunc_begin0
	.quad	.Ltmp1346-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc336:
	.quad	.Ltmp1331-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc337:
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1330-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc338:
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1329-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc339:
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	.Ltmp1323-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc340:
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc341:
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	.Ltmp1323-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc342:
	.quad	.Ltmp1331-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp1333-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc343:
	.quad	.Ltmp1314-.Lfunc_begin0
	.quad	.Ltmp1316-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc344:
	.quad	.Ltmp1316-.Lfunc_begin0
	.quad	.Ltmp1318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc345:
	.quad	.Ltmp1326-.Lfunc_begin0
	.quad	.Ltmp1330-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1335-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc346:
	.quad	.Ltmp1327-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1335-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1339-.Lfunc_begin0
	.quad	.Ltmp1340-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc347:
	.quad	.Ltmp1334-.Lfunc_begin0
	.quad	.Ltmp1337-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp1338-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc348:
	.quad	.Ltmp1331-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1333-.Lfunc_begin0
	.quad	.Ltmp1341-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1343-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc349:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc350:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc351:
	.quad	.Ltmp1349-.Lfunc_begin0
	.quad	.Ltmp1367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc352:
	.quad	.Ltmp1349-.Lfunc_begin0
	.quad	.Ltmp1353-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1364-.Lfunc_begin0
	.quad	.Ltmp1367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc353:
	.quad	.Ltmp1350-.Lfunc_begin0
	.quad	.Lfunc_end31-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc354:
	.quad	.Ltmp1354-.Lfunc_begin0
	.quad	.Ltmp1355-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc355:
	.quad	.Ltmp1357-.Lfunc_begin0
	.quad	.Ltmp1359-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc356:
	.quad	.Ltmp1358-.Lfunc_begin0
	.quad	.Ltmp1364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc357:
	.quad	.Ltmp1359-.Lfunc_begin0
	.quad	.Ltmp1364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc358:
	.quad	.Ltmp1361-.Lfunc_begin0
	.quad	.Ltmp1366-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc359:
	.quad	.Ltmp1367-.Lfunc_begin0
	.quad	.Ltmp1371-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1372-.Lfunc_begin0
	.quad	.Ltmp1376-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1376-.Lfunc_begin0
	.quad	.Ltmp1386-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc360:
	.quad	.Ltmp1367-.Lfunc_begin0
	.quad	.Lfunc_end31-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc361:
	.quad	.Ltmp1367-.Lfunc_begin0
	.quad	.Ltmp1386-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc362:
	.quad	.Lfunc_begin32-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc363:
	.quad	.Ltmp1389-.Lfunc_begin0
	.quad	.Ltmp1391-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc364:
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1393-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc365:
	.quad	.Ltmp1391-.Lfunc_begin0
	.quad	.Ltmp1393-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc366:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1397-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1397-.Lfunc_begin0
	.quad	.Ltmp1420-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc367:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1530-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc368:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1735-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1741-.Lfunc_begin0
	.quad	.Ltmp1742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1749-.Lfunc_begin0
	.quad	.Ltmp1751-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc369:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1400-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1400-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1419-.Lfunc_begin0
	.quad	.Ltmp1421-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc370:
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc371:
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc372:
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1530-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc373:
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc374:
	.quad	.Ltmp1403-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1722-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc375:
	.quad	.Ltmp1404-.Lfunc_begin0
	.quad	.Ltmp1405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1405-.Lfunc_begin0
	.quad	.Ltmp1414-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1416-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc376:
	.quad	.Ltmp1404-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1530-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc377:
	.quad	.Ltmp1406-.Lfunc_begin0
	.quad	.Ltmp1407-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc378:
	.quad	.Ltmp1409-.Lfunc_begin0
	.quad	.Ltmp1411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc379:
	.quad	.Ltmp1410-.Lfunc_begin0
	.quad	.Ltmp1416-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc380:
	.quad	.Ltmp1411-.Lfunc_begin0
	.quad	.Ltmp1416-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc381:
	.quad	.Ltmp1413-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc382:
	.quad	.Ltmp1422-.Lfunc_begin0
	.quad	.Ltmp1425-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1429-.Lfunc_begin0
	.quad	.Ltmp1430-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1430-.Lfunc_begin0
	.quad	.Ltmp1432-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1432-.Lfunc_begin0
	.quad	.Ltmp1433-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1433-.Lfunc_begin0
	.quad	.Ltmp1447-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1461-.Lfunc_begin0
	.quad	.Ltmp1489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1502-.Lfunc_begin0
	.quad	.Ltmp1526-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1540-.Lfunc_begin0
	.quad	.Ltmp1564-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1577-.Lfunc_begin0
	.quad	.Ltmp1602-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1616-.Lfunc_begin0
	.quad	.Ltmp1640-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1655-.Lfunc_begin0
	.quad	.Ltmp1679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1692-.Lfunc_begin0
	.quad	.Ltmp1709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1730-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1731-.Lfunc_begin0
	.quad	.Ltmp1749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1759-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc383:
	.quad	.Ltmp1422-.Lfunc_begin0
	.quad	.Ltmp1425-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1425-.Lfunc_begin0
	.quad	.Ltmp1432-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1432-.Lfunc_begin0
	.quad	.Ltmp1433-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1433-.Lfunc_begin0
	.quad	.Ltmp1449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1461-.Lfunc_begin0
	.quad	.Ltmp1465-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1465-.Lfunc_begin0
	.quad	.Ltmp1469-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1469-.Lfunc_begin0
	.quad	.Ltmp1472-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1472-.Lfunc_begin0
	.quad	.Ltmp1491-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1504-.Lfunc_begin0
	.quad	.Ltmp1507-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1510-.Lfunc_begin0
	.quad	.Ltmp1512-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1512-.Lfunc_begin0
	.quad	.Ltmp1513-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1513-.Lfunc_begin0
	.quad	.Ltmp1528-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1542-.Lfunc_begin0
	.quad	.Ltmp1545-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1548-.Lfunc_begin0
	.quad	.Ltmp1550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1550-.Lfunc_begin0
	.quad	.Ltmp1551-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1551-.Lfunc_begin0
	.quad	.Ltmp1566-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1579-.Lfunc_begin0
	.quad	.Ltmp1582-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1585-.Lfunc_begin0
	.quad	.Ltmp1587-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1587-.Lfunc_begin0
	.quad	.Ltmp1588-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1588-.Lfunc_begin0
	.quad	.Ltmp1605-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1618-.Lfunc_begin0
	.quad	.Ltmp1621-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1624-.Lfunc_begin0
	.quad	.Ltmp1626-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1626-.Lfunc_begin0
	.quad	.Ltmp1627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1627-.Lfunc_begin0
	.quad	.Ltmp1642-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1657-.Lfunc_begin0
	.quad	.Ltmp1660-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1663-.Lfunc_begin0
	.quad	.Ltmp1665-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1665-.Lfunc_begin0
	.quad	.Ltmp1666-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1666-.Lfunc_begin0
	.quad	.Ltmp1681-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1694-.Lfunc_begin0
	.quad	.Ltmp1697-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp1700-.Lfunc_begin0
	.quad	.Ltmp1702-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1702-.Lfunc_begin0
	.quad	.Ltmp1703-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp1703-.Lfunc_begin0
	.quad	.Ltmp1709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1731-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1732-.Lfunc_begin0
	.quad	.Ltmp1736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1739-.Lfunc_begin0
	.quad	.Ltmp1741-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1741-.Lfunc_begin0
	.quad	.Ltmp1742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1742-.Lfunc_begin0
	.quad	.Ltmp1749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1749-.Lfunc_begin0
	.quad	.Ltmp1750-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc384:
	.quad	.Ltmp1422-.Lfunc_begin0
	.quad	.Ltmp1461-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1461-.Lfunc_begin0
	.quad	.Ltmp1503-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1503-.Lfunc_begin0
	.quad	.Ltmp1541-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1541-.Lfunc_begin0
	.quad	.Ltmp1578-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1578-.Lfunc_begin0
	.quad	.Ltmp1617-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1617-.Lfunc_begin0
	.quad	.Ltmp1656-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1656-.Lfunc_begin0
	.quad	.Ltmp1693-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1693-.Lfunc_begin0
	.quad	.Ltmp1732-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1732-.Lfunc_begin0
	.quad	.Ltmp1749-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1749-.Lfunc_begin0
	.quad	.Ltmp1751-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1771-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1771-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc385:
	.quad	.Ltmp1771-.Lfunc_begin0
	.quad	.Ltmp1773-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1773-.Lfunc_begin0
	.quad	.Ltmp1775-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1775-.Lfunc_begin0
	.quad	.Ltmp1777-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1777-.Lfunc_begin0
	.quad	.Ltmp1779-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1779-.Lfunc_begin0
	.quad	.Ltmp1781-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1781-.Lfunc_begin0
	.quad	.Ltmp1783-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Ltmp1785-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1785-.Lfunc_begin0
	.quad	.Ltmp1787-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1787-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc386:
	.quad	.Ltmp1771-.Lfunc_begin0
	.quad	.Ltmp1773-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1773-.Lfunc_begin0
	.quad	.Ltmp1775-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1775-.Lfunc_begin0
	.quad	.Ltmp1777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1777-.Lfunc_begin0
	.quad	.Ltmp1779-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1779-.Lfunc_begin0
	.quad	.Ltmp1781-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1781-.Lfunc_begin0
	.quad	.Ltmp1783-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Ltmp1785-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1785-.Lfunc_begin0
	.quad	.Ltmp1787-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1787-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc387:
	.quad	.Ltmp1772-.Lfunc_begin0
	.quad	.Ltmp1774-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1774-.Lfunc_begin0
	.quad	.Ltmp1776-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1776-.Lfunc_begin0
	.quad	.Ltmp1778-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1778-.Lfunc_begin0
	.quad	.Ltmp1780-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1780-.Lfunc_begin0
	.quad	.Ltmp1782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1782-.Lfunc_begin0
	.quad	.Ltmp1784-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1784-.Lfunc_begin0
	.quad	.Ltmp1786-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1786-.Lfunc_begin0
	.quad	.Ltmp1788-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc388:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1791-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1791-.Lfunc_begin0
	.quad	.Ltmp1794-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1794-.Lfunc_begin0
	.quad	.Ltmp1795-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc389:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1791-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1791-.Lfunc_begin0
	.quad	.Ltmp1797-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc390:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1791-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1791-.Lfunc_begin0
	.quad	.Ltmp1798-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc391:
	.quad	.Ltmp1793-.Lfunc_begin0
	.quad	.Ltmp1796-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc392:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc393:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1804-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc394:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1867-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc395:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1868-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc396:
	.quad	.Ltmp1804-.Lfunc_begin0
	.quad	.Ltmp1806-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc397:
	.quad	.Ltmp1807-.Lfunc_begin0
	.quad	.Ltmp1808-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc398:
	.quad	.Ltmp1810-.Lfunc_begin0
	.quad	.Ltmp1812-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc399:
	.quad	.Ltmp1811-.Lfunc_begin0
	.quad	.Ltmp1865-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc400:
	.quad	.Ltmp1812-.Lfunc_begin0
	.quad	.Ltmp1865-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc401:
	.quad	.Ltmp1815-.Lfunc_begin0
	.quad	.Ltmp1820-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1820-.Lfunc_begin0
	.quad	.Ltmp1826-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1826-.Lfunc_begin0
	.quad	.Ltmp1831-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1831-.Lfunc_begin0
	.quad	.Ltmp1836-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1836-.Lfunc_begin0
	.quad	.Ltmp1841-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1841-.Lfunc_begin0
	.quad	.Ltmp1846-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1846-.Lfunc_begin0
	.quad	.Ltmp1851-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1851-.Lfunc_begin0
	.quad	.Ltmp1857-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1857-.Lfunc_begin0
	.quad	.Ltmp1863-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1863-.Lfunc_begin0
	.quad	.Ltmp1865-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc402:
	.quad	.Ltmp1815-.Lfunc_begin0
	.quad	.Ltmp1859-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc403:
	.quad	.Ltmp1816-.Lfunc_begin0
	.quad	.Ltmp1819-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1822-.Lfunc_begin0
	.quad	.Ltmp1825-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1827-.Lfunc_begin0
	.quad	.Ltmp1830-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1832-.Lfunc_begin0
	.quad	.Ltmp1835-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1837-.Lfunc_begin0
	.quad	.Ltmp1840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1842-.Lfunc_begin0
	.quad	.Ltmp1845-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1847-.Lfunc_begin0
	.quad	.Ltmp1850-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1853-.Lfunc_begin0
	.quad	.Ltmp1856-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1859-.Lfunc_begin0
	.quad	.Ltmp1862-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc404:
	.quad	.Ltmp1816-.Lfunc_begin0
	.quad	.Ltmp1821-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1852-.Lfunc_begin0
	.quad	.Ltmp1858-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc405:
	.quad	.Ltmp1817-.Lfunc_begin0
	.quad	.Ltmp1818-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1823-.Lfunc_begin0
	.quad	.Ltmp1824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1828-.Lfunc_begin0
	.quad	.Ltmp1829-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1833-.Lfunc_begin0
	.quad	.Ltmp1834-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1838-.Lfunc_begin0
	.quad	.Ltmp1839-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1843-.Lfunc_begin0
	.quad	.Ltmp1844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1848-.Lfunc_begin0
	.quad	.Ltmp1849-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1854-.Lfunc_begin0
	.quad	.Ltmp1855-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1860-.Lfunc_begin0
	.quad	.Ltmp1861-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc406:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1873-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1873-.Lfunc_begin0
	.quad	.Ltmp1886-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1887-.Lfunc_begin0
	.quad	.Ltmp1889-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc407:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1872-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1872-.Lfunc_begin0
	.quad	.Ltmp1878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1887-.Lfunc_begin0
	.quad	.Ltmp1888-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc408:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1876-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1887-.Lfunc_begin0
	.quad	.Ltmp1890-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc409:
	.quad	.Ltmp1877-.Lfunc_begin0
	.quad	.Ltmp1879-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1879-.Lfunc_begin0
	.quad	.Ltmp1880-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1880-.Lfunc_begin0
	.quad	.Ltmp1881-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1881-.Lfunc_begin0
	.quad	.Ltmp1882-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1882-.Lfunc_begin0
	.quad	.Ltmp1883-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1883-.Lfunc_begin0
	.quad	.Ltmp1884-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1884-.Lfunc_begin0
	.quad	.Ltmp1885-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1885-.Lfunc_begin0
	.quad	.Ltmp1886-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc410:
	.quad	.Lfunc_begin37-.Lfunc_begin0
	.quad	.Ltmp1892-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc411:
	.quad	.Lfunc_begin37-.Lfunc_begin0
	.quad	.Ltmp1892-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc412:
	.quad	.Lfunc_begin37-.Lfunc_begin0
	.quad	.Ltmp1891-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc413:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1919-.Lfunc_begin0
	.quad	.Ltmp1922-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc414:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1912-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1919-.Lfunc_begin0
	.quad	.Ltmp1920-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc415:
	.quad	.Ltmp1893-.Lfunc_begin0
	.quad	.Ltmp1917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1919-.Lfunc_begin0
	.quad	.Ltmp1922-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc416:
	.quad	.Ltmp1893-.Lfunc_begin0
	.quad	.Ltmp1897-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1907-.Lfunc_begin0
	.quad	.Ltmp1909-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc417:
	.quad	.Ltmp1894-.Lfunc_begin0
	.quad	.Ltmp1972-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1981-.Lfunc_begin0
	.quad	.Ltmp1990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc418:
	.quad	.Ltmp1898-.Lfunc_begin0
	.quad	.Ltmp1899-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc419:
	.quad	.Ltmp1900-.Lfunc_begin0
	.quad	.Ltmp1902-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc420:
	.quad	.Ltmp1901-.Lfunc_begin0
	.quad	.Ltmp1907-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc421:
	.quad	.Ltmp1902-.Lfunc_begin0
	.quad	.Ltmp1907-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc422:
	.quad	.Ltmp1904-.Lfunc_begin0
	.quad	.Ltmp1909-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc423:
	.quad	.Ltmp1909-.Lfunc_begin0
	.quad	.Ltmp1927-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1927-.Lfunc_begin0
	.quad	.Ltmp1941-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1941-.Lfunc_begin0
	.quad	.Ltmp1956-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1956-.Lfunc_begin0
	.quad	.Ltmp1971-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1971-.Lfunc_begin0
	.quad	.Ltmp1981-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1981-.Lfunc_begin0
	.quad	.Ltmp1984-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1984-.Lfunc_begin0
	.quad	.Ltmp1987-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1987-.Lfunc_begin0
	.quad	.Ltmp1990-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1990-.Lfunc_begin0
	.quad	.Ltmp1999-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1999-.Lfunc_begin0
	.quad	.Lfunc_end38-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc424:
	.quad	.Ltmp1909-.Lfunc_begin0
	.quad	.Ltmp1912-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1912-.Lfunc_begin0
	.quad	.Ltmp1919-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1919-.Lfunc_begin0
	.quad	.Ltmp1920-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1920-.Lfunc_begin0
	.quad	.Ltmp1927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1927-.Lfunc_begin0
	.quad	.Ltmp1930-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1930-.Lfunc_begin0
	.quad	.Ltmp1942-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1942-.Lfunc_begin0
	.quad	.Ltmp1945-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1945-.Lfunc_begin0
	.quad	.Ltmp1957-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1957-.Lfunc_begin0
	.quad	.Ltmp1960-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1960-.Lfunc_begin0
	.quad	.Ltmp1972-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1972-.Lfunc_begin0
	.quad	.Ltmp1975-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1975-.Lfunc_begin0
	.quad	.Ltmp1981-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1981-.Lfunc_begin0
	.quad	.Ltmp1982-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1982-.Lfunc_begin0
	.quad	.Ltmp1984-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1984-.Lfunc_begin0
	.quad	.Ltmp1985-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1985-.Lfunc_begin0
	.quad	.Ltmp1987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1987-.Lfunc_begin0
	.quad	.Ltmp1988-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1988-.Lfunc_begin0
	.quad	.Ltmp1990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1990-.Lfunc_begin0
	.quad	.Ltmp1991-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1991-.Lfunc_begin0
	.quad	.Lfunc_end38-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc425:
	.quad	.Ltmp1909-.Lfunc_begin0
	.quad	.Ltmp1912-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1916-.Lfunc_begin0
	.quad	.Ltmp1994-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc426:
	.quad	.Lfunc_begin39-.Lfunc_begin0
	.quad	.Ltmp2002-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc427:
	.quad	.Ltmp2002-.Lfunc_begin0
	.quad	.Ltmp2004-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc428:
	.quad	.Ltmp2003-.Lfunc_begin0
	.quad	.Lfunc_end39-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc429:
	.quad	.Ltmp2004-.Lfunc_begin0
	.quad	.Lfunc_end39-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc430:
	.quad	.Lfunc_begin40-.Lfunc_begin0
	.quad	.Ltmp2009-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2009-.Lfunc_begin0
	.quad	.Ltmp2026-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2027-.Lfunc_begin0
	.quad	.Ltmp2029-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc431:
	.quad	.Lfunc_begin40-.Lfunc_begin0
	.quad	.Ltmp2008-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2008-.Lfunc_begin0
	.quad	.Ltmp2019-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2027-.Lfunc_begin0
	.quad	.Ltmp2028-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc432:
	.quad	.Lfunc_begin40-.Lfunc_begin0
	.quad	.Ltmp2015-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2027-.Lfunc_begin0
	.quad	.Ltmp2030-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc433:
	.quad	.Lfunc_begin40-.Lfunc_begin0
	.quad	.Ltmp2012-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2012-.Lfunc_begin0
	.quad	.Ltmp2026-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2027-.Lfunc_begin0
	.quad	.Ltmp2030-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc434:
	.quad	.Ltmp2013-.Lfunc_begin0
	.quad	.Ltmp2014-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc435:
	.quad	.Ltmp2016-.Lfunc_begin0
	.quad	.Ltmp2018-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2018-.Lfunc_begin0
	.quad	.Ltmp2020-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2020-.Lfunc_begin0
	.quad	.Ltmp2022-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2022-.Lfunc_begin0
	.quad	.Ltmp2024-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2024-.Lfunc_begin0
	.quad	.Ltmp2026-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc436:
	.quad	.Ltmp2016-.Lfunc_begin0
	.quad	.Ltmp2018-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2018-.Lfunc_begin0
	.quad	.Ltmp2020-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2020-.Lfunc_begin0
	.quad	.Ltmp2022-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2022-.Lfunc_begin0
	.quad	.Ltmp2024-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2024-.Lfunc_begin0
	.quad	.Ltmp2026-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc437:
	.quad	.Ltmp2017-.Lfunc_begin0
	.quad	.Ltmp2019-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2019-.Lfunc_begin0
	.quad	.Ltmp2021-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2021-.Lfunc_begin0
	.quad	.Ltmp2023-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2023-.Lfunc_begin0
	.quad	.Ltmp2025-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc438:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2031-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2031-.Lfunc_begin0
	.quad	.Ltmp2034-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc439:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2031-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2031-.Lfunc_begin0
	.quad	.Ltmp2037-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc440:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2031-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2031-.Lfunc_begin0
	.quad	.Ltmp2038-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc441:
	.quad	.Ltmp2033-.Lfunc_begin0
	.quad	.Ltmp2036-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc442:
	.quad	.Lfunc_begin42-.Lfunc_begin0
	.quad	.Ltmp2048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc443:
	.quad	.Ltmp2040-.Lfunc_begin0
	.quad	.Ltmp2043-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc444:
	.quad	.Ltmp2041-.Lfunc_begin0
	.quad	.Ltmp2047-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc445:
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Lfunc_end42-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc446:
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Lfunc_end42-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc447:
	.quad	.Ltmp2045-.Lfunc_begin0
	.quad	.Ltmp2048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc448:
	.quad	.Ltmp2049-.Lfunc_begin0
	.quad	.Ltmp2059-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc449:
	.quad	.Ltmp2050-.Lfunc_begin0
	.quad	.Ltmp2053-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp2054-.Lfunc_begin0
	.quad	.Ltmp2059-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc450:
	.quad	.Ltmp2051-.Lfunc_begin0
	.quad	.Ltmp2055-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2055-.Lfunc_begin0
	.quad	.Ltmp2059-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc451:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2064-.Lfunc_begin0
	.quad	.Ltmp2071-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2072-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2096-.Lfunc_begin0
	.quad	.Ltmp2098-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc452:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2067-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2070-.Lfunc_begin0
	.quad	.Ltmp2099-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc453:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2063-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2096-.Lfunc_begin0
	.quad	.Ltmp2097-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc454:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2081-.Lfunc_begin0
	.quad	.Ltmp2084-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc455:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2080-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc456:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2080-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc457:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2068-.Lfunc_begin0
	.quad	.Ltmp2072-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2085-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc458:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc459:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc460:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc461:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2066-.Lfunc_begin0
	.quad	.Ltmp2072-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2074-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc462:
	.quad	.Ltmp2076-.Lfunc_begin0
	.quad	.Ltmp2081-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc463:
	.quad	.Ltmp2077-.Lfunc_begin0
	.quad	.Ltmp2079-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc464:
	.quad	.Ltmp2086-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc465:
	.quad	.Ltmp2087-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc466:
	.quad	.Ltmp2088-.Lfunc_begin0
	.quad	.Ltmp2091-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2091-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc467:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2101-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc468:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2101-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc469:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc470:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2166-.Lfunc_begin0
	.quad	.Ltmp2169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc471:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Lfunc_end45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc472:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc473:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc474:
	.quad	.Ltmp2106-.Lfunc_begin0
	.quad	.Ltmp2109-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc475:
	.quad	.Ltmp2107-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc476:
	.quad	.Ltmp2114-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc477:
	.quad	.Ltmp2115-.Lfunc_begin0
	.quad	.Ltmp2119-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc478:
	.quad	.Ltmp2116-.Lfunc_begin0
	.quad	.Ltmp2121-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2126-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc479:
	.quad	.Ltmp2117-.Lfunc_begin0
	.quad	.Ltmp2121-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc480:
	.quad	.Ltmp2117-.Lfunc_begin0
	.quad	.Ltmp2119-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc481:
	.quad	.Ltmp2117-.Lfunc_begin0
	.quad	.Ltmp2124-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2129-.Lfunc_begin0
	.quad	.Ltmp2130-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2131-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc482:
	.quad	.Ltmp2119-.Lfunc_begin0
	.quad	.Ltmp2124-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc483:
	.quad	.Ltmp2119-.Lfunc_begin0
	.quad	.Ltmp2122-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc484:
	.quad	.Ltmp2122-.Lfunc_begin0
	.quad	.Ltmp2128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc485:
	.quad	.Ltmp2122-.Lfunc_begin0
	.quad	.Ltmp2125-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc486:
	.quad	.Ltmp2135-.Lfunc_begin0
	.quad	.Ltmp2164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc487:
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	.Ltmp2136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2136-.Lfunc_begin0
	.quad	.Ltmp2166-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2166-.Lfunc_begin0
	.quad	.Ltmp2167-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2167-.Lfunc_begin0
	.quad	.Ltmp2185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc488:
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	.Ltmp2176-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2176-.Lfunc_begin0
	.quad	.Ltmp2186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc489:
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	.Ltmp2186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc490:
	.quad	.Ltmp2137-.Lfunc_begin0
	.quad	.Ltmp2152-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc491:
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2141-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2141-.Lfunc_begin0
	.quad	.Ltmp2144-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2144-.Lfunc_begin0
	.quad	.Ltmp2147-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2147-.Lfunc_begin0
	.quad	.Ltmp2150-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2150-.Lfunc_begin0
	.quad	.Ltmp2154-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2154-.Lfunc_begin0
	.quad	.Ltmp2157-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2157-.Lfunc_begin0
	.quad	.Ltmp2158-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2158-.Lfunc_begin0
	.quad	.Ltmp2160-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2160-.Lfunc_begin0
	.quad	.Ltmp2162-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc492:
	.quad	.Ltmp2140-.Lfunc_begin0
	.quad	.Ltmp2142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2143-.Lfunc_begin0
	.quad	.Ltmp2145-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2146-.Lfunc_begin0
	.quad	.Ltmp2148-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2149-.Lfunc_begin0
	.quad	.Ltmp2151-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2153-.Lfunc_begin0
	.quad	.Ltmp2155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc493:
	.quad	.Ltmp2171-.Lfunc_begin0
	.quad	.Ltmp2174-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2177-.Lfunc_begin0
	.quad	.Ltmp2179-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2180-.Lfunc_begin0
	.quad	.Ltmp2184-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc494:
	.quad	.Ltmp2185-.Lfunc_begin0
	.quad	.Ltmp2186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc495:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2193-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2193-.Lfunc_begin0
	.quad	.Ltmp2199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc496:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2192-.Lfunc_begin0
	.quad	.Ltmp2197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2197-.Lfunc_begin0
	.quad	.Ltmp2199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2199-.Lfunc_begin0
	.quad	.Ltmp2200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc497:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2191-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2191-.Lfunc_begin0
	.quad	.Ltmp2200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc498:
	.quad	.Ltmp2195-.Lfunc_begin0
	.quad	.Ltmp2197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc499:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2232-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2235-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc500:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2234-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2235-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc501:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2204-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc502:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc503:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp2235-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc504:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc505:
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2209-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc506:
	.quad	.Ltmp2202-.Lfunc_begin0
	.quad	.Ltmp2225-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2235-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc507:
	.quad	.Ltmp2203-.Lfunc_begin0
	.quad	.Ltmp2205-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc508:
	.quad	.Ltmp2205-.Lfunc_begin0
	.quad	.Ltmp2210-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc509:
	.quad	.Ltmp2206-.Lfunc_begin0
	.quad	.Ltmp2208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2208-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc510:
	.quad	.Ltmp2211-.Lfunc_begin0
	.quad	.Ltmp2218-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2226-.Lfunc_begin0
	.quad	.Ltmp2231-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2235-.Lfunc_begin0
	.quad	.Ltmp2236-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc511:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2269-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2289-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc512:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc513:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2270-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc514:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2246-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2267-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc515:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2268-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc516:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2289-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc517:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc518:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc519:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2242-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc520:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2246-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc521:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2243-.Lfunc_begin0
	.quad	.Ltmp2252-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc522:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc523:
	.quad	.Ltmp2240-.Lfunc_begin0
	.quad	.Ltmp2242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2242-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp2245-.Lfunc_begin0
	.quad	.Ltmp2247-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc524:
	.quad	.Ltmp2240-.Lfunc_begin0
	.quad	.Ltmp2243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2243-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2245-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2280-.Lfunc_begin0
	.quad	.Ltmp2284-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc525:
	.quad	.Ltmp2240-.Lfunc_begin0
	.quad	.Ltmp2248-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc526:
	.quad	.Ltmp2241-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2245-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2285-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc527:
	.quad	.Ltmp2247-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2273-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2280-.Lfunc_begin0
	.quad	.Ltmp2284-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Ltmp2291-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc528:
	.quad	.Ltmp2258-.Lfunc_begin0
	.quad	.Ltmp2261-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2261-.Lfunc_begin0
	.quad	.Ltmp2265-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc529:
	.quad	.Ltmp2284-.Lfunc_begin0
	.quad	.Ltmp2286-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc530:
	.quad	.Ltmp2286-.Lfunc_begin0
	.quad	.Ltmp2288-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc531:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2292-.Lfunc_begin0
	.quad	.Ltmp2299-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2300-.Lfunc_begin0
	.quad	.Ltmp2332-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2334-.Lfunc_begin0
	.quad	.Ltmp2336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc532:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2295-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2299-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2300-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc533:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2292-.Lfunc_begin0
	.quad	.Ltmp2333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2334-.Lfunc_begin0
	.quad	.Ltmp2337-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc534:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2292-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2298-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2310-.Lfunc_begin0
	.quad	.Ltmp2313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2314-.Lfunc_begin0
	.quad	.Ltmp2316-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2334-.Lfunc_begin0
	.quad	.Ltmp2335-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc535:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2304-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2310-.Lfunc_begin0
	.quad	.Ltmp2313-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2314-.Lfunc_begin0
	.quad	.Ltmp2316-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2323-.Lfunc_begin0
	.quad	.Ltmp2327-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc536:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2301-.Lfunc_begin0
	.quad	.Ltmp2303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2303-.Lfunc_begin0
	.quad	.Ltmp2321-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2323-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc537:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2300-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp2301-.Lfunc_begin0
	.quad	.Ltmp2303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2303-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc538:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc539:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc540:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2300-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2310-.Lfunc_begin0
	.quad	.Ltmp2313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2314-.Lfunc_begin0
	.quad	.Ltmp2316-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc541:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc542:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc543:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc544:
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc545:
	.quad	.Ltmp2297-.Lfunc_begin0
	.quad	.Ltmp2298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc546:
	.quad	.Ltmp2298-.Lfunc_begin0
	.quad	.Ltmp2300-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc547:
	.quad	.Ltmp2301-.Lfunc_begin0
	.quad	.Ltmp2303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2303-.Lfunc_begin0
	.quad	.Ltmp2304-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc548:
	.quad	.Ltmp2301-.Lfunc_begin0
	.quad	.Ltmp2305-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc549:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2339-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2339-.Lfunc_begin0
	.quad	.Ltmp2342-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2342-.Lfunc_begin0
	.quad	.Ltmp2343-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc550:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2339-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2339-.Lfunc_begin0
	.quad	.Ltmp2345-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc551:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2339-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2339-.Lfunc_begin0
	.quad	.Ltmp2346-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc552:
	.quad	.Ltmp2341-.Lfunc_begin0
	.quad	.Ltmp2344-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc553:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2389-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc554:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2356-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2358-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc555:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc556:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc557:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2356-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2358-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc558:
	.quad	.Ltmp2351-.Lfunc_begin0
	.quad	.Ltmp2354-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc559:
	.quad	.Ltmp2352-.Lfunc_begin0
	.quad	.Ltmp2358-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc560:
	.quad	.Ltmp2359-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2383-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc561:
	.quad	.Ltmp2360-.Lfunc_begin0
	.quad	.Ltmp2364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc562:
	.quad	.Ltmp2361-.Lfunc_begin0
	.quad	.Ltmp2366-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2371-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc563:
	.quad	.Ltmp2362-.Lfunc_begin0
	.quad	.Ltmp2366-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc564:
	.quad	.Ltmp2362-.Lfunc_begin0
	.quad	.Ltmp2364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc565:
	.quad	.Ltmp2362-.Lfunc_begin0
	.quad	.Ltmp2369-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2374-.Lfunc_begin0
	.quad	.Ltmp2376-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2377-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc566:
	.quad	.Ltmp2364-.Lfunc_begin0
	.quad	.Ltmp2369-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc567:
	.quad	.Ltmp2364-.Lfunc_begin0
	.quad	.Ltmp2367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc568:
	.quad	.Ltmp2367-.Lfunc_begin0
	.quad	.Ltmp2373-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc569:
	.quad	.Ltmp2367-.Lfunc_begin0
	.quad	.Ltmp2370-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc570:
	.quad	.Ltmp2378-.Lfunc_begin0
	.quad	.Ltmp2387-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2387-.Lfunc_begin0
	.quad	.Ltmp2390-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp2391-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc571:
	.quad	.Ltmp2378-.Lfunc_begin0
	.quad	.Ltmp2386-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2386-.Lfunc_begin0
	.quad	.Ltmp2390-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2391-.Lfunc_begin0
	.quad	.Ltmp2397-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2397-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2405-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc572:
	.quad	.Ltmp2378-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc573:
	.quad	.Ltmp2396-.Lfunc_begin0
	.quad	.Ltmp2400-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2404-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc574:
	.quad	.Ltmp2394-.Lfunc_begin0
	.quad	.Ltmp2401-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2402-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc575:
	.quad	.Ltmp2393-.Lfunc_begin0
	.quad	.Ltmp2398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2400-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc576:
	.quad	.Ltmp2393-.Lfunc_begin0
	.quad	.Ltmp2395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2400-.Lfunc_begin0
	.quad	.Ltmp2403-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc577:
	.quad	.Ltmp2385-.Lfunc_begin0
	.quad	.Ltmp2386-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2392-.Lfunc_begin0
	.quad	.Ltmp2397-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2399-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc578:
	.quad	.Ltmp2409-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc579:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2416-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2416-.Lfunc_begin0
	.quad	.Ltmp2427-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2428-.Lfunc_begin0
	.quad	.Ltmp2493-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Lfunc_end52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc580:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2424-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2425-.Lfunc_begin0
	.quad	.Ltmp2427-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2427-.Lfunc_begin0
	.quad	.Ltmp2483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Ltmp2497-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc581:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2415-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2415-.Lfunc_begin0
	.quad	.Ltmp2483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Ltmp2496-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc582:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc583:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc584:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc585:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc586:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc587:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc588:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc589:
	.quad	.Ltmp2418-.Lfunc_begin0
	.quad	.Ltmp2421-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc590:
	.quad	.Ltmp2419-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc591:
	.quad	.Ltmp2423-.Lfunc_begin0
	.quad	.Ltmp2425-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc592:
	.quad	.Ltmp2433-.Lfunc_begin0
	.quad	.Ltmp2452-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc593:
	.quad	.Ltmp2434-.Lfunc_begin0
	.quad	.Ltmp2438-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc594:
	.quad	.Ltmp2435-.Lfunc_begin0
	.quad	.Ltmp2444-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2444-.Lfunc_begin0
	.quad	.Ltmp2448-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2449-.Lfunc_begin0
	.quad	.Ltmp2454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc595:
	.quad	.Ltmp2436-.Lfunc_begin0
	.quad	.Ltmp2446-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc596:
	.quad	.Ltmp2436-.Lfunc_begin0
	.quad	.Ltmp2438-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc597:
	.quad	.Ltmp2436-.Lfunc_begin0
	.quad	.Ltmp2442-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2447-.Lfunc_begin0
	.quad	.Ltmp2449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2450-.Lfunc_begin0
	.quad	.Ltmp2453-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc598:
	.quad	.Ltmp2438-.Lfunc_begin0
	.quad	.Ltmp2442-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc599:
	.quad	.Ltmp2438-.Lfunc_begin0
	.quad	.Ltmp2440-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc600:
	.quad	.Ltmp2440-.Lfunc_begin0
	.quad	.Ltmp2446-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc601:
	.quad	.Ltmp2440-.Lfunc_begin0
	.quad	.Ltmp2443-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc602:
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2457-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2458-.Lfunc_begin0
	.quad	.Ltmp2474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc603:
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2456-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2456-.Lfunc_begin0
	.quad	.Ltmp2457-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2458-.Lfunc_begin0
	.quad	.Ltmp2464-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2464-.Lfunc_begin0
	.quad	.Ltmp2471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2471-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc604:
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc605:
	.quad	.Ltmp2463-.Lfunc_begin0
	.quad	.Ltmp2465-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2470-.Lfunc_begin0
	.quad	.Ltmp2474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc606:
	.quad	.Ltmp2461-.Lfunc_begin0
	.quad	.Ltmp2467-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2468-.Lfunc_begin0
	.quad	.Ltmp2474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc607:
	.quad	.Ltmp2460-.Lfunc_begin0
	.quad	.Ltmp2467-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2467-.Lfunc_begin0
	.quad	.Ltmp2474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc608:
	.quad	.Ltmp2460-.Lfunc_begin0
	.quad	.Ltmp2462-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2467-.Lfunc_begin0
	.quad	.Ltmp2469-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc609:
	.quad	.Ltmp2455-.Lfunc_begin0
	.quad	.Ltmp2456-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2459-.Lfunc_begin0
	.quad	.Ltmp2464-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2466-.Lfunc_begin0
	.quad	.Ltmp2471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc610:
	.quad	.Ltmp2475-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc611:
	.quad	.Ltmp2477-.Lfunc_begin0
	.quad	.Ltmp2483-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2484-.Lfunc_begin0
	.quad	.Ltmp2486-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Ltmp2497-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2499-.Lfunc_begin0
	.quad	.Ltmp2510-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2510-.Lfunc_begin0
	.quad	.Ltmp2512-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc612:
	.quad	.Ltmp2480-.Lfunc_begin0
	.quad	.Ltmp2493-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Lfunc_end52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc613:
	.quad	.Ltmp2477-.Lfunc_begin0
	.quad	.Ltmp2483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Ltmp2497-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc614:
	.quad	.Ltmp2485-.Lfunc_begin0
	.quad	.Ltmp2486-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2488-.Lfunc_begin0
	.quad	.Ltmp2490-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2501-.Lfunc_begin0
	.quad	.Ltmp2502-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2504-.Lfunc_begin0
	.quad	.Ltmp2506-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2511-.Lfunc_begin0
	.quad	.Ltmp2512-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2514-.Lfunc_begin0
	.quad	.Ltmp2516-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc615:
	.quad	.Ltmp2485-.Lfunc_begin0
	.quad	.Ltmp2493-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2497-.Lfunc_begin0
	.quad	.Ltmp2500-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2501-.Lfunc_begin0
	.quad	.Lfunc_end52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc616:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2557-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc617:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2526-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2528-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc618:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc619:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc620:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2526-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2528-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc621:
	.quad	.Ltmp2521-.Lfunc_begin0
	.quad	.Ltmp2524-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc622:
	.quad	.Ltmp2522-.Lfunc_begin0
	.quad	.Ltmp2528-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc623:
	.quad	.Ltmp2529-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2553-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc624:
	.quad	.Ltmp2530-.Lfunc_begin0
	.quad	.Ltmp2534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc625:
	.quad	.Ltmp2531-.Lfunc_begin0
	.quad	.Ltmp2536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2541-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc626:
	.quad	.Ltmp2532-.Lfunc_begin0
	.quad	.Ltmp2536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc627:
	.quad	.Ltmp2532-.Lfunc_begin0
	.quad	.Ltmp2534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc628:
	.quad	.Ltmp2532-.Lfunc_begin0
	.quad	.Ltmp2539-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2544-.Lfunc_begin0
	.quad	.Ltmp2546-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2547-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc629:
	.quad	.Ltmp2534-.Lfunc_begin0
	.quad	.Ltmp2539-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc630:
	.quad	.Ltmp2534-.Lfunc_begin0
	.quad	.Ltmp2537-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc631:
	.quad	.Ltmp2537-.Lfunc_begin0
	.quad	.Ltmp2543-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc632:
	.quad	.Ltmp2537-.Lfunc_begin0
	.quad	.Ltmp2540-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc633:
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	.Ltmp2556-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2556-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc634:
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	.Ltmp2557-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2558-.Lfunc_begin0
	.quad	.Ltmp2566-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc635:
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc636:
	.quad	.Ltmp2555-.Lfunc_begin0
	.quad	.Ltmp2556-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2559-.Lfunc_begin0
	.quad	.Ltmp2561-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2562-.Lfunc_begin0
	.quad	.Ltmp2566-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc637:
	.quad	.Ltmp2567-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc638:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2574-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2574-.Lfunc_begin0
	.quad	.Ltmp2585-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2586-.Lfunc_begin0
	.quad	.Ltmp2644-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Lfunc_end54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc639:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2582-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2583-.Lfunc_begin0
	.quad	.Ltmp2585-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2585-.Lfunc_begin0
	.quad	.Ltmp2634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Ltmp2648-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc640:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2573-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2573-.Lfunc_begin0
	.quad	.Ltmp2634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Ltmp2647-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc641:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2613-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc642:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2613-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc643:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2613-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc644:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc645:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc646:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc647:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc648:
	.quad	.Ltmp2576-.Lfunc_begin0
	.quad	.Ltmp2579-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc649:
	.quad	.Ltmp2577-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc650:
	.quad	.Ltmp2581-.Lfunc_begin0
	.quad	.Ltmp2583-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc651:
	.quad	.Ltmp2591-.Lfunc_begin0
	.quad	.Ltmp2612-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc652:
	.quad	.Ltmp2592-.Lfunc_begin0
	.quad	.Ltmp2596-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc653:
	.quad	.Ltmp2593-.Lfunc_begin0
	.quad	.Ltmp2598-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2603-.Lfunc_begin0
	.quad	.Ltmp2607-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2608-.Lfunc_begin0
	.quad	.Ltmp2613-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc654:
	.quad	.Ltmp2594-.Lfunc_begin0
	.quad	.Ltmp2598-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc655:
	.quad	.Ltmp2594-.Lfunc_begin0
	.quad	.Ltmp2596-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc656:
	.quad	.Ltmp2594-.Lfunc_begin0
	.quad	.Ltmp2601-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2606-.Lfunc_begin0
	.quad	.Ltmp2608-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2609-.Lfunc_begin0
	.quad	.Ltmp2611-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc657:
	.quad	.Ltmp2596-.Lfunc_begin0
	.quad	.Ltmp2601-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc658:
	.quad	.Ltmp2596-.Lfunc_begin0
	.quad	.Ltmp2599-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc659:
	.quad	.Ltmp2599-.Lfunc_begin0
	.quad	.Ltmp2605-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc660:
	.quad	.Ltmp2599-.Lfunc_begin0
	.quad	.Ltmp2602-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc661:
	.quad	.Ltmp2610-.Lfunc_begin0
	.quad	.Ltmp2615-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2615-.Lfunc_begin0
	.quad	.Ltmp2616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2617-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc662:
	.quad	.Ltmp2610-.Lfunc_begin0
	.quad	.Ltmp2616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2617-.Lfunc_begin0
	.quad	.Ltmp2625-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc663:
	.quad	.Ltmp2610-.Lfunc_begin0
	.quad	.Ltmp2626-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc664:
	.quad	.Ltmp2614-.Lfunc_begin0
	.quad	.Ltmp2615-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2618-.Lfunc_begin0
	.quad	.Ltmp2620-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2621-.Lfunc_begin0
	.quad	.Ltmp2625-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc665:
	.quad	.Ltmp2626-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc666:
	.quad	.Ltmp2628-.Lfunc_begin0
	.quad	.Ltmp2634-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2635-.Lfunc_begin0
	.quad	.Ltmp2637-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Ltmp2648-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2650-.Lfunc_begin0
	.quad	.Ltmp2661-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2661-.Lfunc_begin0
	.quad	.Ltmp2663-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc667:
	.quad	.Ltmp2631-.Lfunc_begin0
	.quad	.Ltmp2644-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Lfunc_end54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc668:
	.quad	.Ltmp2628-.Lfunc_begin0
	.quad	.Ltmp2634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2645-.Lfunc_begin0
	.quad	.Ltmp2648-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc669:
	.quad	.Ltmp2636-.Lfunc_begin0
	.quad	.Ltmp2637-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2639-.Lfunc_begin0
	.quad	.Ltmp2641-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2652-.Lfunc_begin0
	.quad	.Ltmp2653-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2655-.Lfunc_begin0
	.quad	.Ltmp2657-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2662-.Lfunc_begin0
	.quad	.Ltmp2663-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2665-.Lfunc_begin0
	.quad	.Ltmp2667-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc670:
	.quad	.Ltmp2636-.Lfunc_begin0
	.quad	.Ltmp2644-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2648-.Lfunc_begin0
	.quad	.Ltmp2651-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2652-.Lfunc_begin0
	.quad	.Lfunc_end54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc671:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp2677-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2680-.Lfunc_begin0
	.quad	.Lfunc_end55-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc672:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp2702-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc673:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp2677-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2680-.Lfunc_begin0
	.quad	.Lfunc_end55-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc674:
	.quad	.Ltmp2672-.Lfunc_begin0
	.quad	.Ltmp2675-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc675:
	.quad	.Ltmp2673-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc676:
	.quad	.Ltmp2681-.Lfunc_begin0
	.quad	.Ltmp2703-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc677:
	.quad	.Ltmp2682-.Lfunc_begin0
	.quad	.Ltmp2686-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc678:
	.quad	.Ltmp2683-.Lfunc_begin0
	.quad	.Ltmp2688-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2693-.Lfunc_begin0
	.quad	.Ltmp2697-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2698-.Lfunc_begin0
	.quad	.Ltmp2704-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc679:
	.quad	.Ltmp2684-.Lfunc_begin0
	.quad	.Ltmp2688-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc680:
	.quad	.Ltmp2684-.Lfunc_begin0
	.quad	.Ltmp2686-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc681:
	.quad	.Ltmp2684-.Lfunc_begin0
	.quad	.Ltmp2691-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2696-.Lfunc_begin0
	.quad	.Ltmp2698-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2699-.Lfunc_begin0
	.quad	.Lfunc_end55-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc682:
	.quad	.Ltmp2686-.Lfunc_begin0
	.quad	.Ltmp2691-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc683:
	.quad	.Ltmp2686-.Lfunc_begin0
	.quad	.Ltmp2689-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc684:
	.quad	.Ltmp2689-.Lfunc_begin0
	.quad	.Ltmp2695-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc685:
	.quad	.Ltmp2689-.Lfunc_begin0
	.quad	.Ltmp2692-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc686:
	.quad	.Ltmp2700-.Lfunc_begin0
	.quad	.Ltmp2704-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc687:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp2709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2709-.Lfunc_begin0
	.quad	.Ltmp2720-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2721-.Lfunc_begin0
	.quad	.Ltmp2756-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc688:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp2717-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2718-.Lfunc_begin0
	.quad	.Ltmp2720-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2720-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Ltmp2771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc689:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp2708-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2708-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Ltmp2770-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc690:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc691:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc692:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc693:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc694:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc695:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2748-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2748-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc696:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc697:
	.quad	.Ltmp2711-.Lfunc_begin0
	.quad	.Ltmp2714-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc698:
	.quad	.Ltmp2712-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc699:
	.quad	.Ltmp2716-.Lfunc_begin0
	.quad	.Ltmp2718-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc700:
	.quad	.Ltmp2726-.Lfunc_begin0
	.quad	.Ltmp2746-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc701:
	.quad	.Ltmp2727-.Lfunc_begin0
	.quad	.Ltmp2731-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc702:
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2733-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2738-.Lfunc_begin0
	.quad	.Ltmp2742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2743-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc703:
	.quad	.Ltmp2729-.Lfunc_begin0
	.quad	.Ltmp2733-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc704:
	.quad	.Ltmp2729-.Lfunc_begin0
	.quad	.Ltmp2731-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc705:
	.quad	.Ltmp2729-.Lfunc_begin0
	.quad	.Ltmp2736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2741-.Lfunc_begin0
	.quad	.Ltmp2743-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2744-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc706:
	.quad	.Ltmp2731-.Lfunc_begin0
	.quad	.Ltmp2736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc707:
	.quad	.Ltmp2731-.Lfunc_begin0
	.quad	.Ltmp2734-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc708:
	.quad	.Ltmp2734-.Lfunc_begin0
	.quad	.Ltmp2740-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc709:
	.quad	.Ltmp2734-.Lfunc_begin0
	.quad	.Ltmp2737-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc710:
	.quad	.Ltmp2745-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc711:
	.quad	.Ltmp2750-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2758-.Lfunc_begin0
	.quad	.Ltmp2760-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Ltmp2771-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2773-.Lfunc_begin0
	.quad	.Ltmp2784-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2784-.Lfunc_begin0
	.quad	.Ltmp2786-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc712:
	.quad	.Ltmp2753-.Lfunc_begin0
	.quad	.Ltmp2767-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc713:
	.quad	.Ltmp2750-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Ltmp2771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc714:
	.quad	.Ltmp2759-.Lfunc_begin0
	.quad	.Ltmp2760-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2762-.Lfunc_begin0
	.quad	.Ltmp2764-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2775-.Lfunc_begin0
	.quad	.Ltmp2776-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2778-.Lfunc_begin0
	.quad	.Ltmp2780-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2785-.Lfunc_begin0
	.quad	.Ltmp2786-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2788-.Lfunc_begin0
	.quad	.Ltmp2790-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc715:
	.quad	.Ltmp2759-.Lfunc_begin0
	.quad	.Ltmp2767-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2771-.Lfunc_begin0
	.quad	.Ltmp2774-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2775-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc716:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2825-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc717:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2802-.Lfunc_begin0
	.quad	.Lfunc_end57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc718:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc719:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc720:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2802-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc721:
	.quad	.Ltmp2795-.Lfunc_begin0
	.quad	.Ltmp2798-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc722:
	.quad	.Ltmp2796-.Lfunc_begin0
	.quad	.Ltmp2802-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc723:
	.quad	.Ltmp2803-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc724:
	.quad	.Ltmp2804-.Lfunc_begin0
	.quad	.Ltmp2808-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc725:
	.quad	.Ltmp2805-.Lfunc_begin0
	.quad	.Ltmp2810-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2815-.Lfunc_begin0
	.quad	.Ltmp2819-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2820-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc726:
	.quad	.Ltmp2806-.Lfunc_begin0
	.quad	.Ltmp2810-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc727:
	.quad	.Ltmp2806-.Lfunc_begin0
	.quad	.Ltmp2808-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc728:
	.quad	.Ltmp2806-.Lfunc_begin0
	.quad	.Ltmp2813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2818-.Lfunc_begin0
	.quad	.Ltmp2820-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2821-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc729:
	.quad	.Ltmp2808-.Lfunc_begin0
	.quad	.Ltmp2813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc730:
	.quad	.Ltmp2808-.Lfunc_begin0
	.quad	.Ltmp2811-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc731:
	.quad	.Ltmp2811-.Lfunc_begin0
	.quad	.Ltmp2817-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc732:
	.quad	.Ltmp2811-.Lfunc_begin0
	.quad	.Ltmp2814-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc733:
	.quad	.Ltmp2822-.Lfunc_begin0
	.quad	.Ltmp2825-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2825-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2832-.Lfunc_begin0
	.quad	.Ltmp2851-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc734:
	.quad	.Ltmp2822-.Lfunc_begin0
	.quad	.Ltmp2836-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2836-.Lfunc_begin0
	.quad	.Ltmp2840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2840-.Lfunc_begin0
	.quad	.Ltmp2844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2844-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2848-.Lfunc_begin0
	.quad	.Ltmp2854-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2854-.Lfunc_begin0
	.quad	.Lfunc_end57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc735:
	.quad	.Ltmp2822-.Lfunc_begin0
	.quad	.Lfunc_end57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc736:
	.quad	.Ltmp2826-.Lfunc_begin0
	.quad	.Ltmp2829-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2833-.Lfunc_begin0
	.quad	.Ltmp2836-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2837-.Lfunc_begin0
	.quad	.Ltmp2840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2841-.Lfunc_begin0
	.quad	.Ltmp2844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2845-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc737:
	.quad	.Ltmp2827-.Lfunc_begin0
	.quad	.Ltmp2828-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2834-.Lfunc_begin0
	.quad	.Ltmp2835-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2838-.Lfunc_begin0
	.quad	.Ltmp2839-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2842-.Lfunc_begin0
	.quad	.Ltmp2843-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2846-.Lfunc_begin0
	.quad	.Ltmp2847-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc738:
	.quad	.Ltmp2827-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2834-.Lfunc_begin0
	.quad	.Ltmp2851-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc739:
	.quad	.Ltmp2852-.Lfunc_begin0
	.quad	.Ltmp2854-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc740:
	.quad	.Lfunc_begin58-.Lfunc_begin0
	.quad	.Ltmp2859-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2859-.Lfunc_begin0
	.quad	.Ltmp2870-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2871-.Lfunc_begin0
	.quad	.Ltmp2934-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc741:
	.quad	.Lfunc_begin58-.Lfunc_begin0
	.quad	.Ltmp2867-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2868-.Lfunc_begin0
	.quad	.Ltmp2870-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2870-.Lfunc_begin0
	.quad	.Ltmp2935-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Ltmp2949-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc742:
	.quad	.Lfunc_begin58-.Lfunc_begin0
	.quad	.Ltmp2858-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2858-.Lfunc_begin0
	.quad	.Ltmp2935-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Ltmp2948-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc743:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc744:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc745:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc746:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc747:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc748:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc749:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc750:
	.quad	.Ltmp2861-.Lfunc_begin0
	.quad	.Ltmp2864-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc751:
	.quad	.Ltmp2862-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc752:
	.quad	.Ltmp2866-.Lfunc_begin0
	.quad	.Ltmp2868-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc753:
	.quad	.Ltmp2876-.Lfunc_begin0
	.quad	.Ltmp2895-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc754:
	.quad	.Ltmp2877-.Lfunc_begin0
	.quad	.Ltmp2881-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc755:
	.quad	.Ltmp2878-.Lfunc_begin0
	.quad	.Ltmp2887-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2887-.Lfunc_begin0
	.quad	.Ltmp2891-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2892-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc756:
	.quad	.Ltmp2879-.Lfunc_begin0
	.quad	.Ltmp2889-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc757:
	.quad	.Ltmp2879-.Lfunc_begin0
	.quad	.Ltmp2881-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc758:
	.quad	.Ltmp2879-.Lfunc_begin0
	.quad	.Ltmp2885-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2890-.Lfunc_begin0
	.quad	.Ltmp2892-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2893-.Lfunc_begin0
	.quad	.Ltmp2896-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc759:
	.quad	.Ltmp2881-.Lfunc_begin0
	.quad	.Ltmp2885-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc760:
	.quad	.Ltmp2881-.Lfunc_begin0
	.quad	.Ltmp2883-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc761:
	.quad	.Ltmp2883-.Lfunc_begin0
	.quad	.Ltmp2889-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc762:
	.quad	.Ltmp2883-.Lfunc_begin0
	.quad	.Ltmp2886-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc763:
	.quad	.Ltmp2894-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2898-.Lfunc_begin0
	.quad	.Ltmp2904-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2905-.Lfunc_begin0
	.quad	.Ltmp2925-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc764:
	.quad	.Ltmp2894-.Lfunc_begin0
	.quad	.Ltmp2898-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2898-.Lfunc_begin0
	.quad	.Ltmp2904-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2905-.Lfunc_begin0
	.quad	.Ltmp2909-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2909-.Lfunc_begin0
	.quad	.Ltmp2913-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2913-.Lfunc_begin0
	.quad	.Ltmp2917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2917-.Lfunc_begin0
	.quad	.Ltmp2922-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2922-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc765:
	.quad	.Ltmp2894-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc766:
	.quad	.Ltmp2899-.Lfunc_begin0
	.quad	.Ltmp2902-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2906-.Lfunc_begin0
	.quad	.Ltmp2909-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2910-.Lfunc_begin0
	.quad	.Ltmp2913-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2914-.Lfunc_begin0
	.quad	.Ltmp2917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2919-.Lfunc_begin0
	.quad	.Ltmp2922-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc767:
	.quad	.Ltmp2900-.Lfunc_begin0
	.quad	.Ltmp2901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2908-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2911-.Lfunc_begin0
	.quad	.Ltmp2912-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2915-.Lfunc_begin0
	.quad	.Ltmp2916-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2920-.Lfunc_begin0
	.quad	.Ltmp2921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc768:
	.quad	.Ltmp2900-.Lfunc_begin0
	.quad	.Ltmp2904-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2911-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2911-.Lfunc_begin0
	.quad	.Ltmp2918-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2920-.Lfunc_begin0
	.quad	.Ltmp2925-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc769:
	.quad	.Ltmp2926-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc770:
	.quad	.Ltmp2928-.Lfunc_begin0
	.quad	.Ltmp2935-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2936-.Lfunc_begin0
	.quad	.Ltmp2938-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Ltmp2949-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2951-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2962-.Lfunc_begin0
	.quad	.Ltmp2964-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc771:
	.quad	.Ltmp2931-.Lfunc_begin0
	.quad	.Ltmp2945-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Lfunc_end58-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc772:
	.quad	.Ltmp2928-.Lfunc_begin0
	.quad	.Ltmp2935-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Ltmp2949-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc773:
	.quad	.Ltmp2937-.Lfunc_begin0
	.quad	.Ltmp2938-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2940-.Lfunc_begin0
	.quad	.Ltmp2942-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2953-.Lfunc_begin0
	.quad	.Ltmp2954-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2956-.Lfunc_begin0
	.quad	.Ltmp2958-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2963-.Lfunc_begin0
	.quad	.Ltmp2964-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2966-.Lfunc_begin0
	.quad	.Ltmp2968-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc774:
	.quad	.Ltmp2937-.Lfunc_begin0
	.quad	.Ltmp2945-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2949-.Lfunc_begin0
	.quad	.Ltmp2952-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2953-.Lfunc_begin0
	.quad	.Lfunc_end58-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc775:
	.quad	.Lfunc_begin59-.Lfunc_begin0
	.quad	.Ltmp2994-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc776:
	.quad	.Lfunc_begin59-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc777:
	.quad	.Lfunc_begin59-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc778:
	.quad	.Lfunc_begin59-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc779:
	.quad	.Ltmp2972-.Lfunc_begin0
	.quad	.Ltmp2976-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2989-.Lfunc_begin0
	.quad	.Lfunc_end59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc780:
	.quad	.Ltmp3000-.Lfunc_begin0
	.quad	.Lfunc_end59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc781:
	.quad	.Ltmp2974-.Lfunc_begin0
	.quad	.Ltmp2976-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2991-.Lfunc_begin0
	.quad	.Ltmp2997-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3000-.Lfunc_begin0
	.quad	.Lfunc_end59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc782:
	.quad	.Ltmp2977-.Lfunc_begin0
	.quad	.Ltmp2983-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc783:
	.quad	.Ltmp2978-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc784:
	.quad	.Ltmp2979-.Lfunc_begin0
	.quad	.Ltmp2987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc785:
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc786:
	.quad	.Ltmp2981-.Lfunc_begin0
	.quad	.Ltmp2987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc787:
	.quad	.Ltmp2981-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc788:
	.quad	.Ltmp2982-.Lfunc_begin0
	.quad	.Ltmp2987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc789:
	.quad	.Ltmp2982-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc790:
	.quad	.Ltmp2984-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc791:
	.quad	.Ltmp2984-.Lfunc_begin0
	.quad	.Ltmp2985-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc792:
	.quad	.Ltmp2985-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc793:
	.quad	.Ltmp2985-.Lfunc_begin0
	.quad	.Ltmp2991-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc794:
	.quad	.Ltmp2985-.Lfunc_begin0
	.quad	.Ltmp2986-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc795:
	.quad	.Ltmp2986-.Lfunc_begin0
	.quad	.Ltmp2990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc796:
	.quad	.Ltmp2988-.Lfunc_begin0
	.quad	.Ltmp2993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc797:
	.quad	.Ltmp2998-.Lfunc_begin0
	.quad	.Ltmp3000-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc798:
	.quad	.Ltmp3006-.Lfunc_begin0
	.quad	.Ltmp3007-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3020-.Lfunc_begin0
	.quad	.Ltmp3023-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3025-.Lfunc_begin0
	.quad	.Ltmp3028-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3030-.Lfunc_begin0
	.quad	.Ltmp3033-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp3035-.Lfunc_begin0
	.quad	.Lfunc_end59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc799:
	.quad	.Lfunc_begin60-.Lfunc_begin0
	.quad	.Ltmp3040-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3040-.Lfunc_begin0
	.quad	.Ltmp3049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc800:
	.quad	.Lfunc_begin60-.Lfunc_begin0
	.quad	.Ltmp3046-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3047-.Lfunc_begin0
	.quad	.Ltmp3049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc801:
	.quad	.Lfunc_begin60-.Lfunc_begin0
	.quad	.Ltmp3039-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3039-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3127-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc802:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3044-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3067-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc803:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3046-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp3065-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc804:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3050-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc805:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3046-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc806:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3050-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc807:
	.quad	.Ltmp3043-.Lfunc_begin0
	.quad	.Ltmp3046-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc808:
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc809:
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc810:
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc811:
	.quad	.Ltmp3053-.Lfunc_begin0
	.quad	.Ltmp3055-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc812:
	.quad	.Ltmp3054-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc813:
	.quad	.Ltmp3056-.Lfunc_begin0
	.quad	.Ltmp3063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc814:
	.quad	.Ltmp3057-.Lfunc_begin0
	.quad	.Ltmp3066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc815:
	.quad	.Ltmp3058-.Lfunc_begin0
	.quad	.Ltmp3063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc816:
	.quad	.Ltmp3058-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc817:
	.quad	.Ltmp3059-.Lfunc_begin0
	.quad	.Ltmp3063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc818:
	.quad	.Ltmp3059-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc819:
	.quad	.Ltmp3060-.Lfunc_begin0
	.quad	.Ltmp3066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc820:
	.quad	.Ltmp3060-.Lfunc_begin0
	.quad	.Ltmp3061-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc821:
	.quad	.Ltmp3061-.Lfunc_begin0
	.quad	.Ltmp3066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc822:
	.quad	.Ltmp3061-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc823:
	.quad	.Ltmp3061-.Lfunc_begin0
	.quad	.Ltmp3062-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc824:
	.quad	.Ltmp3062-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc825:
	.quad	.Ltmp3064-.Lfunc_begin0
	.quad	.Ltmp3069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc826:
	.quad	.Ltmp3071-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc827:
	.quad	.Ltmp3077-.Lfunc_begin0
	.quad	.Ltmp3078-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp3091-.Lfunc_begin0
	.quad	.Ltmp3094-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3096-.Lfunc_begin0
	.quad	.Ltmp3099-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3101-.Lfunc_begin0
	.quad	.Ltmp3104-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3106-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc828:
	.quad	.Ltmp3108-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3115-.Lfunc_begin0
	.quad	.Ltmp3117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3128-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3130-.Lfunc_begin0
	.quad	.Ltmp3141-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3141-.Lfunc_begin0
	.quad	.Ltmp3143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc829:
	.quad	.Ltmp3111-.Lfunc_begin0
	.quad	.Ltmp3124-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Lfunc_end60-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc830:
	.quad	.Ltmp3108-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc831:
	.quad	.Ltmp3116-.Lfunc_begin0
	.quad	.Ltmp3117-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3119-.Lfunc_begin0
	.quad	.Ltmp3121-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3132-.Lfunc_begin0
	.quad	.Ltmp3133-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3135-.Lfunc_begin0
	.quad	.Ltmp3137-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3142-.Lfunc_begin0
	.quad	.Ltmp3143-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3145-.Lfunc_begin0
	.quad	.Ltmp3147-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc832:
	.quad	.Ltmp3116-.Lfunc_begin0
	.quad	.Ltmp3124-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3128-.Lfunc_begin0
	.quad	.Ltmp3131-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3132-.Lfunc_begin0
	.quad	.Lfunc_end60-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc833:
	.quad	.Lfunc_begin61-.Lfunc_begin0
	.quad	.Ltmp3149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3149-.Lfunc_begin0
	.quad	.Ltmp3227-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc834:
	.quad	.Lfunc_begin61-.Lfunc_begin0
	.quad	.Ltmp3149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3149-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3199-.Lfunc_begin0
	.quad	.Ltmp3200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc835:
	.quad	.Lfunc_begin61-.Lfunc_begin0
	.quad	.Ltmp3149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3149-.Lfunc_begin0
	.quad	.Ltmp3161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc836:
	.quad	.Lfunc_begin61-.Lfunc_begin0
	.quad	.Ltmp3149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp3149-.Lfunc_begin0
	.quad	.Ltmp3159-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc837:
	.quad	.Ltmp3150-.Lfunc_begin0
	.quad	.Ltmp3158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc838:
	.quad	.Ltmp3151-.Lfunc_begin0
	.quad	.Ltmp3161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc839:
	.quad	.Ltmp3152-.Lfunc_begin0
	.quad	.Ltmp3161-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc840:
	.quad	.Ltmp3154-.Lfunc_begin0
	.quad	.Ltmp3228-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc841:
	.quad	.Ltmp3155-.Lfunc_begin0
	.quad	.Ltmp3162-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc842:
	.quad	.Ltmp3155-.Lfunc_begin0
	.quad	.Ltmp3159-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp3159-.Lfunc_begin0
	.quad	.Ltmp3162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc843:
	.quad	.Ltmp3162-.Lfunc_begin0
	.quad	.Ltmp3179-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3179-.Lfunc_begin0
	.quad	.Ltmp3181-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp3183-.Lfunc_begin0
	.quad	.Ltmp3186-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc844:
	.quad	.Ltmp3187-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3190-.Lfunc_begin0
	.quad	.Ltmp3199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp3200-.Lfunc_begin0
	.quad	.Ltmp3203-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc845:
	.quad	.Ltmp3187-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3190-.Lfunc_begin0
	.quad	.Ltmp3199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp3200-.Lfunc_begin0
	.quad	.Ltmp3223-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc846:
	.quad	.Ltmp3187-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3200-.Lfunc_begin0
	.quad	.Ltmp3202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp3218-.Lfunc_begin0
	.quad	.Ltmp3220-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3221-.Lfunc_begin0
	.quad	.Ltmp3226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc847:
	.quad	.Lfunc_begin62-.Lfunc_begin0
	.quad	.Ltmp3234-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3234-.Lfunc_begin0
	.quad	.Ltmp3296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc848:
	.quad	.Lfunc_begin62-.Lfunc_begin0
	.quad	.Ltmp3233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3233-.Lfunc_begin0
	.quad	.Ltmp3296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc849:
	.quad	.Ltmp3230-.Lfunc_begin0
	.quad	.Ltmp3236-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3236-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc850:
	.quad	.Ltmp3241-.Lfunc_begin0
	.quad	.Ltmp3242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc851:
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3256-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3260-.Lfunc_begin0
	.quad	.Ltmp3263-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3279-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc852:
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc853:
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc854:
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc855:
	.quad	.Ltmp3244-.Lfunc_begin0
	.quad	.Ltmp3245-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc856:
	.quad	.Ltmp3249-.Lfunc_begin0
	.quad	.Ltmp3250-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3251-.Lfunc_begin0
	.quad	.Ltmp3252-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3253-.Lfunc_begin0
	.quad	.Ltmp3255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp3264-.Lfunc_begin0
	.quad	.Ltmp3265-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3265-.Lfunc_begin0
	.quad	.Ltmp3269-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc857:
	.quad	.Ltmp3249-.Lfunc_begin0
	.quad	.Ltmp3256-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3258-.Lfunc_begin0
	.quad	.Ltmp3263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3264-.Lfunc_begin0
	.quad	.Ltmp3273-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3273-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc858:
	.quad	.Ltmp3282-.Lfunc_begin0
	.quad	.Ltmp3285-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	32                      # 32
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3285-.Lfunc_begin0
	.quad	.Ltmp3286-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp3294-.Lfunc_begin0
	.quad	.Ltmp3296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc859:
	.quad	.Ltmp3285-.Lfunc_begin0
	.quad	.Ltmp3287-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3287-.Lfunc_begin0
	.quad	.Ltmp3291-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3291-.Lfunc_begin0
	.quad	.Ltmp3293-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3293-.Lfunc_begin0
	.quad	.Ltmp3294-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc860:
	.quad	.Ltmp3288-.Lfunc_begin0
	.quad	.Ltmp3291-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc861:
	.quad	.Ltmp3289-.Lfunc_begin0
	.quad	.Ltmp3294-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc862:
	.quad	.Ltmp3289-.Lfunc_begin0
	.quad	.Ltmp3294-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	118                     # DW_OP_breg6
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc863:
	.quad	.Ltmp3290-.Lfunc_begin0
	.quad	.Ltmp3291-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc864:
	.quad	.Lfunc_begin63-.Lfunc_begin0
	.quad	.Ltmp3298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3298-.Lfunc_begin0
	.quad	.Ltmp3303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc865:
	.quad	.Lfunc_begin63-.Lfunc_begin0
	.quad	.Ltmp3298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3298-.Lfunc_begin0
	.quad	.Ltmp3302-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc866:
	.quad	.Lfunc_begin63-.Lfunc_begin0
	.quad	.Ltmp3299-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc867:
	.quad	.Ltmp3299-.Lfunc_begin0
	.quad	.Ltmp3304-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3304-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc868:
	.quad	.Ltmp3299-.Lfunc_begin0
	.quad	.Ltmp3364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc869:
	.quad	.Ltmp3302-.Lfunc_begin0
	.quad	.Ltmp3364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc870:
	.quad	.Ltmp3309-.Lfunc_begin0
	.quad	.Ltmp3313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc871:
	.quad	.Ltmp3309-.Lfunc_begin0
	.quad	.Ltmp3310-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc872:
	.quad	.Ltmp3311-.Lfunc_begin0
	.quad	.Ltmp3324-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3328-.Lfunc_begin0
	.quad	.Ltmp3331-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3347-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc873:
	.quad	.Ltmp3311-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc874:
	.quad	.Ltmp3311-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc875:
	.quad	.Ltmp3311-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc876:
	.quad	.Ltmp3317-.Lfunc_begin0
	.quad	.Ltmp3318-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3319-.Lfunc_begin0
	.quad	.Ltmp3320-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3321-.Lfunc_begin0
	.quad	.Ltmp3323-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3332-.Lfunc_begin0
	.quad	.Ltmp3333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3333-.Lfunc_begin0
	.quad	.Ltmp3337-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc877:
	.quad	.Ltmp3317-.Lfunc_begin0
	.quad	.Ltmp3324-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3326-.Lfunc_begin0
	.quad	.Ltmp3331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3332-.Lfunc_begin0
	.quad	.Ltmp3341-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3341-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc878:
	.quad	.Ltmp3350-.Lfunc_begin0
	.quad	.Ltmp3353-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	32                      # 32
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3353-.Lfunc_begin0
	.quad	.Ltmp3354-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp3362-.Lfunc_begin0
	.quad	.Ltmp3364-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc879:
	.quad	.Ltmp3353-.Lfunc_begin0
	.quad	.Ltmp3355-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3355-.Lfunc_begin0
	.quad	.Ltmp3359-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3359-.Lfunc_begin0
	.quad	.Ltmp3361-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp3361-.Lfunc_begin0
	.quad	.Ltmp3362-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc880:
	.quad	.Ltmp3356-.Lfunc_begin0
	.quad	.Ltmp3359-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc881:
	.quad	.Ltmp3357-.Lfunc_begin0
	.quad	.Ltmp3362-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc882:
	.quad	.Ltmp3357-.Lfunc_begin0
	.quad	.Ltmp3362-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	118                     # DW_OP_breg6
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc883:
	.quad	.Ltmp3358-.Lfunc_begin0
	.quad	.Ltmp3359-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc884:
	.quad	.Lfunc_begin64-.Lfunc_begin0
	.quad	.Ltmp3370-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3370-.Lfunc_begin0
	.quad	.Ltmp3380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc885:
	.quad	.Lfunc_begin64-.Lfunc_begin0
	.quad	.Ltmp3369-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3369-.Lfunc_begin0
	.quad	.Ltmp3380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc886:
	.quad	.Ltmp3366-.Lfunc_begin0
	.quad	.Ltmp3371-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3371-.Lfunc_begin0
	.quad	.Ltmp3380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc887:
	.quad	.Ltmp3372-.Lfunc_begin0
	.quad	.Ltmp3377-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc888:
	.quad	.Ltmp3373-.Lfunc_begin0
	.quad	.Ltmp3377-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc889:
	.quad	.Lfunc_begin65-.Lfunc_begin0
	.quad	.Ltmp3382-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3382-.Lfunc_begin0
	.quad	.Ltmp3386-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3386-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp3410-.Lfunc_begin0
	.quad	.Ltmp3411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3411-.Lfunc_begin0
	.quad	.Ltmp3450-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp3450-.Lfunc_begin0
	.quad	.Ltmp3451-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3452-.Lfunc_begin0
	.quad	.Ltmp3500-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc890:
	.quad	.Lfunc_begin65-.Lfunc_begin0
	.quad	.Ltmp3382-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3382-.Lfunc_begin0
	.quad	.Lfunc_end65-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc891:
	.quad	.Lfunc_begin65-.Lfunc_begin0
	.quad	.Ltmp3387-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3387-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	.Ltmp3410-.Lfunc_begin0
	.quad	.Ltmp3411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3411-.Lfunc_begin0
	.quad	.Ltmp3491-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc892:
	.quad	.Lfunc_begin65-.Lfunc_begin0
	.quad	.Ltmp3385-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3385-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3410-.Lfunc_begin0
	.quad	.Ltmp3411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3411-.Lfunc_begin0
	.quad	.Ltmp3502-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc893:
	.quad	.Ltmp3385-.Lfunc_begin0
	.quad	.Ltmp3391-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3391-.Lfunc_begin0
	.quad	.Ltmp3395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3396-.Lfunc_begin0
	.quad	.Ltmp3398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3401-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3411-.Lfunc_begin0
	.quad	.Ltmp3412-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3412-.Lfunc_begin0
	.quad	.Ltmp3426-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3427-.Lfunc_begin0
	.quad	.Ltmp3429-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3432-.Lfunc_begin0
	.quad	.Ltmp3555-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3556-.Lfunc_begin0
	.quad	.Lfunc_end65-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc894:
	.quad	.Ltmp3385-.Lfunc_begin0
	.quad	.Ltmp3391-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3401-.Lfunc_begin0
	.quad	.Ltmp3403-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3411-.Lfunc_begin0
	.quad	.Ltmp3412-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3412-.Lfunc_begin0
	.quad	.Ltmp3433-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3433-.Lfunc_begin0
	.quad	.Ltmp3434-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3436-.Lfunc_begin0
	.quad	.Ltmp3441-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3452-.Lfunc_begin0
	.quad	.Ltmp3456-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc895:
	.quad	.Ltmp3391-.Lfunc_begin0
	.quad	.Ltmp3398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3412-.Lfunc_begin0
	.quad	.Ltmp3422-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc896:
	.quad	.Ltmp3391-.Lfunc_begin0
	.quad	.Ltmp3398-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	.Ltmp3412-.Lfunc_begin0
	.quad	.Ltmp3422-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc897:
	.quad	.Ltmp3391-.Lfunc_begin0
	.quad	.Ltmp3398-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3412-.Lfunc_begin0
	.quad	.Ltmp3413-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3413-.Lfunc_begin0
	.quad	.Ltmp3422-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc898:
	.quad	.Ltmp3392-.Lfunc_begin0
	.quad	.Ltmp3401-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3405-.Lfunc_begin0
	.quad	.Ltmp3406-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3423-.Lfunc_begin0
	.quad	.Ltmp3432-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3436-.Lfunc_begin0
	.quad	.Ltmp3437-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc899:
	.quad	.Ltmp3394-.Lfunc_begin0
	.quad	.Ltmp3395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3425-.Lfunc_begin0
	.quad	.Ltmp3426-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc900:
	.quad	.Ltmp3406-.Lfunc_begin0
	.quad	.Ltmp3409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3437-.Lfunc_begin0
	.quad	.Ltmp3440-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc901:
	.quad	.Ltmp3414-.Lfunc_begin0
	.quad	.Ltmp3419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc902:
	.quad	.Ltmp3415-.Lfunc_begin0
	.quad	.Ltmp3419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc903:
	.quad	.Ltmp3442-.Lfunc_begin0
	.quad	.Ltmp3445-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3445-.Lfunc_begin0
	.quad	.Ltmp3449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc904:
	.quad	.Ltmp3453-.Lfunc_begin0
	.quad	.Ltmp3457-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3457-.Lfunc_begin0
	.quad	.Ltmp3483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc905:
	.quad	.Ltmp3453-.Lfunc_begin0
	.quad	.Ltmp3457-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3457-.Lfunc_begin0
	.quad	.Ltmp3483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp3485-.Lfunc_begin0
	.quad	.Ltmp3490-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc906:
	.quad	.Ltmp3453-.Lfunc_begin0
	.quad	.Ltmp3494-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc907:
	.quad	.Ltmp3458-.Lfunc_begin0
	.quad	.Ltmp3459-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3461-.Lfunc_begin0
	.quad	.Ltmp3462-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3464-.Lfunc_begin0
	.quad	.Ltmp3465-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3467-.Lfunc_begin0
	.quad	.Ltmp3468-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3470-.Lfunc_begin0
	.quad	.Ltmp3471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3473-.Lfunc_begin0
	.quad	.Ltmp3474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3476-.Lfunc_begin0
	.quad	.Ltmp3477-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3479-.Lfunc_begin0
	.quad	.Ltmp3480-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3486-.Lfunc_begin0
	.quad	.Ltmp3487-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc908:
	.quad	.Ltmp3459-.Lfunc_begin0
	.quad	.Ltmp3461-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3462-.Lfunc_begin0
	.quad	.Ltmp3464-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3465-.Lfunc_begin0
	.quad	.Ltmp3467-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3468-.Lfunc_begin0
	.quad	.Ltmp3470-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3471-.Lfunc_begin0
	.quad	.Ltmp3473-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3474-.Lfunc_begin0
	.quad	.Ltmp3476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3477-.Lfunc_begin0
	.quad	.Ltmp3479-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3480-.Lfunc_begin0
	.quad	.Ltmp3483-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3487-.Lfunc_begin0
	.quad	.Ltmp3489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc909:
	.quad	.Ltmp3496-.Lfunc_begin0
	.quad	.Lfunc_end65-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc910:
	.quad	.Ltmp3502-.Lfunc_begin0
	.quad	.Ltmp3554-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3556-.Lfunc_begin0
	.quad	.Lfunc_end65-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc911:
	.quad	.Ltmp3512-.Lfunc_begin0
	.quad	.Ltmp3514-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3514-.Lfunc_begin0
	.quad	.Ltmp3516-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3516-.Lfunc_begin0
	.quad	.Ltmp3518-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3518-.Lfunc_begin0
	.quad	.Ltmp3520-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3520-.Lfunc_begin0
	.quad	.Ltmp3522-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3522-.Lfunc_begin0
	.quad	.Ltmp3524-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3524-.Lfunc_begin0
	.quad	.Ltmp3526-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3526-.Lfunc_begin0
	.quad	.Ltmp3528-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3528-.Lfunc_begin0
	.quad	.Ltmp3530-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3530-.Lfunc_begin0
	.quad	.Ltmp3532-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3532-.Lfunc_begin0
	.quad	.Ltmp3534-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	10                      # 10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3534-.Lfunc_begin0
	.quad	.Ltmp3536-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	11                      # 11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3536-.Lfunc_begin0
	.quad	.Ltmp3538-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	12                      # 12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3538-.Lfunc_begin0
	.quad	.Ltmp3540-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3540-.Lfunc_begin0
	.quad	.Ltmp3542-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3542-.Lfunc_begin0
	.quad	.Ltmp3544-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	15                      # 15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3544-.Lfunc_begin0
	.quad	.Ltmp3546-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	16                      # 16
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3546-.Lfunc_begin0
	.quad	.Ltmp3548-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	17                      # 17
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3548-.Lfunc_begin0
	.quad	.Ltmp3550-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	18                      # 18
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3550-.Lfunc_begin0
	.quad	.Ltmp3552-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	19                      # 19
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3552-.Lfunc_begin0
	.quad	.Ltmp3556-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	20                      # 20
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3556-.Lfunc_begin0
	.quad	.Ltmp3557-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3557-.Lfunc_begin0
	.quad	.Ltmp3560-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3560-.Lfunc_begin0
	.quad	.Ltmp3563-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3563-.Lfunc_begin0
	.quad	.Ltmp3566-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3566-.Lfunc_begin0
	.quad	.Ltmp3569-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3569-.Lfunc_begin0
	.quad	.Ltmp3572-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3572-.Lfunc_begin0
	.quad	.Ltmp3575-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3575-.Lfunc_begin0
	.quad	.Ltmp3578-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3578-.Lfunc_begin0
	.quad	.Ltmp3581-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3581-.Lfunc_begin0
	.quad	.Ltmp3584-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3584-.Lfunc_begin0
	.quad	.Ltmp3587-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	10                      # 10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3587-.Lfunc_begin0
	.quad	.Ltmp3590-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	11                      # 11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3590-.Lfunc_begin0
	.quad	.Ltmp3593-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	12                      # 12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3593-.Lfunc_begin0
	.quad	.Ltmp3596-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3596-.Lfunc_begin0
	.quad	.Ltmp3599-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3599-.Lfunc_begin0
	.quad	.Ltmp3602-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	15                      # 15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3602-.Lfunc_begin0
	.quad	.Ltmp3605-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	16                      # 16
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3605-.Lfunc_begin0
	.quad	.Ltmp3608-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	17                      # 17
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3608-.Lfunc_begin0
	.quad	.Ltmp3611-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	18                      # 18
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3611-.Lfunc_begin0
	.quad	.Lfunc_end65-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	19                      # 19
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc912:
	.quad	.Ltmp3616-.Lfunc_begin0
	.quad	.Ltmp3622-.Lfunc_begin0
	.short	6                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	128                     # 2000000
	.byte	137                     # 
	.byte	250                     # 
	.byte	0                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc913:
	.quad	.Ltmp3616-.Lfunc_begin0
	.quad	.Ltmp3622-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	87                      # DW_OP_reg7
	.quad	0
	.quad	0
.Ldebug_loc914:
	.quad	.Ltmp3619-.Lfunc_begin0
	.quad	.Ltmp3622-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc915:
	.quad	.Ltmp3622-.Lfunc_begin0
	.quad	.Ltmp3645-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.ascii	"\207B"                 # DW_AT_GNU_vector
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.ascii	"\210\001"              # DW_AT_alignment
	.byte	15                      # DW_FORM_udata
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	87                      # DW_AT_call_column
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	87                      # DW_AT_call_column
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.ascii	"\225B"                 # DW_AT_GNU_tail_call
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	46                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	47                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	52                      # DW_AT_artificial
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	48                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	52                      # DW_AT_artificial
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	49                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.ascii	"\223B"                 # DW_AT_GNU_call_site_target
	.byte	24                      # DW_FORM_exprloc
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	50                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	51                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	52                      # Abbreviation Code
	.byte	21                      # DW_TAG_subroutine_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x553d DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end66-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x1b DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x35:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x3a:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x3f:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0x45:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0x4c:0x5 DW_TAG_pointer_type
	.long	69                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x51:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x58:0x16 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x63:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x68:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x6e:0x12 DW_TAG_subprogram
	.long	.Linfo_string7          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x75:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x7a:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x80:0x12 DW_TAG_subprogram
	.long	.Linfo_string8          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x87:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x8c:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	7                       # Abbrev [7] 0x92:0xb DW_TAG_subprogram
	.long	.Linfo_string9          # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	81                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	8                       # Abbrev [8] 0x9d:0xe DW_TAG_subprogram
	.long	.Linfo_string10         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	455                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xa5:0x5 DW_TAG_formal_parameter
	.long	171                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xab:0x7 DW_TAG_base_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0xb2:0x16 DW_TAG_subprogram
	.long	.Linfo_string12         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xbd:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0xc2:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0xc8:0xe DW_TAG_subprogram
	.long	.Linfo_string13         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	565                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xd0:0x5 DW_TAG_formal_parameter
	.long	214                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0xd6:0x1 DW_TAG_pointer_type
	.byte	2                       # Abbrev [2] 0xd7:0x11 DW_TAG_subprogram
	.long	.Linfo_string14         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	17                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	171                     # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xe2:0x5 DW_TAG_formal_parameter
	.long	232                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0xe8:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	244                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0xed:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xf4:0x7 DW_TAG_base_type
	.long	.Linfo_string15         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	12                      # Abbrev [12] 0xfb:0x7 DW_TAG_base_type
	.long	.Linfo_string16         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x102:0x11 DW_TAG_subprogram
	.long	.Linfo_string17         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	171                     # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x10d:0x5 DW_TAG_formal_parameter
	.long	275                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x113:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	244                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x118:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x11f:0x1c DW_TAG_subprogram
	.long	.Linfo_string18         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x126:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x12b:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x130:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x135:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x13b:0xc DW_TAG_subprogram
	.long	.Linfo_string19         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	453                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	14                      # Abbrev [14] 0x147:0x15 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	348                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	INSERTION_SORT_THRESH_BLOCK
	.byte	15                      # Abbrev [15] 0x15c:0x5 DW_TAG_const_type
	.long	69                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0x161:0x15 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	348                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	blocksize
	.byte	14                      # Abbrev [14] 0x176:0x15 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	8                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	count
	.byte	14                      # Abbrev [14] 0x18b:0x15 DW_TAG_variable
	.long	.Linfo_string23         # DW_AT_name
	.long	416                     # DW_AT_type
                                        # DW_AT_external
	.byte	9                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	reference_value
	.byte	4                       # Abbrev [4] 0x1a0:0x7 DW_TAG_base_type
	.long	.Linfo_string24         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	14                      # Abbrev [14] 0x1a7:0x15 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	444                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	x
	.byte	16                      # Abbrev [16] 0x1bc:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x1c1:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x1c8:0x15 DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	477                     # DW_AT_type
                                        # DW_AT_external
	.byte	11                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	b
	.byte	16                      # Abbrev [16] 0x1dd:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1e2:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	1000000                 # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x1ec:0x15 DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	513                     # DW_AT_type
                                        # DW_AT_external
	.byte	9                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	original_data
	.byte	16                      # Abbrev [16] 0x201:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x206:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	2000000                 # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x210:0x15 DW_TAG_variable
	.long	.Linfo_string28         # DW_AT_name
	.long	549                     # DW_AT_type
                                        # DW_AT_external
	.byte	9                       # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	individual_times
	.byte	16                      # Abbrev [16] 0x225:0xd DW_TAG_array_type
	.long	416                     # DW_AT_type
	.byte	18                      # Abbrev [18] 0x22a:0x7 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.short	10000                   # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x232:0x5 DW_TAG_pointer_type
	.long	567                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x237:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string29         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x242:0x5 DW_TAG_pointer_type
	.long	583                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x247:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string30         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x252:0x5 DW_TAG_pointer_type
	.long	599                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x257:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string31         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x262:0xb DW_TAG_typedef
	.long	621                     # DW_AT_type
	.long	.Linfo_string32         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x26d:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x272:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x279:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string33         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x284:0xb DW_TAG_typedef
	.long	81                      # DW_AT_type
	.long	.Linfo_string34         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	156                     # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x28f:0x5 DW_TAG_pointer_type
	.long	660                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x294:0x7 DW_TAG_base_type
	.long	.Linfo_string35         # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0x29b:0x5 DW_TAG_pointer_type
	.long	672                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x2a0:0x18 DW_TAG_structure_type
	.long	.Linfo_string37         # DW_AT_name
	.byte	32                      # DW_AT_byte_size
	.byte	12                      # DW_AT_decl_file
	.short	3296                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x2a9:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	599                     # DW_AT_type
	.byte	12                      # DW_AT_decl_file
	.short	3297                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x2b8:0x5 DW_TAG_pointer_type
	.long	701                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x2bd:0x5 DW_TAG_const_type
	.long	706                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x2c2:0x18 DW_TAG_structure_type
	.long	.Linfo_string38         # DW_AT_name
	.byte	32                      # DW_AT_byte_size
	.byte	12                      # DW_AT_decl_file
	.short	3161                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x2cb:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	599                     # DW_AT_type
	.byte	12                      # DW_AT_decl_file
	.short	3162                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x2da:0xb DW_TAG_typedef
	.long	741                     # DW_AT_type
	.long	.Linfo_string39         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x2e5:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x2ea:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x2f1:0x5 DW_TAG_pointer_type
	.long	758                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x2f6:0x5 DW_TAG_const_type
	.long	763                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x2fb:0x18 DW_TAG_structure_type
	.long	.Linfo_string41         # DW_AT_name
	.byte	16                      # DW_AT_byte_size
	.byte	13                      # DW_AT_decl_file
	.short	3550                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x304:0xe DW_TAG_member
	.long	.Linfo_string36         # DW_AT_name
	.long	787                     # DW_AT_type
	.byte	13                      # DW_AT_decl_file
	.short	3551                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x313:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string40         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x31e:0xb DW_TAG_typedef
	.long	809                     # DW_AT_type
	.long	.Linfo_string42         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x329:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	171                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x32e:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x335:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string43         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x340:0xb DW_TAG_typedef
	.long	843                     # DW_AT_type
	.long	.Linfo_string44         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x34b:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	171                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x350:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x357:0x7b DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x363:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x36e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x379:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x384:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x38f:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x39a:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a5:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3b0:0xb DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3bb:0xb DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3c6:0xb DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x3d2:0xb DW_TAG_typedef
	.long	989                     # DW_AT_type
	.long	.Linfo_string48         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x3dd:0xb DW_TAG_typedef
	.long	81                      # DW_AT_type
	.long	.Linfo_string47         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.byte	22                      # Abbrev [22] 0x3e8:0x23 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3f4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3ff:0xb DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x40b:0x23 DW_TAG_subprogram
	.long	.Linfo_string12         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x417:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x422:0xb DW_TAG_formal_parameter
	.long	.Linfo_string51         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x42e:0x2a DW_TAG_subprogram
	.long	.Linfo_string7          # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x436:0xb DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x441:0xb DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x44c:0xb DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x458:0x3d6 DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string137        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x471:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x480:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x48f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	28                      # Abbrev [28] 0x49e:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320\003"
	.long	.Linfo_string174        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	21686                   # DW_AT_type
	.byte	28                      # Abbrev [28] 0x4ad:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	80
	.long	.Linfo_string175        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	21686                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4bb:0xf DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string79         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4ca:0xf DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string176        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4d9:0xf DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string177        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4e8:0xf DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string178        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4f7:0xf DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string179        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x506:0xf DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string180        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x515:0xf DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.Linfo_string182        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x524:0xf DW_TAG_variable
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.Linfo_string183        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x533:0xf DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.Linfo_string181        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x542:0x107 DW_TAG_inlined_subroutine
	.long	855                     # DW_AT_abstract_origin
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Ltmp15-.Lfunc_begin0   # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x556:0x5 DW_TAG_formal_parameter
	.long	867                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x55b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc3            # DW_AT_location
	.long	878                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x564:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc4            # DW_AT_location
	.long	889                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x56d:0x9 DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	900                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x576:0x9 DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	911                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x57f:0x9 DW_TAG_variable
	.long	.Ldebug_loc7            # DW_AT_location
	.long	922                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x588:0x9 DW_TAG_variable
	.long	.Ldebug_loc8            # DW_AT_location
	.long	933                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x591:0x9 DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	944                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x59a:0x9 DW_TAG_variable
	.long	.Ldebug_loc18           # DW_AT_location
	.long	955                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x5a3:0x9 DW_TAG_variable
	.long	.Ldebug_loc19           # DW_AT_location
	.long	966                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x5ac:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp6                  # DW_AT_low_pc
	.long	.Ltmp8-.Ltmp6           # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5c0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc10           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5c9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc9            # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x5d3:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp8                  # DW_AT_low_pc
	.long	.Ltmp10-.Ltmp8          # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5e7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc12           # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5f0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc11           # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x5fa:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp10                 # DW_AT_low_pc
	.long	.Ltmp11-.Ltmp10         # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x60e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc14           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x617:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc13           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x621:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp11                 # DW_AT_low_pc
	.long	.Ltmp12-.Ltmp11         # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x635:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc17           # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x63e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc15           # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x649:0xb3 DW_TAG_lexical_block
	.long	.Ldebug_ranges1         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x64e:0xf DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string181        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x65d:0x1d DW_TAG_lexical_block
	.quad	.Ltmp31                 # DW_AT_low_pc
	.long	.Ltmp40-.Ltmp31         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x66a:0xf DW_TAG_variable
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x67a:0x1d DW_TAG_lexical_block
	.quad	.Ltmp42                 # DW_AT_low_pc
	.long	.Ltmp54-.Ltmp42         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x687:0xf DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x697:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp54                 # DW_AT_low_pc
	.long	.Ltmp55-.Ltmp54         # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	41                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x6ab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc29           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x6b4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc30           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x6be:0x3d DW_TAG_lexical_block
	.quad	.Ltmp55                 # DW_AT_low_pc
	.long	.Ltmp79-.Ltmp55         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x6cb:0xf DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x6da:0x20 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	43                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x6e6:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x6eb:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x6f0:0x9 DW_TAG_variable
	.long	.Ldebug_loc32           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x6fc:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges2         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x701:0xf DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x711:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges3         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x716:0xf DW_TAG_variable
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x726:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges4         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x72b:0xf DW_TAG_variable
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x73b:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp161                # DW_AT_low_pc
	.long	.Ltmp162-.Ltmp161       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	93                      # DW_AT_call_line
	.byte	13                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x74f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc38           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x758:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc39           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x762:0x3d DW_TAG_lexical_block
	.quad	.Ltmp162                # DW_AT_low_pc
	.long	.Ltmp185-.Ltmp162       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x76f:0xf DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x77e:0x20 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges5         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	96                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x78a:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x78f:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x794:0x9 DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x79f:0x47 DW_TAG_lexical_block
	.long	.Ldebug_ranges6         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x7a4:0xf DW_TAG_variable
	.long	.Ldebug_loc45           # DW_AT_location
	.long	.Linfo_string184        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	124                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x7b3:0xf DW_TAG_variable
	.long	.Ldebug_loc46           # DW_AT_location
	.long	.Linfo_string185        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	125                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x7c2:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp251                # DW_AT_low_pc
	.long	.Ltmp253-.Ltmp251       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	131                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x7d6:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x7db:0x9 DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x7e6:0x47 DW_TAG_lexical_block
	.long	.Ldebug_ranges7         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x7eb:0xf DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string184        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x7fa:0xf DW_TAG_variable
	.long	.Ldebug_loc44           # DW_AT_location
	.long	.Linfo_string185        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	113                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x809:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp236                # DW_AT_low_pc
	.long	.Ltmp238-.Ltmp236       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	119                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x81d:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x822:0x9 DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x82e:0x102 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	855                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x841:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	867                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x848:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	878                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x84f:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	889                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x856:0x9 DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	900                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x85f:0x9 DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	911                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x868:0x9 DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	922                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x871:0x9 DW_TAG_variable
	.long	.Ldebug_loc52           # DW_AT_location
	.long	933                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x87a:0x9 DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	944                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x883:0x9 DW_TAG_variable
	.long	.Ldebug_loc61           # DW_AT_location
	.long	955                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x88c:0x9 DW_TAG_variable
	.long	.Ldebug_loc62           # DW_AT_location
	.long	966                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x895:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp271                # DW_AT_low_pc
	.long	.Ltmp274-.Ltmp271       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x8a9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc54           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8b2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc53           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x8bc:0x25 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp274                # DW_AT_low_pc
	.long	.Ltmp275-.Ltmp274       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	38                      # Abbrev [38] 0x8d0:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8d7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc55           # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x8e1:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp275                # DW_AT_low_pc
	.long	.Ltmp276-.Ltmp275       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x8f5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc57           # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8fe:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc56           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x908:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp276                # DW_AT_low_pc
	.long	.Ltmp277-.Ltmp276       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x91c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc60           # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x925:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc58           # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x930:0x24 DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	1000                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x943:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x94a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc63           # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x954:0x2b DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	1070                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x967:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	1078                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x96e:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x975:0x9 DW_TAG_variable
	.long	.Ldebug_loc64           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x97f:0x40 DW_TAG_subprogram
	.long	.Linfo_string8          # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x987:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x992:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x99d:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x9a8:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x9b3:0xb DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x9bf:0xb4 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string138        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x9d4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc65           # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x9e3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x9f2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0xa01:0x1d DW_TAG_lexical_block
	.quad	.Ltmp292                # DW_AT_low_pc
	.long	.Ltmp297-.Ltmp292       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xa0e:0xf DW_TAG_variable
	.long	.Ldebug_loc68           # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	144                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0xa1e:0x3a DW_TAG_inlined_subroutine
	.long	2431                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges8         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	148                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xa2a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc70           # DW_AT_location
	.long	2439                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xa33:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc71           # DW_AT_location
	.long	2450                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa3c:0x9 DW_TAG_variable
	.long	.Ldebug_loc69           # DW_AT_location
	.long	2461                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa45:0x9 DW_TAG_variable
	.long	.Ldebug_loc72           # DW_AT_location
	.long	2472                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa4e:0x9 DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	2483                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0xa58:0xd DW_TAG_GNU_call_site
	.long	1112                    # DW_AT_abstract_origin
	.quad	.Ltmp293                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0xa65:0xd DW_TAG_GNU_call_site
	.long	2495                    # DW_AT_abstract_origin
	.quad	.Ltmp295                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xa73:0x3f DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	2431                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa86:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	2439                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xa8d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc74           # DW_AT_location
	.long	2450                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa96:0x9 DW_TAG_variable
	.long	.Ldebug_loc75           # DW_AT_location
	.long	2461                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa9f:0x9 DW_TAG_variable
	.long	.Ldebug_loc76           # DW_AT_location
	.long	2472                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xaa8:0x9 DW_TAG_variable
	.long	.Ldebug_loc77           # DW_AT_location
	.long	2483                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xab2:0x4f DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	21266                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xac5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc78           # DW_AT_location
	.long	21274                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xace:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc79           # DW_AT_location
	.long	21285                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0xad7:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges9         # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0xadc:0x9 DW_TAG_variable
	.long	.Ldebug_loc80           # DW_AT_location
	.long	21297                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0xae6:0xd DW_TAG_GNU_call_site
	.long	146                     # DW_AT_abstract_origin
	.quad	.Ltmp382                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0xaf3:0xd DW_TAG_GNU_call_site
	.long	157                     # DW_AT_abstract_origin
	.quad	.Ltmp383                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xb01:0x3f DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	7844                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xb14:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xb1b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc81           # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb24:0x9 DW_TAG_variable
	.long	.Ldebug_loc82           # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb2d:0x9 DW_TAG_variable
	.long	.Ldebug_loc83           # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb36:0x9 DW_TAG_variable
	.long	.Ldebug_loc84           # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xb40:0x46 DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	19843                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xb53:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	19851                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xb5a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc85           # DW_AT_location
	.long	19862                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xb63:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	19873                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb6a:0x9 DW_TAG_variable
	.long	.Ldebug_loc86           # DW_AT_location
	.long	19884                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb73:0x9 DW_TAG_variable
	.long	.Ldebug_loc87           # DW_AT_location
	.long	19895                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb7c:0x9 DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	19906                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xb86:0x6e DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	3060                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xb99:0x5 DW_TAG_formal_parameter
	.long	3068                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xb9e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc92           # DW_AT_location
	.long	3079                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xba7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc89           # DW_AT_location
	.long	3090                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbb0:0x9 DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	3101                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbb9:0x9 DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	3112                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbc2:0x9 DW_TAG_variable
	.long	.Ldebug_loc93           # DW_AT_location
	.long	3123                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbcb:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp501                # DW_AT_low_pc
	.long	.Ltmp504-.Ltmp501       # DW_AT_high_pc
	.byte	21                      # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xbdf:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xbe4:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbe9:0x9 DW_TAG_variable
	.long	.Ldebug_loc94           # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0xbf4:0x4b DW_TAG_subprogram
	.long	.Linfo_string62         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0xbfc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string63         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xc07:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xc12:0xb DW_TAG_formal_parameter
	.long	.Linfo_string59         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc1d:0xb DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc28:0xb DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	5                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc33:0xb DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xc3f:0x122 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string139        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0xc54:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xc61:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0xc70:0x90 DW_TAG_lexical_block
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Ltmp536-.Lfunc_begin10 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xc7d:0xf DW_TAG_variable
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xc8c:0x73 DW_TAG_inlined_subroutine
	.long	3060                    # DW_AT_abstract_origin
	.quad	.Ltmp514                # DW_AT_low_pc
	.long	.Ltmp536-.Ltmp514       # DW_AT_high_pc
	.byte	21                      # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xca0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc97           # DW_AT_location
	.long	3068                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xca9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc98           # DW_AT_location
	.long	3079                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xcb2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc99           # DW_AT_location
	.long	3090                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcbb:0x9 DW_TAG_variable
	.long	.Ldebug_loc100          # DW_AT_location
	.long	3101                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcc4:0x9 DW_TAG_variable
	.long	.Ldebug_loc101          # DW_AT_location
	.long	3112                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xccd:0x9 DW_TAG_variable
	.long	.Ldebug_loc102          # DW_AT_location
	.long	3123                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xcd6:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp533                # DW_AT_low_pc
	.long	.Ltmp536-.Ltmp533       # DW_AT_high_pc
	.byte	21                      # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xcea:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xcef:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcf4:0x9 DW_TAG_variable
	.long	.Ldebug_loc103          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xd00:0x60 DW_TAG_lexical_block
	.quad	.Ltmp536                # DW_AT_low_pc
	.long	.Ltmp565-.Ltmp536       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xd0d:0xf DW_TAG_variable
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0xd1c:0x43 DW_TAG_inlined_subroutine
	.long	3060                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges10        # DW_AT_ranges
	.byte	21                      # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xd28:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc108          # DW_AT_location
	.long	3068                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xd31:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc107          # DW_AT_location
	.long	3079                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xd3a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc106          # DW_AT_location
	.long	3090                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd43:0x9 DW_TAG_variable
	.long	.Ldebug_loc105          # DW_AT_location
	.long	3101                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd4c:0x9 DW_TAG_variable
	.long	.Ldebug_loc109          # DW_AT_location
	.long	3112                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd55:0x9 DW_TAG_variable
	.long	.Ldebug_loc110          # DW_AT_location
	.long	3123                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xd61:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string140        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0xd76:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd85:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd94:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	42                      # Abbrev [42] 0xda3:0xd DW_TAG_GNU_call_site
	.long	3135                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp570                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xdb1:0x73 DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	3620                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xdc4:0x5 DW_TAG_formal_parameter
	.long	3628                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xdc9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc117          # DW_AT_location
	.long	3639                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xdd2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc114          # DW_AT_location
	.long	3650                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xddb:0x9 DW_TAG_variable
	.long	.Ldebug_loc115          # DW_AT_location
	.long	3661                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xde4:0x9 DW_TAG_variable
	.long	.Ldebug_loc116          # DW_AT_location
	.long	3672                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xded:0x9 DW_TAG_variable
	.long	.Ldebug_loc118          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xdf6:0x5 DW_TAG_variable
	.long	3694                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xdfb:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp585                # DW_AT_low_pc
	.long	.Ltmp588-.Ltmp585       # DW_AT_high_pc
	.byte	8                       # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xe0f:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xe14:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xe19:0x9 DW_TAG_variable
	.long	.Ldebug_loc119          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0xe24:0x56 DW_TAG_subprogram
	.long	.Linfo_string66         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0xe2c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string63         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xe37:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xe42:0xb DW_TAG_formal_parameter
	.long	.Linfo_string59         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe4d:0xb DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe58:0xb DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	5                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe63:0xb DW_TAG_variable
	.long	.Linfo_string65         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe6e:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xe7a:0x12c DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string141        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0xe8f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xe9c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0xeab:0x95 DW_TAG_lexical_block
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Ltmp616-.Lfunc_begin13 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xeb8:0xf DW_TAG_variable
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xec7:0x78 DW_TAG_inlined_subroutine
	.long	3620                    # DW_AT_abstract_origin
	.quad	.Ltmp598                # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp598       # DW_AT_high_pc
	.byte	8                       # DW_AT_call_file
	.byte	30                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xedb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc122          # DW_AT_location
	.long	3628                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xee4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc123          # DW_AT_location
	.long	3639                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xeed:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc124          # DW_AT_location
	.long	3650                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xef6:0x9 DW_TAG_variable
	.long	.Ldebug_loc125          # DW_AT_location
	.long	3661                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xeff:0x9 DW_TAG_variable
	.long	.Ldebug_loc126          # DW_AT_location
	.long	3672                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf08:0x9 DW_TAG_variable
	.long	.Ldebug_loc127          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xf11:0x5 DW_TAG_variable
	.long	3694                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xf16:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp613                # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp613       # DW_AT_high_pc
	.byte	8                       # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xf2a:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xf2f:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf34:0x9 DW_TAG_variable
	.long	.Ldebug_loc128          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xf40:0x65 DW_TAG_lexical_block
	.quad	.Ltmp617                # DW_AT_low_pc
	.long	.Ltmp643-.Ltmp617       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xf4d:0xf DW_TAG_variable
	.long	.Ldebug_loc129          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0xf5c:0x48 DW_TAG_inlined_subroutine
	.long	3620                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges11        # DW_AT_ranges
	.byte	8                       # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xf68:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc133          # DW_AT_location
	.long	3628                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xf71:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc132          # DW_AT_location
	.long	3639                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xf7a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc131          # DW_AT_location
	.long	3650                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf83:0x9 DW_TAG_variable
	.long	.Ldebug_loc130          # DW_AT_location
	.long	3661                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf8c:0x9 DW_TAG_variable
	.long	.Ldebug_loc134          # DW_AT_location
	.long	3672                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf95:0x9 DW_TAG_variable
	.long	.Ldebug_loc135          # DW_AT_location
	.long	3683                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xf9e:0x5 DW_TAG_variable
	.long	3694                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xfa6:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string142        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0xfbb:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc136          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfca:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc137          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfd9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc138          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	42                      # Abbrev [42] 0xfe8:0xd DW_TAG_GNU_call_site
	.long	3706                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp648                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xff6:0x24 DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	1035                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1009:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1010:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc139          # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x101a:0x40 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	4186                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x102d:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	4194                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1034:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	4205                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x103b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	4216                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1042:0x9 DW_TAG_variable
	.long	.Ldebug_loc140          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x104b:0x9 DW_TAG_variable
	.long	.Ldebug_loc141          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1054:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x105a:0x4b DW_TAG_subprogram
	.long	.Linfo_string68         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1062:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x106d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string69         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1078:0xb DW_TAG_formal_parameter
	.long	.Linfo_string70         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1083:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x108e:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1099:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x10a5:0x5 DW_TAG_pointer_type
	.long	978                     # DW_AT_type
	.byte	25                      # Abbrev [25] 0x10aa:0x40 DW_TAG_subprogram
	.long	.Linfo_string71         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x10b2:0xb DW_TAG_formal_parameter
	.long	.Linfo_string69         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x10bd:0xb DW_TAG_formal_parameter
	.long	.Linfo_string70         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x10c8:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x10d3:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x10de:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x10ea:0x28f DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string143        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x1103:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1110:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc142          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x111f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc143          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x112e:0x159 DW_TAG_lexical_block
	.quad	.Ltmp660                # DW_AT_low_pc
	.long	.Ltmp683-.Ltmp660       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x113b:0xf DW_TAG_variable
	.long	.Ldebug_loc144          # DW_AT_location
	.long	.Linfo_string187        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x114a:0xf DW_TAG_variable
	.long	.Ldebug_loc145          # DW_AT_location
	.long	.Linfo_string188        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1159:0xf DW_TAG_variable
	.long	.Ldebug_loc149          # DW_AT_location
	.long	.Linfo_string189        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x1168:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges12        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	77                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1174:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc148          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x117d:0x9 DW_TAG_variable
	.long	.Ldebug_loc146          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1186:0x9 DW_TAG_variable
	.long	.Ldebug_loc147          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x118f:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1195:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges13        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	78                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x11a1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc151          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11aa:0x9 DW_TAG_variable
	.long	.Ldebug_loc150          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11b3:0x9 DW_TAG_variable
	.long	.Ldebug_loc152          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x11bc:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x11c2:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges14        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	79                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x11ce:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc154          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11d7:0x9 DW_TAG_variable
	.long	.Ldebug_loc153          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11e0:0x9 DW_TAG_variable
	.long	.Ldebug_loc155          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x11e9:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x11ef:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges15        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	80                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x11fb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc158          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1204:0x9 DW_TAG_variable
	.long	.Ldebug_loc156          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x120d:0x9 DW_TAG_variable
	.long	.Ldebug_loc157          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1216:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x121c:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp676                # DW_AT_low_pc
	.long	.Ltmp679-.Ltmp676       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	81                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1230:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc159          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1239:0x9 DW_TAG_variable
	.long	.Ldebug_loc160          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1242:0x9 DW_TAG_variable
	.long	.Ldebug_loc161          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x124b:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1251:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp679                # DW_AT_low_pc
	.long	.Ltmp682-.Ltmp679       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	82                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1265:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc163          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x126e:0x9 DW_TAG_variable
	.long	.Ldebug_loc162          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1277:0x9 DW_TAG_variable
	.long	.Ldebug_loc164          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1280:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x1287:0xbb DW_TAG_lexical_block
	.quad	.Ltmp686                # DW_AT_low_pc
	.long	.Ltmp700-.Ltmp686       # DW_AT_high_pc
	.byte	24                      # Abbrev [24] 0x1294:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x129f:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp686                # DW_AT_low_pc
	.long	.Ltmp691-.Ltmp686       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	94                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x12b3:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x12b8:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12bd:0x9 DW_TAG_variable
	.long	.Ldebug_loc165          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12c6:0x9 DW_TAG_variable
	.long	.Ldebug_loc166          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x12cf:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x12d5:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp691                # DW_AT_low_pc
	.long	.Ltmp695-.Ltmp691       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	95                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x12e9:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x12ee:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12f3:0x9 DW_TAG_variable
	.long	.Ldebug_loc167          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12fc:0x9 DW_TAG_variable
	.long	.Ldebug_loc168          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1305:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x130b:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp695                # DW_AT_low_pc
	.long	.Ltmp700-.Ltmp695       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	96                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x131f:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1324:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1329:0x9 DW_TAG_variable
	.long	.Ldebug_loc169          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1332:0x9 DW_TAG_variable
	.long	.Ldebug_loc170          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x133b:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1342:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp701                # DW_AT_low_pc
	.long	.Ltmp706-.Ltmp701       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	99                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1356:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x135b:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1360:0x9 DW_TAG_variable
	.long	.Ldebug_loc171          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1369:0x9 DW_TAG_variable
	.long	.Ldebug_loc172          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1372:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1379:0x39 DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	4266                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x138c:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	4274                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1393:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x139a:0x9 DW_TAG_variable
	.long	.Ldebug_loc173          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x13a3:0x9 DW_TAG_variable
	.long	.Ldebug_loc174          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x13ac:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x13b2:0x65 DW_TAG_subprogram
	.long	.Linfo_string72         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x13be:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x13c9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x13d4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x13df:0xb DW_TAG_formal_parameter
	.long	.Linfo_string73         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x13ea:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x13f5:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1400:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x140b:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x1417:0x485 DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string144        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x1430:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x143d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc175          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x144c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc176          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x145b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc177          # DW_AT_location
	.long	.Linfo_string73         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x146a:0x328 DW_TAG_lexical_block
	.quad	.Ltmp718                # DW_AT_low_pc
	.long	.Ltmp765-.Ltmp718       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x1477:0xf DW_TAG_variable
	.long	.Ldebug_loc178          # DW_AT_location
	.long	.Linfo_string56         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	164                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1486:0xf DW_TAG_variable
	.long	.Ldebug_loc179          # DW_AT_location
	.long	.Linfo_string187        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1495:0xf DW_TAG_variable
	.long	.Ldebug_loc180          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	165                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14a4:0xf DW_TAG_variable
	.long	.Ldebug_loc184          # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	166                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14b3:0xf DW_TAG_variable
	.long	.Ldebug_loc191          # DW_AT_location
	.long	.Linfo_string121        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	171                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14c2:0xf DW_TAG_variable
	.long	.Ldebug_loc192          # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	172                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14d1:0xf DW_TAG_variable
	.long	.Ldebug_loc196          # DW_AT_location
	.long	.Linfo_string120        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	173                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14e0:0xf DW_TAG_variable
	.long	.Ldebug_loc203          # DW_AT_location
	.long	.Linfo_string87         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	178                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14ef:0xf DW_TAG_variable
	.long	.Ldebug_loc206          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	180                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x14fe:0xf DW_TAG_variable
	.long	.Ldebug_loc208          # DW_AT_location
	.long	.Linfo_string118        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	179                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x150d:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges16        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	167                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1519:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc183          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1522:0x9 DW_TAG_variable
	.long	.Ldebug_loc181          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x152b:0x9 DW_TAG_variable
	.long	.Ldebug_loc182          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1534:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x153a:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges17        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	168                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1546:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc186          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x154f:0x9 DW_TAG_variable
	.long	.Ldebug_loc185          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1558:0x9 DW_TAG_variable
	.long	.Ldebug_loc187          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1561:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1567:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp728                # DW_AT_low_pc
	.long	.Ltmp730-.Ltmp728       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	169                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x157b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc188          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1584:0x9 DW_TAG_variable
	.long	.Ldebug_loc189          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x158d:0x9 DW_TAG_variable
	.long	.Ldebug_loc190          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1596:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x159c:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp734                # DW_AT_low_pc
	.long	.Ltmp737-.Ltmp734       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	174                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x15b0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc195          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15b9:0x9 DW_TAG_variable
	.long	.Ldebug_loc193          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15c2:0x9 DW_TAG_variable
	.long	.Ldebug_loc194          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x15cb:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x15d1:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp737                # DW_AT_low_pc
	.long	.Ltmp740-.Ltmp737       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	175                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x15e5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc198          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15ee:0x9 DW_TAG_variable
	.long	.Ldebug_loc197          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15f7:0x9 DW_TAG_variable
	.long	.Ldebug_loc199          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1600:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1606:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp740                # DW_AT_low_pc
	.long	.Ltmp742-.Ltmp740       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	176                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x161a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc200          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1623:0x9 DW_TAG_variable
	.long	.Ldebug_loc201          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x162c:0x9 DW_TAG_variable
	.long	.Ldebug_loc202          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1635:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x163b:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges18        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	181                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1647:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc205          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1650:0x9 DW_TAG_variable
	.long	.Ldebug_loc204          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1659:0x9 DW_TAG_variable
	.long	.Ldebug_loc207          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1662:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1668:0x2d DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges19        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	182                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1674:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc210          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x167d:0x9 DW_TAG_variable
	.long	.Ldebug_loc209          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1686:0x9 DW_TAG_variable
	.long	.Ldebug_loc211          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x168f:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1695:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp753                # DW_AT_low_pc
	.long	.Ltmp755-.Ltmp753       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	183                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x16a9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc212          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16b2:0x9 DW_TAG_variable
	.long	.Ldebug_loc213          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16bb:0x9 DW_TAG_variable
	.long	.Ldebug_loc214          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x16c4:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x16ca:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp755                # DW_AT_low_pc
	.long	.Ltmp758-.Ltmp755       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	185                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x16de:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc217          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16e7:0x9 DW_TAG_variable
	.long	.Ldebug_loc215          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16f0:0x9 DW_TAG_variable
	.long	.Ldebug_loc216          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x16f9:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x16ff:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp758                # DW_AT_low_pc
	.long	.Ltmp760-.Ltmp758       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	186                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1713:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc219          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x171c:0x9 DW_TAG_variable
	.long	.Ldebug_loc218          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1725:0x9 DW_TAG_variable
	.long	.Ldebug_loc220          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x172e:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1734:0x35 DW_TAG_inlined_subroutine
	.long	4186                    # DW_AT_abstract_origin
	.quad	.Ltmp760                # DW_AT_low_pc
	.long	.Ltmp763-.Ltmp760       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	187                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1748:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc222          # DW_AT_location
	.long	4194                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1751:0x9 DW_TAG_variable
	.long	.Ldebug_loc221          # DW_AT_location
	.long	4238                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x175a:0x9 DW_TAG_variable
	.long	.Ldebug_loc223          # DW_AT_location
	.long	4227                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1763:0x5 DW_TAG_variable
	.long	4249                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1769:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp763                # DW_AT_low_pc
	.long	.Ltmp765-.Ltmp763       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	189                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x177d:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1782:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1787:0x9 DW_TAG_variable
	.long	.Ldebug_loc224          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1792:0x109 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges20        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	193                     # DW_AT_call_line
	.byte	12                      # DW_AT_call_column
	.byte	38                      # Abbrev [38] 0x179e:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	5054                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x17a5:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	5065                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x17ac:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	5076                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x17b3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc225          # DW_AT_location
	.long	5087                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc228          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17c5:0x9 DW_TAG_variable
	.long	.Ldebug_loc229          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17ce:0x9 DW_TAG_variable
	.long	.Ldebug_loc230          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17d7:0x9 DW_TAG_variable
	.long	.Ldebug_loc233          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x17e0:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp769                # DW_AT_low_pc
	.long	.Ltmp774-.Ltmp769       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x17f4:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x17f9:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17fe:0x9 DW_TAG_variable
	.long	.Ldebug_loc226          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1807:0x9 DW_TAG_variable
	.long	.Ldebug_loc227          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1810:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1816:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp779                # DW_AT_low_pc
	.long	.Ltmp781-.Ltmp779       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x182a:0x9 DW_TAG_variable
	.long	.Ldebug_loc231          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1833:0x9 DW_TAG_variable
	.long	.Ldebug_loc232          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x183c:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1842:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp781                # DW_AT_low_pc
	.long	.Ltmp784-.Ltmp781       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x1856:0x9 DW_TAG_variable
	.long	.Ldebug_loc234          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x185f:0x9 DW_TAG_variable
	.long	.Ldebug_loc235          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1868:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x186e:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp784                # DW_AT_low_pc
	.long	.Ltmp786-.Ltmp784       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x1882:0x9 DW_TAG_variable
	.long	.Ldebug_loc236          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x188b:0x9 DW_TAG_variable
	.long	.Ldebug_loc237          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1894:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x189c:0x110 DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	5042                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x18af:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	5054                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x18b6:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	5065                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x18bd:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	5076                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x18c4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc238          # DW_AT_location
	.long	5087                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x18cd:0x9 DW_TAG_variable
	.long	.Ldebug_loc241          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x18d6:0x9 DW_TAG_variable
	.long	.Ldebug_loc242          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x18df:0x9 DW_TAG_variable
	.long	.Ldebug_loc243          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x18e8:0x9 DW_TAG_variable
	.long	.Ldebug_loc246          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x18f1:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp800                # DW_AT_low_pc
	.long	.Ltmp806-.Ltmp800       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1905:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x190a:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x190f:0x9 DW_TAG_variable
	.long	.Ldebug_loc239          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1918:0x9 DW_TAG_variable
	.long	.Ldebug_loc240          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1921:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1927:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp811                # DW_AT_low_pc
	.long	.Ltmp813-.Ltmp811       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x193b:0x9 DW_TAG_variable
	.long	.Ldebug_loc244          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1944:0x9 DW_TAG_variable
	.long	.Ldebug_loc245          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x194d:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1953:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp813                # DW_AT_low_pc
	.long	.Ltmp816-.Ltmp813       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x1967:0x9 DW_TAG_variable
	.long	.Ldebug_loc247          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1970:0x9 DW_TAG_variable
	.long	.Ldebug_loc248          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1979:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x197f:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp816                # DW_AT_low_pc
	.long	.Ltmp819-.Ltmp816       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x1993:0x9 DW_TAG_variable
	.long	.Ldebug_loc249          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x199c:0x9 DW_TAG_variable
	.long	.Ldebug_loc250          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x19a5:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x19ac:0x27 DW_TAG_subprogram
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string145        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x19c5:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string25         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x19d3:0x6d DW_TAG_subprogram
	.quad	.Lfunc_begin22          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	6720                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x19e6:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	6728                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x19ed:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc251          # DW_AT_location
	.long	6739                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x19f6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc252          # DW_AT_location
	.long	6750                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x19ff:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	6761                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1a06:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	6772                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a0d:0x9 DW_TAG_variable
	.long	.Ldebug_loc253          # DW_AT_location
	.long	6805                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a16:0x9 DW_TAG_variable
	.long	.Ldebug_loc254          # DW_AT_location
	.long	6783                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a1f:0x9 DW_TAG_variable
	.long	.Ldebug_loc255          # DW_AT_location
	.long	6794                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1a28:0x17 DW_TAG_lexical_block
	.quad	.Ltmp837                # DW_AT_low_pc
	.long	.Ltmp840-.Ltmp837       # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1a35:0x9 DW_TAG_variable
	.long	.Ldebug_loc256          # DW_AT_location
	.long	6817                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1a40:0x6e DW_TAG_subprogram
	.long	.Linfo_string74         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1a48:0xb DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1a53:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1a5e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1a69:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1a74:0xb DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1a7f:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1a8a:0xb DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1a95:0xb DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1aa0:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x1aa1:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x1aae:0xef DW_TAG_subprogram
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string146        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1ac3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc257          # DW_AT_location
	.long	.Linfo_string56         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1ad2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc258          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1ae1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc259          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1af0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc260          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1aff:0xf DW_TAG_variable
	.long	.Ldebug_loc261          # DW_AT_location
	.long	.Linfo_string50         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x1b0e:0x74 DW_TAG_inlined_subroutine
	.long	6720                    # DW_AT_abstract_origin
	.quad	.Ltmp917                # DW_AT_low_pc
	.long	.Ltmp990-.Ltmp917       # DW_AT_high_pc
	.byte	22                      # DW_AT_call_file
	.byte	52                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1b22:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc268          # DW_AT_location
	.long	6728                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1b2b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc267          # DW_AT_location
	.long	6739                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1b34:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc269          # DW_AT_location
	.long	6750                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1b3d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc266          # DW_AT_location
	.long	6761                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1b46:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc265          # DW_AT_location
	.long	6772                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1b4f:0x9 DW_TAG_variable
	.long	.Ldebug_loc262          # DW_AT_location
	.long	6783                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1b58:0x9 DW_TAG_variable
	.long	.Ldebug_loc263          # DW_AT_location
	.long	6794                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1b61:0x9 DW_TAG_variable
	.long	.Ldebug_loc264          # DW_AT_location
	.long	6805                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1b6a:0x17 DW_TAG_lexical_block
	.quad	.Ltmp922                # DW_AT_low_pc
	.long	.Ltmp925-.Ltmp922       # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1b77:0x9 DW_TAG_variable
	.long	.Ldebug_loc270          # DW_AT_location
	.long	6817                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1b82:0xd DW_TAG_GNU_call_site
	.long	6830                    # DW_AT_abstract_origin
	.quad	.Ltmp915                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1b8f:0xd DW_TAG_GNU_call_site
	.long	6830                    # DW_AT_abstract_origin
	.quad	.Ltmp916                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x1b9d:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin24          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string147        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1bb2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc271          # DW_AT_location
	.long	.Linfo_string56         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1bc1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc272          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1bd0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc273          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1bdf:0xf DW_TAG_variable
	.long	.Ldebug_loc274          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x1bee:0xd DW_TAG_GNU_call_site
	.long	6830                    # DW_AT_abstract_origin
	.quad	.Ltmp996                # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x1bfb:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1000               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1c09:0x4f DW_TAG_subprogram
	.quad	.Lfunc_begin25          # DW_AT_low_pc
	.long	.Lfunc_end25-.Lfunc_begin25 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	7256                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1c1c:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	7264                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1c23:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc275          # DW_AT_location
	.long	7275                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1c2c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc276          # DW_AT_location
	.long	7286                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1c35:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	7297                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c3c:0x9 DW_TAG_variable
	.long	.Ldebug_loc277          # DW_AT_location
	.long	7330                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c45:0x9 DW_TAG_variable
	.long	.Ldebug_loc278          # DW_AT_location
	.long	7308                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c4e:0x9 DW_TAG_variable
	.long	.Ldebug_loc279          # DW_AT_location
	.long	7319                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1c58:0x56 DW_TAG_subprogram
	.long	.Linfo_string77         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1c60:0xb DW_TAG_formal_parameter
	.long	.Linfo_string56         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1c6b:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1c76:0xb DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1c81:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1c8c:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1c97:0xb DW_TAG_variable
	.long	.Linfo_string75         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ca2:0xb DW_TAG_variable
	.long	.Linfo_string76         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x1cae:0xc0 DW_TAG_subprogram
	.quad	.Lfunc_begin26          # DW_AT_low_pc
	.long	.Lfunc_end26-.Lfunc_begin26 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string148        # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1cc3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc280          # DW_AT_location
	.long	.Linfo_string56         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1cd2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc281          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1ce1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc282          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x1cf0:0xf DW_TAG_variable
	.long	.Ldebug_loc283          # DW_AT_location
	.long	.Linfo_string50         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x1cff:0x54 DW_TAG_inlined_subroutine
	.long	7256                    # DW_AT_abstract_origin
	.quad	.Ltmp1079               # DW_AT_low_pc
	.long	.Ltmp1146-.Ltmp1079     # DW_AT_high_pc
	.byte	11                      # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1d13:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc289          # DW_AT_location
	.long	7264                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d1c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc288          # DW_AT_location
	.long	7275                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d25:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc290          # DW_AT_location
	.long	7286                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d2e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc287          # DW_AT_location
	.long	7297                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d37:0x9 DW_TAG_variable
	.long	.Ldebug_loc284          # DW_AT_location
	.long	7308                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d40:0x9 DW_TAG_variable
	.long	.Ldebug_loc285          # DW_AT_location
	.long	7319                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d49:0x9 DW_TAG_variable
	.long	.Ldebug_loc286          # DW_AT_location
	.long	7330                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1d53:0xd DW_TAG_GNU_call_site
	.long	7342                    # DW_AT_abstract_origin
	.quad	.Ltmp1078               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1d60:0xd DW_TAG_GNU_call_site
	.long	7342                    # DW_AT_abstract_origin
	.quad	.Ltmp1079               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1d6e:0xb7 DW_TAG_subprogram
	.quad	.Lfunc_begin27          # DW_AT_low_pc
	.long	.Lfunc_end27-.Lfunc_begin27 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	7717                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d81:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc291          # DW_AT_location
	.long	7729                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d8a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc292          # DW_AT_location
	.long	7740                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d93:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc293          # DW_AT_location
	.long	7751                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d9c:0x9 DW_TAG_variable
	.long	.Ldebug_loc294          # DW_AT_location
	.long	7762                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1da5:0x9 DW_TAG_variable
	.long	.Ldebug_loc295          # DW_AT_location
	.long	7773                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1dae:0x9 DW_TAG_variable
	.long	.Ldebug_loc296          # DW_AT_location
	.long	7784                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1db7:0x38 DW_TAG_lexical_block
	.quad	.Ltmp1155               # DW_AT_low_pc
	.long	.Ltmp1184-.Ltmp1155     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1dc4:0x9 DW_TAG_variable
	.long	.Ldebug_loc297          # DW_AT_location
	.long	7796                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x1dcd:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges21        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x1dd2:0x9 DW_TAG_variable
	.long	.Ldebug_loc298          # DW_AT_location
	.long	7808                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ddb:0x9 DW_TAG_variable
	.long	.Ldebug_loc299          # DW_AT_location
	.long	7819                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1de4:0x9 DW_TAG_variable
	.long	.Ldebug_loc300          # DW_AT_location
	.long	7830                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1def:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp1184               # DW_AT_low_pc
	.long	.Ltmp1186-.Ltmp1184     # DW_AT_high_pc
	.byte	10                      # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1e03:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1e08:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1e0d:0x9 DW_TAG_variable
	.long	.Ldebug_loc301          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1e17:0xd DW_TAG_GNU_call_site
	.long	5143                    # DW_AT_abstract_origin
	.quad	.Ltmp1150               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x1e25:0x7f DW_TAG_subprogram
	.long	.Linfo_string78         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1e31:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1e3c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1e47:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e52:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e5d:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e68:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1e73:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x1e74:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1e7f:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x1e80:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e8b:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e96:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1ea4:0x40 DW_TAG_subprogram
	.long	.Linfo_string80         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1eac:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1eb7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ec2:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ecd:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ed8:0xb DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x1ee4:0x15c DW_TAG_subprogram
	.quad	.Lfunc_begin28          # DW_AT_low_pc
	.long	.Lfunc_end28-.Lfunc_begin28 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string149        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1ef9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc302          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1f08:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc303          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1f17:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc304          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x1f26:0xb8 DW_TAG_lexical_block
	.long	.Ldebug_ranges24        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x1f2b:0xf DW_TAG_variable
	.long	.Ldebug_loc321          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x1f3a:0xa3 DW_TAG_inlined_subroutine
	.long	7717                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges22        # DW_AT_ranges
	.byte	10                      # DW_AT_call_file
	.byte	35                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1f46:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc305          # DW_AT_location
	.long	7729                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1f4f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc306          # DW_AT_location
	.long	7740                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1f58:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc307          # DW_AT_location
	.long	7751                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f61:0x9 DW_TAG_variable
	.long	.Ldebug_loc308          # DW_AT_location
	.long	7762                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f6a:0x9 DW_TAG_variable
	.long	.Ldebug_loc309          # DW_AT_location
	.long	7773                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f73:0x9 DW_TAG_variable
	.long	.Ldebug_loc315          # DW_AT_location
	.long	7784                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1f7c:0x38 DW_TAG_lexical_block
	.quad	.Ltmp1219               # DW_AT_low_pc
	.long	.Ltmp1247-.Ltmp1219     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1f89:0x9 DW_TAG_variable
	.long	.Ldebug_loc316          # DW_AT_location
	.long	7796                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x1f92:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges23        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x1f97:0x9 DW_TAG_variable
	.long	.Ldebug_loc317          # DW_AT_location
	.long	7808                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1fa0:0x9 DW_TAG_variable
	.long	.Ldebug_loc318          # DW_AT_location
	.long	7819                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1fa9:0x9 DW_TAG_variable
	.long	.Ldebug_loc319          # DW_AT_location
	.long	7830                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1fb4:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp1247               # DW_AT_low_pc
	.long	.Ltmp1249-.Ltmp1247     # DW_AT_high_pc
	.byte	10                      # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1fc8:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1fcd:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1fd2:0x9 DW_TAG_variable
	.long	.Ldebug_loc320          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1fde:0x3a DW_TAG_inlined_subroutine
	.long	7844                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges25        # DW_AT_ranges
	.byte	10                      # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1fea:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc311          # DW_AT_location
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1ff3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc312          # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ffc:0x9 DW_TAG_variable
	.long	.Ldebug_loc310          # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2005:0x9 DW_TAG_variable
	.long	.Ldebug_loc313          # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x200e:0x9 DW_TAG_variable
	.long	.Ldebug_loc314          # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x2018:0xd DW_TAG_GNU_call_site
	.long	5143                    # DW_AT_abstract_origin
	.quad	.Ltmp1196               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2025:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
	.quad	.Ltmp1250               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2032:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1255               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2040:0xc1 DW_TAG_subprogram
	.quad	.Lfunc_begin29          # DW_AT_low_pc
	.long	.Lfunc_end29-.Lfunc_begin29 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8449                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2053:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	8457                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x205a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc322          # DW_AT_location
	.long	8468                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2063:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	8479                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x206a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	8490                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2071:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	8501                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2078:0x9 DW_TAG_variable
	.long	.Ldebug_loc323          # DW_AT_location
	.long	8556                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2081:0x9 DW_TAG_variable
	.long	.Ldebug_loc324          # DW_AT_location
	.long	8567                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x208a:0x9 DW_TAG_variable
	.long	.Ldebug_loc325          # DW_AT_location
	.long	8578                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2093:0x9 DW_TAG_variable
	.long	.Ldebug_loc326          # DW_AT_location
	.long	8534                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x209c:0x9 DW_TAG_variable
	.long	.Ldebug_loc327          # DW_AT_location
	.long	8523                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20a5:0x9 DW_TAG_variable
	.long	.Ldebug_loc328          # DW_AT_location
	.long	8512                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20ae:0x9 DW_TAG_variable
	.long	.Ldebug_loc329          # DW_AT_location
	.long	8589                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20b7:0x9 DW_TAG_variable
	.long	.Ldebug_loc330          # DW_AT_location
	.long	8545                    # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x20c0:0x20 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges26        # DW_AT_ranges
	.byte	23                      # DW_AT_call_file
	.byte	73                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x20cc:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x20d1:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20d6:0x9 DW_TAG_variable
	.long	.Ldebug_loc331          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x20e0:0x20 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges27        # DW_AT_ranges
	.byte	23                      # DW_AT_call_file
	.byte	74                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x20ec:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x20f1:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20f6:0x9 DW_TAG_variable
	.long	.Ldebug_loc332          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x2101:0x98 DW_TAG_subprogram
	.long	.Linfo_string81         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x2109:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2114:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x211f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x212a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string82         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2135:0xb DW_TAG_formal_parameter
	.long	.Linfo_string83         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2140:0xb DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x214b:0xb DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2156:0xb DW_TAG_variable
	.long	.Linfo_string86         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2161:0xb DW_TAG_variable
	.long	.Linfo_string87         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x216c:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2177:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2182:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x218d:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2199:0x141 DW_TAG_subprogram
	.quad	.Lfunc_begin30          # DW_AT_low_pc
	.long	.Lfunc_end30-.Lfunc_begin30 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string150        # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x21ae:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc333          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x21bd:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc334          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x21cc:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc335          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x21db:0xd7 DW_TAG_lexical_block
	.long	.Ldebug_ranges29        # DW_AT_ranges
	.byte	24                      # Abbrev [24] 0x21e0:0xb DW_TAG_variable
	.long	.Linfo_string86         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x21eb:0xb DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x21f6:0xbb DW_TAG_inlined_subroutine
	.long	8449                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges28        # DW_AT_ranges
	.byte	23                      # DW_AT_call_file
	.byte	89                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x2202:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc341          # DW_AT_location
	.long	8457                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x220b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc340          # DW_AT_location
	.long	8468                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2214:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc339          # DW_AT_location
	.long	8479                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x221d:0x9 DW_TAG_variable
	.long	.Ldebug_loc336          # DW_AT_location
	.long	8512                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2226:0x9 DW_TAG_variable
	.long	.Ldebug_loc337          # DW_AT_location
	.long	8523                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x222f:0x9 DW_TAG_variable
	.long	.Ldebug_loc338          # DW_AT_location
	.long	8534                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2238:0x9 DW_TAG_variable
	.long	.Ldebug_loc342          # DW_AT_location
	.long	8545                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2241:0x9 DW_TAG_variable
	.long	.Ldebug_loc345          # DW_AT_location
	.long	8556                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x224a:0x9 DW_TAG_variable
	.long	.Ldebug_loc346          # DW_AT_location
	.long	8567                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2253:0x9 DW_TAG_variable
	.long	.Ldebug_loc347          # DW_AT_location
	.long	8578                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x225c:0x9 DW_TAG_variable
	.long	.Ldebug_loc348          # DW_AT_location
	.long	8589                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2265:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp1313               # DW_AT_low_pc
	.long	.Ltmp1315-.Ltmp1313     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	73                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2279:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x227e:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2283:0x9 DW_TAG_variable
	.long	.Ldebug_loc343          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x228d:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp1315               # DW_AT_low_pc
	.long	.Ltmp1317-.Ltmp1315     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	74                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x22a1:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x22a6:0x9 DW_TAG_variable
	.long	.Ldebug_loc344          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x22b2:0xd DW_TAG_GNU_call_site
	.long	8601                    # DW_AT_abstract_origin
	.quad	.Ltmp1318               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x22bf:0xd DW_TAG_GNU_call_site
	.long	8601                    # DW_AT_abstract_origin
	.quad	.Ltmp1319               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x22cc:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1348               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x22da:0x23 DW_TAG_subprogram
	.long	.Linfo_string14         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	8957                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x22e6:0xb DW_TAG_formal_parameter
	.long	.Linfo_string90         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x22f1:0xb DW_TAG_variable
	.long	.Linfo_string91         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	17                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x22fd:0xb DW_TAG_typedef
	.long	8968                    # DW_AT_type
	.long	.Linfo_string89         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x2308:0xb DW_TAG_typedef
	.long	171                     # DW_AT_type
	.long	.Linfo_string88         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.byte	22                      # Abbrev [22] 0x2313:0x44 DW_TAG_subprogram
	.long	.Linfo_string17         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	8957                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x231f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x232a:0xb DW_TAG_variable
	.long	.Linfo_string92         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2335:0xb DW_TAG_variable
	.long	.Linfo_string93         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2340:0xb DW_TAG_variable
	.long	.Linfo_string94         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x234b:0xb DW_TAG_variable
	.long	.Linfo_string95         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2357:0x106 DW_TAG_subprogram
	.quad	.Lfunc_begin31          # DW_AT_low_pc
	.long	.Lfunc_end31-.Lfunc_begin31 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	9401                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x236a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	9409                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2371:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc349          # DW_AT_location
	.long	9420                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x237a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc350          # DW_AT_location
	.long	9431                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2383:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	9442                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x238a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	9453                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2391:0x5 DW_TAG_variable
	.long	9486                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2396:0x9 DW_TAG_variable
	.long	.Ldebug_loc351          # DW_AT_location
	.long	9475                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x239f:0x9 DW_TAG_variable
	.long	.Ldebug_loc353          # DW_AT_location
	.long	9464                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x23a8:0x9 DW_TAG_variable
	.long	.Ldebug_loc360          # DW_AT_location
	.long	9497                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x23b1:0x85 DW_TAG_lexical_block
	.long	.Ldebug_ranges31        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x23b6:0x9 DW_TAG_variable
	.long	.Ldebug_loc352          # DW_AT_location
	.long	9509                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x23bf:0x76 DW_TAG_lexical_block
	.long	.Ldebug_ranges30        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x23c4:0x9 DW_TAG_variable
	.long	.Ldebug_loc354          # DW_AT_location
	.long	9521                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x23cd:0x5 DW_TAG_variable
	.long	9532                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x23d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc358          # DW_AT_location
	.long	9543                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x23db:0x59 DW_TAG_inlined_subroutine
	.long	8922                    # DW_AT_abstract_origin
	.quad	.Ltmp1355               # DW_AT_low_pc
	.long	.Ltmp1360-.Ltmp1355     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x23ef:0x5 DW_TAG_formal_parameter
	.long	8934                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x23f4:0x5 DW_TAG_variable
	.long	8945                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x23f9:0x3a DW_TAG_inlined_subroutine
	.long	8979                    # DW_AT_abstract_origin
	.quad	.Ltmp1356               # DW_AT_low_pc
	.long	.Ltmp1360-.Ltmp1356     # DW_AT_high_pc
	.byte	24                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x240d:0x5 DW_TAG_formal_parameter
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2412:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2417:0x9 DW_TAG_variable
	.long	.Ldebug_loc355          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2420:0x9 DW_TAG_variable
	.long	.Ldebug_loc356          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2429:0x9 DW_TAG_variable
	.long	.Ldebug_loc357          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x2436:0x26 DW_TAG_lexical_block
	.quad	.Ltmp1367               # DW_AT_low_pc
	.long	.Ltmp1386-.Ltmp1367     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2443:0x9 DW_TAG_variable
	.long	.Ldebug_loc361          # DW_AT_location
	.long	9557                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x244c:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges32        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x2451:0x9 DW_TAG_variable
	.long	.Ldebug_loc359          # DW_AT_location
	.long	9569                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x245d:0x5c DW_TAG_subprogram
	.quad	.Lfunc_begin32          # DW_AT_low_pc
	.long	.Lfunc_end32-.Lfunc_begin32 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8922                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2470:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc362          # DW_AT_location
	.long	8934                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2479:0x5 DW_TAG_variable
	.long	8945                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x247e:0x3a DW_TAG_inlined_subroutine
	.long	8979                    # DW_AT_abstract_origin
	.quad	.Ltmp1388               # DW_AT_low_pc
	.long	.Ltmp1392-.Ltmp1388     # DW_AT_high_pc
	.byte	24                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2492:0x5 DW_TAG_formal_parameter
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2497:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x249c:0x9 DW_TAG_variable
	.long	.Ldebug_loc363          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x24a5:0x9 DW_TAG_variable
	.long	.Ldebug_loc364          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x24ae:0x9 DW_TAG_variable
	.long	.Ldebug_loc365          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x24b9:0xb6 DW_TAG_subprogram
	.long	.Linfo_string96         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x24c1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x24cc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x24d7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x24e2:0xb DW_TAG_formal_parameter
	.long	.Linfo_string97         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x24ed:0xb DW_TAG_formal_parameter
	.long	.Linfo_string98         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x24f8:0xb DW_TAG_variable
	.long	.Linfo_string99         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2503:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x250e:0xb DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2519:0xb DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2524:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2525:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2530:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2531:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x253c:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2547:0xb DW_TAG_variable
	.long	.Linfo_string104        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x2554:0x1a DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2555:0xb DW_TAG_variable
	.long	.Linfo_string104        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2560:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2561:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x256f:0x23d DW_TAG_subprogram
	.quad	.Lfunc_begin33          # DW_AT_low_pc
	.long	.Lfunc_end33-.Lfunc_begin33 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string151        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2584:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc366          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2593:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc367          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x25a2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc368          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x25b1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc369          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x25c0:0x169 DW_TAG_lexical_block
	.long	.Ldebug_ranges37        # DW_AT_ranges
	.byte	28                      # Abbrev [28] 0x25c5:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	32
	.long	.Linfo_string100        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.long	21698                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x25d3:0xf DW_TAG_variable
	.long	.Ldebug_loc370          # DW_AT_location
	.long	.Linfo_string99         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x25e2:0xf DW_TAG_variable
	.long	.Ldebug_loc386          # DW_AT_location
	.long	.Linfo_string191        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x25f1:0xfd DW_TAG_inlined_subroutine
	.long	9401                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges33        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.byte	65                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x25fd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc373          # DW_AT_location
	.long	9409                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2606:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc372          # DW_AT_location
	.long	9420                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x260f:0x5 DW_TAG_formal_parameter
	.long	9431                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2614:0x5 DW_TAG_formal_parameter
	.long	9442                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2619:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc371          # DW_AT_location
	.long	9453                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2622:0x9 DW_TAG_variable
	.long	.Ldebug_loc374          # DW_AT_location
	.long	9464                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x262b:0x9 DW_TAG_variable
	.long	.Ldebug_loc376          # DW_AT_location
	.long	9475                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2634:0x5 DW_TAG_variable
	.long	9486                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2639:0x9 DW_TAG_variable
	.long	.Ldebug_loc382          # DW_AT_location
	.long	9497                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x2642:0x8d DW_TAG_lexical_block
	.quad	.Ltmp1404               # DW_AT_low_pc
	.long	.Ltmp1419-.Ltmp1404     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x264f:0x9 DW_TAG_variable
	.long	.Ldebug_loc375          # DW_AT_location
	.long	9509                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x2658:0x76 DW_TAG_lexical_block
	.long	.Ldebug_ranges34        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x265d:0x9 DW_TAG_variable
	.long	.Ldebug_loc377          # DW_AT_location
	.long	9521                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2666:0x5 DW_TAG_variable
	.long	9532                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x266b:0x9 DW_TAG_variable
	.long	.Ldebug_loc381          # DW_AT_location
	.long	9543                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2674:0x59 DW_TAG_inlined_subroutine
	.long	8922                    # DW_AT_abstract_origin
	.quad	.Ltmp1407               # DW_AT_low_pc
	.long	.Ltmp1412-.Ltmp1407     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2688:0x5 DW_TAG_formal_parameter
	.long	8934                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x268d:0x5 DW_TAG_variable
	.long	8945                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2692:0x3a DW_TAG_inlined_subroutine
	.long	8979                    # DW_AT_abstract_origin
	.quad	.Ltmp1408               # DW_AT_low_pc
	.long	.Ltmp1412-.Ltmp1408     # DW_AT_high_pc
	.byte	24                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x26a6:0x5 DW_TAG_formal_parameter
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x26ab:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x26b0:0x9 DW_TAG_variable
	.long	.Ldebug_loc378          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x26b9:0x9 DW_TAG_variable
	.long	.Ldebug_loc379          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x26c2:0x9 DW_TAG_variable
	.long	.Ldebug_loc380          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x26cf:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges36        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x26d4:0x9 DW_TAG_variable
	.long	.Ldebug_loc384          # DW_AT_location
	.long	9557                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x26dd:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges35        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x26e2:0x9 DW_TAG_variable
	.long	.Ldebug_loc383          # DW_AT_location
	.long	9569                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x26ee:0x3a DW_TAG_lexical_block
	.quad	.Ltmp1770               # DW_AT_low_pc
	.long	.Ltmp1789-.Ltmp1770     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x26fb:0xf DW_TAG_variable
	.long	.Ldebug_loc385          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x270a:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1770               # DW_AT_low_pc
	.long	.Ltmp1789-.Ltmp1770     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2717:0xf DW_TAG_variable
	.long	.Ldebug_loc387          # DW_AT_location
	.long	.Linfo_string192        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	70                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	42                      # Abbrev [42] 0x2729:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1421               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2736:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1773               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2743:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1775               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2750:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1777               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x275d:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1779               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x276a:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1781               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2777:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1783               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2784:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1785               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2791:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1787               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x279e:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1789               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x27ac:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin34          # DW_AT_low_pc
	.long	.Lfunc_end34-.Lfunc_begin34 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string152        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x27c1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc388          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x27d0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc389          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x27df:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc390          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x27ee:0xf DW_TAG_variable
	.long	.Ldebug_loc391          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x27fd:0xd DW_TAG_GNU_call_site
	.long	9583                    # DW_AT_abstract_origin
	.quad	.Ltmp1795               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x280a:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1799               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2818:0x15f DW_TAG_subprogram
	.quad	.Lfunc_begin35          # DW_AT_low_pc
	.long	.Lfunc_end35-.Lfunc_begin35 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string153        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x282d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc392          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x283c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc393          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x284b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc394          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x285a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc395          # DW_AT_location
	.long	.Linfo_string97         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2869:0xb DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2874:0xf5 DW_TAG_lexical_block
	.quad	.Ltmp1803               # DW_AT_low_pc
	.long	.Ltmp1865-.Ltmp1803     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2881:0xf DW_TAG_variable
	.long	.Ldebug_loc396          # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2890:0xd8 DW_TAG_lexical_block
	.quad	.Ltmp1806               # DW_AT_low_pc
	.long	.Ltmp1863-.Ltmp1806     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x289d:0xf DW_TAG_variable
	.long	.Ldebug_loc397          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x28ac:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x28b7:0xf DW_TAG_variable
	.long	.Ldebug_loc402          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x28c6:0x59 DW_TAG_inlined_subroutine
	.long	8922                    # DW_AT_abstract_origin
	.quad	.Ltmp1808               # DW_AT_low_pc
	.long	.Ltmp1813-.Ltmp1808     # DW_AT_high_pc
	.byte	26                      # DW_AT_call_file
	.byte	29                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x28da:0x5 DW_TAG_formal_parameter
	.long	8934                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x28df:0x5 DW_TAG_variable
	.long	8945                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x28e4:0x3a DW_TAG_inlined_subroutine
	.long	8979                    # DW_AT_abstract_origin
	.quad	.Ltmp1809               # DW_AT_low_pc
	.long	.Ltmp1813-.Ltmp1809     # DW_AT_high_pc
	.byte	24                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x28f8:0x5 DW_TAG_formal_parameter
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x28fd:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2902:0x9 DW_TAG_variable
	.long	.Ldebug_loc398          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x290b:0x9 DW_TAG_variable
	.long	.Ldebug_loc399          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2914:0x9 DW_TAG_variable
	.long	.Ldebug_loc400          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x291f:0x48 DW_TAG_lexical_block
	.long	.Ldebug_ranges39        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2924:0xf DW_TAG_variable
	.long	.Ldebug_loc401          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2933:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges38        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2938:0xf DW_TAG_variable
	.long	.Ldebug_loc403          # DW_AT_location
	.long	.Linfo_string25         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2947:0xf DW_TAG_variable
	.long	.Ldebug_loc404          # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2956:0xf DW_TAG_variable
	.long	.Ldebug_loc405          # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x2969:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
	.quad	.Ltmp1802               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2977:0x10b DW_TAG_subprogram
	.quad	.Lfunc_begin36          # DW_AT_low_pc
	.long	.Lfunc_end36-.Lfunc_begin36 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string154        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x298c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc406          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x299b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc407          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x29aa:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc408          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x29b9:0x39 DW_TAG_lexical_block
	.quad	.Ltmp1875               # DW_AT_low_pc
	.long	.Ltmp1886-.Ltmp1875     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x29c6:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string100        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	21698                   # DW_AT_type
	.byte	35                      # Abbrev [35] 0x29d4:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1877               # DW_AT_low_pc
	.long	.Ltmp1886-.Ltmp1877     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x29e1:0xf DW_TAG_variable
	.long	.Ldebug_loc409          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x29f2:0xd DW_TAG_GNU_call_site
	.long	10264                   # DW_AT_abstract_origin
	.quad	.Ltmp1876               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x29ff:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1877               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a0c:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1879               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a19:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1880               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a26:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1881               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a33:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1882               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a40:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1883               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a4d:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1884               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a5a:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1885               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a67:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
	.quad	.Ltmp1886               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2a74:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1890               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2a82:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin37          # DW_AT_low_pc
	.long	.Lfunc_end37-.Lfunc_begin37 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string155        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2a97:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc410          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2aa6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc411          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2ab5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc412          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	42                      # Abbrev [42] 0x2ac4:0xd DW_TAG_GNU_call_site
	.long	10615                   # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1892               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2ad2:0x14b DW_TAG_subprogram
	.quad	.Lfunc_begin38          # DW_AT_low_pc
	.long	.Lfunc_end38-.Lfunc_begin38 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string156        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x2ae7:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2af4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc413          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2b03:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc414          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	41                      # Abbrev [41] 0x2b12:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	.Linfo_string97         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	41                      # Abbrev [41] 0x2b1f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	.Linfo_string98         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2b2c:0xb DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2b37:0xf DW_TAG_variable
	.long	.Ldebug_loc415          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2b46:0xf DW_TAG_variable
	.long	.Ldebug_loc417          # DW_AT_location
	.long	.Linfo_string99         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2b55:0xf DW_TAG_variable
	.long	.Ldebug_loc425          # DW_AT_location
	.long	.Linfo_string101        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2b64:0x7e DW_TAG_lexical_block
	.long	.Ldebug_ranges41        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2b69:0xf DW_TAG_variable
	.long	.Ldebug_loc416          # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2b78:0x69 DW_TAG_lexical_block
	.long	.Ldebug_ranges40        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2b7d:0xf DW_TAG_variable
	.long	.Ldebug_loc418          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2b8c:0xb DW_TAG_variable
	.long	.Linfo_string103        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	583                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2b97:0xf DW_TAG_variable
	.long	.Ldebug_loc422          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x2ba6:0x3a DW_TAG_inlined_subroutine
	.long	8979                    # DW_AT_abstract_origin
	.quad	.Ltmp1899               # DW_AT_low_pc
	.long	.Ltmp1903-.Ltmp1899     # DW_AT_high_pc
	.byte	6                       # DW_AT_call_file
	.byte	30                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2bba:0x5 DW_TAG_formal_parameter
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2bbf:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2bc4:0x9 DW_TAG_variable
	.long	.Ldebug_loc419          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2bcd:0x9 DW_TAG_variable
	.long	.Ldebug_loc420          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2bd6:0x9 DW_TAG_variable
	.long	.Ldebug_loc421          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x2be2:0x3a DW_TAG_lexical_block
	.quad	.Ltmp1909               # DW_AT_low_pc
	.long	.Ltmp1999-.Ltmp1909     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2bef:0xf DW_TAG_variable
	.long	.Ldebug_loc423          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2bfe:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1909               # DW_AT_low_pc
	.long	.Ltmp1999-.Ltmp1909     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2c0b:0xf DW_TAG_variable
	.long	.Ldebug_loc424          # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2c1d:0x3d DW_TAG_subprogram
	.quad	.Lfunc_begin39          # DW_AT_low_pc
	.long	.Lfunc_end39-.Lfunc_begin39 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8979                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2c30:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc426          # DW_AT_location
	.long	8991                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2c39:0x5 DW_TAG_variable
	.long	9002                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2c3e:0x9 DW_TAG_variable
	.long	.Ldebug_loc427          # DW_AT_location
	.long	9013                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2c47:0x9 DW_TAG_variable
	.long	.Ldebug_loc428          # DW_AT_location
	.long	9024                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2c50:0x9 DW_TAG_variable
	.long	.Ldebug_loc429          # DW_AT_location
	.long	9035                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2c5a:0x121 DW_TAG_subprogram
	.quad	.Lfunc_begin40          # DW_AT_low_pc
	.long	.Lfunc_end40-.Lfunc_begin40 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string157        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2c6f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc430          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2c7e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc431          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2c8d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc432          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2c9c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc433          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2cab:0x74 DW_TAG_lexical_block
	.quad	.Ltmp2012               # DW_AT_low_pc
	.long	.Ltmp2026-.Ltmp2012     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2cb8:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string100        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	21710                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2cc6:0xf DW_TAG_variable
	.long	.Ldebug_loc434          # DW_AT_location
	.long	.Linfo_string99         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2cd5:0xf DW_TAG_variable
	.long	.Ldebug_loc436          # DW_AT_location
	.long	.Linfo_string191        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2ce4:0x3a DW_TAG_lexical_block
	.quad	.Ltmp2016               # DW_AT_low_pc
	.long	.Ltmp2026-.Ltmp2016     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2cf1:0xf DW_TAG_variable
	.long	.Ldebug_loc435          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2d00:0x1d DW_TAG_lexical_block
	.quad	.Ltmp2016               # DW_AT_low_pc
	.long	.Ltmp2026-.Ltmp2016     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2d0d:0xf DW_TAG_variable
	.long	.Ldebug_loc437          # DW_AT_location
	.long	.Linfo_string192        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x2d1f:0xd DW_TAG_GNU_call_site
	.long	10962                   # DW_AT_abstract_origin
	.quad	.Ltmp2016               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d2c:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2018               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d39:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2020               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d46:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2022               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d53:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2024               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d60:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2026               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2d6d:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2030               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2d7b:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin41          # DW_AT_low_pc
	.long	.Lfunc_end41-.Lfunc_begin41 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string158        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2d90:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc438          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2d9f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc439          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2dae:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc440          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2dbd:0xf DW_TAG_variable
	.long	.Ldebug_loc441          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	73                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x2dcc:0xd DW_TAG_GNU_call_site
	.long	11354                   # DW_AT_abstract_origin
	.quad	.Ltmp2035               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2dd9:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2039               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2de7:0xc1 DW_TAG_subprogram
	.quad	.Lfunc_begin42          # DW_AT_low_pc
	.long	.Lfunc_end42-.Lfunc_begin42 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	11944                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2dfa:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	11952                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2e01:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc442          # DW_AT_location
	.long	11963                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2e0a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	11974                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2e11:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	11985                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2e18:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	11996                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e1f:0x9 DW_TAG_variable
	.long	.Ldebug_loc445          # DW_AT_location
	.long	12018                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e28:0x9 DW_TAG_variable
	.long	.Ldebug_loc446          # DW_AT_location
	.long	12007                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2e31:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Lfunc_begin42          # DW_AT_low_pc
	.long	.Ltmp2044-.Lfunc_begin42 # DW_AT_high_pc
	.byte	27                      # DW_AT_call_file
	.byte	33                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2e45:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2e4a:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e4f:0x9 DW_TAG_variable
	.long	.Ldebug_loc443          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e58:0x9 DW_TAG_variable
	.long	.Ldebug_loc444          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2e61:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x2e67:0x40 DW_TAG_lexical_block
	.quad	.Ltmp2044               # DW_AT_low_pc
	.long	.Ltmp2059-.Ltmp2044     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2e74:0x9 DW_TAG_variable
	.long	.Ldebug_loc447          # DW_AT_location
	.long	12030                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x2e7d:0x29 DW_TAG_lexical_block
	.quad	.Ltmp2048               # DW_AT_low_pc
	.long	.Ltmp2057-.Ltmp2048     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2e8a:0x9 DW_TAG_variable
	.long	.Ldebug_loc448          # DW_AT_location
	.long	12042                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e93:0x9 DW_TAG_variable
	.long	.Ldebug_loc449          # DW_AT_location
	.long	12053                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e9c:0x9 DW_TAG_variable
	.long	.Ldebug_loc450          # DW_AT_location
	.long	12064                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x2ea8:0x86 DW_TAG_subprogram
	.long	.Linfo_string105        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x2eb0:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2ebb:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2ec6:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2ed1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string106        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2edc:0xb DW_TAG_formal_parameter
	.long	.Linfo_string107        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2ee7:0xb DW_TAG_variable
	.long	.Linfo_string108        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2ef2:0xb DW_TAG_variable
	.long	.Linfo_string109        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2efd:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2efe:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2f09:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2f0a:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2f15:0xb DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2f20:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2f2e:0x136 DW_TAG_subprogram
	.quad	.Lfunc_begin43          # DW_AT_low_pc
	.long	.Lfunc_end43-.Lfunc_begin43 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string159        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2f43:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc451          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2f52:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc452          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2f61:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc453          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2f70:0xcc DW_TAG_lexical_block
	.long	.Ldebug_ranges44        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2f75:0xf DW_TAG_variable
	.long	.Ldebug_loc457          # DW_AT_location
	.long	.Linfo_string107        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2f84:0xf DW_TAG_variable
	.long	.Ldebug_loc461          # DW_AT_location
	.long	.Linfo_string106        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x2f93:0xa8 DW_TAG_inlined_subroutine
	.long	11944                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges42        # DW_AT_ranges
	.byte	27                      # DW_AT_call_file
	.byte	89                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x2f9f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc458          # DW_AT_location
	.long	11952                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2fa8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc459          # DW_AT_location
	.long	11963                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2fb1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc460          # DW_AT_location
	.long	11974                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2fba:0x9 DW_TAG_variable
	.long	.Ldebug_loc455          # DW_AT_location
	.long	12007                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2fc3:0x9 DW_TAG_variable
	.long	.Ldebug_loc456          # DW_AT_location
	.long	12018                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2fcc:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2075               # DW_AT_low_pc
	.long	.Ltmp2080-.Ltmp2075     # DW_AT_high_pc
	.byte	27                      # DW_AT_call_file
	.byte	33                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2fe0:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2fe5:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2fea:0x9 DW_TAG_variable
	.long	.Ldebug_loc462          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2ff3:0x9 DW_TAG_variable
	.long	.Ldebug_loc463          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2ffc:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x3002:0x38 DW_TAG_lexical_block
	.long	.Ldebug_ranges43        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3007:0x9 DW_TAG_variable
	.long	.Ldebug_loc454          # DW_AT_location
	.long	12030                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x3010:0x29 DW_TAG_lexical_block
	.quad	.Ltmp2085               # DW_AT_low_pc
	.long	.Ltmp2093-.Ltmp2085     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x301d:0x9 DW_TAG_variable
	.long	.Ldebug_loc464          # DW_AT_location
	.long	12042                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3026:0x9 DW_TAG_variable
	.long	.Ldebug_loc465          # DW_AT_location
	.long	12053                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x302f:0x9 DW_TAG_variable
	.long	.Ldebug_loc466          # DW_AT_location
	.long	12064                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x303c:0xd DW_TAG_GNU_call_site
	.long	12078                   # DW_AT_abstract_origin
	.quad	.Ltmp2067               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x3049:0xd DW_TAG_GNU_call_site
	.long	12078                   # DW_AT_abstract_origin
	.quad	.Ltmp2069               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x3056:0xd DW_TAG_GNU_call_site
	.long	7908                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2099               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3064:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin44          # DW_AT_low_pc
	.long	.Lfunc_end44-.Lfunc_begin44 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string160        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3079:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc467          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3088:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc468          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3097:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc469          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	42                      # Abbrev [42] 0x30a6:0xd DW_TAG_GNU_call_site
	.long	12078                   # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2101               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x30b4:0x253 DW_TAG_subprogram
	.quad	.Lfunc_begin45          # DW_AT_low_pc
	.long	.Lfunc_end45-.Lfunc_begin45 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string161        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x30cd:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string45         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x30da:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc470          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x30e9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc471          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	45                      # Abbrev [45] 0x30f8:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string73         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3104:0xb DW_TAG_variable
	.long	.Linfo_string194        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x310f:0xf DW_TAG_variable
	.long	.Ldebug_loc486          # DW_AT_location
	.long	.Linfo_string195        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x311e:0xf DW_TAG_variable
	.long	.Ldebug_loc487          # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x312d:0xf DW_TAG_variable
	.long	.Ldebug_loc488          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x313c:0xf DW_TAG_variable
	.long	.Ldebug_loc489          # DW_AT_location
	.long	.Linfo_string79         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x314b:0x102 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges45        # DW_AT_ranges
	.byte	28                      # DW_AT_call_file
	.byte	26                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3157:0x5 DW_TAG_formal_parameter
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x315c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc472          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3165:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc473          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x316e:0x9 DW_TAG_variable
	.long	.Ldebug_loc476          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3177:0x9 DW_TAG_variable
	.long	.Ldebug_loc477          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3180:0x9 DW_TAG_variable
	.long	.Ldebug_loc478          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3189:0x9 DW_TAG_variable
	.long	.Ldebug_loc481          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3192:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2105               # DW_AT_low_pc
	.long	.Ltmp2110-.Ltmp2105     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x31a6:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x31ab:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31b0:0x9 DW_TAG_variable
	.long	.Ldebug_loc474          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31b9:0x9 DW_TAG_variable
	.long	.Ldebug_loc475          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x31c2:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x31c8:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2117               # DW_AT_low_pc
	.long	.Ltmp2119-.Ltmp2117     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x31dc:0x9 DW_TAG_variable
	.long	.Ldebug_loc479          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31e5:0x9 DW_TAG_variable
	.long	.Ldebug_loc480          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x31ee:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x31f4:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2119               # DW_AT_low_pc
	.long	.Ltmp2122-.Ltmp2119     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3208:0x9 DW_TAG_variable
	.long	.Ldebug_loc482          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3211:0x9 DW_TAG_variable
	.long	.Ldebug_loc483          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x321a:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3220:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2122               # DW_AT_low_pc
	.long	.Ltmp2125-.Ltmp2122     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3234:0x9 DW_TAG_variable
	.long	.Ldebug_loc484          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x323d:0x9 DW_TAG_variable
	.long	.Ldebug_loc485          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3246:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x324d:0x6e DW_TAG_lexical_block
	.quad	.Ltmp2136               # DW_AT_low_pc
	.long	.Ltmp2160-.Ltmp2136     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x325a:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	119
	.byte	32
	.long	.Linfo_string193        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	21722                   # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3268:0xb DW_TAG_variable
	.long	.Linfo_string196        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x3273:0xf DW_TAG_variable
	.long	.Ldebug_loc490          # DW_AT_location
	.long	.Linfo_string197        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	567                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3282:0x38 DW_TAG_lexical_block
	.long	.Ldebug_ranges47        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x3287:0xf DW_TAG_variable
	.long	.Ldebug_loc491          # DW_AT_location
	.long	.Linfo_string84         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3296:0x23 DW_TAG_lexical_block
	.long	.Ldebug_ranges46        # DW_AT_ranges
	.byte	28                      # Abbrev [28] 0x329b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	119
	.byte	24
	.long	.Linfo_string25         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	444                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x32a9:0xf DW_TAG_variable
	.long	.Ldebug_loc492          # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x32bb:0x23 DW_TAG_lexical_block
	.long	.Ldebug_ranges48        # DW_AT_ranges
	.byte	28                      # Abbrev [28] 0x32c0:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	119
	.byte	32
	.long	.Linfo_string25         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	444                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x32ce:0xf DW_TAG_variable
	.long	.Ldebug_loc493          # DW_AT_location
	.long	.Linfo_string67         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x32de:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2184               # DW_AT_low_pc
	.long	.Ltmp2186-.Ltmp2184     # DW_AT_high_pc
	.byte	28                      # DW_AT_call_file
	.byte	77                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x32f2:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x32f7:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x32fc:0x9 DW_TAG_variable
	.long	.Ldebug_loc494          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3307:0x7a DW_TAG_subprogram
	.quad	.Lfunc_begin46          # DW_AT_low_pc
	.long	.Lfunc_end46-.Lfunc_begin46 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string162        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x331c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc495          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x332b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc496          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x333a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc497          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	81                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x3349:0x1d DW_TAG_lexical_block
	.quad	.Ltmp2193               # DW_AT_low_pc
	.long	.Ltmp2198-.Ltmp2193     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x3356:0xf DW_TAG_variable
	.long	.Ldebug_loc498          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3366:0xd DW_TAG_GNU_call_site
	.long	12468                   # DW_AT_abstract_origin
	.quad	.Ltmp2194               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x3373:0xd DW_TAG_GNU_call_site
	.long	13063                   # DW_AT_abstract_origin
	.quad	.Ltmp2196               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x3381:0xbb DW_TAG_subprogram
	.quad	.Lfunc_begin47          # DW_AT_low_pc
	.long	.Lfunc_end47-.Lfunc_begin47 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	13372                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3394:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc499          # DW_AT_location
	.long	13380                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x339d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc500          # DW_AT_location
	.long	13391                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33a6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc501          # DW_AT_location
	.long	13402                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33af:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc502          # DW_AT_location
	.long	13413                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33b8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc503          # DW_AT_location
	.long	13424                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33c1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc504          # DW_AT_location
	.long	13435                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x33ca:0x9 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\300"
	.long	13446                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x33d3:0x9 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\310"
	.long	13457                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x33dc:0x9 DW_TAG_formal_parameter
	.byte	3                       # DW_AT_location
	.byte	145
	.asciz	"\320"
	.long	13468                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33e5:0x9 DW_TAG_variable
	.long	.Ldebug_loc505          # DW_AT_location
	.long	13501                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33ee:0x9 DW_TAG_variable
	.long	.Ldebug_loc506          # DW_AT_location
	.long	13512                   # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x33f7:0x5 DW_TAG_variable
	.long	13490                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33fc:0x9 DW_TAG_variable
	.long	.Ldebug_loc507          # DW_AT_location
	.long	13479                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3405:0x9 DW_TAG_variable
	.long	.Ldebug_loc508          # DW_AT_location
	.long	13523                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x340e:0x9 DW_TAG_variable
	.long	.Ldebug_loc509          # DW_AT_location
	.long	13534                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x3417:0x17 DW_TAG_lexical_block
	.quad	.Ltmp2211               # DW_AT_low_pc
	.long	.Ltmp2231-.Ltmp2211     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x3424:0x9 DW_TAG_variable
	.long	.Ldebug_loc510          # DW_AT_location
	.long	13546                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x342e:0xd DW_TAG_GNU_call_site
	.long	4330                    # DW_AT_abstract_origin
	.quad	.Ltmp2205               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x343c:0xbb DW_TAG_subprogram
	.long	.Linfo_string110        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3444:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x344f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string98         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x345a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string111        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3465:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3470:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x347b:0xb DW_TAG_formal_parameter
	.long	.Linfo_string112        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3486:0xb DW_TAG_formal_parameter
	.long	.Linfo_string113        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3491:0xb DW_TAG_formal_parameter
	.long	.Linfo_string114        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	23                      # Abbrev [23] 0x349c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string115        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	4261                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34a7:0xb DW_TAG_variable
	.long	.Linfo_string116        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34b2:0xb DW_TAG_variable
	.long	.Linfo_string117        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34bd:0xb DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34c8:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34d3:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x34de:0xb DW_TAG_variable
	.long	.Linfo_string118        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x34e9:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x34ea:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	78                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x34f7:0x165 DW_TAG_subprogram
	.quad	.Lfunc_begin48          # DW_AT_low_pc
	.long	.Lfunc_end48-.Lfunc_begin48 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string163        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x350c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc511          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x351b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc512          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x352a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc513          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3539:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc514          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3548:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc515          # DW_AT_location
	.long	.Linfo_string112        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3557:0xb3 DW_TAG_lexical_block
	.long	.Ldebug_ranges51        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x355c:0xf DW_TAG_variable
	.long	.Ldebug_loc529          # DW_AT_location
	.long	.Linfo_string114        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x356b:0xb DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x3576:0xf DW_TAG_variable
	.long	.Ldebug_loc530          # DW_AT_location
	.long	.Linfo_string113        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3585:0x84 DW_TAG_inlined_subroutine
	.long	13372                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges49        # DW_AT_ranges
	.byte	7                       # DW_AT_call_file
	.byte	89                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3591:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc516          # DW_AT_location
	.long	13380                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x359a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc517          # DW_AT_location
	.long	13391                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x35a3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc518          # DW_AT_location
	.long	13402                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x35ac:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc519          # DW_AT_location
	.long	13413                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x35b5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc520          # DW_AT_location
	.long	13424                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x35be:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc521          # DW_AT_location
	.long	13435                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35c7:0x9 DW_TAG_variable
	.long	.Ldebug_loc522          # DW_AT_location
	.long	13479                   # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x35d0:0x5 DW_TAG_variable
	.long	13490                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35d5:0x9 DW_TAG_variable
	.long	.Ldebug_loc523          # DW_AT_location
	.long	13501                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35de:0x9 DW_TAG_variable
	.long	.Ldebug_loc524          # DW_AT_location
	.long	13512                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35e7:0x9 DW_TAG_variable
	.long	.Ldebug_loc525          # DW_AT_location
	.long	13523                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35f0:0x9 DW_TAG_variable
	.long	.Ldebug_loc526          # DW_AT_location
	.long	13534                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x35f9:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges50        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x35fe:0x9 DW_TAG_variable
	.long	.Ldebug_loc527          # DW_AT_location
	.long	13546                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x360a:0x1d DW_TAG_lexical_block
	.quad	.Ltmp2258               # DW_AT_low_pc
	.long	.Ltmp2265-.Ltmp2258     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x3617:0xf DW_TAG_variable
	.long	.Ldebug_loc528          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	94                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3627:0xd DW_TAG_GNU_call_site
	.long	4330                    # DW_AT_abstract_origin
	.quad	.Ltmp2240               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x3634:0xd DW_TAG_GNU_call_site
	.long	4330                    # DW_AT_abstract_origin
	.quad	.Ltmp2258               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x3641:0xd DW_TAG_GNU_call_site
	.long	13559                   # DW_AT_abstract_origin
	.quad	.Ltmp2286               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x364e:0xd DW_TAG_GNU_call_site
	.long	13916                   # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2290               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x365c:0x12c DW_TAG_subprogram
	.quad	.Lfunc_begin49          # DW_AT_low_pc
	.long	.Lfunc_end49-.Lfunc_begin49 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string18         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3671:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc531          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3680:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc532          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x368f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc533          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x369e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc534          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x36ad:0xb3 DW_TAG_lexical_block
	.long	.Ldebug_ranges54        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x36b2:0xf DW_TAG_variable
	.long	.Ldebug_loc545          # DW_AT_location
	.long	.Linfo_string114        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x36c1:0xb DW_TAG_variable
	.long	.Linfo_string115        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x36cc:0xf DW_TAG_variable
	.long	.Ldebug_loc546          # DW_AT_location
	.long	.Linfo_string113        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x36db:0x84 DW_TAG_inlined_subroutine
	.long	13372                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges52        # DW_AT_ranges
	.byte	7                       # DW_AT_call_file
	.byte	103                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x36e7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc544          # DW_AT_location
	.long	13380                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x36f0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc543          # DW_AT_location
	.long	13391                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x36f9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc542          # DW_AT_location
	.long	13402                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3702:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc541          # DW_AT_location
	.long	13413                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x370b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc540          # DW_AT_location
	.long	13424                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3714:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc539          # DW_AT_location
	.long	13435                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x371d:0x9 DW_TAG_variable
	.long	.Ldebug_loc536          # DW_AT_location
	.long	13512                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3726:0x9 DW_TAG_variable
	.long	.Ldebug_loc537          # DW_AT_location
	.long	13534                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x372f:0x9 DW_TAG_variable
	.long	.Ldebug_loc538          # DW_AT_location
	.long	13479                   # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3738:0x5 DW_TAG_variable
	.long	13490                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x373d:0x9 DW_TAG_variable
	.long	.Ldebug_loc547          # DW_AT_location
	.long	13501                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3746:0x9 DW_TAG_variable
	.long	.Ldebug_loc548          # DW_AT_location
	.long	13523                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x374f:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges53        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3754:0x9 DW_TAG_variable
	.long	.Ldebug_loc535          # DW_AT_location
	.long	13546                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3760:0xd DW_TAG_GNU_call_site
	.long	13559                   # DW_AT_abstract_origin
	.quad	.Ltmp2298               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x376d:0xd DW_TAG_GNU_call_site
	.long	4330                    # DW_AT_abstract_origin
	.quad	.Ltmp2301               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x377a:0xd DW_TAG_GNU_call_site
	.long	4330                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2334               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3788:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin50          # DW_AT_low_pc
	.long	.Lfunc_end50-.Lfunc_begin50 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string164        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x379d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc549          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x37ac:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc550          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x37bb:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc551          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x37ca:0xf DW_TAG_variable
	.long	.Ldebug_loc552          # DW_AT_location
	.long	.Linfo_string98         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	113                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x37d9:0xd DW_TAG_GNU_call_site
	.long	13916                   # DW_AT_abstract_origin
	.quad	.Ltmp2343               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x37e6:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2347               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x37f4:0x1b5 DW_TAG_subprogram
	.quad	.Lfunc_begin51          # DW_AT_low_pc
	.long	.Lfunc_end51-.Lfunc_begin51 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	14761                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x3807:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	14773                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x380e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc553          # DW_AT_location
	.long	14784                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3817:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc554          # DW_AT_location
	.long	14795                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3820:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	14806                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3826:0x9 DW_TAG_variable
	.long	.Ldebug_loc571          # DW_AT_location
	.long	14817                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x382f:0x9 DW_TAG_variable
	.long	.Ldebug_loc572          # DW_AT_location
	.long	14828                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3838:0x106 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges55        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3844:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc555          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x384d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc556          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3856:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc557          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x385f:0x9 DW_TAG_variable
	.long	.Ldebug_loc560          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3868:0x9 DW_TAG_variable
	.long	.Ldebug_loc561          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3871:0x9 DW_TAG_variable
	.long	.Ldebug_loc562          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x387a:0x9 DW_TAG_variable
	.long	.Ldebug_loc565          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3883:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2350               # DW_AT_low_pc
	.long	.Ltmp2355-.Ltmp2350     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3897:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x389c:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38a1:0x9 DW_TAG_variable
	.long	.Ldebug_loc558          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38aa:0x9 DW_TAG_variable
	.long	.Ldebug_loc559          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x38b3:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x38b9:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2362               # DW_AT_low_pc
	.long	.Ltmp2364-.Ltmp2362     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x38cd:0x9 DW_TAG_variable
	.long	.Ldebug_loc563          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38d6:0x9 DW_TAG_variable
	.long	.Ldebug_loc564          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x38df:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x38e5:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2364               # DW_AT_low_pc
	.long	.Ltmp2367-.Ltmp2364     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x38f9:0x9 DW_TAG_variable
	.long	.Ldebug_loc566          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3902:0x9 DW_TAG_variable
	.long	.Ldebug_loc567          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x390b:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3911:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2367               # DW_AT_low_pc
	.long	.Ltmp2370-.Ltmp2367     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3925:0x9 DW_TAG_variable
	.long	.Ldebug_loc568          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x392e:0x9 DW_TAG_variable
	.long	.Ldebug_loc569          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3937:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x393e:0x42 DW_TAG_lexical_block
	.long	.Ldebug_ranges57        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3943:0x9 DW_TAG_variable
	.long	.Ldebug_loc570          # DW_AT_location
	.long	14840                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x394c:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges56        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3951:0x9 DW_TAG_variable
	.long	.Ldebug_loc573          # DW_AT_location
	.long	14852                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x395a:0x9 DW_TAG_variable
	.long	.Ldebug_loc574          # DW_AT_location
	.long	14863                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3963:0x9 DW_TAG_variable
	.long	.Ldebug_loc575          # DW_AT_location
	.long	14874                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x396c:0x9 DW_TAG_variable
	.long	.Ldebug_loc576          # DW_AT_location
	.long	14885                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3975:0x9 DW_TAG_variable
	.long	.Ldebug_loc577          # DW_AT_location
	.long	14896                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3980:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2408               # DW_AT_low_pc
	.long	.Ltmp2410-.Ltmp2408     # DW_AT_high_pc
	.byte	29                      # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3994:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3999:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x399e:0x9 DW_TAG_variable
	.long	.Ldebug_loc578          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x39a9:0x95 DW_TAG_subprogram
	.long	.Linfo_string119        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x39b5:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x39c0:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x39cb:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x39d6:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x39e1:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x39ec:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x39f7:0x46 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x39f8:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3a03:0x39 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3a04:0xb DW_TAG_variable
	.long	.Linfo_string120        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a0f:0xb DW_TAG_variable
	.long	.Linfo_string121        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a1a:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a25:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a30:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3a3e:0x248 DW_TAG_subprogram
	.quad	.Lfunc_begin52          # DW_AT_low_pc
	.long	.Lfunc_end52-.Lfunc_begin52 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string165        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3a53:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc579          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3a62:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc580          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3a71:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc581          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3a80:0x1be DW_TAG_lexical_block
	.long	.Ldebug_ranges62        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x3a85:0xf DW_TAG_variable
	.long	.Ldebug_loc591          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3a94:0x1a9 DW_TAG_inlined_subroutine
	.long	14761                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges58        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3aa0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc588          # DW_AT_location
	.long	14773                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3aa9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc587          # DW_AT_location
	.long	14784                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ab2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc586          # DW_AT_location
	.long	14795                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3abb:0x9 DW_TAG_variable
	.long	.Ldebug_loc585          # DW_AT_location
	.long	14806                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3ac4:0x9 DW_TAG_variable
	.long	.Ldebug_loc603          # DW_AT_location
	.long	14817                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3acd:0x9 DW_TAG_variable
	.long	.Ldebug_loc604          # DW_AT_location
	.long	14828                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3ad6:0x42 DW_TAG_lexical_block
	.long	.Ldebug_ranges60        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3adb:0x9 DW_TAG_variable
	.long	.Ldebug_loc602          # DW_AT_location
	.long	14840                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3ae4:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges59        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3ae9:0x9 DW_TAG_variable
	.long	.Ldebug_loc605          # DW_AT_location
	.long	14852                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3af2:0x9 DW_TAG_variable
	.long	.Ldebug_loc606          # DW_AT_location
	.long	14863                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3afb:0x9 DW_TAG_variable
	.long	.Ldebug_loc607          # DW_AT_location
	.long	14874                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b04:0x9 DW_TAG_variable
	.long	.Ldebug_loc608          # DW_AT_location
	.long	14885                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b0d:0x9 DW_TAG_variable
	.long	.Ldebug_loc609          # DW_AT_location
	.long	14896                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x3b18:0x101 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges61        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3b24:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc584          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b2d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc583          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b36:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc582          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b3f:0x9 DW_TAG_variable
	.long	.Ldebug_loc592          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b48:0x9 DW_TAG_variable
	.long	.Ldebug_loc593          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b51:0x9 DW_TAG_variable
	.long	.Ldebug_loc594          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b5a:0x9 DW_TAG_variable
	.long	.Ldebug_loc597          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3b63:0x31 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2417               # DW_AT_low_pc
	.long	.Ltmp2422-.Ltmp2417     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3b77:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b7c:0x9 DW_TAG_variable
	.long	.Ldebug_loc589          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b85:0x9 DW_TAG_variable
	.long	.Ldebug_loc590          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3b8e:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3b94:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2436               # DW_AT_low_pc
	.long	.Ltmp2438-.Ltmp2436     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3ba8:0x9 DW_TAG_variable
	.long	.Ldebug_loc595          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3bb1:0x9 DW_TAG_variable
	.long	.Ldebug_loc596          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3bba:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3bc0:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2438               # DW_AT_low_pc
	.long	.Ltmp2440-.Ltmp2438     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3bd4:0x9 DW_TAG_variable
	.long	.Ldebug_loc598          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3bdd:0x9 DW_TAG_variable
	.long	.Ldebug_loc599          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3be6:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3bec:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2440               # DW_AT_low_pc
	.long	.Ltmp2443-.Ltmp2440     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3c00:0x9 DW_TAG_variable
	.long	.Ldebug_loc600          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c09:0x9 DW_TAG_variable
	.long	.Ldebug_loc601          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3c12:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3c19:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2474               # DW_AT_low_pc
	.long	.Ltmp2476-.Ltmp2474     # DW_AT_high_pc
	.byte	29                      # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3c2d:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c32:0x9 DW_TAG_variable
	.long	.Ldebug_loc610          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x3c3e:0x3a DW_TAG_inlined_subroutine
	.long	7844                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges63        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	50                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3c4a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc612          # DW_AT_location
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3c53:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc613          # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c5c:0x9 DW_TAG_variable
	.long	.Ldebug_loc611          # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c65:0x9 DW_TAG_variable
	.long	.Ldebug_loc614          # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c6e:0x9 DW_TAG_variable
	.long	.Ldebug_loc615          # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3c78:0xd DW_TAG_GNU_call_site
	.long	14910                   # DW_AT_abstract_origin
	.quad	.Ltmp2424               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x3c86:0x191 DW_TAG_subprogram
	.quad	.Lfunc_begin53          # DW_AT_low_pc
	.long	.Lfunc_end53-.Lfunc_begin53 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	15895                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x3c99:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	15907                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ca0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc616          # DW_AT_location
	.long	15918                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ca9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc617          # DW_AT_location
	.long	15929                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3cb2:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	15940                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cb8:0x9 DW_TAG_variable
	.long	.Ldebug_loc633          # DW_AT_location
	.long	15951                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cc1:0x9 DW_TAG_variable
	.long	.Ldebug_loc635          # DW_AT_location
	.long	15962                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3cca:0x106 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges64        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3cd6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc618          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3cdf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc619          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ce8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc620          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cf1:0x9 DW_TAG_variable
	.long	.Ldebug_loc623          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cfa:0x9 DW_TAG_variable
	.long	.Ldebug_loc624          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d03:0x9 DW_TAG_variable
	.long	.Ldebug_loc625          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d0c:0x9 DW_TAG_variable
	.long	.Ldebug_loc628          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3d15:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2520               # DW_AT_low_pc
	.long	.Ltmp2525-.Ltmp2520     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3d29:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3d2e:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d33:0x9 DW_TAG_variable
	.long	.Ldebug_loc621          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d3c:0x9 DW_TAG_variable
	.long	.Ldebug_loc622          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d45:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3d4b:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2532               # DW_AT_low_pc
	.long	.Ltmp2534-.Ltmp2532     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3d5f:0x9 DW_TAG_variable
	.long	.Ldebug_loc626          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d68:0x9 DW_TAG_variable
	.long	.Ldebug_loc627          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d71:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3d77:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2534               # DW_AT_low_pc
	.long	.Ltmp2537-.Ltmp2534     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3d8b:0x9 DW_TAG_variable
	.long	.Ldebug_loc629          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d94:0x9 DW_TAG_variable
	.long	.Ldebug_loc630          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d9d:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3da3:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2537               # DW_AT_low_pc
	.long	.Ltmp2540-.Ltmp2537     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3db7:0x9 DW_TAG_variable
	.long	.Ldebug_loc631          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3dc0:0x9 DW_TAG_variable
	.long	.Ldebug_loc632          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3dc9:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x3dd0:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges66        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3dd5:0x9 DW_TAG_variable
	.long	.Ldebug_loc634          # DW_AT_location
	.long	15974                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3dde:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges65        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3de3:0x9 DW_TAG_variable
	.long	.Ldebug_loc636          # DW_AT_location
	.long	15986                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3dee:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2566               # DW_AT_low_pc
	.long	.Ltmp2568-.Ltmp2566     # DW_AT_high_pc
	.byte	30                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3e02:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3e07:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3e0c:0x9 DW_TAG_variable
	.long	.Ldebug_loc637          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x3e17:0x69 DW_TAG_subprogram
	.long	.Linfo_string122        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3e23:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3e2e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3e39:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e44:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e4f:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e5a:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3e65:0x1a DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3e66:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3e71:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3e72:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3e80:0x224 DW_TAG_subprogram
	.quad	.Lfunc_begin54          # DW_AT_low_pc
	.long	.Lfunc_end54-.Lfunc_begin54 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string166        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3e95:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc638          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3ea4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc639          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3eb3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc640          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3ec2:0x19a DW_TAG_lexical_block
	.long	.Ldebug_ranges71        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x3ec7:0xf DW_TAG_variable
	.long	.Ldebug_loc650          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3ed6:0x185 DW_TAG_inlined_subroutine
	.long	15895                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges67        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	44                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3ee2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc647          # DW_AT_location
	.long	15907                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3eeb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc646          # DW_AT_location
	.long	15918                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ef4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc645          # DW_AT_location
	.long	15929                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3efd:0x9 DW_TAG_variable
	.long	.Ldebug_loc644          # DW_AT_location
	.long	15940                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f06:0x9 DW_TAG_variable
	.long	.Ldebug_loc661          # DW_AT_location
	.long	15951                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f0f:0x9 DW_TAG_variable
	.long	.Ldebug_loc663          # DW_AT_location
	.long	15962                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3f18:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges69        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3f1d:0x9 DW_TAG_variable
	.long	.Ldebug_loc662          # DW_AT_location
	.long	15974                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3f26:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges68        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3f2b:0x9 DW_TAG_variable
	.long	.Ldebug_loc664          # DW_AT_location
	.long	15986                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x3f36:0x101 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges70        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3f42:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc643          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f4b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc642          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f54:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc641          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f5d:0x9 DW_TAG_variable
	.long	.Ldebug_loc651          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f66:0x9 DW_TAG_variable
	.long	.Ldebug_loc652          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f6f:0x9 DW_TAG_variable
	.long	.Ldebug_loc653          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f78:0x9 DW_TAG_variable
	.long	.Ldebug_loc656          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3f81:0x31 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2575               # DW_AT_low_pc
	.long	.Ltmp2580-.Ltmp2575     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3f95:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f9a:0x9 DW_TAG_variable
	.long	.Ldebug_loc648          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3fa3:0x9 DW_TAG_variable
	.long	.Ldebug_loc649          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3fac:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3fb2:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2594               # DW_AT_low_pc
	.long	.Ltmp2596-.Ltmp2594     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3fc6:0x9 DW_TAG_variable
	.long	.Ldebug_loc654          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3fcf:0x9 DW_TAG_variable
	.long	.Ldebug_loc655          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3fd8:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3fde:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2596               # DW_AT_low_pc
	.long	.Ltmp2599-.Ltmp2596     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3ff2:0x9 DW_TAG_variable
	.long	.Ldebug_loc657          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3ffb:0x9 DW_TAG_variable
	.long	.Ldebug_loc658          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4004:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x400a:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2599               # DW_AT_low_pc
	.long	.Ltmp2602-.Ltmp2599     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x401e:0x9 DW_TAG_variable
	.long	.Ldebug_loc659          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4027:0x9 DW_TAG_variable
	.long	.Ldebug_loc660          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4030:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4037:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2625               # DW_AT_low_pc
	.long	.Ltmp2627-.Ltmp2625     # DW_AT_high_pc
	.byte	30                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x404b:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4050:0x9 DW_TAG_variable
	.long	.Ldebug_loc665          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x405c:0x3a DW_TAG_inlined_subroutine
	.long	7844                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges72        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	48                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4068:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc667          # DW_AT_location
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4071:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc668          # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x407a:0x9 DW_TAG_variable
	.long	.Ldebug_loc666          # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4083:0x9 DW_TAG_variable
	.long	.Ldebug_loc669          # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x408c:0x9 DW_TAG_variable
	.long	.Ldebug_loc670          # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x4096:0xd DW_TAG_GNU_call_site
	.long	16000                   # DW_AT_abstract_origin
	.quad	.Ltmp2582               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x40a4:0x13e DW_TAG_subprogram
	.quad	.Lfunc_begin55          # DW_AT_low_pc
	.long	.Lfunc_end55-.Lfunc_begin55 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	16866                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x40b7:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	16878                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x40be:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	16889                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x40c5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc671          # DW_AT_location
	.long	16900                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x40ce:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	16911                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x40d4:0x9 DW_TAG_variable
	.long	.Ldebug_loc686          # DW_AT_location
	.long	16922                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x40dd:0x104 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges73        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	38                      # Abbrev [38] 0x40e9:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x40f0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc672          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x40f9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc673          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4102:0x9 DW_TAG_variable
	.long	.Ldebug_loc676          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x410b:0x9 DW_TAG_variable
	.long	.Ldebug_loc677          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4114:0x9 DW_TAG_variable
	.long	.Ldebug_loc678          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x411d:0x9 DW_TAG_variable
	.long	.Ldebug_loc681          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4126:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2671               # DW_AT_low_pc
	.long	.Ltmp2676-.Ltmp2671     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x413a:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x413f:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4144:0x9 DW_TAG_variable
	.long	.Ldebug_loc674          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x414d:0x9 DW_TAG_variable
	.long	.Ldebug_loc675          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4156:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x415c:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2684               # DW_AT_low_pc
	.long	.Ltmp2686-.Ltmp2684     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4170:0x9 DW_TAG_variable
	.long	.Ldebug_loc679          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4179:0x9 DW_TAG_variable
	.long	.Ldebug_loc680          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4182:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4188:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2686               # DW_AT_low_pc
	.long	.Ltmp2689-.Ltmp2686     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x419c:0x9 DW_TAG_variable
	.long	.Ldebug_loc682          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x41a5:0x9 DW_TAG_variable
	.long	.Ldebug_loc683          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x41ae:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x41b4:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2689               # DW_AT_low_pc
	.long	.Ltmp2692-.Ltmp2689     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x41c8:0x9 DW_TAG_variable
	.long	.Ldebug_loc684          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x41d1:0x9 DW_TAG_variable
	.long	.Ldebug_loc685          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x41da:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x41e2:0x44 DW_TAG_subprogram
	.long	.Linfo_string123        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x41ee:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x41f9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4204:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x420f:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x421a:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x4226:0x1da DW_TAG_subprogram
	.quad	.Lfunc_begin56          # DW_AT_low_pc
	.long	.Lfunc_end56-.Lfunc_begin56 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string167        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x423b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc687          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x424a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc688          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4259:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc689          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x4268:0x150 DW_TAG_lexical_block
	.long	.Ldebug_ranges76        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x426d:0xf DW_TAG_variable
	.long	.Ldebug_loc699          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x427c:0x13b DW_TAG_inlined_subroutine
	.long	16866                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges74        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	101                     # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4288:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc696          # DW_AT_location
	.long	16878                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4291:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc695          # DW_AT_location
	.long	16889                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x429a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc694          # DW_AT_location
	.long	16900                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42a3:0x9 DW_TAG_variable
	.long	.Ldebug_loc693          # DW_AT_location
	.long	16911                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42ac:0x9 DW_TAG_variable
	.long	.Ldebug_loc710          # DW_AT_location
	.long	16922                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x42b5:0x101 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges75        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x42c1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc692          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x42ca:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc691          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x42d3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc690          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42dc:0x9 DW_TAG_variable
	.long	.Ldebug_loc700          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42e5:0x9 DW_TAG_variable
	.long	.Ldebug_loc701          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42ee:0x9 DW_TAG_variable
	.long	.Ldebug_loc702          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x42f7:0x9 DW_TAG_variable
	.long	.Ldebug_loc705          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4300:0x31 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2710               # DW_AT_low_pc
	.long	.Ltmp2715-.Ltmp2710     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4314:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4319:0x9 DW_TAG_variable
	.long	.Ldebug_loc697          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4322:0x9 DW_TAG_variable
	.long	.Ldebug_loc698          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x432b:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4331:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2729               # DW_AT_low_pc
	.long	.Ltmp2731-.Ltmp2729     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4345:0x9 DW_TAG_variable
	.long	.Ldebug_loc703          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x434e:0x9 DW_TAG_variable
	.long	.Ldebug_loc704          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4357:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x435d:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2731               # DW_AT_low_pc
	.long	.Ltmp2734-.Ltmp2731     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4371:0x9 DW_TAG_variable
	.long	.Ldebug_loc706          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x437a:0x9 DW_TAG_variable
	.long	.Ldebug_loc707          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4383:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4389:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2734               # DW_AT_low_pc
	.long	.Ltmp2737-.Ltmp2734     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x439d:0x9 DW_TAG_variable
	.long	.Ldebug_loc708          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43a6:0x9 DW_TAG_variable
	.long	.Ldebug_loc709          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x43af:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x43b8:0x3a DW_TAG_inlined_subroutine
	.long	7844                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges77        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	105                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x43c4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc712          # DW_AT_location
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x43cd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc713          # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43d6:0x9 DW_TAG_variable
	.long	.Ldebug_loc711          # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43df:0x9 DW_TAG_variable
	.long	.Ldebug_loc714          # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43e8:0x9 DW_TAG_variable
	.long	.Ldebug_loc715          # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x43f2:0xd DW_TAG_GNU_call_site
	.long	16934                   # DW_AT_abstract_origin
	.quad	.Ltmp2717               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x4400:0x1ab DW_TAG_subprogram
	.quad	.Lfunc_begin57          # DW_AT_low_pc
	.long	.Lfunc_end57-.Lfunc_begin57 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	17835                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x4413:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	17847                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x441a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc716          # DW_AT_location
	.long	17858                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4423:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc717          # DW_AT_location
	.long	17869                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x442c:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	17880                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4432:0x9 DW_TAG_variable
	.long	.Ldebug_loc734          # DW_AT_location
	.long	17891                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x443b:0x9 DW_TAG_variable
	.long	.Ldebug_loc735          # DW_AT_location
	.long	17902                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4444:0x106 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges78        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4450:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc718          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4459:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc719          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4462:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc720          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x446b:0x9 DW_TAG_variable
	.long	.Ldebug_loc723          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4474:0x9 DW_TAG_variable
	.long	.Ldebug_loc724          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x447d:0x9 DW_TAG_variable
	.long	.Ldebug_loc725          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4486:0x9 DW_TAG_variable
	.long	.Ldebug_loc728          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x448f:0x36 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2794               # DW_AT_low_pc
	.long	.Ltmp2799-.Ltmp2794     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x44a3:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x44a8:0x5 DW_TAG_formal_parameter
	.long	4285                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44ad:0x9 DW_TAG_variable
	.long	.Ldebug_loc721          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44b6:0x9 DW_TAG_variable
	.long	.Ldebug_loc722          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x44bf:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x44c5:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2806               # DW_AT_low_pc
	.long	.Ltmp2808-.Ltmp2806     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x44d9:0x9 DW_TAG_variable
	.long	.Ldebug_loc726          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44e2:0x9 DW_TAG_variable
	.long	.Ldebug_loc727          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x44eb:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x44f1:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2808               # DW_AT_low_pc
	.long	.Ltmp2811-.Ltmp2808     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4505:0x9 DW_TAG_variable
	.long	.Ldebug_loc729          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x450e:0x9 DW_TAG_variable
	.long	.Ldebug_loc730          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4517:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x451d:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2811               # DW_AT_low_pc
	.long	.Ltmp2814-.Ltmp2811     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4531:0x9 DW_TAG_variable
	.long	.Ldebug_loc731          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x453a:0x9 DW_TAG_variable
	.long	.Ldebug_loc732          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4543:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x454a:0x38 DW_TAG_lexical_block
	.quad	.Ltmp2822               # DW_AT_low_pc
	.long	.Ltmp2851-.Ltmp2822     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4557:0x9 DW_TAG_variable
	.long	.Ldebug_loc733          # DW_AT_location
	.long	17914                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x4560:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges79        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x4565:0x9 DW_TAG_variable
	.long	.Ldebug_loc736          # DW_AT_location
	.long	17926                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x456e:0x9 DW_TAG_variable
	.long	.Ldebug_loc737          # DW_AT_location
	.long	17937                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4577:0x9 DW_TAG_variable
	.long	.Ldebug_loc738          # DW_AT_location
	.long	17948                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4582:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2851               # DW_AT_low_pc
	.long	.Ltmp2853-.Ltmp2851     # DW_AT_high_pc
	.byte	32                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4596:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x459b:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x45a0:0x9 DW_TAG_variable
	.long	.Ldebug_loc739          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x45ab:0x7f DW_TAG_subprogram
	.long	.Linfo_string124        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	978                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x45b7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x45c2:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x45cd:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x45d8:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x45e3:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x45ee:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x45f9:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x45fa:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4605:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4606:0xb DW_TAG_variable
	.long	.Linfo_string67         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4611:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x461c:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x462a:0x23e DW_TAG_subprogram
	.quad	.Lfunc_begin58          # DW_AT_low_pc
	.long	.Lfunc_end58-.Lfunc_begin58 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string168        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x463f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc740          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x464e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc741          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x465d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc742          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x466c:0x1b4 DW_TAG_lexical_block
	.long	.Ldebug_ranges83        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x4671:0xf DW_TAG_variable
	.long	.Ldebug_loc752          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4680:0x19f DW_TAG_inlined_subroutine
	.long	17835                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges80        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	44                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x468c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc749          # DW_AT_location
	.long	17847                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4695:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc748          # DW_AT_location
	.long	17858                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x469e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc747          # DW_AT_location
	.long	17869                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46a7:0x9 DW_TAG_variable
	.long	.Ldebug_loc746          # DW_AT_location
	.long	17880                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46b0:0x9 DW_TAG_variable
	.long	.Ldebug_loc764          # DW_AT_location
	.long	17891                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46b9:0x9 DW_TAG_variable
	.long	.Ldebug_loc765          # DW_AT_location
	.long	17902                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x46c2:0x101 DW_TAG_inlined_subroutine
	.long	5042                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges81        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x46ce:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc745          # DW_AT_location
	.long	5054                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x46d7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc744          # DW_AT_location
	.long	5065                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x46e0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc743          # DW_AT_location
	.long	5076                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc753          # DW_AT_location
	.long	5098                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46f2:0x9 DW_TAG_variable
	.long	.Ldebug_loc754          # DW_AT_location
	.long	5109                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x46fb:0x9 DW_TAG_variable
	.long	.Ldebug_loc755          # DW_AT_location
	.long	5120                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4704:0x9 DW_TAG_variable
	.long	.Ldebug_loc758          # DW_AT_location
	.long	5131                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x470d:0x31 DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2860               # DW_AT_low_pc
	.long	.Ltmp2865-.Ltmp2860     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4721:0x5 DW_TAG_formal_parameter
	.long	4274                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4726:0x9 DW_TAG_variable
	.long	.Ldebug_loc750          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x472f:0x9 DW_TAG_variable
	.long	.Ldebug_loc751          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4738:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x473e:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2879               # DW_AT_low_pc
	.long	.Ltmp2881-.Ltmp2879     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x4752:0x9 DW_TAG_variable
	.long	.Ldebug_loc756          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x475b:0x9 DW_TAG_variable
	.long	.Ldebug_loc757          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4764:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x476a:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2881               # DW_AT_low_pc
	.long	.Ltmp2883-.Ltmp2881     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x477e:0x9 DW_TAG_variable
	.long	.Ldebug_loc759          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4787:0x9 DW_TAG_variable
	.long	.Ldebug_loc760          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4790:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4796:0x2c DW_TAG_inlined_subroutine
	.long	4266                    # DW_AT_abstract_origin
	.quad	.Ltmp2883               # DW_AT_low_pc
	.long	.Ltmp2886-.Ltmp2883     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x47aa:0x9 DW_TAG_variable
	.long	.Ldebug_loc761          # DW_AT_location
	.long	4296                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x47b3:0x9 DW_TAG_variable
	.long	.Ldebug_loc762          # DW_AT_location
	.long	4307                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x47bc:0x5 DW_TAG_variable
	.long	4318                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x47c3:0x38 DW_TAG_lexical_block
	.quad	.Ltmp2894               # DW_AT_low_pc
	.long	.Ltmp2925-.Ltmp2894     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x47d0:0x9 DW_TAG_variable
	.long	.Ldebug_loc763          # DW_AT_location
	.long	17914                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x47d9:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges82        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x47de:0x9 DW_TAG_variable
	.long	.Ldebug_loc766          # DW_AT_location
	.long	17926                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x47e7:0x9 DW_TAG_variable
	.long	.Ldebug_loc767          # DW_AT_location
	.long	17937                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x47f0:0x9 DW_TAG_variable
	.long	.Ldebug_loc768          # DW_AT_location
	.long	17948                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x47fb:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2925               # DW_AT_low_pc
	.long	.Ltmp2927-.Ltmp2925     # DW_AT_high_pc
	.byte	32                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x480f:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4814:0x9 DW_TAG_variable
	.long	.Ldebug_loc769          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x4820:0x3a DW_TAG_inlined_subroutine
	.long	7844                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges84        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	48                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x482c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc771          # DW_AT_location
	.long	7852                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4835:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc772          # DW_AT_location
	.long	7863                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x483e:0x9 DW_TAG_variable
	.long	.Ldebug_loc770          # DW_AT_location
	.long	7874                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4847:0x9 DW_TAG_variable
	.long	.Ldebug_loc773          # DW_AT_location
	.long	7885                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4850:0x9 DW_TAG_variable
	.long	.Ldebug_loc774          # DW_AT_location
	.long	7896                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x485a:0xd DW_TAG_GNU_call_site
	.long	17962                   # DW_AT_abstract_origin
	.quad	.Ltmp2867               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x4868:0x192 DW_TAG_subprogram
	.quad	.Lfunc_begin59          # DW_AT_low_pc
	.long	.Lfunc_end59-.Lfunc_begin59 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	18938                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x487b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	18950                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4882:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc775          # DW_AT_location
	.long	18961                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x488b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	18972                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4892:0x9 DW_TAG_variable
	.long	.Ldebug_loc779          # DW_AT_location
	.long	18994                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x489b:0x9 DW_TAG_variable
	.long	.Ldebug_loc781          # DW_AT_location
	.long	18983                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x48a4:0x103 DW_TAG_inlined_subroutine
	.long	855                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges85        # DW_AT_ranges
	.byte	33                      # DW_AT_call_file
	.byte	12                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x48b0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc776          # DW_AT_location
	.long	867                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x48b9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc777          # DW_AT_location
	.long	878                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x48c2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc778          # DW_AT_location
	.long	889                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48cb:0x9 DW_TAG_variable
	.long	.Ldebug_loc782          # DW_AT_location
	.long	900                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48d4:0x9 DW_TAG_variable
	.long	.Ldebug_loc783          # DW_AT_location
	.long	911                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48dd:0x9 DW_TAG_variable
	.long	.Ldebug_loc784          # DW_AT_location
	.long	922                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48e6:0x9 DW_TAG_variable
	.long	.Ldebug_loc785          # DW_AT_location
	.long	933                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc793          # DW_AT_location
	.long	944                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x48f8:0x9 DW_TAG_variable
	.long	.Ldebug_loc795          # DW_AT_location
	.long	955                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4901:0x9 DW_TAG_variable
	.long	.Ldebug_loc796          # DW_AT_location
	.long	966                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x490a:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp2980               # DW_AT_low_pc
	.long	.Ltmp2982-.Ltmp2980     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x491e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc787          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4927:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc786          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4931:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp2982               # DW_AT_low_pc
	.long	.Ltmp2984-.Ltmp2982     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4945:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc789          # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x494e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc788          # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4958:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp2984               # DW_AT_low_pc
	.long	.Ltmp2985-.Ltmp2984     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x496c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc791          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4975:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc790          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x497f:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp2985               # DW_AT_low_pc
	.long	.Ltmp2986-.Ltmp2985     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4993:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc794          # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x499c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc792          # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x49a7:0x2a DW_TAG_lexical_block
	.long	.Ldebug_ranges87        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x49ac:0x9 DW_TAG_variable
	.long	.Ldebug_loc780          # DW_AT_location
	.long	19006                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x49b5:0x1b DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges86        # DW_AT_ranges
	.byte	33                      # DW_AT_call_file
	.byte	17                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x49c1:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x49c6:0x9 DW_TAG_variable
	.long	.Ldebug_loc798          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x49d1:0x28 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp2997               # DW_AT_low_pc
	.long	.Ltmp2999-.Ltmp2997     # DW_AT_high_pc
	.byte	33                      # DW_AT_call_file
	.byte	20                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x49e5:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x49ea:0x5 DW_TAG_formal_parameter
	.long	1089                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x49ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc797          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x49fa:0x51 DW_TAG_subprogram
	.long	.Linfo_string125        # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4a06:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4a11:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4a1c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4a27:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4a32:0xb DW_TAG_variable
	.long	.Linfo_string79         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4a3d:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4a3e:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x4a4b:0x22d DW_TAG_subprogram
	.quad	.Lfunc_begin60          # DW_AT_low_pc
	.long	.Lfunc_end60-.Lfunc_begin60 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string169        # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x4a60:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc799          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4a6f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc800          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4a7e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc801          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x4a8d:0x1a3 DW_TAG_lexical_block
	.long	.Ldebug_ranges91        # DW_AT_ranges
	.byte	24                      # Abbrev [24] 0x4a92:0xb DW_TAG_variable
	.long	.Linfo_string186        # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4a9d:0x192 DW_TAG_inlined_subroutine
	.long	18938                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges88        # DW_AT_ranges
	.byte	33                      # DW_AT_call_file
	.byte	27                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4aa9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc806          # DW_AT_location
	.long	18950                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4ab2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc805          # DW_AT_location
	.long	18961                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4abb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc804          # DW_AT_location
	.long	18972                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4ac4:0x9 DW_TAG_variable
	.long	.Ldebug_loc802          # DW_AT_location
	.long	18983                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4acd:0x9 DW_TAG_variable
	.long	.Ldebug_loc803          # DW_AT_location
	.long	18994                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4ad6:0x23 DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.quad	.Ltmp3042               # DW_AT_low_pc
	.long	.Ltmp3045-.Ltmp3042     # DW_AT_high_pc
	.byte	33                      # DW_AT_call_file
	.byte	20                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4aea:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4aef:0x9 DW_TAG_variable
	.long	.Ldebug_loc807          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4af9:0x10b DW_TAG_inlined_subroutine
	.long	855                     # DW_AT_abstract_origin
	.quad	.Ltmp3052               # DW_AT_low_pc
	.long	.Ltmp3065-.Ltmp3052     # DW_AT_high_pc
	.byte	33                      # DW_AT_call_file
	.byte	12                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4b0d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc808          # DW_AT_location
	.long	867                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4b16:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc809          # DW_AT_location
	.long	878                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4b1f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc810          # DW_AT_location
	.long	889                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b28:0x9 DW_TAG_variable
	.long	.Ldebug_loc811          # DW_AT_location
	.long	900                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b31:0x9 DW_TAG_variable
	.long	.Ldebug_loc812          # DW_AT_location
	.long	911                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b3a:0x9 DW_TAG_variable
	.long	.Ldebug_loc813          # DW_AT_location
	.long	922                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b43:0x9 DW_TAG_variable
	.long	.Ldebug_loc814          # DW_AT_location
	.long	933                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b4c:0x9 DW_TAG_variable
	.long	.Ldebug_loc822          # DW_AT_location
	.long	944                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b55:0x9 DW_TAG_variable
	.long	.Ldebug_loc824          # DW_AT_location
	.long	955                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4b5e:0x9 DW_TAG_variable
	.long	.Ldebug_loc825          # DW_AT_location
	.long	966                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4b67:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp3057               # DW_AT_low_pc
	.long	.Ltmp3059-.Ltmp3057     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4b7b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc816          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4b84:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc815          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4b8e:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp3059               # DW_AT_low_pc
	.long	.Ltmp3060-.Ltmp3059     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4ba2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc818          # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4bab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc817          # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4bb5:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp3060               # DW_AT_low_pc
	.long	.Ltmp3061-.Ltmp3060     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4bc9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc820          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4bd2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc819          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4bdc:0x27 DW_TAG_inlined_subroutine
	.long	1035                    # DW_AT_abstract_origin
	.quad	.Ltmp3061               # DW_AT_low_pc
	.long	.Ltmp3062-.Ltmp3061     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4bf0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc823          # DW_AT_location
	.long	1047                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4bf9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc821          # DW_AT_location
	.long	1058                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x4c04:0x2a DW_TAG_lexical_block
	.long	.Ldebug_ranges90        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x4c09:0x9 DW_TAG_variable
	.long	.Ldebug_loc826          # DW_AT_location
	.long	19006                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4c12:0x1b DW_TAG_inlined_subroutine
	.long	1070                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges89        # DW_AT_ranges
	.byte	33                      # DW_AT_call_file
	.byte	17                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4c1e:0x5 DW_TAG_formal_parameter
	.long	1078                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4c23:0x9 DW_TAG_variable
	.long	.Ldebug_loc827          # DW_AT_location
	.long	1100                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x4c30:0x3a DW_TAG_inlined_subroutine
	.long	2431                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges92        # DW_AT_ranges
	.byte	33                      # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4c3c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc829          # DW_AT_location
	.long	2439                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4c45:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc830          # DW_AT_location
	.long	2450                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4c4e:0x9 DW_TAG_variable
	.long	.Ldebug_loc828          # DW_AT_location
	.long	2461                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4c57:0x9 DW_TAG_variable
	.long	.Ldebug_loc831          # DW_AT_location
	.long	2472                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4c60:0x9 DW_TAG_variable
	.long	.Ldebug_loc832          # DW_AT_location
	.long	2483                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x4c6a:0xd DW_TAG_GNU_call_site
	.long	19019                   # DW_AT_abstract_origin
	.quad	.Ltmp3046               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x4c78:0x10b DW_TAG_subprogram
	.quad	.Lfunc_begin61          # DW_AT_low_pc
	.long	.Lfunc_end61-.Lfunc_begin61 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string170        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x4c8d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc833          # DW_AT_location
	.long	.Linfo_string63         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4c9c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc834          # DW_AT_location
	.long	.Linfo_string64         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4cab:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc835          # DW_AT_location
	.long	.Linfo_string198        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4cba:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc836          # DW_AT_location
	.long	.Linfo_string65         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4cc9:0xf DW_TAG_variable
	.long	.Ldebug_loc837          # DW_AT_location
	.long	.Linfo_string199        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4cd8:0xf DW_TAG_variable
	.long	.Ldebug_loc838          # DW_AT_location
	.long	.Linfo_string200        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	47                      # Abbrev [47] 0x4ce7:0x9 DW_TAG_variable
	.long	.Linfo_string201        # DW_AT_name
	.long	20803                   # DW_AT_type
                                        # DW_AT_artificial
	.byte	29                      # Abbrev [29] 0x4cf0:0xf DW_TAG_variable
	.long	.Ldebug_loc839          # DW_AT_location
	.long	.Linfo_string129        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	21734                   # DW_AT_type
	.byte	48                      # Abbrev [48] 0x4cff:0xd DW_TAG_variable
	.long	.Ldebug_loc842          # DW_AT_location
	.long	.Linfo_string202        # DW_AT_name
	.long	20803                   # DW_AT_type
                                        # DW_AT_artificial
	.byte	29                      # Abbrev [29] 0x4d0c:0xf DW_TAG_variable
	.long	.Ldebug_loc840          # DW_AT_location
	.long	.Linfo_string130        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	21749                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4d1b:0xf DW_TAG_variable
	.long	.Ldebug_loc844          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4d2a:0xf DW_TAG_variable
	.long	.Ldebug_loc845          # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4d39:0xf DW_TAG_variable
	.long	.Ldebug_loc846          # DW_AT_location
	.long	.Linfo_string84         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x4d48:0x1d DW_TAG_lexical_block
	.quad	.Ltmp3155               # DW_AT_low_pc
	.long	.Ltmp3162-.Ltmp3155     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x4d55:0xf DW_TAG_variable
	.long	.Ldebug_loc841          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x4d65:0x1d DW_TAG_lexical_block
	.quad	.Ltmp3162               # DW_AT_low_pc
	.long	.Ltmp3186-.Ltmp3162     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x4d72:0xf DW_TAG_variable
	.long	.Ldebug_loc843          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x4d83:0x4b DW_TAG_subprogram
	.long	.Linfo_string126        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4d8b:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4d96:0xb DW_TAG_formal_parameter
	.long	.Linfo_string46         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4da1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4dac:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4db7:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4dc2:0xb DW_TAG_variable
	.long	.Linfo_string61         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x4dce:0x121 DW_TAG_subprogram
	.quad	.Lfunc_begin62          # DW_AT_low_pc
	.long	.Lfunc_end62-.Lfunc_begin62 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	20207                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4de1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc847          # DW_AT_location
	.long	20215                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4dea:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc848          # DW_AT_location
	.long	20226                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x4df3:0x81 DW_TAG_lexical_block
	.quad	.Lfunc_begin62          # DW_AT_low_pc
	.long	.Ltmp3282-.Lfunc_begin62 # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4e00:0x9 DW_TAG_variable
	.long	.Ldebug_loc849          # DW_AT_location
	.long	20238                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4e09:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp3241               # DW_AT_low_pc
	.long	.Ltmp3242-.Ltmp3241     # DW_AT_high_pc
	.byte	34                      # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	34                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4e1d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc850          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4e26:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc855          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x4e30:0x43 DW_TAG_inlined_subroutine
	.long	19843                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges93        # DW_AT_ranges
	.byte	34                      # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4e3c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc853          # DW_AT_location
	.long	19851                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4e45:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc852          # DW_AT_location
	.long	19862                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4e4e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc854          # DW_AT_location
	.long	19873                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4e57:0x9 DW_TAG_variable
	.long	.Ldebug_loc851          # DW_AT_location
	.long	19884                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4e60:0x9 DW_TAG_variable
	.long	.Ldebug_loc856          # DW_AT_location
	.long	19895                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4e69:0x9 DW_TAG_variable
	.long	.Ldebug_loc857          # DW_AT_location
	.long	19906                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x4e74:0x6d DW_TAG_lexical_block
	.quad	.Ltmp3282               # DW_AT_low_pc
	.long	.Ltmp3296-.Ltmp3282     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4e81:0x9 DW_TAG_variable
	.long	.Ldebug_loc858          # DW_AT_location
	.long	20251                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x4e8a:0x56 DW_TAG_lexical_block
	.quad	.Ltmp3285               # DW_AT_low_pc
	.long	.Ltmp3294-.Ltmp3285     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4e97:0x9 DW_TAG_variable
	.long	.Ldebug_loc859          # DW_AT_location
	.long	20263                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x4ea0:0x3f DW_TAG_lexical_block
	.quad	.Ltmp3285               # DW_AT_low_pc
	.long	.Ltmp3293-.Ltmp3285     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4ead:0x9 DW_TAG_variable
	.long	.Ldebug_loc860          # DW_AT_location
	.long	20275                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4eb6:0x9 DW_TAG_variable
	.long	.Ldebug_loc863          # DW_AT_location
	.long	20286                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4ebf:0x1f DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges94        # DW_AT_ranges
	.byte	34                      # DW_AT_call_file
	.byte	54                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4ecb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc862          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4ed4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc861          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x4ee1:0xd DW_TAG_GNU_call_site
	.long	19576                   # DW_AT_abstract_origin
	.quad	.Ltmp3291               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x4eef:0x5e DW_TAG_subprogram
	.long	.Linfo_string127        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4ef7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string63         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4f02:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4f0d:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4f0e:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x4f1a:0x32 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4f1b:0xb DW_TAG_variable
	.long	.Linfo_string128        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4f26:0x25 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4f27:0xb DW_TAG_variable
	.long	.Linfo_string129        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4f32:0x18 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4f33:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4f3e:0xb DW_TAG_variable
	.long	.Linfo_string130        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	54                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x4f4d:0x155 DW_TAG_subprogram
	.quad	.Lfunc_begin63          # DW_AT_low_pc
	.long	.Lfunc_end63-.Lfunc_begin63 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string171        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x4f62:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc864          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4f71:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc865          # DW_AT_location
	.long	.Linfo_string46         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x4f80:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc866          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4f8f:0x105 DW_TAG_inlined_subroutine
	.long	20207                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges95        # DW_AT_ranges
	.byte	34                      # DW_AT_call_file
	.byte	63                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4f9b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc869          # DW_AT_location
	.long	20215                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4fa4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc868          # DW_AT_location
	.long	20226                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x4fad:0x79 DW_TAG_lexical_block
	.long	.Ldebug_ranges97        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x4fb2:0x9 DW_TAG_variable
	.long	.Ldebug_loc867          # DW_AT_location
	.long	20238                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4fbb:0x27 DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.quad	.Ltmp3309               # DW_AT_low_pc
	.long	.Ltmp3310-.Ltmp3309     # DW_AT_high_pc
	.byte	34                      # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	34                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4fcf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc871          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4fd8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc870          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x4fe2:0x43 DW_TAG_inlined_subroutine
	.long	19843                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges96        # DW_AT_ranges
	.byte	34                      # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4fee:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc874          # DW_AT_location
	.long	19851                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4ff7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc873          # DW_AT_location
	.long	19862                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5000:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc875          # DW_AT_location
	.long	19873                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x5009:0x9 DW_TAG_variable
	.long	.Ldebug_loc872          # DW_AT_location
	.long	19884                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x5012:0x9 DW_TAG_variable
	.long	.Ldebug_loc876          # DW_AT_location
	.long	19895                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x501b:0x9 DW_TAG_variable
	.long	.Ldebug_loc877          # DW_AT_location
	.long	19906                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x5026:0x6d DW_TAG_lexical_block
	.quad	.Ltmp3350               # DW_AT_low_pc
	.long	.Ltmp3364-.Ltmp3350     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x5033:0x9 DW_TAG_variable
	.long	.Ldebug_loc878          # DW_AT_location
	.long	20251                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x503c:0x56 DW_TAG_lexical_block
	.quad	.Ltmp3353               # DW_AT_low_pc
	.long	.Ltmp3362-.Ltmp3353     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x5049:0x9 DW_TAG_variable
	.long	.Ldebug_loc879          # DW_AT_location
	.long	20263                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x5052:0x3f DW_TAG_lexical_block
	.quad	.Ltmp3353               # DW_AT_low_pc
	.long	.Ltmp3361-.Ltmp3353     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x505f:0x9 DW_TAG_variable
	.long	.Ldebug_loc880          # DW_AT_location
	.long	20275                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x5068:0x9 DW_TAG_variable
	.long	.Ldebug_loc883          # DW_AT_location
	.long	20286                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x5071:0x1f DW_TAG_inlined_subroutine
	.long	1000                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges98        # DW_AT_ranges
	.byte	34                      # DW_AT_call_file
	.byte	54                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x507d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc882          # DW_AT_location
	.long	1012                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5086:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc881          # DW_AT_location
	.long	1023                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x5094:0xd DW_TAG_GNU_call_site
	.long	19576                   # DW_AT_abstract_origin
	.quad	.Ltmp3359               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x50a2:0x54 DW_TAG_subprogram
	.quad	.Lfunc_begin64          # DW_AT_low_pc
	.long	.Lfunc_end64-.Lfunc_begin64 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	20726                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x50b5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc884          # DW_AT_location
	.long	20734                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x50be:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc885          # DW_AT_location
	.long	20745                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x50c7:0x9 DW_TAG_variable
	.long	.Ldebug_loc886          # DW_AT_location
	.long	20756                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x50d0:0x18 DW_TAG_lexical_block
	.long	.Ldebug_ranges99        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x50d5:0x9 DW_TAG_variable
	.long	.Ldebug_loc887          # DW_AT_location
	.long	20768                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x50de:0x9 DW_TAG_variable
	.long	.Ldebug_loc888          # DW_AT_location
	.long	20779                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x50e8:0xd DW_TAG_GNU_call_site
	.long	315                     # DW_AT_abstract_origin
	.quad	.Ltmp3378               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x50f6:0x42 DW_TAG_subprogram
	.long	.Linfo_string131        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x50fe:0xb DW_TAG_formal_parameter
	.long	.Linfo_string132        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x5109:0xb DW_TAG_formal_parameter
	.long	.Linfo_string99         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5114:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	20792                   # DW_AT_type
	.byte	44                      # Abbrev [44] 0x511f:0x18 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x5120:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	20792                   # DW_AT_type
	.byte	24                      # Abbrev [24] 0x512b:0xb DW_TAG_variable
	.long	.Linfo_string57         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x5138:0xb DW_TAG_typedef
	.long	20803                   # DW_AT_type
	.long	.Linfo_string134        # DW_AT_name
	.byte	35                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	4                       # Abbrev [4] 0x5143:0x7 DW_TAG_base_type
	.long	.Linfo_string133        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	39                      # Abbrev [39] 0x514a:0x1c8 DW_TAG_subprogram
	.quad	.Lfunc_begin65          # DW_AT_low_pc
	.long	.Lfunc_end65-.Lfunc_begin65 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string172        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x515f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc889          # DW_AT_location
	.long	.Linfo_string203        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	655                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x516e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc890          # DW_AT_location
	.long	.Linfo_string204        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	21764                   # DW_AT_type
	.byte	27                      # Abbrev [27] 0x517d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc891          # DW_AT_location
	.long	.Linfo_string205        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	57                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x518c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc892          # DW_AT_location
	.long	.Linfo_string132        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x519b:0xf DW_TAG_variable
	.long	.Ldebug_loc893          # DW_AT_location
	.long	.Linfo_string206        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.long	21786                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x51aa:0xf DW_TAG_variable
	.long	.Ldebug_loc894          # DW_AT_location
	.long	.Linfo_string208        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	68                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x51b9:0xf DW_TAG_variable
	.long	.Ldebug_loc905          # DW_AT_location
	.long	.Linfo_string213        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	106                     # DW_AT_decl_line
	.long	416                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x51c8:0xf DW_TAG_variable
	.long	.Ldebug_loc906          # DW_AT_location
	.long	.Linfo_string214        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	105                     # DW_AT_decl_line
	.long	416                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x51d7:0xf DW_TAG_variable
	.long	.Ldebug_loc909          # DW_AT_location
	.long	.Linfo_string217        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	416                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x51e6:0xf DW_TAG_variable
	.long	.Ldebug_loc910          # DW_AT_location
	.long	.Linfo_string218        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	118                     # DW_AT_decl_line
	.long	655                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x51f5:0x96 DW_TAG_lexical_block
	.long	.Ldebug_ranges103       # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x51fa:0xf DW_TAG_variable
	.long	.Ldebug_loc898          # DW_AT_location
	.long	.Linfo_string191        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	74                      # DW_AT_decl_line
	.long	21797                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x5209:0xf DW_TAG_variable
	.long	.Ldebug_loc899          # DW_AT_location
	.long	.Linfo_string211        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	76                      # DW_AT_decl_line
	.long	21797                   # DW_AT_type
	.byte	36                      # Abbrev [36] 0x5218:0x40 DW_TAG_inlined_subroutine
	.long	20726                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges100       # DW_AT_ranges
	.byte	9                       # DW_AT_call_file
	.byte	72                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5224:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc895          # DW_AT_location
	.long	20734                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x522d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc896          # DW_AT_location
	.long	20745                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x5236:0x9 DW_TAG_variable
	.long	.Ldebug_loc897          # DW_AT_location
	.long	20756                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x523f:0x18 DW_TAG_lexical_block
	.long	.Ldebug_ranges101       # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x5244:0x9 DW_TAG_variable
	.long	.Ldebug_loc901          # DW_AT_location
	.long	20768                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x524d:0x9 DW_TAG_variable
	.long	.Ldebug_loc902          # DW_AT_location
	.long	20779                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x5258:0x32 DW_TAG_lexical_block
	.long	.Ldebug_ranges102       # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x525d:0xf DW_TAG_variable
	.long	.Ldebug_loc900          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	89                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x526c:0x1d DW_TAG_lexical_block
	.quad	.Ltmp3442               # DW_AT_low_pc
	.long	.Ltmp3449-.Ltmp3442     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x5279:0xf DW_TAG_variable
	.long	.Ldebug_loc903          # DW_AT_location
	.long	.Linfo_string212        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	92                      # DW_AT_decl_line
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x528b:0x41 DW_TAG_lexical_block
	.quad	.Ltmp3453               # DW_AT_low_pc
	.long	.Ltmp3489-.Ltmp3453     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x5298:0xf DW_TAG_variable
	.long	.Ldebug_loc904          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	107                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x52a7:0x24 DW_TAG_lexical_block
	.long	.Ldebug_ranges104       # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x52ac:0xf DW_TAG_variable
	.long	.Ldebug_loc907          # DW_AT_location
	.long	.Linfo_string215        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	108                     # DW_AT_decl_line
	.long	416                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x52bb:0xf DW_TAG_variable
	.long	.Ldebug_loc908          # DW_AT_location
	.long	.Linfo_string216        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	416                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x52cc:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges105       # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x52d1:0xf DW_TAG_variable
	.long	.Ldebug_loc911          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	129                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	49                      # Abbrev [49] 0x52e1:0xb DW_TAG_GNU_call_site
	.byte	1                       # DW_AT_GNU_call_site_target
	.byte	87
	.quad	.Ltmp3393               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x52ec:0xd DW_TAG_GNU_call_site
	.long	315                     # DW_AT_abstract_origin
	.quad	.Ltmp3420               # DW_AT_low_pc
	.byte	49                      # Abbrev [49] 0x52f9:0xb DW_TAG_GNU_call_site
	.byte	1                       # DW_AT_GNU_call_site_target
	.byte	87
	.quad	.Ltmp3424               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x5304:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp3556               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x5312:0x2c DW_TAG_subprogram
	.long	.Linfo_string135        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x531a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x5325:0xb DW_TAG_formal_parameter
	.long	.Linfo_string136        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x5330:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x5331:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	50                      # Abbrev [50] 0x533e:0x178 DW_TAG_subprogram
	.quad	.Lfunc_begin66          # DW_AT_low_pc
	.long	.Lfunc_end66-.Lfunc_begin66 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string173        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	158                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	28                      # Abbrev [28] 0x5357:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string132        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	162                     # DW_AT_decl_line
	.long	513                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x5365:0xb DW_TAG_variable
	.long	.Linfo_string219        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	160                     # DW_AT_decl_line
	.long	21819                   # DW_AT_type
	.byte	30                      # Abbrev [30] 0x5370:0x3e DW_TAG_inlined_subroutine
	.long	21266                   # DW_AT_abstract_origin
	.quad	.Ltmp3616               # DW_AT_low_pc
	.long	.Ltmp3621-.Ltmp3616     # DW_AT_high_pc
	.byte	9                       # DW_AT_call_file
	.byte	169                     # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5384:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc913          # DW_AT_location
	.long	21274                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x538d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc912          # DW_AT_location
	.long	21285                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x5396:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3620               # DW_AT_low_pc
	.long	.Ltmp3621-.Ltmp3620     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x53a3:0x9 DW_TAG_variable
	.long	.Ldebug_loc914          # DW_AT_location
	.long	21297                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x53ae:0x1d DW_TAG_lexical_block
	.quad	.Ltmp3622               # DW_AT_low_pc
	.long	.Ltmp3645-.Ltmp3622     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x53bb:0xf DW_TAG_variable
	.long	.Ldebug_loc915          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	171                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x53cb:0xd DW_TAG_GNU_call_site
	.long	146                     # DW_AT_abstract_origin
	.quad	.Ltmp3617               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x53d8:0xd DW_TAG_GNU_call_site
	.long	157                     # DW_AT_abstract_origin
	.quad	.Ltmp3618               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x53e5:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3627               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x53f2:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3628               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x53ff:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3629               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x540c:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3630               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5419:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3631               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5426:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3632               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5433:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3633               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5440:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3634               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x544d:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3635               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x545a:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3636               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5467:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3637               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5474:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3638               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x5481:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3639               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x548e:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3640               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x549b:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3641               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x54a8:0xd DW_TAG_GNU_call_site
	.long	20810                   # DW_AT_abstract_origin
	.quad	.Ltmp3644               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54b6:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x54bb:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	128                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54c2:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x54c7:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	9                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54ce:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x54d3:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54da:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x54df:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54e6:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	51                      # Abbrev [51] 0x54eb:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	19687                   # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x54f5:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	51                      # Abbrev [51] 0x54fa:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	19711                   # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x5504:0x5 DW_TAG_pointer_type
	.long	21769                   # DW_AT_type
	.byte	52                      # Abbrev [52] 0x5509:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	3                       # Abbrev [3] 0x550a:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x550f:0x5 DW_TAG_formal_parameter
	.long	978                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x5514:0x5 DW_TAG_formal_parameter
	.long	978                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x551a:0xb DW_TAG_typedef
	.long	644                     # DW_AT_type
	.long	.Linfo_string207        # DW_AT_name
	.byte	36                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x5525:0xb DW_TAG_typedef
	.long	21808                   # DW_AT_type
	.long	.Linfo_string210        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x5530:0xb DW_TAG_typedef
	.long	20803                   # DW_AT_type
	.long	.Linfo_string209        # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	16                      # Abbrev [16] 0x553b:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x5540:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	6                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp64-.Lfunc_begin0
	.quad	.Ltmp66-.Lfunc_begin0
	.quad	.Ltmp68-.Lfunc_begin0
	.quad	.Ltmp70-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp28-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp90-.Lfunc_begin0
	.quad	.Ltmp110-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp107-.Lfunc_begin0
	.quad	.Ltmp147-.Lfunc_begin0
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp96-.Lfunc_begin0
	.quad	.Ltmp101-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp170-.Lfunc_begin0
	.quad	.Ltmp172-.Lfunc_begin0
	.quad	.Ltmp174-.Lfunc_begin0
	.quad	.Ltmp176-.Lfunc_begin0
	.quad	.Ltmp183-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp228-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.quad	.Ltmp258-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp198-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.quad	.Ltmp241-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.quad	.Ltmp319-.Lfunc_begin0
	.quad	.Ltmp341-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp383-.Lfunc_begin0
	.quad	.Ltmp398-.Lfunc_begin0
	.quad	.Ltmp402-.Lfunc_begin0
	.quad	.Ltmp403-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp538-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp619-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp667-.Lfunc_begin0
	.quad	.Ltmp668-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp666-.Lfunc_begin0
	.quad	.Ltmp667-.Lfunc_begin0
	.quad	.Ltmp668-.Lfunc_begin0
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp670-.Lfunc_begin0
	.quad	.Ltmp672-.Lfunc_begin0
	.quad	.Ltmp674-.Lfunc_begin0
	.quad	.Ltmp675-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp672-.Lfunc_begin0
	.quad	.Ltmp674-.Lfunc_begin0
	.quad	.Ltmp675-.Lfunc_begin0
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp721-.Lfunc_begin0
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp726-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp724-.Lfunc_begin0
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp726-.Lfunc_begin0
	.quad	.Ltmp728-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp744-.Lfunc_begin0
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp750-.Lfunc_begin0
	.quad	.Ltmp751-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Ltmp750-.Lfunc_begin0
	.quad	.Ltmp751-.Lfunc_begin0
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges20:
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Ltmp774-.Lfunc_begin0
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Ltmp792-.Lfunc_begin0
	.quad	.Ltmp793-.Lfunc_begin0
	.quad	.Ltmp796-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges21:
	.quad	.Ltmp1158-.Lfunc_begin0
	.quad	.Ltmp1162-.Lfunc_begin0
	.quad	.Ltmp1165-.Lfunc_begin0
	.quad	.Ltmp1181-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges22:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1249-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges23:
	.quad	.Ltmp1220-.Lfunc_begin0
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Ltmp1227-.Lfunc_begin0
	.quad	.Ltmp1244-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges24:
	.quad	.Ltmp1194-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.quad	.Ltmp1219-.Lfunc_begin0
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges25:
	.quad	.Ltmp1201-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.quad	.Ltmp1256-.Lfunc_begin0
	.quad	.Ltmp1277-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges26:
	.quad	.Ltmp1297-.Lfunc_begin0
	.quad	.Ltmp1299-.Lfunc_begin0
	.quad	.Ltmp1300-.Lfunc_begin0
	.quad	.Ltmp1301-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges27:
	.quad	.Ltmp1301-.Lfunc_begin0
	.quad	.Ltmp1304-.Lfunc_begin0
	.quad	.Ltmp1305-.Lfunc_begin0
	.quad	.Ltmp1306-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges28:
	.quad	.Ltmp1312-.Lfunc_begin0
	.quad	.Ltmp1317-.Lfunc_begin0
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges29:
	.quad	.Ltmp1312-.Lfunc_begin0
	.quad	.Ltmp1321-.Lfunc_begin0
	.quad	.Ltmp1325-.Lfunc_begin0
	.quad	.Ltmp1344-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges30:
	.quad	.Ltmp1353-.Lfunc_begin0
	.quad	.Ltmp1362-.Lfunc_begin0
	.quad	.Ltmp1364-.Lfunc_begin0
	.quad	.Ltmp1365-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges31:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1351-.Lfunc_begin0
	.quad	.Ltmp1352-.Lfunc_begin0
	.quad	.Ltmp1366-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges32:
	.quad	.Ltmp1367-.Lfunc_begin0
	.quad	.Ltmp1368-.Lfunc_begin0
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1386-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges33:
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1770-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges34:
	.quad	.Ltmp1405-.Lfunc_begin0
	.quad	.Ltmp1414-.Lfunc_begin0
	.quad	.Ltmp1416-.Lfunc_begin0
	.quad	.Ltmp1417-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges35:
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1432-.Lfunc_begin0
	.quad	.Ltmp1433-.Lfunc_begin0
	.quad	.Ltmp1770-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges36:
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1432-.Lfunc_begin0
	.quad	.Ltmp1433-.Lfunc_begin0
	.quad	.Ltmp1770-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges37:
	.quad	.Ltmp1400-.Lfunc_begin0
	.quad	.Ltmp1419-.Lfunc_begin0
	.quad	.Ltmp1421-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges38:
	.quad	.Ltmp1813-.Lfunc_begin0
	.quad	.Ltmp1814-.Lfunc_begin0
	.quad	.Ltmp1815-.Lfunc_begin0
	.quad	.Ltmp1863-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges39:
	.quad	.Ltmp1813-.Lfunc_begin0
	.quad	.Ltmp1814-.Lfunc_begin0
	.quad	.Ltmp1815-.Lfunc_begin0
	.quad	.Ltmp1863-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges40:
	.quad	.Ltmp1897-.Lfunc_begin0
	.quad	.Ltmp1905-.Lfunc_begin0
	.quad	.Ltmp1907-.Lfunc_begin0
	.quad	.Ltmp1908-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges41:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1895-.Lfunc_begin0
	.quad	.Ltmp1896-.Lfunc_begin0
	.quad	.Ltmp1909-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges42:
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2084-.Lfunc_begin0
	.quad	.Ltmp2085-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges43:
	.quad	.Ltmp2080-.Lfunc_begin0
	.quad	.Ltmp2084-.Lfunc_begin0
	.quad	.Ltmp2085-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges44:
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2070-.Lfunc_begin0
	.quad	.Ltmp2074-.Lfunc_begin0
	.quad	.Ltmp2095-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges45:
	.quad	.Ltmp2102-.Lfunc_begin0
	.quad	.Ltmp2110-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges46:
	.quad	.Ltmp2137-.Lfunc_begin0
	.quad	.Ltmp2138-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2160-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges47:
	.quad	.Ltmp2137-.Lfunc_begin0
	.quad	.Ltmp2138-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2160-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges48:
	.quad	.Ltmp2170-.Lfunc_begin0
	.quad	.Ltmp2172-.Lfunc_begin0
	.quad	.Ltmp2176-.Lfunc_begin0
	.quad	.Ltmp2181-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges49:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2254-.Lfunc_begin0
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2284-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges50:
	.quad	.Ltmp2247-.Lfunc_begin0
	.quad	.Ltmp2254-.Lfunc_begin0
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2284-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges51:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2254-.Lfunc_begin0
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges52:
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2300-.Lfunc_begin0
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges53:
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2296-.Lfunc_begin0
	.quad	.Ltmp2304-.Lfunc_begin0
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges54:
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2298-.Lfunc_begin0
	.quad	.Ltmp2300-.Lfunc_begin0
	.quad	.Ltmp2327-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges55:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2355-.Lfunc_begin0
	.quad	.Ltmp2358-.Lfunc_begin0
	.quad	.Ltmp2374-.Lfunc_begin0
	.quad	.Ltmp2376-.Lfunc_begin0
	.quad	.Ltmp2378-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges56:
	.quad	.Ltmp2384-.Lfunc_begin0
	.quad	.Ltmp2386-.Lfunc_begin0
	.quad	.Ltmp2391-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges57:
	.quad	.Ltmp2378-.Lfunc_begin0
	.quad	.Ltmp2382-.Lfunc_begin0
	.quad	.Ltmp2384-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges58:
	.quad	.Ltmp2416-.Lfunc_begin0
	.quad	.Ltmp2423-.Lfunc_begin0
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges59:
	.quad	.Ltmp2454-.Lfunc_begin0
	.quad	.Ltmp2456-.Lfunc_begin0
	.quad	.Ltmp2458-.Lfunc_begin0
	.quad	.Ltmp2471-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges60:
	.quad	.Ltmp2416-.Lfunc_begin0
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2474-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges61:
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2422-.Lfunc_begin0
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges62:
	.quad	.Ltmp2416-.Lfunc_begin0
	.quad	.Ltmp2426-.Lfunc_begin0
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2476-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges63:
	.quad	.Ltmp2477-.Lfunc_begin0
	.quad	.Ltmp2493-.Lfunc_begin0
	.quad	.Ltmp2495-.Lfunc_begin0
	.quad	.Ltmp2517-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges64:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2525-.Lfunc_begin0
	.quad	.Ltmp2528-.Lfunc_begin0
	.quad	.Ltmp2544-.Lfunc_begin0
	.quad	.Ltmp2546-.Lfunc_begin0
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges65:
	.quad	.Ltmp2554-.Lfunc_begin0
	.quad	.Ltmp2556-.Lfunc_begin0
	.quad	.Ltmp2558-.Lfunc_begin0
	.quad	.Ltmp2563-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges66:
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2554-.Lfunc_begin0
	.quad	.Ltmp2566-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges67:
	.quad	.Ltmp2574-.Lfunc_begin0
	.quad	.Ltmp2581-.Lfunc_begin0
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges68:
	.quad	.Ltmp2613-.Lfunc_begin0
	.quad	.Ltmp2615-.Lfunc_begin0
	.quad	.Ltmp2617-.Lfunc_begin0
	.quad	.Ltmp2622-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges69:
	.quad	.Ltmp2574-.Lfunc_begin0
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2610-.Lfunc_begin0
	.quad	.Ltmp2625-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges70:
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2580-.Lfunc_begin0
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2610-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges71:
	.quad	.Ltmp2574-.Lfunc_begin0
	.quad	.Ltmp2584-.Lfunc_begin0
	.quad	.Ltmp2588-.Lfunc_begin0
	.quad	.Ltmp2627-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges72:
	.quad	.Ltmp2628-.Lfunc_begin0
	.quad	.Ltmp2644-.Lfunc_begin0
	.quad	.Ltmp2646-.Lfunc_begin0
	.quad	.Ltmp2668-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges73:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp2676-.Lfunc_begin0
	.quad	.Ltmp2680-.Lfunc_begin0
	.quad	.Ltmp2697-.Lfunc_begin0
	.quad	.Ltmp2698-.Lfunc_begin0
	.quad	.Ltmp2700-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges74:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2716-.Lfunc_begin0
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges75:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2745-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges76:
	.quad	.Ltmp2710-.Lfunc_begin0
	.quad	.Ltmp2719-.Lfunc_begin0
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges77:
	.quad	.Ltmp2750-.Lfunc_begin0
	.quad	.Ltmp2767-.Lfunc_begin0
	.quad	.Ltmp2769-.Lfunc_begin0
	.quad	.Ltmp2791-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges78:
	.quad	.Lfunc_begin57-.Lfunc_begin0
	.quad	.Ltmp2799-.Lfunc_begin0
	.quad	.Ltmp2802-.Lfunc_begin0
	.quad	.Ltmp2819-.Lfunc_begin0
	.quad	.Ltmp2820-.Lfunc_begin0
	.quad	.Ltmp2822-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges79:
	.quad	.Ltmp2825-.Lfunc_begin0
	.quad	.Ltmp2829-.Lfunc_begin0
	.quad	.Ltmp2832-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges80:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2866-.Lfunc_begin0
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges81:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2865-.Lfunc_begin0
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2894-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges82:
	.quad	.Ltmp2898-.Lfunc_begin0
	.quad	.Ltmp2902-.Lfunc_begin0
	.quad	.Ltmp2905-.Lfunc_begin0
	.quad	.Ltmp2922-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges83:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2869-.Lfunc_begin0
	.quad	.Ltmp2873-.Lfunc_begin0
	.quad	.Ltmp2927-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges84:
	.quad	.Ltmp2928-.Lfunc_begin0
	.quad	.Ltmp2945-.Lfunc_begin0
	.quad	.Ltmp2947-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges85:
	.quad	.Lfunc_begin59-.Lfunc_begin0
	.quad	.Ltmp2972-.Lfunc_begin0
	.quad	.Ltmp2976-.Lfunc_begin0
	.quad	.Ltmp2989-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges86:
	.quad	.Ltmp3005-.Lfunc_begin0
	.quad	.Ltmp3007-.Lfunc_begin0
	.quad	.Ltmp3019-.Lfunc_begin0
	.quad	.Ltmp3021-.Lfunc_begin0
	.quad	.Ltmp3024-.Lfunc_begin0
	.quad	.Ltmp3026-.Lfunc_begin0
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3031-.Lfunc_begin0
	.quad	.Ltmp3034-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges87:
	.quad	.Ltmp2972-.Lfunc_begin0
	.quad	.Ltmp2973-.Lfunc_begin0
	.quad	.Ltmp2974-.Lfunc_begin0
	.quad	.Ltmp2976-.Lfunc_begin0
	.quad	.Ltmp2989-.Lfunc_begin0
	.quad	.Ltmp2990-.Lfunc_begin0
	.quad	.Ltmp2991-.Lfunc_begin0
	.quad	.Ltmp2996-.Lfunc_begin0
	.quad	.Ltmp3000-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges88:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3045-.Lfunc_begin0
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges89:
	.quad	.Ltmp3076-.Lfunc_begin0
	.quad	.Ltmp3078-.Lfunc_begin0
	.quad	.Ltmp3090-.Lfunc_begin0
	.quad	.Ltmp3092-.Lfunc_begin0
	.quad	.Ltmp3095-.Lfunc_begin0
	.quad	.Ltmp3097-.Lfunc_begin0
	.quad	.Ltmp3100-.Lfunc_begin0
	.quad	.Ltmp3102-.Lfunc_begin0
	.quad	.Ltmp3105-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges90:
	.quad	.Ltmp3065-.Lfunc_begin0
	.quad	.Ltmp3066-.Lfunc_begin0
	.quad	.Ltmp3067-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges91:
	.quad	.Ltmp3041-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3107-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges92:
	.quad	.Ltmp3108-.Lfunc_begin0
	.quad	.Ltmp3124-.Lfunc_begin0
	.quad	.Ltmp3126-.Lfunc_begin0
	.quad	.Ltmp3148-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges93:
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3245-.Lfunc_begin0
	.quad	.Ltmp3246-.Lfunc_begin0
	.quad	.Ltmp3282-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges94:
	.quad	.Ltmp3289-.Lfunc_begin0
	.quad	.Ltmp3290-.Lfunc_begin0
	.quad	.Ltmp3292-.Lfunc_begin0
	.quad	.Ltmp3293-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges95:
	.quad	.Ltmp3299-.Lfunc_begin0
	.quad	.Ltmp3301-.Lfunc_begin0
	.quad	.Ltmp3302-.Lfunc_begin0
	.quad	.Ltmp3364-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges96:
	.quad	.Ltmp3311-.Lfunc_begin0
	.quad	.Ltmp3313-.Lfunc_begin0
	.quad	.Ltmp3314-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges97:
	.quad	.Ltmp3299-.Lfunc_begin0
	.quad	.Ltmp3301-.Lfunc_begin0
	.quad	.Ltmp3302-.Lfunc_begin0
	.quad	.Ltmp3350-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges98:
	.quad	.Ltmp3357-.Lfunc_begin0
	.quad	.Ltmp3358-.Lfunc_begin0
	.quad	.Ltmp3360-.Lfunc_begin0
	.quad	.Ltmp3361-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges99:
	.quad	.Ltmp3372-.Lfunc_begin0
	.quad	.Ltmp3374-.Lfunc_begin0
	.quad	.Ltmp3377-.Lfunc_begin0
	.quad	.Ltmp3379-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges100:
	.quad	.Ltmp3386-.Lfunc_begin0
	.quad	.Ltmp3388-.Lfunc_begin0
	.quad	.Ltmp3414-.Lfunc_begin0
	.quad	.Ltmp3421-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges101:
	.quad	.Ltmp3414-.Lfunc_begin0
	.quad	.Ltmp3416-.Lfunc_begin0
	.quad	.Ltmp3419-.Lfunc_begin0
	.quad	.Ltmp3421-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges102:
	.quad	.Ltmp3405-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.quad	.Ltmp3436-.Lfunc_begin0
	.quad	.Ltmp3452-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges103:
	.quad	.Ltmp3386-.Lfunc_begin0
	.quad	.Ltmp3389-.Lfunc_begin0
	.quad	.Ltmp3391-.Lfunc_begin0
	.quad	.Ltmp3401-.Lfunc_begin0
	.quad	.Ltmp3405-.Lfunc_begin0
	.quad	.Ltmp3410-.Lfunc_begin0
	.quad	.Ltmp3414-.Lfunc_begin0
	.quad	.Ltmp3432-.Lfunc_begin0
	.quad	.Ltmp3436-.Lfunc_begin0
	.quad	.Ltmp3452-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges104:
	.quad	.Ltmp3457-.Lfunc_begin0
	.quad	.Ltmp3481-.Lfunc_begin0
	.quad	.Ltmp3485-.Lfunc_begin0
	.quad	.Ltmp3488-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges105:
	.quad	.Ltmp3512-.Lfunc_begin0
	.quad	.Ltmp3552-.Lfunc_begin0
	.quad	.Ltmp3556-.Lfunc_begin0
	.quad	.Ltmp3614-.Lfunc_begin0
	.quad	0
	.quad	0
	.ident	"clang version 10.0.0-4ubuntu1 "
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym sort_quick_block
	.addrsig_sym insertionSortStd
	.addrsig_sym heapsort
	.addrsig_sym heapsorto
	.addrsig_sym sort_merge_optimized
	.addrsig_sym sort_merge_standard
	.addrsig_sym sort_quick_optimized
	.addrsig_sym sort_quick_multi
	.addrsig_sym sort_quick_multix4
	.addrsig_sym sort_quick_simd
	.addrsig_sym sort_quick_stable
	.addrsig_sym sort_quick_optimized_swap_arith
	.addrsig_sym sort_quick_optimized_swap_array
	.addrsig_sym sort_quick_optimized_swap_asm
	.addrsig_sym sort_quick_optimized_swap_cmov
	.addrsig_sym sort_quick_standard
	.section	.debug_line,"",@progbits
.Lline_table_start0:
