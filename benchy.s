	.text
	.file	"benchy.c"
	.file	1 "/home/peeters/bachelor" "./blockquick.h"
	.file	2 "/usr/include" "time.h"
	.file	3 "/usr/include" "stdlib.h"
	.file	4 "/home/peeters/bachelor" "./median.h"
	.file	5 "/home/peeters/bachelor" "./quickomulti.h"
	.file	6 "/home/peeters/bachelor" "./quickomultix4.h"
	.file	7 "/home/peeters/bachelor" "./heapsorto.h"
	.file	8 "/home/peeters/bachelor" "benchy.c"
	.file	9 "/home/peeters/bachelor" "./quicko.h"
	.file	10 "/home/peeters/bachelor" "./mergeu.h"
	.file	11 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "avxintrin.h"
	.file	12 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "emmintrin.h"
	.file	13 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "xmmintrin.h"
	.file	14 "/usr/include/x86_64-linux-gnu/bits" "types.h"
	.globl	partition_quick_block   # -- Begin function partition_quick_block
	.p2align	4, 0x90
	.type	partition_quick_block,@function
partition_quick_block:                  # @partition_quick_block
.Lfunc_begin0:
	.loc	1 18 0                  # ./blockquick.h:18:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: median_of_three:array <- undef
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$984, %rsp              # imm = 0x3D8
	.cfi_def_cfa_offset 1040
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp0:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB0_2
.Ltmp1:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %r11d
	jmp	.LBB0_3
.Ltmp2:
.LBB0_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	.loc	4 9 18                  # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp3:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp4:
	#DEBUG_VALUE: median_of_three:x <- $eax
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r8
	movl	(%rdi,%r8,4), %r11d
.Ltmp5:
	#DEBUG_VALUE: median_of_three:y <- $r11d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %ebp
.Ltmp6:
	#DEBUG_VALUE: median_of_three:z <- $ebp
	.file	15 "/home/peeters/bachelor" "./minmax.h"
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%r11d, %eax
.Ltmp7:
	#DEBUG_VALUE: min:y <- $r11d
	#DEBUG_VALUE: min:x <- $eax
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r11d, %ebx
	cmovlel	%eax, %ebx
.Ltmp8:
	#DEBUG_VALUE: max:y <- $r11d
	#DEBUG_VALUE: max:x <- $eax
	.loc	15 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r11d, %ecx
.Ltmp9:
	cmovgel	%eax, %ecx
.Ltmp10:
	#DEBUG_VALUE: min:y <- $ebp
	#DEBUG_VALUE: min:x <- $ebx
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%ebp, %ebx
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%ebp, %ebx
.Ltmp11:
	#DEBUG_VALUE: max:y <- $ebp
	#DEBUG_VALUE: median_of_three:smallest <- $ebx
	#DEBUG_VALUE: max:x <- $ecx
	.loc	15 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%ebp, %ecx
	.loc	15 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%ebp, %ecx
.Ltmp12:
	#DEBUG_VALUE: median_of_three:largest <- $ecx
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%eax, %r11d
.Ltmp13:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%ebp, %r11d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%ebx, %r11d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ecx, %r11d
.Ltmp14:
	#DEBUG_VALUE: median_of_three:median <- $r11d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r11d, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ecx, (%rdi,%r8,4)
.Ltmp15:
.LBB0_3:
	#DEBUG_VALUE: partition_quick_block:high <- $rdx
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rdx
	.loc	1 21 7                  # ./blockquick.h:21:7
	leaq	-1(%rdx), %r9
.Ltmp16:
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 26 15                 # ./blockquick.h:26:15
	movq	%r9, %r13
	subq	%rsi, %r13
	xorl	%r14d, %r14d
	.loc	1 26 25 is_stmt 0       # ./blockquick.h:26:25
	cmpq	$256, %r13              # imm = 0x100
	movq	%rdi, -112(%rsp)        # 8-byte Spill
	movq	%rdx, -104(%rsp)        # 8-byte Spill
.Ltmp17:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	.loc	1 26 3                  # ./blockquick.h:26:3
	jl	.LBB0_4
.Ltmp18:
# %bb.5:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	leaq	12(%rdi), %rax
	movq	%rax, -56(%rsp)         # 8-byte Spill
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
	xorl	%r15d, %r15d
	xorl	%r14d, %r14d
	jmp	.LBB0_6
.Ltmp19:
	.p2align	4, 0x90
.LBB0_17:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	.loc	1 48 12 is_stmt 1       # ./blockquick.h:48:12
	addl	%ebx, %r14d
.Ltmp20:
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	.loc	1 49 12                 # ./blockquick.h:49:12
	addl	%ebx, %r15d
.Ltmp21:
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	.loc	1 51 11                 # ./blockquick.h:51:11
	leaq	128(%rsi), %rax
.Ltmp22:
	.loc	1 50 14                 # ./blockquick.h:50:14
	subl	%ebx, %r10d
.Ltmp23:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 50 9 is_stmt 0        # ./blockquick.h:50:9
	cmoveq	%rax, %rsi
.Ltmp24:
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 53 9 is_stmt 1        # ./blockquick.h:53:9
	leaq	-128(%r9), %rax
.Ltmp25:
	.loc	1 53 14 is_stmt 0       # ./blockquick.h:53:14
	subl	%ebx, %ecx
.Ltmp26:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 53 9                  # ./blockquick.h:53:9
	cmoveq	%rax, %r9
.Ltmp27:
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 26 15 is_stmt 1       # ./blockquick.h:26:15
	movq	%r9, %r13
	subq	%rsi, %r13
	.loc	1 26 25 is_stmt 0       # ./blockquick.h:26:25
	cmpq	$255, %r13
	.loc	1 26 3                  # ./blockquick.h:26:3
	jle	.LBB0_18
.Ltmp28:
.LBB0_6:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB0_8 Depth 2
                                        #     Child Loop BB0_11 Depth 2
                                        #     Child Loop BB0_27 Depth 2
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 27 14 is_stmt 1       # ./blockquick.h:27:14
	testl	%r10d, %r10d
.Ltmp29:
	.loc	1 27 9 is_stmt 0        # ./blockquick.h:27:9
	jne	.LBB0_9
.Ltmp30:
# %bb.7:                                #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 9                   # ./blockquick.h:0:9
	movq	-56(%rsp), %rax         # 8-byte Reload
.Ltmp31:
	.loc	1 29 7 is_stmt 1        # ./blockquick.h:29:7
	leaq	(%rax,%rsi,4), %rbx
	xorl	%r14d, %r14d
.Ltmp32:
	.loc	1 0 7 is_stmt 0         # ./blockquick.h:0:7
	xorl	%ebp, %ebp
	xorl	%r10d, %r10d
.Ltmp33:
	.p2align	4, 0x90
.LBB0_8:                                #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: i <- $rbp
	.loc	1 30 9 is_stmt 1        # ./blockquick.h:30:9
	movl	%r10d, %edx
	.loc	1 30 24 is_stmt 0       # ./blockquick.h:30:24
	movl	%ebp, 464(%rsp,%rdx,4)
	.loc	1 31 23 is_stmt 1       # ./blockquick.h:31:23
	xorl	%edx, %edx
	cmpl	-12(%rbx,%rbp,4), %r11d
	setle	%dl
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%r10d, %edx
.Ltmp34:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	1(%rbp), %eax
	movl	%eax, 464(%rsp,%rdx,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%eax, %eax
	cmpl	-8(%rbx,%rbp,4), %r11d
	setle	%al
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%edx, %eax
.Ltmp35:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	2(%rbp), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%edx, %edx
	cmpl	-4(%rbx,%rbp,4), %r11d
	setle	%dl
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%eax, %edx
.Ltmp36:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 30 24 is_stmt 1       # ./blockquick.h:30:24
	leal	3(%rbp), %eax
	movl	%eax, 464(%rsp,%rdx,4)
	.loc	1 31 23                 # ./blockquick.h:31:23
	xorl	%r10d, %r10d
	cmpl	(%rbx,%rbp,4), %r11d
	setle	%r10b
	.loc	1 31 14 is_stmt 0       # ./blockquick.h:31:14
	addl	%edx, %r10d
.Ltmp37:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 29 25 is_stmt 1       # ./blockquick.h:29:25
	addq	$4, %rbp
.Ltmp38:
	cmpq	$128, %rbp
.Ltmp39:
	.loc	1 29 7 is_stmt 0        # ./blockquick.h:29:7
	jne	.LBB0_8
.Ltmp40:
.LBB0_9:                                #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 34 14 is_stmt 1       # ./blockquick.h:34:14
	testl	%ecx, %ecx
.Ltmp41:
	.loc	1 34 9 is_stmt 0        # ./blockquick.h:34:9
	jne	.LBB0_12
.Ltmp42:
# %bb.10:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 36 7 is_stmt 1        # ./blockquick.h:36:7
	leaq	(%rdi,%r9,4), %rbx
	xorl	%r15d, %r15d
.Ltmp43:
	.loc	1 0 7 is_stmt 0         # ./blockquick.h:0:7
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
.Ltmp44:
	.p2align	4, 0x90
.LBB0_11:                               #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: i <- $rbp
	.loc	1 37 9 is_stmt 1        # ./blockquick.h:37:9
	movl	%ecx, %eax
	.loc	1 37 24 is_stmt 0       # ./blockquick.h:37:24
	movl	%ebp, -48(%rsp,%rax,4)
	.loc	1 38 23 is_stmt 1       # ./blockquick.h:38:23
	xorl	%eax, %eax
	cmpl	(%rbx), %r11d
	setge	%al
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%ecx, %eax
.Ltmp45:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %ecx
	orl	$1, %ecx
.Ltmp46:
	#DEBUG_VALUE: i <- undef
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%ecx, %ecx
	cmpl	-4(%rbx), %r11d
	setge	%cl
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%eax, %ecx
.Ltmp47:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %eax
	orl	$2, %eax
	#DEBUG_VALUE: i <- undef
.Ltmp48:
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%eax, -48(%rsp,%rcx,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%eax, %eax
	cmpl	-8(%rbx), %r11d
	setge	%al
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%ecx, %eax
.Ltmp49:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	movl	%ebp, %ecx
	orl	$3, %ecx
	#DEBUG_VALUE: i <- undef
.Ltmp50:
	.loc	1 37 24                 # ./blockquick.h:37:24
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 38 23                 # ./blockquick.h:38:23
	xorl	%ecx, %ecx
	cmpl	-12(%rbx), %r11d
	setge	%cl
	.loc	1 38 14 is_stmt 0       # ./blockquick.h:38:14
	addl	%eax, %ecx
.Ltmp51:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 36 39 is_stmt 1       # ./blockquick.h:36:39
	addq	$4, %rbp
.Ltmp52:
	#DEBUG_VALUE: i <- $rbp
	.loc	1 36 25 is_stmt 0       # ./blockquick.h:36:25
	addq	$-16, %rbx
	cmpq	$128, %rbp
.Ltmp53:
	.loc	1 36 7                  # ./blockquick.h:36:7
	jne	.LBB0_11
.Ltmp54:
.LBB0_12:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: min:x <- $r10d
	#DEBUG_VALUE: min:y <- $ecx
	.loc	15 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%ecx, %r10d
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%ecx, %ebx
	cmovlel	%r10d, %ebx
.Ltmp55:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: num <- $ebx
	.loc	1 42 23 is_stmt 1       # ./blockquick.h:42:23
	testl	%ebx, %ebx
.Ltmp56:
	.loc	1 42 5 is_stmt 0        # ./blockquick.h:42:5
	jle	.LBB0_17
.Ltmp57:
# %bb.13:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	%r15, -120(%rsp)        # 8-byte Spill
	.loc	1 42 5                  # ./blockquick.h:42:5
	movslq	%r15d, %rdx
	movq	%r14, -88(%rsp)         # 8-byte Spill
	movslq	%r14d, %rdi
	movl	%ebx, %r15d
.Ltmp58:
	movl	%r15d, %ebp
	andl	$1, %ebp
	movl	%ebx, -96(%rsp)         # 4-byte Spill
.Ltmp59:
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	cmpl	$1, %ebx
	movq	%rdx, -72(%rsp)         # 8-byte Spill
	movq	%rdi, -80(%rsp)         # 8-byte Spill
	movq	%rbp, -64(%rsp)         # 8-byte Spill
	jne	.LBB0_26
.Ltmp60:
# %bb.14:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%r12d, %r12d
	movq	-112(%rsp), %rdi        # 8-byte Reload
	jmp	.LBB0_15
.Ltmp61:
	.p2align	4, 0x90
.LBB0_26:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 42 5                  # ./blockquick.h:42:5
	leaq	468(%rsp), %rax
	leaq	(%rax,%rdi,4), %r14
.Ltmp62:
	leaq	-44(%rsp), %rax
	leaq	(%rax,%rdx,4), %r8
	subq	%rbp, %r15
	xorl	%r12d, %r12d
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp63:
	.p2align	4, 0x90
.LBB0_27:                               #   Parent Loop BB0_6 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: j <- $r12
	.loc	1 43 25 is_stmt 1       # ./blockquick.h:43:25
	movslq	-4(%r14,%r12,4), %rax
	.loc	1 43 23 is_stmt 0       # ./blockquick.h:43:23
	addq	%rsi, %rax
	.loc	1 44 26 is_stmt 1       # ./blockquick.h:44:26
	movslq	-4(%r8,%r12,4), %r13
	movq	%rsi, %rdx
	movq	%r9, %rbx
	.loc	1 44 24 is_stmt 0       # ./blockquick.h:44:24
	subq	%r13, %r9
.Ltmp64:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.file	16 "/home/peeters/bachelor" "./swap.h"
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ebp
.Ltmp65:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%r9,4), %esi
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebp, (%rdi,%r9,4)
	movq	%rbx, %r9
	movq	%rdx, %rsi
.Ltmp66:
	.loc	1 43 25                 # ./blockquick.h:43:25
	movslq	(%r14,%r12,4), %rax
	.loc	1 43 23 is_stmt 0       # ./blockquick.h:43:23
	addq	%rdx, %rax
	.loc	1 44 26 is_stmt 1       # ./blockquick.h:44:26
	movslq	(%r8,%r12,4), %rdx
	.loc	1 44 24 is_stmt 0       # ./blockquick.h:44:24
	movq	%rbx, %rbp
.Ltmp67:
	subq	%rdx, %rbp
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
.Ltmp68:
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ebx
.Ltmp69:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rax,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebx, (%rdi,%rbp,4)
.Ltmp70:
	.loc	1 42 31                 # ./blockquick.h:42:31
	addq	$2, %r12
.Ltmp71:
	#DEBUG_VALUE: j <- $r12
	.loc	1 42 5 is_stmt 0        # ./blockquick.h:42:5
	cmpq	%r12, %r15
	jne	.LBB0_27
.Ltmp72:
.LBB0_15:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- [DW_OP_constu 96, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	cmpq	$0, -64(%rsp)           # 8-byte Folded Reload
	movq	-88(%rsp), %r14         # 8-byte Reload
	movq	-120(%rsp), %r15        # 8-byte Reload
	movl	-96(%rsp), %ebx         # 4-byte Reload
.Ltmp73:
	#DEBUG_VALUE: num <- $ebx
	je	.LBB0_17
.Ltmp74:
# %bb.16:                               #   in Loop: Header=BB0_6 Depth=1
	#DEBUG_VALUE: num <- $ebx
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: j <- $r12
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-80(%rsp), %rax         # 8-byte Reload
.Ltmp75:
	.loc	1 43 41 is_stmt 1       # ./blockquick.h:43:41
	addq	%r12, %rax
	.loc	1 43 25 is_stmt 0       # ./blockquick.h:43:25
	movslq	464(%rsp,%rax,4), %rax
	.loc	1 43 23                 # ./blockquick.h:43:23
	addq	%rsi, %rax
	movq	-72(%rsp), %rdx         # 8-byte Reload
	.loc	1 44 42 is_stmt 1       # ./blockquick.h:44:42
	addq	%r12, %rdx
	.loc	1 44 26 is_stmt 0       # ./blockquick.h:44:26
	movslq	-48(%rsp,%rdx,4), %rdx
	.loc	1 44 24                 # ./blockquick.h:44:24
	movq	%r9, %rbp
	subq	%rdx, %rbp
.Ltmp76:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %r8d
.Ltmp77:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rax,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r8d, (%rdi,%rbp,4)
.Ltmp78:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	16 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB0_17
.Ltmp79:
.LBB0_4:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:array <- $rdi
	xorl	%r15d, %r15d
	xorl	%r10d, %r10d
	xorl	%ecx, %ecx
.Ltmp80:
.LBB0_18:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	.loc	1 60 17 is_stmt 1       # ./blockquick.h:60:17
	movl	%ecx, %eax
	orl	%r10d, %eax
	je	.LBB0_19
.Ltmp81:
# %bb.39:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%r13d, %r8d
	addl	$-127, %r8d
	.loc	1 75 19 is_stmt 1       # ./blockquick.h:75:19
	testl	%ecx, %ecx
.Ltmp82:
	.loc	1 75 14 is_stmt 0       # ./blockquick.h:75:14
	je	.LBB0_47
.Ltmp83:
# %bb.40:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 14                  # ./blockquick.h:0:14
	movq	%r15, -120(%rsp)        # 8-byte Spill
	movl	$128, %r13d
.Ltmp84:
	testl	%r8d, %r8d
.Ltmp85:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 5 is_stmt 1        # ./blockquick.h:79:5
	jle	.LBB0_41
.Ltmp86:
# %bb.42:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 79 23 is_stmt 0       # ./blockquick.h:79:23
	movl	%r8d, %r12d
.Ltmp87:
	.loc	1 79 5                  # ./blockquick.h:79:5
	leaq	-1(%r12), %rax
	movl	%r12d, %r15d
.Ltmp88:
	andl	$3, %r15d
	xorl	%r14d, %r14d
.Ltmp89:
	cmpq	$3, %rax
	jae	.LBB0_51
.Ltmp90:
# %bb.43:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB0_44
.Ltmp91:
.LBB0_19:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	incq	%r13
.Ltmp92:
	.loc	1 61 31 is_stmt 1       # ./blockquick.h:61:31
	movq	%r13, %r8
	shrq	$63, %r8
	addq	%r13, %r8
	sarq	%r8
.Ltmp93:
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	.loc	1 62 29                 # ./blockquick.h:62:29
	subq	%r8, %r13
.Ltmp94:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	.loc	1 0 29 is_stmt 0        # ./blockquick.h:0:29
	xorl	%r14d, %r14d
.Ltmp95:
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	movl	$0, %r10d
	movl	$0, %ecx
.Ltmp96:
	#DEBUG_VALUE: j <- 0
	.loc	1 65 23 is_stmt 1       # ./blockquick.h:65:23
	testl	%r8d, %r8d
.Ltmp97:
	.loc	1 65 5 is_stmt 0        # ./blockquick.h:65:5
	jle	.LBB0_24
.Ltmp98:
# %bb.20:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 65 23                 # ./blockquick.h:65:23
	movl	%r8d, %r15d
	movq	%r8, -96(%rsp)          # 8-byte Spill
.Ltmp99:
                                        # kill: def $r8d killed $r8d killed $r8 def $r8
	.loc	1 65 5                  # ./blockquick.h:65:5
	andl	$1, %r8d
.Ltmp100:
	cmpq	$1, %r15
	jne	.LBB0_28
.Ltmp101:
# %bb.21:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
	jmp	.LBB0_22
.Ltmp102:
.LBB0_47:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testl	%r8d, %r8d
.Ltmp103:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	jle	.LBB0_48
.Ltmp104:
# %bb.49:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 87 23 is_stmt 0       # ./blockquick.h:87:23
	movl	%r8d, %r12d
.Ltmp105:
	.loc	1 87 5                  # ./blockquick.h:87:5
	leaq	-1(%r12), %rax
	movl	%r12d, %r15d
.Ltmp106:
	andl	$3, %r15d
	xorl	%ecx, %ecx
	movq	%rcx, -120(%rsp)        # 8-byte Spill
	cmpq	$3, %rax
	jae	.LBB0_53
.Ltmp107:
# %bb.50:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	jmp	.LBB0_55
.Ltmp108:
.LBB0_41:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%r14d, %r14d
.Ltmp109:
	jmp	.LBB0_31
.Ltmp110:
.LBB0_51:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 79 5 is_stmt 1        # ./blockquick.h:79:5
	leaq	(%rdi,%rsi,4), %rbp
	addq	$12, %rbp
	subq	%r15, %r12
	xorl	%ebx, %ebx
.Ltmp111:
	.p2align	4, 0x90
.LBB0_52:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: j <- $rbx
	.loc	1 80 7                  # ./blockquick.h:80:7
	movslq	%r10d, %rax
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	movl	%ebx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-12(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp112:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	cltq
.Ltmp113:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	1(%rbx), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-8(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp114:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	cltq
.Ltmp115:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	2(%rbx), %edx
	movl	%edx, 464(%rsp,%rax,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%edx, %edx
	cmpl	-4(%rbp,%rbx,4), %r11d
	setle	%dl
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%edx, %eax
.Ltmp116:
	#DEBUG_VALUE: partition_quick_block:numL <- $eax
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	movslq	%eax, %r10
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	leal	3(%rbx), %eax
.Ltmp117:
	movl	%eax, 464(%rsp,%r10,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%eax, %eax
	cmpl	(%rbp,%rbx,4), %r11d
	setle	%al
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%eax, %r10d
.Ltmp118:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 34 is_stmt 1       # ./blockquick.h:79:34
	addq	$4, %rbx
.Ltmp119:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 79 5 is_stmt 0        # ./blockquick.h:79:5
	cmpq	%rbx, %r12
	jne	.LBB0_52
.Ltmp120:
.LBB0_44:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r15, %r15
	je	.LBB0_31
.Ltmp121:
# %bb.45:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	leaq	(%rdi,%rsi,4), %rdx
.Ltmp122:
	.p2align	4, 0x90
.LBB0_46:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: j <- $rbx
	.loc	1 80 7 is_stmt 1        # ./blockquick.h:80:7
	movslq	%r10d, %r10
.Ltmp123:
	.loc	1 80 22 is_stmt 0       # ./blockquick.h:80:22
	movl	%ebx, 464(%rsp,%r10,4)
	.loc	1 81 21 is_stmt 1       # ./blockquick.h:81:21
	xorl	%eax, %eax
	cmpl	(%rdx,%rbx,4), %r11d
	setle	%al
	.loc	1 81 12 is_stmt 0       # ./blockquick.h:81:12
	addl	%eax, %r10d
.Ltmp124:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 79 34 is_stmt 1       # ./blockquick.h:79:34
	incq	%rbx
.Ltmp125:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 79 5 is_stmt 0        # ./blockquick.h:79:5
	decq	%r15
	jne	.LBB0_46
	jmp	.LBB0_31
.Ltmp126:
.LBB0_28:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- 0
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 65 5 is_stmt 1        # ./blockquick.h:65:5
	leaq	(%rdi,%rsi,4), %r12
	addq	$4, %r12
	leaq	(%rdi,%r9,4), %rbp
	subq	%r8, %r15
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	xorl	%r10d, %r10d
.Ltmp127:
	.p2align	4, 0x90
.LBB0_29:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 66 7                  # ./blockquick.h:66:7
	movl	%r10d, %edx
	.loc	1 66 22 is_stmt 0       # ./blockquick.h:66:22
	movl	%ebx, 464(%rsp,%rdx,4)
	.loc	1 67 21 is_stmt 1       # ./blockquick.h:67:21
	xorl	%edx, %edx
	cmpl	-4(%r12,%rbx,4), %r11d
	setle	%dl
	.loc	1 67 12 is_stmt 0       # ./blockquick.h:67:12
	addl	%r10d, %edx
.Ltmp128:
	#DEBUG_VALUE: partition_quick_block:numL <- $edx
	.loc	1 68 7 is_stmt 1        # ./blockquick.h:68:7
	movl	%ecx, %eax
	.loc	1 68 22 is_stmt 0       # ./blockquick.h:68:22
	movl	%ebx, -48(%rsp,%rax,4)
	.loc	1 69 21 is_stmt 1       # ./blockquick.h:69:21
	xorl	%eax, %eax
	cmpl	(%rbp), %r11d
	setge	%al
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%ecx, %eax
.Ltmp129:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 66 22 is_stmt 1       # ./blockquick.h:66:22
	leal	1(%rbx), %ecx
	movl	%ecx, 464(%rsp,%rdx,4)
	.loc	1 67 21                 # ./blockquick.h:67:21
	xorl	%r10d, %r10d
	cmpl	(%r12,%rbx,4), %r11d
	setle	%r10b
	.loc	1 67 12 is_stmt 0       # ./blockquick.h:67:12
	addl	%edx, %r10d
.Ltmp130:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	.loc	1 68 22 is_stmt 1       # ./blockquick.h:68:22
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 69 21                 # ./blockquick.h:69:21
	xorl	%ecx, %ecx
	cmpl	-4(%rbp), %r11d
	setge	%cl
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%eax, %ecx
.Ltmp131:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 65 34 is_stmt 1       # ./blockquick.h:65:34
	addq	$2, %rbx
.Ltmp132:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 65 5 is_stmt 0        # ./blockquick.h:65:5
	addq	$-8, %rbp
	cmpq	%rbx, %r15
	jne	.LBB0_29
.Ltmp133:
.LBB0_22:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r8, %r8
	movq	-96(%rsp), %r8          # 8-byte Reload
	je	.LBB0_24
.Ltmp134:
# %bb.23:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 66 7 is_stmt 1        # ./blockquick.h:66:7
	movl	%r10d, %eax
	.loc	1 66 22 is_stmt 0       # ./blockquick.h:66:22
	movl	%ebx, 464(%rsp,%rax,4)
	.loc	1 67 34 is_stmt 1       # ./blockquick.h:67:34
	leaq	(%rsi,%rbx), %rax
.Ltmp135:
	#DEBUG_VALUE: partition_quick_block:numL <- undef
	.loc	1 68 7                  # ./blockquick.h:68:7
	movl	%ecx, %r8d
.Ltmp136:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: partition_quick_block:numR <- undef
	.loc	1 69 35                 # ./blockquick.h:69:35
	movq	%r9, %rdx
	subq	%rbx, %rdx
	.loc	1 67 21                 # ./blockquick.h:67:21
	xorl	%ebp, %ebp
	cmpl	(%rdi,%rax,4), %r11d
	.loc	1 68 22                 # ./blockquick.h:68:22
	movl	%ebx, -48(%rsp,%r8,4)
	movq	-96(%rsp), %r8          # 8-byte Reload
	.loc	1 67 21                 # ./blockquick.h:67:21
	setle	%bpl
	.loc	1 69 21                 # ./blockquick.h:69:21
	xorl	%eax, %eax
	cmpl	(%rdi,%rdx,4), %r11d
	setge	%al
	.loc	1 69 12 is_stmt 0       # ./blockquick.h:69:12
	addl	%ecx, %eax
.Ltmp137:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 67 12 is_stmt 1       # ./blockquick.h:67:12
	addl	%r10d, %ebp
.Ltmp138:
	#DEBUG_VALUE: partition_quick_block:numL <- $ebp
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%ebp, %r10d
.Ltmp139:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	movl	%eax, %ecx
.Ltmp140:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
.LBB0_24:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 71 16 is_stmt 1       # ./blockquick.h:71:16
	cmpl	%r13d, %r8d
.Ltmp141:
	.loc	1 71 9 is_stmt 0        # ./blockquick.h:71:9
	jge	.LBB0_25
.Ltmp142:
# %bb.30:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 72 31 is_stmt 1       # ./blockquick.h:72:31
	leal	-1(%r13), %eax
	.loc	1 72 7 is_stmt 0        # ./blockquick.h:72:7
	movl	%ecx, %edx
	.loc	1 72 22                 # ./blockquick.h:72:22
	movl	%eax, -48(%rsp,%rdx,4)
	.loc	1 73 37 is_stmt 1       # ./blockquick.h:73:37
	movslq	%r13d, %rax
	.loc	1 73 44 is_stmt 0       # ./blockquick.h:73:44
	movq	%r9, %rdx
	subq	%rax, %rdx
	.loc	1 73 21                 # ./blockquick.h:73:21
	xorl	%eax, %eax
	cmpl	4(%rdi,%rdx,4), %r11d
	setge	%al
	.loc	1 73 12                 # ./blockquick.h:73:12
	addl	%ecx, %eax
.Ltmp143:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 0 0                   # ./blockquick.h:0:0
	xorl	%ecx, %ecx
	movq	%rcx, -120(%rsp)        # 8-byte Spill
	movl	%eax, %ecx
.Ltmp144:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	jmp	.LBB0_31
.Ltmp145:
.LBB0_25:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- 0
	#DEBUG_VALUE: partition_quick_block:startR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	jmp	.LBB0_31
.Ltmp146:
.LBB0_48:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startR <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	xorl	%ecx, %ecx
	jmp	.LBB0_56
.Ltmp147:
.LBB0_53:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:numR <- 0
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	leaq	(%rdi,%r9,4), %rbp
	subq	%r15, %r12
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
.Ltmp148:
	.p2align	4, 0x90
.LBB0_54:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: j <- $rbx
	.loc	1 88 7                  # ./blockquick.h:88:7
	movl	%ecx, %eax
	.loc	1 88 22 is_stmt 0       # ./blockquick.h:88:22
	movl	%ebx, -48(%rsp,%rax,4)
	.loc	1 89 21 is_stmt 1       # ./blockquick.h:89:21
	xorl	%eax, %eax
	cmpl	(%rbp), %r11d
	setge	%al
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%ecx, %eax
.Ltmp149:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	1(%rbx), %ecx
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	-4(%rbp), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp150:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	2(%rbx), %eax
	movl	%eax, -48(%rsp,%rcx,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%eax, %eax
	cmpl	-8(%rbp), %r11d
	setge	%al
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%ecx, %eax
.Ltmp151:
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 22 is_stmt 1       # ./blockquick.h:88:22
	leal	3(%rbx), %ecx
	movl	%ecx, -48(%rsp,%rax,4)
	.loc	1 89 21                 # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	-12(%rbp), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp152:
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 87 34 is_stmt 1       # ./blockquick.h:87:34
	addq	$4, %rbx
.Ltmp153:
	#DEBUG_VALUE: j <- $rbx
	.loc	1 87 5 is_stmt 0        # ./blockquick.h:87:5
	addq	$-16, %rbp
	cmpq	%rbx, %r12
	jne	.LBB0_54
.Ltmp154:
.LBB0_55:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	testq	%r15, %r15
	je	.LBB0_56
.Ltmp155:
# %bb.57:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	%r9, %rax
	subq	%rbx, %rax
	leaq	(%rdi,%rax,4), %rdx
	negq	%r15
	xorl	%eax, %eax
	movq	%rax, -120(%rsp)        # 8-byte Spill
	xorl	%ebp, %ebp
.Ltmp156:
	.p2align	4, 0x90
.LBB0_58:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movl	%ecx, %eax
.Ltmp157:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_block:numR <- $eax
	.loc	1 88 7 is_stmt 1        # ./blockquick.h:88:7
	movl	%ecx, %ecx
	.loc	1 88 22 is_stmt 0       # ./blockquick.h:88:22
	movl	%ebx, -48(%rsp,%rcx,4)
	.loc	1 89 21 is_stmt 1       # ./blockquick.h:89:21
	xorl	%ecx, %ecx
	cmpl	(%rdx,%rbp,4), %r11d
	setge	%cl
	.loc	1 89 12 is_stmt 0       # ./blockquick.h:89:12
	addl	%eax, %ecx
.Ltmp158:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	.loc	1 87 5 is_stmt 1        # ./blockquick.h:87:5
	decq	%rbp
	incl	%ebx
	cmpq	%rbp, %r15
	jne	.LBB0_58
.Ltmp159:
.LBB0_56:
	#DEBUG_VALUE: partition_quick_block:shiftL <- 0
	#DEBUG_VALUE: partition_quick_block:shiftR <- 0
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0 is_stmt 0         # ./blockquick.h:0:0
	movl	%r8d, %r13d
	movl	$128, %r8d
.Ltmp160:
.LBB0_31:
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startL <- $r14d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: min:x <- $r10d
	#DEBUG_VALUE: min:y <- $ecx
	movq	%r14, -88(%rsp)         # 8-byte Spill
.Ltmp161:
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	.loc	15 3 42 is_stmt 1       # ./minmax.h:3:42
	cmpl	%ecx, %r10d
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%ecx, %r15d
	cmovlel	%r10d, %r15d
.Ltmp162:
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	.loc	1 95 21 is_stmt 1       # ./blockquick.h:95:21
	testl	%r15d, %r15d
.Ltmp163:
	.loc	1 95 3 is_stmt 0        # ./blockquick.h:95:3
	jle	.LBB0_36
.Ltmp164:
# %bb.32:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:pivot <- $r11d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movslq	-120(%rsp), %rax        # 4-byte Folded Reload
	movslq	-88(%rsp), %rdx         # 4-byte Folded Reload
	movl	%r15d, %r11d
.Ltmp165:
	movl	%r11d, %ebx
	andl	$1, %ebx
	cmpl	$1, %r15d
	movq	%r8, -96(%rsp)          # 8-byte Spill
	movq	%rax, -72(%rsp)         # 8-byte Spill
	movq	%rdx, -80(%rsp)         # 8-byte Spill
	movq	%rbx, -64(%rsp)         # 8-byte Spill
	jne	.LBB0_59
.Ltmp166:
# %bb.33:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 3                   # ./blockquick.h:0:3
	xorl	%eax, %eax
	movq	%rsi, %r8
.Ltmp167:
	jmp	.LBB0_34
.Ltmp168:
.LBB0_59:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:shiftL <- $r8d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 95 3                  # ./blockquick.h:95:3
	leaq	(%rsp,%rdx,4), %r14
	addq	$468, %r14              # imm = 0x1D4
	leaq	(%rsp,%rax,4), %r12
	addq	$-44, %r12
	subq	%rbx, %r11
	xorl	%eax, %eax
	movq	%rsi, %r8
.Ltmp169:
	.p2align	4, 0x90
.LBB0_60:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: j <- $rax
	.loc	1 96 23 is_stmt 1       # ./blockquick.h:96:23
	movslq	-4(%r14,%rax,4), %rsi
	.loc	1 96 21 is_stmt 0       # ./blockquick.h:96:21
	addq	%r8, %rsi
	.loc	1 97 24 is_stmt 1       # ./blockquick.h:97:24
	movslq	-4(%r12,%rax,4), %rbx
	.loc	1 97 22 is_stmt 0       # ./blockquick.h:97:22
	movq	%r9, %rbp
	subq	%rbx, %rbp
.Ltmp170:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rsi,4), %ebx
.Ltmp171:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbp,4), %edx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%rsi,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebx, (%rdi,%rbp,4)
.Ltmp172:
	.loc	1 96 23                 # ./blockquick.h:96:23
	movslq	(%r14,%rax,4), %rdx
	.loc	1 96 21 is_stmt 0       # ./blockquick.h:96:21
	addq	%r8, %rdx
	.loc	1 97 24 is_stmt 1       # ./blockquick.h:97:24
	movslq	(%r12,%rax,4), %rsi
	.loc	1 97 22 is_stmt 0       # ./blockquick.h:97:22
	movq	%r9, %rbx
.Ltmp173:
	subq	%rsi, %rbx
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
.Ltmp174:
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rdx,4), %esi
.Ltmp175:
	#DEBUG_VALUE: swap:t <- $esi
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbx,4), %ebp
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, (%rdi,%rdx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%esi, (%rdi,%rbx,4)
.Ltmp176:
	.loc	1 95 29                 # ./blockquick.h:95:29
	addq	$2, %rax
.Ltmp177:
	#DEBUG_VALUE: j <- $rax
	.loc	1 95 3 is_stmt 0        # ./blockquick.h:95:3
	cmpq	%rax, %r11
	jne	.LBB0_60
.Ltmp178:
.LBB0_34:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	cmpq	$0, -64(%rsp)           # 8-byte Folded Reload
	movq	%r8, %rsi
	movq	-96(%rsp), %r8          # 8-byte Reload
	je	.LBB0_36
.Ltmp179:
# %bb.35:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 0 3                   # ./blockquick.h:0:3
	movq	%rdi, %rbx
.Ltmp180:
	#DEBUG_VALUE: j <- $rax
	movq	-80(%rsp), %rdx         # 8-byte Reload
.Ltmp181:
	.loc	1 96 39 is_stmt 1       # ./blockquick.h:96:39
	addq	%rax, %rdx
	.loc	1 96 23 is_stmt 0       # ./blockquick.h:96:23
	movslq	464(%rsp,%rdx,4), %rdx
	.loc	1 96 21                 # ./blockquick.h:96:21
	addq	%rsi, %rdx
	movq	-72(%rsp), %rdi         # 8-byte Reload
	.loc	1 97 40 is_stmt 1       # ./blockquick.h:97:40
	addq	%rax, %rdi
	.loc	1 97 24 is_stmt 0       # ./blockquick.h:97:24
	movslq	-48(%rsp,%rdi,4), %rax
.Ltmp182:
	.loc	1 97 22                 # ./blockquick.h:97:22
	movq	%r9, %rdi
	subq	%rax, %rdi
.Ltmp183:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rbx,%rdx,4), %eax
.Ltmp184:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rbx,%rdi,4), %ebp
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, (%rbx,%rdx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rbx,%rdi,4)
.Ltmp185:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB0_36:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:startL <- undef
	#DEBUG_VALUE: partition_quick_block:startR <- undef
	#DEBUG_VALUE: partition_quick_block:numL <- undef
	#DEBUG_VALUE: partition_quick_block:numR <- undef
	.loc	1 104 7                 # ./blockquick.h:104:7
	movslq	%r8d, %rax
	addq	%rsi, %rax
	xorl	%ebp, %ebp
.Ltmp186:
	.loc	1 107 12                # ./blockquick.h:107:12
	cmpl	%r10d, %ecx
.Ltmp187:
	.loc	1 107 7 is_stmt 0       # ./blockquick.h:107:7
	cmovlel	%r13d, %ebp
	movslq	%ebp, %r14
	movq	%r9, %rdi
	subq	%r14, %r9
.Ltmp188:
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 104 12 is_stmt 1      # ./blockquick.h:104:12
	cmpl	%ecx, %r10d
.Ltmp189:
	.loc	1 104 7 is_stmt 0       # ./blockquick.h:104:7
	cmovleq	%rax, %rsi
.Ltmp190:
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 111 7 is_stmt 1       # ./blockquick.h:111:7
	jg	.LBB0_37
.Ltmp191:
# %bb.69:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: partition_quick_block:startR <- undef
	.loc	1 107 12                # ./blockquick.h:107:12
	cmpl	%r10d, %ecx
.Ltmp192:
	.loc	1 123 14                # ./blockquick.h:123:14
	jg	.LBB0_70
.Ltmp193:
# %bb.82:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 136 11                # ./blockquick.h:136:11
	movslq	-104(%rsp), %rcx        # 4-byte Folded Reload
.Ltmp194:
	.loc	1 0 11 is_stmt 0        # ./blockquick.h:0:11
	movq	-112(%rsp), %rdi        # 8-byte Reload
	.loc	1 136 11                # ./blockquick.h:136:11
	leaq	(%rdi,%rcx,4), %rcx
.Ltmp195:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 0 11                  # ./blockquick.h:0:11
	movq	%rsi, %rbx
.Ltmp196:
	#DEBUG_VALUE: partition_quick_block:low <- $rbx
	jmp	.LBB0_83
.Ltmp197:
.LBB0_37:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-88(%rsp), %rax         # 8-byte Reload
	leal	(%r15,%rax), %r11d
.Ltmp198:
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	.loc	1 112 24 is_stmt 1      # ./blockquick.h:112:24
	leal	(%r10,%rax), %ecx
.Ltmp199:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	.loc	1 113 22                # ./blockquick.h:113:22
	subl	%esi, %r9d
.Ltmp200:
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 114 5                 # ./blockquick.h:114:5
	movslq	%r11d, %r8
	.loc	1 114 18 is_stmt 0      # ./blockquick.h:114:18
	cmpl	%r11d, %ecx
	.loc	1 114 28                # ./blockquick.h:114:28
	jle	.LBB0_38
.Ltmp201:
# %bb.61:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 114 5                 # ./blockquick.h:114:5
	movslq	%ecx, %rcx
.Ltmp202:
	addl	%edi, %r15d
.Ltmp203:
	subl	%ebp, %r15d
	subl	%r10d, %r15d
	movq	%rsi, %rbx
	subl	%esi, %r15d
	leal	-1(%r11), %ebp
	leal	(%r10,%rax), %edx
	decl	%edx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp204:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp205:
	.p2align	4, 0x90
.LBB0_62:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 114 47                # ./blockquick.h:114:47
	cmpl	460(%rsp,%rcx,4), %r9d
	.loc	1 114 5                 # ./blockquick.h:114:5
	jne	.LBB0_65
.Ltmp206:
# %bb.63:                               #   in Loop: Header=BB0_62 Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	decq	%rcx
.Ltmp207:
	.loc	1 115 12 is_stmt 1      # ./blockquick.h:115:12
	decl	%r9d
.Ltmp208:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rcx
	.loc	1 114 18                # ./blockquick.h:114:18
	decl	%edx
	cmpq	%r8, %rcx
	.loc	1 114 28 is_stmt 0      # ./blockquick.h:114:28
	jg	.LBB0_62
.Ltmp209:
# %bb.64:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rcx
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	movl	%r15d, %r9d
.Ltmp210:
	movl	%ebp, %edx
	jmp	.LBB0_65
.Ltmp211:
.LBB0_70:
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-120(%rsp), %rax        # 8-byte Reload
	leal	(%r15,%rax), %r8d
.Ltmp212:
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	.loc	1 124 24 is_stmt 1      # ./blockquick.h:124:24
	leal	(%rcx,%rax), %edx
.Ltmp213:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	.loc	1 125 22                # ./blockquick.h:125:22
	movl	%r9d, %r11d
	subl	%esi, %r11d
.Ltmp214:
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- $r11d
	.loc	1 126 18                # ./blockquick.h:126:18
	cmpl	%r8d, %edx
	.loc	1 126 28 is_stmt 0      # ./blockquick.h:126:28
	jle	.LBB0_71
.Ltmp215:
# %bb.72:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 126 5                 # ./blockquick.h:126:5
	movslq	%edx, %rdx
.Ltmp216:
	movslq	%r8d, %r10
.Ltmp217:
	addl	%edi, %r15d
.Ltmp218:
	subl	%ebp, %r15d
	subl	%ecx, %r15d
	subl	%esi, %r15d
	leal	-1(%r8), %ebp
	addl	%eax, %ecx
.Ltmp219:
	decl	%ecx
.Ltmp220:
	.p2align	4, 0x90
.LBB0_73:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	#DEBUG_VALUE: upper <- $r11d
	.loc	1 126 47                # ./blockquick.h:126:47
	cmpl	-52(%rsp,%rdx,4), %r11d
	.loc	1 126 5                 # ./blockquick.h:126:5
	jne	.LBB0_76
.Ltmp221:
# %bb.74:                               #   in Loop: Header=BB0_73 Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	decq	%rdx
.Ltmp222:
	.loc	1 127 12 is_stmt 1      # ./blockquick.h:127:12
	decl	%r11d
.Ltmp223:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdx
	.loc	1 126 18                # ./blockquick.h:126:18
	decl	%ecx
	cmpq	%r10, %rdx
	.loc	1 126 28 is_stmt 0      # ./blockquick.h:126:28
	jg	.LBB0_73
.Ltmp224:
# %bb.75:
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 0                   # ./blockquick.h:0:0
	movl	%r15d, %r11d
.Ltmp225:
	movl	%ebp, %ecx
.Ltmp226:
.LBB0_76:
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp227:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- $ecx
	.loc	1 130 18 is_stmt 1      # ./blockquick.h:130:18
	cmpl	%r8d, %ecx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jge	.LBB0_78
.Ltmp228:
.LBB0_77:
	#DEBUG_VALUE: lower <- $ecx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	.loc	1 0 5                   # ./blockquick.h:0:5
	movq	-112(%rsp), %rdi        # 8-byte Reload
	jmp	.LBB0_81
.Ltmp229:
.LBB0_38:
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $ecx
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movq	%rsi, %rbx
.Ltmp230:
	#DEBUG_VALUE: partition_quick_block:low <- $rbx
	leal	(%r10,%rax), %edx
	decl	%edx
.Ltmp231:
	#DEBUG_VALUE: lower <- $edx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp232:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	movq	-112(%rsp), %rdi        # 8-byte Reload
.Ltmp233:
.LBB0_65:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: lower <- $edx
	.loc	1 118 18 is_stmt 1      # ./blockquick.h:118:18
	cmpl	%r11d, %edx
	.loc	1 118 5 is_stmt 0       # ./blockquick.h:118:5
	jl	.LBB0_68
.Ltmp234:
# %bb.66:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: lower <- $edx
	#DEBUG_VALUE: upper <- $r9d
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	movslq	%r9d, %rsi
	movslq	%edx, %rcx
	incq	%rcx
	addq	%rbx, %rsi
	leaq	(%rdi,%rsi,4), %rdx
.Ltmp235:
	.p2align	4, 0x90
.LBB0_67:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: upper <- undef
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	1 119 48 is_stmt 1      # ./blockquick.h:119:48
	movslq	460(%rsp,%rcx,4), %rsi
	.loc	1 119 46 is_stmt 0      # ./blockquick.h:119:46
	addq	%rbx, %rsi
.Ltmp236:
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdx), %ebp
.Ltmp237:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rsi,4), %eax
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%eax, (%rdx)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%ebp, (%rdi,%rsi,4)
.Ltmp238:
	.loc	1 118 18                # ./blockquick.h:118:18
	decq	%rcx
	addq	$-4, %rdx
	decl	%r9d
	cmpq	%r8, %rcx
	.loc	1 118 5 is_stmt 0       # ./blockquick.h:118:5
	jg	.LBB0_67
.Ltmp239:
.LBB0_68:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- [DW_OP_constu 120, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: upper <- $r9d
	.loc	1 121 11 is_stmt 1      # ./blockquick.h:121:11
	movslq	%r10d, %rax
	leaq	(%rdi,%rax,4), %rcx
.Ltmp240:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 121 47 is_stmt 0      # ./blockquick.h:121:47
	movslq	%r9d, %rax
	.loc	1 121 53                # ./blockquick.h:121:53
	addq	%rax, %rbx
	incq	%rbx
.Ltmp241:
	.loc	1 0 0                   # ./blockquick.h:0:0
	movq	%rbx, %rax
	jmp	.LBB0_83
.Ltmp242:
.LBB0_71:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $edx
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:num <- $r15d
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:numR <- $ecx
	#DEBUG_VALUE: partition_quick_block:numL <- $r10d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_constu 104, DW_OP_minus, DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	addl	%eax, %ecx
.Ltmp243:
	decl	%ecx
.Ltmp244:
	#DEBUG_VALUE: lower <- $ecx
	movq	-104(%rsp), %r10        # 8-byte Reload
.Ltmp245:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: lower <- $ecx
	.loc	1 130 18 is_stmt 1      # ./blockquick.h:130:18
	cmpl	%r8d, %ecx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jl	.LBB0_77
.Ltmp246:
.LBB0_78:
	#DEBUG_VALUE: lower <- $ecx
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:startR <- $r8d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: partition_quick_block:low <- $rsi
	movslq	%r11d, %rsi
.Ltmp247:
	movslq	%ecx, %rcx
.Ltmp248:
	movslq	%r8d, %r8
.Ltmp249:
	incq	%rcx
	movq	%rdi, %rax
	subq	%rsi, %rax
	subq	%r14, %rax
	movq	-112(%rsp), %rdi        # 8-byte Reload
	leaq	(%rdi,%rax,4), %rbp
	xorl	%esi, %esi
.Ltmp250:
	.p2align	4, 0x90
.LBB0_79:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: lower <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	#DEBUG_VALUE: upper <- undef
	#DEBUG_VALUE: lower <- undef
	#DEBUG_VALUE: upper <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	1 131 50 is_stmt 1      # ./blockquick.h:131:50
	movslq	-52(%rsp,%rcx,4), %rdx
	.loc	1 131 48 is_stmt 0      # ./blockquick.h:131:48
	movq	%r9, %rbx
	subq	%rdx, %rbx
.Ltmp251:
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rbp,%rsi,4), %edx
.Ltmp252:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rbx,4), %eax
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%eax, (%rbp,%rsi,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rbx,4)
.Ltmp253:
	.loc	1 130 18                # ./blockquick.h:130:18
	decq	%rcx
	incq	%rsi
	cmpq	%r8, %rcx
	.loc	1 130 5 is_stmt 0       # ./blockquick.h:130:5
	jg	.LBB0_79
.Ltmp254:
# %bb.80:
	#DEBUG_VALUE: upper <- $r11d
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	.loc	1 133 11 is_stmt 1      # ./blockquick.h:133:11
	subl	%esi, %r11d
.Ltmp255:
.LBB0_81:
	#DEBUG_VALUE: partition_quick_block:pivot_position <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $r10
	#DEBUG_VALUE: partition_quick_block:startL <- [DW_OP_constu 88, DW_OP_minus] [$rsp+0]
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: partition_quick_block:high <- $r9
	#DEBUG_VALUE: upper <- $r11d
	movslq	%r10d, %rax
	leaq	(%rdi,%rax,4), %rcx
.Ltmp256:
	#DEBUG_VALUE: swap:a <- $rcx
	.loc	1 133 48 is_stmt 0      # ./blockquick.h:133:48
	movslq	%r11d, %rax
	.loc	1 133 46                # ./blockquick.h:133:46
	subq	%rax, %r9
.Ltmp257:
	.loc	1 0 46                  # ./blockquick.h:0:46
	movq	%r9, %rdx
.Ltmp258:
	movq	%r9, %rax
	movq	%r9, %rbx
.Ltmp259:
.LBB0_83:
	#DEBUG_VALUE: partition_quick_block:shiftR <- $r13d
	#DEBUG_VALUE: swap:b <- undef
	movl	(%rcx), %edx
.Ltmp260:
	#DEBUG_VALUE: swap:t <- $edx
	movl	(%rdi,%rbx,4), %esi
	movl	%esi, (%rcx)
	movl	%edx, (%rdi,%rbx,4)
.Ltmp261:
	.loc	1 139 1 is_stmt 1       # ./blockquick.h:139:1
	addq	$984, %rsp              # imm = 0x3D8
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
.Ltmp262:
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp263:
.Lfunc_end0:
	.size	partition_quick_block, .Lfunc_end0-partition_quick_block
	.cfi_endproc
	.file	17 "/usr/include/x86_64-linux-gnu/bits" "stdint-intn.h"
                                        # -- End function
	.globl	median_of_three         # -- Begin function median_of_three
	.p2align	4, 0x90
	.type	median_of_three,@function
median_of_three:                        # @median_of_three
.Lfunc_begin1:
	.loc	4 4 0                   # ./median.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:high <- $rdx
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp264:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB1_2
.Ltmp265:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %eax
.Ltmp266:
	.loc	4 23 1                  # ./median.h:23:1
	retq
.Ltmp267:
.LBB1_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	.loc	4 9 18                  # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp268:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %r8d
.Ltmp269:
	#DEBUG_VALUE: median_of_three:x <- $r8d
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r9
	movl	(%rdi,%r9,4), %eax
.Ltmp270:
	#DEBUG_VALUE: median_of_three:y <- $eax
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %r10d
.Ltmp271:
	#DEBUG_VALUE: median_of_three:z <- $r10d
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%eax, %r8d
.Ltmp272:
	#DEBUG_VALUE: min:y <- $eax
	#DEBUG_VALUE: min:x <- $r8d
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%eax, %ecx
.Ltmp273:
	cmovlel	%r8d, %ecx
.Ltmp274:
	#DEBUG_VALUE: max:y <- $eax
	#DEBUG_VALUE: max:x <- $r8d
	.loc	15 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%eax, %r11d
	cmovgel	%r8d, %r11d
.Ltmp275:
	#DEBUG_VALUE: min:y <- $r10d
	#DEBUG_VALUE: min:x <- $ecx
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%r10d, %ecx
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%r10d, %ecx
.Ltmp276:
	#DEBUG_VALUE: max:y <- $r10d
	#DEBUG_VALUE: median_of_three:smallest <- $ecx
	#DEBUG_VALUE: max:x <- $r11d
	.loc	15 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%r10d, %r11d
	.loc	15 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%r10d, %r11d
.Ltmp277:
	#DEBUG_VALUE: median_of_three:largest <- $r11d
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%r8d, %eax
.Ltmp278:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%r10d, %eax
	.loc	4 16 26                 # ./median.h:16:26
	subl	%ecx, %eax
	.loc	4 16 37                 # ./median.h:16:37
	subl	%r11d, %eax
.Ltmp279:
	#DEBUG_VALUE: median_of_three:median <- $eax
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%eax, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%r11d, (%rdi,%r9,4)
	.loc	4 23 1                  # ./median.h:23:1
	retq
.Ltmp280:
.Lfunc_end1:
	.size	median_of_three, .Lfunc_end1-median_of_three
	.cfi_endproc
                                        # -- End function
	.globl	min                     # -- Begin function min
	.p2align	4, 0x90
	.type	min,@function
min:                                    # @min
.Lfunc_begin2:
	.loc	15 3 0                  # ./minmax.h:3:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: min:x <- $edi
	#DEBUG_VALUE: min:y <- $esi
	movl	%esi, %eax
.Ltmp281:
	#DEBUG_VALUE: min:y <- $eax
	#DEBUG_VALUE: min:x <- $edi
	.loc	15 3 42 prologue_end    # ./minmax.h:3:42
	cmpl	%esi, %edi
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovlel	%edi, %eax
.Ltmp282:
	.loc	15 3 32                 # ./minmax.h:3:32
	retq
.Ltmp283:
.Lfunc_end2:
	.size	min, .Lfunc_end2-min
	.cfi_endproc
                                        # -- End function
	.globl	swap                    # -- Begin function swap
	.p2align	4, 0x90
	.type	swap,@function
swap:                                   # @swap
.Lfunc_begin3:
	.loc	16 1 0 is_stmt 1        # ./swap.h:1:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: swap:a <- $rdi
	#DEBUG_VALUE: swap:a <- $rdi
	#DEBUG_VALUE: swap:b <- $rsi
	#DEBUG_VALUE: swap:b <- $rsi
	.loc	16 2 11 prologue_end    # ./swap.h:2:11
	movl	(%rdi), %eax
.Ltmp284:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rsi), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rsi)
	.loc	16 5 1                  # ./swap.h:5:1
	retq
.Ltmp285:
.Lfunc_end3:
	.size	swap, .Lfunc_end3-swap
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_block        # -- Begin function sort_quick_block
	.p2align	4, 0x90
	.type	sort_quick_block,@function
sort_quick_block:                       # @sort_quick_block
.Lfunc_begin4:
	.loc	1 141 0                 # ./blockquick.h:141:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	1 142 11 prologue_end   # ./blockquick.h:142:11
	cmpq	%rsi, %rdx
.Ltmp286:
	.loc	1 142 7 is_stmt 0       # ./blockquick.h:142:7
	jle	.LBB4_22
.Ltmp287:
# %bb.1:
	#DEBUG_VALUE: sort_quick_block:high <- $rdx
	#DEBUG_VALUE: sort_quick_block:low <- $rsi
	#DEBUG_VALUE: sort_quick_block:array <- $rdi
	.loc	1 0 7                   # ./blockquick.h:0:7
	movq	%rdx, %r15
.Ltmp288:
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	movq	%rsi, %r12
.Ltmp289:
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	movq	%rdi, %r14
.Ltmp290:
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	.p2align	4, 0x90
.LBB4_2:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 143 14 is_stmt 1      # ./blockquick.h:143:14
	movq	%r15, %rsi
	subq	%r12, %rsi
	.loc	1 143 20 is_stmt 0      # ./blockquick.h:143:20
	cmpq	$21, %rsi
.Ltmp291:
	.loc	1 143 9                 # ./blockquick.h:143:9
	jl	.LBB4_4
.Ltmp292:
# %bb.3:                                #   in Loop: Header=BB4_2 Depth=1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	.loc	1 144 20 is_stmt 1      # ./blockquick.h:144:20
	movq	%r14, %rdi
	movq	%r12, %rsi
	movq	%r15, %rdx
	callq	partition_quick_block
.Ltmp293:
	movq	%rax, %rbx
.Ltmp294:
	#DEBUG_VALUE: pi <- $rbx
	.loc	1 145 39                # ./blockquick.h:145:39
	leaq	-1(%rax), %rdx
	.loc	1 145 7 is_stmt 0       # ./blockquick.h:145:7
	movq	%r14, %rdi
	movq	%r12, %rsi
	callq	sort_quick_block
.Ltmp295:
	.loc	1 146 34 is_stmt 1      # ./blockquick.h:146:34
	incq	%rbx
.Ltmp296:
	#DEBUG_VALUE: sort_quick_block:low <- $rbx
	.loc	1 0 34 is_stmt 0        # ./blockquick.h:0:34
	movq	%rbx, %r12
.Ltmp297:
	.loc	1 142 11 is_stmt 1      # ./blockquick.h:142:11
	cmpq	%r15, %rbx
.Ltmp298:
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:array <- undef
	.loc	1 142 7 is_stmt 0       # ./blockquick.h:142:7
	jl	.LBB4_2
	jmp	.LBB4_22
.Ltmp299:
.LBB4_4:
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 148 34 is_stmt 1      # ./blockquick.h:148:34
	incl	%esi
.Ltmp300:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:array <- undef
	#DEBUG_VALUE: insertionSort:n <- $esi
	.file	18 "/home/peeters/bachelor" "./insertionssort.h"
	.loc	18 3 17                 # ./insertionssort.h:3:17
	cmpl	$2, %esi
.Ltmp301:
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB4_22
.Ltmp302:
# %bb.5:
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: sort_quick_block:high <- $r15
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r14,%r12,4), %rax
.Ltmp303:
	#DEBUG_VALUE: insertionSort:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp304:
	.loc	18 3 17                 # ./insertionssort.h:3:17
	movl	%esi, %r10d
.Ltmp305:
	.loc	18 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp306:
	cmpl	$2, %esi
	jne	.LBB4_6
.Ltmp307:
.LBB4_16:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB4_22
.Ltmp308:
# %bb.17:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp309:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp310:
	.p2align	4, 0x90
.LBB4_18:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 7 31                 # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_21
.Ltmp311:
# %bb.19:                               #   in Loop: Header=BB4_18 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp312:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp313:
	leaq	-1(%r15), %r15
.Ltmp314:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_18
.Ltmp315:
# %bb.20:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp316:
.LBB4_21:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rcx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp317:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB4_22:
	.loc	1 151 1 is_stmt 1       # ./blockquick.h:151:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB4_6:
	.cfi_def_cfa_offset 48
.Ltmp318:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_block:array <- $r14
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	1 0 1 is_stmt 0         # ./blockquick.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp319:
	.loc	18 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp320:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB4_7
.Ltmp321:
	.p2align	4, 0x90
.LBB4_15:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp322:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp323:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB4_16
.Ltmp324:
.LBB4_7:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB4_8 Depth 2
                                        #     Child Loop BB4_12 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp325:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp326:
	.p2align	4, 0x90
.LBB4_8:                                #   Parent Loop BB4_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_11
.Ltmp327:
# %bb.9:                                #   in Loop: Header=BB4_8 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp328:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp329:
	leaq	-1(%rdi), %rdi
.Ltmp330:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_8
.Ltmp331:
# %bb.10:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp332:
.LBB4_11:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp333:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rdi
.Ltmp334:
	#DEBUG_VALUE: insertionSort:i <- $rdi
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	4(%rax,%r15,4), %esi
.Ltmp335:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp336:
	.p2align	4, 0x90
.LBB4_12:                               #   Parent Loop BB4_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB4_15
.Ltmp337:
# %bb.13:                               #   in Loop: Header=BB4_12 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp338:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp339:
	leaq	-1(%rdi), %rdi
.Ltmp340:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB4_12
.Ltmp341:
# %bb.14:                               #   in Loop: Header=BB4_7 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: sort_quick_block:low <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB4_15
.Lfunc_end4:
	.size	sort_quick_block, .Lfunc_end4-sort_quick_block
	.cfi_endproc
                                        # -- End function
	.globl	insertionSort           # -- Begin function insertionSort
	.p2align	4, 0x90
	.type	insertionSort,@function
insertionSort:                          # @insertionSort
.Lfunc_begin5:
	.loc	18 1 0 is_stmt 1        # ./insertionssort.h:1:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:n <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp342:
	#DEBUG_VALUE: insertionSort:i <- 1
	.loc	18 3 17 prologue_end    # ./insertionssort.h:3:17
	cmpl	$2, %esi
.Ltmp343:
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB5_18
.Ltmp344:
# %bb.1:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	movabsq	$-4294967296, %rax      # imm = 0xFFFFFFFF00000000
.Ltmp345:
	.loc	18 3 17                 # ./insertionssort.h:3:17
	movl	%esi, %r10d
.Ltmp346:
	.loc	18 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %esi
	jne	.LBB5_2
.Ltmp347:
.LBB5_12:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB5_18
.Ltmp348:
# %bb.13:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	(%rdi,%r15,4), %edx
.Ltmp349:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $edx
	.loc	18 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rsi
	shlq	$32, %rsi
	addq	%rax, %rsi
.Ltmp350:
	.p2align	4, 0x90
.LBB5_14:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rsi, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	18 7 31                 # ./insertionssort.h:7:31
	cmpl	%edx, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_17
.Ltmp351:
# %bb.15:                               #   in Loop: Header=BB5_14 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%r15,4)
.Ltmp352:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rsi
	cmpq	$1, %r15
.Ltmp353:
	leaq	-1(%r15), %r15
.Ltmp354:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_14
.Ltmp355:
# %bb.16:
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp356:
.LBB5_17:
	#DEBUG_VALUE: insertionSort:element <- $edx
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rax
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%edx, (%rdi,%rax,4)
.Ltmp357:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB5_18:
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 13 1 is_stmt 1       # ./insertionssort.h:13:1
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp358:
.LBB5_2:
	.cfi_def_cfa_offset 40
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:n <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 0 1 is_stmt 0        # ./insertionssort.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp359:
	.loc	18 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB5_3
.Ltmp360:
	.p2align	4, 0x90
.LBB5_11:                               #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 11 5                 # ./insertionssort.h:11:5
	movslq	%ebx, %rcx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp361:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp362:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB5_12
.Ltmp363:
.LBB5_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB5_4 Depth 2
                                        #     Child Loop BB5_8 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rdi
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rdi,%r15,4), %esi
.Ltmp364:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rcx
	movq	%r15, %rbx
.Ltmp365:
	.p2align	4, 0x90
.LBB5_4:                                #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rcx, %rdx
	sarq	$30, %rdx
	movl	(%rdi,%rdx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_7
.Ltmp366:
# %bb.5:                                #   in Loop: Header=BB5_4 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp367:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rcx
	cmpq	$1, %rbx
.Ltmp368:
	leaq	-1(%rbx), %rbx
.Ltmp369:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_4
.Ltmp370:
# %bb.6:                                #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
.Ltmp371:
.LBB5_7:                                #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%ebx, %rcx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp372:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rbx
.Ltmp373:
	#DEBUG_VALUE: insertionSort:i <- $rbx
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	4(%rdi,%r15,4), %esi
.Ltmp374:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rdx
.Ltmp375:
	.p2align	4, 0x90
.LBB5_8:                                #   Parent Loop BB5_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB5_11
.Ltmp376:
# %bb.9:                                #   in Loop: Header=BB5_8 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp377:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rdx
	cmpq	$1, %rbx
.Ltmp378:
	leaq	-1(%rbx), %rbx
.Ltmp379:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB5_8
.Ltmp380:
# %bb.10:                               #   in Loop: Header=BB5_3 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
	jmp	.LBB5_11
.Lfunc_end5:
	.size	insertionSort, .Lfunc_end5-insertionSort
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function random_data
.LCPI6_0:
	.long	0                       # 0x0
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
.LCPI6_1:
	.quad	4                       # 0x4
	.quad	5                       # 0x5
	.quad	6                       # 0x6
	.quad	7                       # 0x7
.LCPI6_2:
	.quad	0                       # 0x0
	.quad	1                       # 0x1
	.quad	2                       # 0x2
	.quad	3                       # 0x3
.LCPI6_3:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	7                       # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI6_4:
	.long	9                       # 0x9
.LCPI6_5:
	.long	17                      # 0x11
.LCPI6_6:
	.long	25                      # 0x19
.LCPI6_7:
	.long	33                      # 0x21
.LCPI6_8:
	.long	41                      # 0x29
.LCPI6_9:
	.long	49                      # 0x31
.LCPI6_10:
	.long	57                      # 0x39
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI6_11:
	.quad	64                      # 0x40
	.text
	.globl	random_data
	.p2align	4, 0x90
	.type	random_data,@function
random_data:                            # @random_data
.Lfunc_begin6:
	.file	19 "/home/peeters/bachelor" "./data-random.h"
	.loc	19 4 0 is_stmt 1        # ./data-random.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: random_data:array <- $rdi
	#DEBUG_VALUE: random_data:amount <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	pushq	%rax
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
	movl	%esi, %ebp
	movq	%rdi, %rbx
.Ltmp381:
	#DEBUG_VALUE: random_data:amount <- $ebp
	#DEBUG_VALUE: random_data:array <- $rbx
	.loc	19 5 9 prologue_end     # ./data-random.h:5:9
	callq	clock
.Ltmp382:
	.loc	19 5 3 is_stmt 0        # ./data-random.h:5:3
	movl	%eax, %edi
	callq	srand
.Ltmp383:
	#DEBUG_VALUE: i <- 0
	.loc	19 6 21 is_stmt 1       # ./data-random.h:6:21
	testl	%ebp, %ebp
.Ltmp384:
	.loc	19 6 3 is_stmt 0        # ./data-random.h:6:3
	jle	.LBB6_12
.Ltmp385:
# %bb.1:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 6 21                 # ./data-random.h:6:21
	movl	%ebp, %eax
.Ltmp386:
	.loc	19 6 3                  # ./data-random.h:6:3
	cmpl	$31, %ebp
	ja	.LBB6_3
.Ltmp387:
# %bb.2:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 0 3                  # ./data-random.h:0:3
	xorl	%ecx, %ecx
	jmp	.LBB6_11
.Ltmp388:
.LBB6_3:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 6 3                  # ./data-random.h:6:3
	movl	%eax, %ecx
	andl	$-32, %ecx
	leaq	-32(%rcx), %rdi
	movq	%rdi, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %esi
	andl	$1, %esi
	testq	%rdi, %rdi
	je	.LBB6_4
.Ltmp389:
# %bb.5:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	movq	%rsi, %rdi
	subq	%rdx, %rdi
	vmovdqa	.LCPI6_1(%rip), %ymm0   # ymm0 = [4,5,6,7]
	vmovdqa	.LCPI6_2(%rip), %ymm1   # ymm1 = [0,1,2,3]
	xorl	%edx, %edx
	vmovdqa	.LCPI6_3(%rip), %ymm2   # ymm2 = [0,2,4,6,4,6,6,7]
	vpcmpeqd	%ymm3, %ymm3, %ymm3
	vpbroadcastd	.LCPI6_4(%rip), %ymm4 # ymm4 = [9,9,9,9,9,9,9,9]
	vpbroadcastd	.LCPI6_5(%rip), %ymm5 # ymm5 = [17,17,17,17,17,17,17,17]
	vpbroadcastd	.LCPI6_6(%rip), %ymm6 # ymm6 = [25,25,25,25,25,25,25,25]
	vpbroadcastd	.LCPI6_7(%rip), %ymm7 # ymm7 = [33,33,33,33,33,33,33,33]
	vpbroadcastd	.LCPI6_8(%rip), %ymm8 # ymm8 = [41,41,41,41,41,41,41,41]
	vpbroadcastd	.LCPI6_9(%rip), %ymm9 # ymm9 = [49,49,49,49,49,49,49,49]
	vpbroadcastd	.LCPI6_10(%rip), %ymm10 # ymm10 = [57,57,57,57,57,57,57,57]
	vpbroadcastq	.LCPI6_11(%rip), %ymm11 # ymm11 = [64,64,64,64]
.Ltmp390:
	.p2align	4, 0x90
.LBB6_6:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 7 14 is_stmt 1       # ./data-random.h:7:14
	vpermd	%ymm1, %ymm2, %ymm12
	vpermd	%ymm0, %ymm2, %ymm13
	vinserti128	$1, %xmm13, %ymm12, %ymm12
	vpsubd	%ymm3, %ymm12, %ymm13
	vmovdqu	%ymm13, (%rbx,%rdx,4)
	vpaddd	%ymm4, %ymm12, %ymm13
	vmovdqu	%ymm13, 32(%rbx,%rdx,4)
	vpaddd	%ymm5, %ymm12, %ymm13
	vmovdqu	%ymm13, 64(%rbx,%rdx,4)
	vpaddd	%ymm6, %ymm12, %ymm13
	vmovdqu	%ymm13, 96(%rbx,%rdx,4)
	vpaddd	%ymm7, %ymm12, %ymm13
	vmovdqu	%ymm13, 128(%rbx,%rdx,4)
	vpaddd	%ymm8, %ymm12, %ymm13
	vmovdqu	%ymm13, 160(%rbx,%rdx,4)
	vpaddd	%ymm9, %ymm12, %ymm13
	vmovdqu	%ymm13, 192(%rbx,%rdx,4)
	vpaddd	%ymm10, %ymm12, %ymm12
	vmovdqu	%ymm12, 224(%rbx,%rdx,4)
	.loc	19 7 18 is_stmt 0       # ./data-random.h:7:18
	addq	$64, %rdx
	vpaddq	%ymm1, %ymm11, %ymm1
	vpaddq	%ymm0, %ymm11, %ymm0
	addq	$2, %rdi
	jne	.LBB6_6
.Ltmp391:
# %bb.7:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	vpermd	%ymm1, %ymm2, %ymm1
	vpermd	%ymm0, %ymm2, %ymm0
	vinserti128	$1, %xmm0, %ymm1, %ymm0
	testq	%rsi, %rsi
	je	.LBB6_10
.Ltmp392:
.LBB6_9:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 7 14                 # ./data-random.h:7:14
	vpcmpeqd	%ymm1, %ymm1, %ymm1
	vpsubd	%ymm1, %ymm0, %ymm1
	vpbroadcastd	.LCPI6_4(%rip), %ymm2 # ymm2 = [9,9,9,9,9,9,9,9]
	vpaddd	%ymm2, %ymm0, %ymm2
	vpbroadcastd	.LCPI6_5(%rip), %ymm3 # ymm3 = [17,17,17,17,17,17,17,17]
	vpaddd	%ymm3, %ymm0, %ymm3
	vpbroadcastd	.LCPI6_6(%rip), %ymm4 # ymm4 = [25,25,25,25,25,25,25,25]
	vpaddd	%ymm4, %ymm0, %ymm0
	vmovdqu	%ymm1, (%rbx,%rdx,4)
	vmovdqu	%ymm2, 32(%rbx,%rdx,4)
	vmovdqu	%ymm3, 64(%rbx,%rdx,4)
	vmovdqu	%ymm0, 96(%rbx,%rdx,4)
.Ltmp393:
.LBB6_10:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 6 3 is_stmt 1        # ./data-random.h:6:3
	cmpq	%rax, %rcx
	je	.LBB6_12
.Ltmp394:
	.p2align	4, 0x90
.LBB6_11:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	#DEBUG_VALUE: i <- $rcx
	.loc	19 7 18                 # ./data-random.h:7:18
	leaq	1(%rcx), %rdx
	.loc	19 7 14 is_stmt 0       # ./data-random.h:7:14
	movl	%edx, (%rbx,%rcx,4)
.Ltmp395:
	#DEBUG_VALUE: i <- $rdx
	.loc	19 0 14                 # ./data-random.h:0:14
	movq	%rdx, %rcx
.Ltmp396:
	.loc	19 6 21 is_stmt 1       # ./data-random.h:6:21
	cmpq	%rdx, %rax
.Ltmp397:
	#DEBUG_VALUE: i <- $rcx
	.loc	19 6 3 is_stmt 0        # ./data-random.h:6:3
	jne	.LBB6_11
.Ltmp398:
.LBB6_12:
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 9 1 is_stmt 1        # ./data-random.h:9:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 24
	popq	%rbx
.Ltmp399:
	.cfi_def_cfa_offset 16
	popq	%rbp
.Ltmp400:
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.LBB6_4:
	.cfi_def_cfa_offset 32
.Ltmp401:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rbx
	#DEBUG_VALUE: random_data:amount <- $ebp
	.loc	19 0 1 is_stmt 0        # ./data-random.h:0:1
	vmovdqa	.LCPI6_0(%rip), %ymm0   # ymm0 = [0,1,2,3,4,5,6,7]
	xorl	%edx, %edx
.Ltmp402:
	.loc	19 7 18 is_stmt 1       # ./data-random.h:7:18
	testq	%rsi, %rsi
	jne	.LBB6_9
	jmp	.LBB6_10
.Ltmp403:
.Lfunc_end6:
	.size	random_data, .Lfunc_end6-random_data
	.cfi_endproc
                                        # -- End function
	.globl	insertionSortOptimized  # -- Begin function insertionSortOptimized
	.p2align	4, 0x90
	.type	insertionSortOptimized,@function
insertionSortOptimized:                 # @insertionSortOptimized
.Lfunc_begin7:
	.loc	18 15 0                 # ./insertionssort.h:15:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp404:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	.loc	18 17 17 prologue_end   # ./insertionssort.h:17:17
	cmpl	$2, %esi
.Ltmp405:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB7_18
.Ltmp406:
# %bb.1:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	movabsq	$-4294967296, %rax      # imm = 0xFFFFFFFF00000000
.Ltmp407:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%esi, %r10d
.Ltmp408:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %esi
	jne	.LBB7_2
.Ltmp409:
.LBB7_12:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB7_18
.Ltmp410:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rdi,%r15,4), %edx
.Ltmp411:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rsi
	shlq	$32, %rsi
	addq	%rax, %rsi
.Ltmp412:
	.p2align	4, 0x90
.LBB7_14:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rsi, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%edx, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_17
.Ltmp413:
# %bb.15:                               #   in Loop: Header=BB7_14 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%r15,4)
.Ltmp414:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rsi
	cmpq	$1, %r15
.Ltmp415:
	leaq	-1(%r15), %r15
.Ltmp416:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_14
.Ltmp417:
# %bb.16:
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp418:
.LBB7_17:
	#DEBUG_VALUE: insertionSortOptimized:element <- $edx
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rax
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%edx, (%rdi,%rax,4)
.Ltmp419:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB7_18:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 27 1 is_stmt 1       # ./insertionssort.h:27:1
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp420:
.LBB7_2:
	.cfi_def_cfa_offset 40
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 0 1 is_stmt 0        # ./insertionssort.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp421:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB7_3
.Ltmp422:
	.p2align	4, 0x90
.LBB7_11:                               #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 25 5                 # ./insertionssort.h:25:5
	movslq	%ebx, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp423:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp424:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB7_12
.Ltmp425:
.LBB7_3:                                # =>This Loop Header: Depth=1
                                        #     Child Loop BB7_4 Depth 2
                                        #     Child Loop BB7_8 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rdi,%r15,4), %esi
.Ltmp426:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rcx
	movq	%r15, %rbx
.Ltmp427:
	.p2align	4, 0x90
.LBB7_4:                                #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rcx, %rdx
	sarq	$30, %rdx
	movl	(%rdi,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_7
.Ltmp428:
# %bb.5:                                #   in Loop: Header=BB7_4 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp429:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rcx
	cmpq	$1, %rbx
.Ltmp430:
	leaq	-1(%rbx), %rbx
.Ltmp431:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_4
.Ltmp432:
# %bb.6:                                #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
.Ltmp433:
.LBB7_7:                                #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%ebx, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp434:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rbx
.Ltmp435:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rbx
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rdi,%r15,4), %esi
.Ltmp436:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rdx
.Ltmp437:
	.p2align	4, 0x90
.LBB7_8:                                #   Parent Loop BB7_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rcx
	sarq	$30, %rcx
	movl	(%rdi,%rcx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB7_11
.Ltmp438:
# %bb.9:                                #   in Loop: Header=BB7_8 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp439:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rbx
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rax, %rdx
	cmpq	$1, %rbx
.Ltmp440:
	leaq	-1(%rbx), %rbx
.Ltmp441:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB7_8
.Ltmp442:
# %bb.10:                               #   in Loop: Header=BB7_3 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rdi
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%ebx, %ebx
	jmp	.LBB7_11
.Lfunc_end7:
	.size	insertionSortOptimized, .Lfunc_end7-insertionSortOptimized
	.cfi_endproc
                                        # -- End function
	.globl	insertionSortStd        # -- Begin function insertionSortStd
	.p2align	4, 0x90
	.type	insertionSortStd,@function
insertionSortStd:                       # @insertionSortStd
.Lfunc_begin8:
	.loc	18 29 0 is_stmt 1       # ./insertionssort.h:29:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	.loc	18 32 23 prologue_end   # ./insertionssort.h:32:23
	cmpq	%rsi, %rdx
.Ltmp443:
	.loc	18 32 3 is_stmt 0       # ./insertionssort.h:32:3
	jle	.LBB8_21
.Ltmp444:
# %bb.1:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r8
	notq	%r8
	testb	$1, %al
	jne	.LBB8_3
.Ltmp445:
# %bb.2:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	movq	%rsi, %r9
	.loc	18 32 3                 # ./insertionssort.h:32:3
	addq	%rdx, %r8
	je	.LBB8_21
	jmp	.LBB8_9
.Ltmp446:
.LBB8_3:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:low <- $rsi
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 0 0                  # ./insertionssort.h:0:0
	leaq	1(%rsi), %r9
.Ltmp447:
	.loc	18 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rdi,%rsi,4), %ecx
.Ltmp448:
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	.loc	18 40 13                # ./insertionssort.h:40:13
	movq	%r9, %rax
	.loc	18 36 14                # ./insertionssort.h:36:14
	testq	%rsi, %rsi
	.loc	18 36 19 is_stmt 0      # ./insertionssort.h:36:19
	js	.LBB8_7
.Ltmp449:
	.p2align	4, 0x90
.LBB8_4:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	18 36 22                # ./insertionssort.h:36:22
	movl	(%rdi,%rsi,4), %eax
	.loc	18 36 31                # ./insertionssort.h:36:31
	cmpl	%ecx, %eax
	.loc	18 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_6
.Ltmp450:
# %bb.5:                                #   in Loop: Header=BB8_4 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp451:
	#DEBUG_VALUE: insertionSortStd:j <- $rsi
	.loc	18 36 14                # ./insertionssort.h:36:14
	testq	%rsi, %rsi
.Ltmp452:
	.loc	18 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rsi), %rsi
.Ltmp453:
	.loc	18 36 19                # ./insertionssort.h:36:19
	jg	.LBB8_4
.Ltmp454:
.LBB8_6:
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 40 13                # ./insertionssort.h:40:13
	incq	%rsi
	movq	%rsi, %rax
.Ltmp455:
.LBB8_7:
	#DEBUG_VALUE: insertionSortStd:element <- $ecx
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	18 40 18 is_stmt 0      # ./insertionssort.h:40:18
	movl	%ecx, (%rdi,%rax,4)
.Ltmp456:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r9
	.loc	18 32 3 is_stmt 1       # ./insertionssort.h:32:3
	addq	%rdx, %r8
	jne	.LBB8_9
.Ltmp457:
.LBB8_21:
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 42 1                 # ./insertionssort.h:42:1
	retq
.Ltmp458:
.LBB8_9:
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 32 3                 # ./insertionssort.h:32:3
	leaq	2(%r9), %r8
	jmp	.LBB8_10
.Ltmp459:
	.p2align	4, 0x90
.LBB8_19:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 0 0 is_stmt 0        # ./insertionssort.h:0:0
	decq	%rax
	movq	%rax, %rcx
	.loc	18 40 13 is_stmt 1      # ./insertionssort.h:40:13
	incq	%rcx
.Ltmp460:
.LBB8_20:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	18 40 18 is_stmt 0      # ./insertionssort.h:40:18
	movl	%esi, (%rdi,%rcx,4)
.Ltmp461:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r9
	.loc	18 32 3 is_stmt 1       # ./insertionssort.h:32:3
	addq	$2, %r8
.Ltmp462:
	.loc	18 32 23 is_stmt 0      # ./insertionssort.h:32:23
	cmpq	%rdx, %r9
.Ltmp463:
	.loc	18 32 3                 # ./insertionssort.h:32:3
	je	.LBB8_21
.Ltmp464:
.LBB8_10:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB8_13 Depth 2
                                        #     Child Loop BB8_17 Depth 2
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	4(%rdi,%r9,4), %esi
.Ltmp465:
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	.loc	18 36 14                # ./insertionssort.h:36:14
	testq	%r9, %r9
	.loc	18 36 19 is_stmt 0      # ./insertionssort.h:36:19
	js	.LBB8_11
.Ltmp466:
# %bb.12:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 0 19                 # ./insertionssort.h:0:19
	movq	%r9, %rax
.Ltmp467:
	.p2align	4, 0x90
.LBB8_13:                               #   Parent Loop BB8_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	.loc	18 36 22                # ./insertionssort.h:36:22
	movl	(%rdi,%rax,4), %ecx
	.loc	18 36 31                # ./insertionssort.h:36:31
	cmpl	%esi, %ecx
	.loc	18 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_15
.Ltmp468:
# %bb.14:                               #   in Loop: Header=BB8_13 Depth=2
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ecx, 4(%rdi,%rax,4)
.Ltmp469:
	#DEBUG_VALUE: insertionSortStd:j <- $rax
	.loc	18 36 14                # ./insertionssort.h:36:14
	testq	%rax, %rax
.Ltmp470:
	.loc	18 38 8                 # ./insertionssort.h:38:8
	leaq	-1(%rax), %rax
.Ltmp471:
	.loc	18 36 19                # ./insertionssort.h:36:19
	jg	.LBB8_13
.Ltmp472:
.LBB8_15:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 40 13                # ./insertionssort.h:40:13
	incq	%rax
	jmp	.LBB8_16
.Ltmp473:
	.p2align	4, 0x90
.LBB8_11:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:j <- $r9
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 0 13 is_stmt 0       # ./insertionssort.h:0:13
	leaq	1(%r9), %rax
.Ltmp474:
.LBB8_16:                               #   in Loop: Header=BB8_10 Depth=1
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	18 40 18                # ./insertionssort.h:40:18
	movl	%esi, (%rdi,%rax,4)
.Ltmp475:
	#DEBUG_VALUE: insertionSortStd:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	18 33 15 is_stmt 1      # ./insertionssort.h:33:15
	movl	8(%rdi,%r9,4), %esi
.Ltmp476:
	#DEBUG_VALUE: insertionSortStd:j <- undef
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r8, %rax
	.loc	18 36 14 is_stmt 1      # ./insertionssort.h:36:14
	cmpq	$-1, %r9
.Ltmp477:
	.loc	18 0 0 is_stmt 0        # ./insertionssort.h:0:0
	leaq	2(%r9), %r9
.Ltmp478:
	.loc	18 40 13 is_stmt 1      # ./insertionssort.h:40:13
	movq	%r9, %rcx
	.loc	18 36 19                # ./insertionssort.h:36:19
	jl	.LBB8_20
.Ltmp479:
	.p2align	4, 0x90
.LBB8_17:                               #   Parent Loop BB8_10 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	#DEBUG_VALUE: insertionSortStd:j <- undef
	.loc	18 36 22 is_stmt 0      # ./insertionssort.h:36:22
	movl	-4(%rdi,%rax,4), %ecx
	.loc	18 36 31                # ./insertionssort.h:36:31
	cmpl	%esi, %ecx
	.loc	18 36 5                 # ./insertionssort.h:36:5
	jle	.LBB8_19
.Ltmp480:
# %bb.18:                               #   in Loop: Header=BB8_17 Depth=2
	#DEBUG_VALUE: insertionSortStd:element <- $esi
	#DEBUG_VALUE: insertionSortStd:high <- $rdx
	#DEBUG_VALUE: insertionSortStd:array <- $rdi
	.loc	18 37 20 is_stmt 1      # ./insertionssort.h:37:20
	movl	%ecx, (%rdi,%rax,4)
.Ltmp481:
	#DEBUG_VALUE: insertionSortStd:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] undef
	.loc	18 36 14                # ./insertionssort.h:36:14
	decq	%rax
	testq	%rax, %rax
	.loc	18 36 19 is_stmt 0      # ./insertionssort.h:36:19
	jg	.LBB8_17
	jmp	.LBB8_19
.Ltmp482:
.Lfunc_end8:
	.size	insertionSortStd, .Lfunc_end8-insertionSortStd
	.cfi_endproc
                                        # -- End function
	.globl	heapify                 # -- Begin function heapify
	.p2align	4, 0x90
	.type	heapify,@function
heapify:                                # @heapify
.Lfunc_begin9:
	.file	20 "/home/peeters/bachelor" "./heapsort.h"
	.loc	20 3 0 is_stmt 1        # ./heapsort.h:3:0
	.cfi_startproc
# %bb.0:
                                        # kill: def $edx killed $edx def $rdx
	.p2align	4, 0x90
.LBB9_1:                                # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $edx
	.loc	20 5 19 prologue_end    # ./heapsort.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp483:
	#DEBUG_VALUE: heapify:l <- $eax
	.loc	20 6 19                 # ./heapsort.h:6:19
	leal	(%rdx,%rdx), %r9d
	addl	$2, %r9d
.Ltmp484:
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:r <- $r9d
	.loc	20 9 27                 # ./heapsort.h:9:27
	movslq	%edx, %r8
.Ltmp485:
	.loc	20 0 0 is_stmt 0        # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp486:
	.loc	20 9 11                 # ./heapsort.h:9:11
	cmpl	%esi, %eax
	#DEBUG_VALUE: heapify:arr <- undef
	.loc	20 9 15                 # ./heapsort.h:9:15
	jl	.LBB9_2
.Ltmp487:
# %bb.5:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r9d
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jl	.LBB9_6
.Ltmp488:
.LBB9_9:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB9_10
	jmp	.LBB9_11
.Ltmp489:
	.p2align	4, 0x90
.LBB9_2:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 9 18                 # ./heapsort.h:9:18
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	20 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r8,4), %ecx
.Ltmp490:
	.loc	20 9 9                  # ./heapsort.h:9:9
	jg	.LBB9_4
.Ltmp491:
# %bb.3:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	movl	%edx, %eax
.Ltmp492:
.LBB9_4:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp493:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r9d
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jge	.LBB9_9
.Ltmp494:
.LBB9_6:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 13 18                # ./heapsort.h:13:18
	movslq	%r9d, %rax
	movl	(%rdi,%rax,4), %r10d
	.loc	20 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rax
	.loc	20 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rax,4), %r10d
.Ltmp495:
	.loc	20 13 9                 # ./heapsort.h:13:9
	jg	.LBB9_8
.Ltmp496:
# %bb.7:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r9d
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	movl	%ecx, %r9d
.Ltmp497:
.LBB9_8:                                #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%r9d, %ecx
.Ltmp498:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
.Ltmp499:
	.loc	20 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB9_11
.Ltmp500:
.LBB9_10:                               #   in Loop: Header=BB9_1 Depth=1
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 18 24 is_stmt 1      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp501:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r8,4), %r9d
.Ltmp502:
	#DEBUG_VALUE: swap:t <- $r9d
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %edx
.Ltmp503:
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%r8,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r9d, (%rdi,%rax,4)
	movl	%ecx, %edx
	jmp	.LBB9_1
.Ltmp504:
.LBB9_11:
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	.loc	20 23 1                 # ./heapsort.h:23:1
	retq
.Ltmp505:
.Lfunc_end9:
	.size	heapify, .Lfunc_end9-heapify
	.cfi_endproc
                                        # -- End function
	.globl	heapsort_h              # -- Begin function heapsort_h
	.p2align	4, 0x90
	.type	heapsort_h,@function
heapsort_h:                             # @heapsort_h
.Lfunc_begin10:
	.loc	20 25 0                 # ./heapsort.h:25:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp506:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	20 27 31 prologue_end   # ./heapsort.h:27:31
	cmpl	$2, %esi
.Ltmp507:
	.loc	20 27 5 is_stmt 0       # ./heapsort.h:27:5
	jl	.LBB10_14
.Ltmp508:
# %bb.1:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 27 20                # ./heapsort.h:27:20
	movl	%esi, %r8d
	shrl	%r8d
.Ltmp509:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	20 0 20                 # ./heapsort.h:0:20
	jmp	.LBB10_3
.Ltmp510:
	.p2align	4, 0x90
.LBB10_2:                               #   in Loop: Header=BB10_3 Depth=1
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	20 27 31                # ./heapsort.h:27:31
	cmpl	$2, %r9d
.Ltmp511:
	.loc	20 27 5                 # ./heapsort.h:27:5
	jl	.LBB10_14
.Ltmp512:
.LBB10_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_4 Depth 2
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 5                  # ./heapsort.h:0:5
	movl	%r8d, %r9d
	leal	-1(%r9), %r8d
.Ltmp513:
	movl	%r8d, %edx
.Ltmp514:
	.p2align	4, 0x90
.LBB10_4:                               #   Parent Loop BB10_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:largest <- $edx
	.loc	20 5 19 is_stmt 1       # ./heapsort.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp515:
	#DEBUG_VALUE: heapify:l <- $eax
	.loc	20 6 19                 # ./heapsort.h:6:19
	leal	(%rdx,%rdx), %r11d
	addl	$2, %r11d
.Ltmp516:
	#DEBUG_VALUE: heapify:r <- $r11d
	.loc	20 9 27                 # ./heapsort.h:9:27
	movslq	%edx, %r10
.Ltmp517:
	.loc	20 0 0 is_stmt 0        # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp518:
	.loc	20 9 11                 # ./heapsort.h:9:11
	cmpl	%esi, %eax
	.loc	20 9 15                 # ./heapsort.h:9:15
	jl	.LBB10_5
.Ltmp519:
# %bb.8:                                #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r11d
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jl	.LBB10_9
.Ltmp520:
.LBB10_12:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB10_13
	jmp	.LBB10_2
.Ltmp521:
	.p2align	4, 0x90
.LBB10_5:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 9 18                 # ./heapsort.h:9:18
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	20 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r10,4), %ecx
.Ltmp522:
	.loc	20 9 9                  # ./heapsort.h:9:9
	jg	.LBB10_7
.Ltmp523:
# %bb.6:                                #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:l <- $eax
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%edx, %eax
.Ltmp524:
.LBB10_7:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:largest <- $edx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp525:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	cmpl	%esi, %r11d
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jge	.LBB10_12
.Ltmp526:
.LBB10_9:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 13 18                # ./heapsort.h:13:18
	movslq	%r11d, %rax
	movl	(%rdi,%rax,4), %eax
	.loc	20 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rbx
	.loc	20 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rbx,4), %eax
.Ltmp527:
	.loc	20 13 9                 # ./heapsort.h:13:9
	jg	.LBB10_11
.Ltmp528:
# %bb.10:                               #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $r11d
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%ecx, %r11d
.Ltmp529:
.LBB10_11:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%r11d, %ecx
.Ltmp530:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%edx, %ecx
.Ltmp531:
	.loc	20 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB10_2
.Ltmp532:
.LBB10_13:                              #   in Loop: Header=BB10_4 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:i <- $edx
	#DEBUG_VALUE: heapify:n <- $esi
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 18 24 is_stmt 1      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp533:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r10,4), %edx
.Ltmp534:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %ebx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, (%rdi,%r10,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rax,4)
	movl	%ecx, %edx
.Ltmp535:
	.loc	16 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB10_4
.Ltmp536:
.LBB10_14:
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	20 31 27 is_stmt 1      # ./heapsort.h:31:27
	testl	%esi, %esi
.Ltmp537:
	.loc	20 31 5 is_stmt 0       # ./heapsort.h:31:5
	jle	.LBB10_28
.Ltmp538:
# %bb.15:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsort_h:n <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 21 9 is_stmt 1       # ./heapsort.h:21:9
	movl	%esi, %r9d
	jmp	.LBB10_17
.Ltmp539:
	.p2align	4, 0x90
.LBB10_16:                              #   in Loop: Header=BB10_17 Depth=1
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9
	.loc	20 31 27                # ./heapsort.h:31:27
	cmpq	$1, %r8
.Ltmp540:
	.loc	20 31 5 is_stmt 0       # ./heapsort.h:31:5
	jle	.LBB10_28
.Ltmp541:
.LBB10_17:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB10_18 Depth 2
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 5                  # ./heapsort.h:0:5
	movq	%r9, %r8
	decq	%r9
	xorl	%esi, %esi
.Ltmp542:
	#DEBUG_VALUE: swap:a <- $rdi
	movq	%r9, %rax
	movq	%rdi, %rdx
.Ltmp543:
	.p2align	4, 0x90
.LBB10_18:                              #   Parent Loop BB10_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	(%rdx), %ecx
	movl	(%rdi,%rax,4), %ebx
	movl	%ebx, (%rdx)
	movl	%ecx, (%rdi,%rax,4)
.Ltmp544:
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:arr <- $rdi
	.loc	20 5 19 is_stmt 1       # ./heapsort.h:5:19
	leal	(%rsi,%rsi), %ecx
	incl	%ecx
.Ltmp545:
	#DEBUG_VALUE: heapify:l <- $ecx
	.loc	20 6 19                 # ./heapsort.h:6:19
	leal	2(%rsi,%rsi), %eax
.Ltmp546:
	#DEBUG_VALUE: heapify:r <- $eax
	.loc	20 9 11                 # ./heapsort.h:9:11
	movslq	%ecx, %rdx
	.loc	20 9 27 is_stmt 0       # ./heapsort.h:9:27
	movslq	%esi, %r10
.Ltmp547:
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%esi, %ecx
.Ltmp548:
	.loc	20 9 11                 # ./heapsort.h:9:11
	cmpq	%rdx, %r9
	.loc	20 9 15                 # ./heapsort.h:9:15
	jg	.LBB10_19
.Ltmp549:
# %bb.22:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jg	.LBB10_23
.Ltmp550:
.LBB10_26:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%esi, %ecx
	jne	.LBB10_27
	jmp	.LBB10_16
.Ltmp551:
	.p2align	4, 0x90
.LBB10_19:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 9 18                 # ./heapsort.h:9:18
	movl	(%rdi,%rdx,4), %ecx
	.loc	20 9 25 is_stmt 0       # ./heapsort.h:9:25
	cmpl	(%rdi,%r10,4), %ecx
.Ltmp552:
	.loc	20 9 9                  # ./heapsort.h:9:9
	jg	.LBB10_21
.Ltmp553:
# %bb.20:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%esi, %edx
.Ltmp554:
.LBB10_21:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapify:largest <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%edx, %ecx
.Ltmp555:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 13 11 is_stmt 1      # ./heapsort.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	20 13 15 is_stmt 0      # ./heapsort.h:13:15
	jle	.LBB10_26
.Ltmp556:
.LBB10_23:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 13 18                # ./heapsort.h:13:18
	movl	(%rdi,%rdx,4), %edx
	.loc	20 13 27                # ./heapsort.h:13:27
	movslq	%ecx, %rbx
	.loc	20 13 25                # ./heapsort.h:13:25
	cmpl	(%rdi,%rbx,4), %edx
.Ltmp557:
	.loc	20 13 9                 # ./heapsort.h:13:9
	jg	.LBB10_25
.Ltmp558:
# %bb.24:                               #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:r <- $eax
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	movl	%ecx, %eax
.Ltmp559:
.LBB10_25:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 0 0                  # ./heapsort.h:0:0
	movl	%eax, %ecx
.Ltmp560:
	#DEBUG_VALUE: heapify:largest <- $ecx
	.loc	20 17 17 is_stmt 1      # ./heapsort.h:17:17
	cmpl	%esi, %ecx
.Ltmp561:
	.loc	20 17 9 is_stmt 0       # ./heapsort.h:17:9
	je	.LBB10_16
.Ltmp562:
.LBB10_27:                              #   in Loop: Header=BB10_18 Depth=2
	#DEBUG_VALUE: heapify:largest <- $ecx
	#DEBUG_VALUE: heapify:arr <- $rdi
	#DEBUG_VALUE: heapify:n <- $r9
	#DEBUG_VALUE: heapify:i <- $esi
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 18 15 is_stmt 1      # ./heapsort.h:18:15
	leaq	(%rdi,%r10,4), %rdx
	.loc	20 18 24 is_stmt 0      # ./heapsort.h:18:24
	movslq	%ecx, %rax
.Ltmp563:
	#DEBUG_VALUE: swap:t <- undef
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- $rdx
	.loc	20 0 24                 # ./heapsort.h:0:24
	movl	%ecx, %esi
.Ltmp564:
	jmp	.LBB10_18
.Ltmp565:
.LBB10_28:
	#DEBUG_VALUE: heapsort_h:array <- $rdi
	.loc	20 38 1 is_stmt 1       # ./heapsort.h:38:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp566:
.Lfunc_end10:
	.size	heapsort_h, .Lfunc_end10-heapsort_h
	.cfi_endproc
                                        # -- End function
	.globl	heapsort                # -- Begin function heapsort
	.p2align	4, 0x90
	.type	heapsort,@function
heapsort:                               # @heapsort
.Lfunc_begin11:
	.loc	20 40 0                 # ./heapsort.h:40:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsort:array <- $rdi
	#DEBUG_VALUE: heapsort:low <- $esi
	#DEBUG_VALUE: heapsort:high <- $edx
                                        # kill: def $edx killed $edx def $rdx
	#DEBUG_VALUE: heapsort:high <- $edx
	#DEBUG_VALUE: heapsort:low <- $esi
	#DEBUG_VALUE: heapsort:array <- $rdi
	.loc	20 41 17 prologue_end   # ./heapsort.h:41:17
	movslq	%esi, %rax
	leaq	(%rdi,%rax,4), %rdi
.Ltmp567:
	.loc	20 41 40 is_stmt 0      # ./heapsort.h:41:40
	subl	%eax, %edx
.Ltmp568:
	leal	1(%rdx), %esi
.Ltmp569:
	.loc	20 41 5                 # ./heapsort.h:41:5
	jmp	heapsort_h              # TAILCALL
.Ltmp570:
.Lfunc_end11:
	.size	heapsort, .Lfunc_end11-heapsort
	.cfi_endproc
                                        # -- End function
	.globl	heapifyo                # -- Begin function heapifyo
	.p2align	4, 0x90
	.type	heapifyo,@function
heapifyo:                               # @heapifyo
.Lfunc_begin12:
	.loc	7 3 0 is_stmt 1         # ./heapsorto.h:3:0
	.cfi_startproc
# %bb.0:
                                        # kill: def $edx killed $edx def $rdx
	.p2align	4, 0x90
.LBB12_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $edx
	.loc	7 5 19 prologue_end     # ./heapsorto.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp571:
	#DEBUG_VALUE: heapifyo:l <- $eax
	.loc	7 6 19                  # ./heapsorto.h:6:19
	leal	(%rdx,%rdx), %r9d
	addl	$2, %r9d
.Ltmp572:
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:r <- $r9d
	.loc	7 9 31                  # ./heapsorto.h:9:31
	movslq	%edx, %r8
	movl	%edx, %ecx
	.loc	7 9 15 is_stmt 0        # ./heapsorto.h:9:15
	cmpl	%esi, %eax
	#DEBUG_VALUE: heapifyo:arr <- undef
	.loc	7 9 19                  # ./heapsorto.h:9:19
	jl	.LBB12_2
.Ltmp573:
# %bb.5:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r9d
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jl	.LBB12_6
.Ltmp574:
.LBB12_9:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB12_10
	jmp	.LBB12_11
.Ltmp575:
	.p2align	4, 0x90
.LBB12_2:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 9 22                  # ./heapsorto.h:9:22
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	7 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r8,4), %ecx
	jg	.LBB12_4
.Ltmp576:
# %bb.3:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 0 29                  # ./heapsorto.h:0:29
	movl	%edx, %eax
.Ltmp577:
.LBB12_4:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	movl	%eax, %ecx
.Ltmp578:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r9d
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jge	.LBB12_9
.Ltmp579:
.LBB12_6:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 13 18                 # ./heapsorto.h:13:18
	movslq	%r9d, %rax
	movl	(%rdi,%rax,4), %r10d
	.loc	7 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rax
	.loc	7 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rax,4), %r10d
	jg	.LBB12_8
.Ltmp580:
# %bb.7:                                #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r9d
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %r9d
.Ltmp581:
.LBB12_8:                               #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	movl	%r9d, %ecx
.Ltmp582:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
.Ltmp583:
	.loc	7 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB12_11
.Ltmp584:
.LBB12_10:                              #   in Loop: Header=BB12_1 Depth=1
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 18 24 is_stmt 1       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp585:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r8,4), %r9d
.Ltmp586:
	#DEBUG_VALUE: swap:t <- $r9d
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %edx
.Ltmp587:
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%edx, (%rdi,%r8,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%r9d, (%rdi,%rax,4)
	movl	%ecx, %edx
	jmp	.LBB12_1
.Ltmp588:
.LBB12_11:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	.loc	7 23 1                  # ./heapsorto.h:23:1
	retq
.Ltmp589:
.Lfunc_end12:
	.size	heapifyo, .Lfunc_end12-heapifyo
	.cfi_endproc
                                        # -- End function
	.globl	heapsorto_h             # -- Begin function heapsorto_h
	.p2align	4, 0x90
	.type	heapsorto_h,@function
heapsorto_h:                            # @heapsorto_h
.Lfunc_begin13:
	.loc	7 27 0                  # ./heapsorto.h:27:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp590:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	7 29 31 prologue_end    # ./heapsorto.h:29:31
	cmpl	$2, %esi
.Ltmp591:
	.loc	7 29 5 is_stmt 0        # ./heapsorto.h:29:5
	jl	.LBB13_14
.Ltmp592:
# %bb.1:
	#DEBUG_VALUE: i <- [DW_OP_constu 2, DW_OP_div, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 29 20                 # ./heapsorto.h:29:20
	movl	%esi, %r8d
	shrl	%r8d
.Ltmp593:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	7 0 20                  # ./heapsorto.h:0:20
	jmp	.LBB13_3
.Ltmp594:
	.p2align	4, 0x90
.LBB13_2:                               #   in Loop: Header=BB13_3 Depth=1
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	.loc	7 29 31                 # ./heapsorto.h:29:31
	cmpl	$2, %r9d
.Ltmp595:
	.loc	7 29 5                  # ./heapsorto.h:29:5
	jl	.LBB13_14
.Ltmp596:
.LBB13_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_4 Depth 2
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r8d
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 5                   # ./heapsorto.h:0:5
	movl	%r8d, %r9d
	leal	-1(%r9), %r8d
.Ltmp597:
	movl	%r8d, %edx
.Ltmp598:
	.p2align	4, 0x90
.LBB13_4:                               #   Parent Loop BB13_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:largest <- $edx
	.loc	7 5 19 is_stmt 1        # ./heapsorto.h:5:19
	leal	(%rdx,%rdx), %eax
	incl	%eax
.Ltmp599:
	#DEBUG_VALUE: heapifyo:l <- $eax
	.loc	7 6 19                  # ./heapsorto.h:6:19
	leal	(%rdx,%rdx), %r11d
	addl	$2, %r11d
.Ltmp600:
	#DEBUG_VALUE: heapifyo:r <- $r11d
	.loc	7 9 31                  # ./heapsorto.h:9:31
	movslq	%edx, %r10
	movl	%edx, %ecx
	.loc	7 9 15 is_stmt 0        # ./heapsorto.h:9:15
	cmpl	%esi, %eax
	.loc	7 9 19                  # ./heapsorto.h:9:19
	jl	.LBB13_5
.Ltmp601:
# %bb.8:                                #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r11d
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jl	.LBB13_9
.Ltmp602:
.LBB13_12:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
	jne	.LBB13_13
	jmp	.LBB13_2
.Ltmp603:
	.p2align	4, 0x90
.LBB13_5:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 9 22                  # ./heapsorto.h:9:22
	movslq	%eax, %rcx
	movl	(%rdi,%rcx,4), %ecx
	.loc	7 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r10,4), %ecx
	jg	.LBB13_7
.Ltmp604:
# %bb.6:                                #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:l <- $eax
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 29                  # ./heapsorto.h:0:29
	movl	%edx, %eax
.Ltmp605:
.LBB13_7:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:largest <- $edx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%eax, %ecx
.Ltmp606:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	cmpl	%esi, %r11d
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jge	.LBB13_12
.Ltmp607:
.LBB13_9:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 13 18                 # ./heapsorto.h:13:18
	movslq	%r11d, %rax
	movl	(%rdi,%rax,4), %eax
	.loc	7 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rbx
	.loc	7 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rbx,4), %eax
	jg	.LBB13_11
.Ltmp608:
# %bb.10:                               #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $r11d
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %r11d
.Ltmp609:
.LBB13_11:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%r11d, %ecx
.Ltmp610:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%edx, %ecx
.Ltmp611:
	.loc	7 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB13_2
.Ltmp612:
.LBB13_13:                              #   in Loop: Header=BB13_4 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:i <- $edx
	#DEBUG_VALUE: heapifyo:n <- $esi
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 18 24 is_stmt 1       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp613:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	(%rdi,%r10,4), %edx
.Ltmp614:
	#DEBUG_VALUE: swap:t <- $edx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rax,4), %ebx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, (%rdi,%r10,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%edx, (%rdi,%rax,4)
	movl	%ecx, %edx
.Ltmp615:
	.loc	16 0 6 is_stmt 0        # ./swap.h:0:6
	jmp	.LBB13_4
.Ltmp616:
.LBB13_14:
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 33 10 is_stmt 1       # ./heapsorto.h:33:10
	incl	count(%rip)
.Ltmp617:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	.loc	7 34 27                 # ./heapsorto.h:34:27
	testl	%esi, %esi
.Ltmp618:
	.loc	7 34 5 is_stmt 0        # ./heapsorto.h:34:5
	jle	.LBB13_28
.Ltmp619:
# %bb.15:
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $esi
	#DEBUG_VALUE: heapsorto_h:n <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 21 9 is_stmt 1        # ./heapsorto.h:21:9
	movl	%esi, %r9d
	jmp	.LBB13_17
.Ltmp620:
	.p2align	4, 0x90
.LBB13_16:                              #   in Loop: Header=BB13_17 Depth=1
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: i <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r9
	.loc	7 34 27                 # ./heapsorto.h:34:27
	cmpq	$1, %r8
.Ltmp621:
	.loc	7 34 5 is_stmt 0        # ./heapsorto.h:34:5
	jle	.LBB13_28
.Ltmp622:
.LBB13_17:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB13_18 Depth 2
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 5                   # ./heapsorto.h:0:5
	movq	%r9, %r8
	decq	%r9
	xorl	%esi, %esi
.Ltmp623:
	#DEBUG_VALUE: swap:a <- $rdi
	movq	%r9, %rax
	movq	%rdi, %rdx
.Ltmp624:
	.p2align	4, 0x90
.LBB13_18:                              #   Parent Loop BB13_17 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	(%rdx), %ecx
	movl	(%rdi,%rax,4), %ebx
	movl	%ebx, (%rdx)
	movl	%ecx, (%rdi,%rax,4)
.Ltmp625:
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	.loc	7 5 19 is_stmt 1        # ./heapsorto.h:5:19
	leal	(%rsi,%rsi), %ecx
	incl	%ecx
.Ltmp626:
	#DEBUG_VALUE: heapifyo:l <- $ecx
	.loc	7 6 19                  # ./heapsorto.h:6:19
	leal	2(%rsi,%rsi), %eax
.Ltmp627:
	#DEBUG_VALUE: heapifyo:r <- $eax
	.loc	7 9 15                  # ./heapsorto.h:9:15
	movslq	%ecx, %rdx
	.loc	7 9 31 is_stmt 0        # ./heapsorto.h:9:31
	movslq	%esi, %r10
	movl	%esi, %ecx
.Ltmp628:
	.loc	7 9 15                  # ./heapsorto.h:9:15
	cmpq	%rdx, %r9
	.loc	7 9 19                  # ./heapsorto.h:9:19
	jg	.LBB13_19
.Ltmp629:
# %bb.22:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jg	.LBB13_23
.Ltmp630:
.LBB13_26:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%esi, %ecx
	jne	.LBB13_27
	jmp	.LBB13_16
.Ltmp631:
	.p2align	4, 0x90
.LBB13_19:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 9 22                  # ./heapsorto.h:9:22
	movl	(%rdi,%rdx,4), %ecx
	.loc	7 9 29 is_stmt 0        # ./heapsorto.h:9:29
	cmpl	(%rdi,%r10,4), %ecx
	jg	.LBB13_21
.Ltmp632:
# %bb.20:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 29                  # ./heapsorto.h:0:29
	movl	%esi, %edx
.Ltmp633:
.LBB13_21:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapifyo:largest <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%edx, %ecx
.Ltmp634:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 13 11 is_stmt 1       # ./heapsorto.h:13:11
	movslq	%eax, %rdx
	cmpq	%rdx, %r9
	.loc	7 13 15 is_stmt 0       # ./heapsorto.h:13:15
	jle	.LBB13_26
.Ltmp635:
.LBB13_23:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 13 18                 # ./heapsorto.h:13:18
	movl	(%rdi,%rdx,4), %edx
	.loc	7 13 27                 # ./heapsorto.h:13:27
	movslq	%ecx, %rbx
	.loc	7 13 25                 # ./heapsorto.h:13:25
	cmpl	(%rdi,%rbx,4), %edx
	jg	.LBB13_25
.Ltmp636:
# %bb.24:                               #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:r <- $eax
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 0 25                  # ./heapsorto.h:0:25
	movl	%ecx, %eax
.Ltmp637:
.LBB13_25:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	movl	%eax, %ecx
.Ltmp638:
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:c <- undef
	.loc	7 17 17 is_stmt 1       # ./heapsorto.h:17:17
	cmpl	%esi, %ecx
.Ltmp639:
	.loc	7 17 9 is_stmt 0        # ./heapsorto.h:17:9
	je	.LBB13_16
.Ltmp640:
.LBB13_27:                              #   in Loop: Header=BB13_18 Depth=2
	#DEBUG_VALUE: heapifyo:largest <- $ecx
	#DEBUG_VALUE: heapifyo:arr <- $rdi
	#DEBUG_VALUE: heapifyo:n <- $r9
	#DEBUG_VALUE: heapifyo:i <- $esi
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 18 15 is_stmt 1       # ./heapsorto.h:18:15
	leaq	(%rdi,%r10,4), %rdx
	.loc	7 18 24 is_stmt 0       # ./heapsorto.h:18:24
	movslq	%ecx, %rax
.Ltmp641:
	#DEBUG_VALUE: swap:t <- undef
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- $rdx
	.loc	7 0 24                  # ./heapsorto.h:0:24
	movl	%ecx, %esi
.Ltmp642:
	jmp	.LBB13_18
.Ltmp643:
.LBB13_28:
	#DEBUG_VALUE: heapsorto_h:array <- $rdi
	.loc	7 41 1 is_stmt 1        # ./heapsorto.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp644:
.Lfunc_end13:
	.size	heapsorto_h, .Lfunc_end13-heapsorto_h
	.cfi_endproc
                                        # -- End function
	.globl	heapsorto               # -- Begin function heapsorto
	.p2align	4, 0x90
	.type	heapsorto,@function
heapsorto:                              # @heapsorto
.Lfunc_begin14:
	.loc	7 43 0                  # ./heapsorto.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: heapsorto:array <- $rdi
	#DEBUG_VALUE: heapsorto:low <- $esi
	#DEBUG_VALUE: heapsorto:high <- $edx
                                        # kill: def $edx killed $edx def $rdx
	#DEBUG_VALUE: heapsorto:high <- $edx
	#DEBUG_VALUE: heapsorto:low <- $esi
	#DEBUG_VALUE: heapsorto:array <- $rdi
	.loc	7 44 18 prologue_end    # ./heapsorto.h:44:18
	movslq	%esi, %rax
	leaq	(%rdi,%rax,4), %rdi
.Ltmp645:
	.loc	7 44 41 is_stmt 0       # ./heapsorto.h:44:41
	subl	%eax, %edx
.Ltmp646:
	leal	1(%rdx), %esi
.Ltmp647:
	.loc	7 44 5                  # ./heapsorto.h:44:5
	jmp	heapsorto_h             # TAILCALL
.Ltmp648:
.Lfunc_end14:
	.size	heapsorto, .Lfunc_end14-heapsorto
	.cfi_endproc
                                        # -- End function
	.globl	max                     # -- Begin function max
	.p2align	4, 0x90
	.type	max,@function
max:                                    # @max
.Lfunc_begin15:
	.loc	15 4 0 is_stmt 1        # ./minmax.h:4:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: max:x <- $edi
	#DEBUG_VALUE: max:y <- $esi
	movl	%esi, %eax
.Ltmp649:
	#DEBUG_VALUE: max:y <- $eax
	#DEBUG_VALUE: max:x <- $edi
	.loc	15 4 42 prologue_end    # ./minmax.h:4:42
	cmpl	%esi, %edi
	.loc	15 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovgel	%edi, %eax
.Ltmp650:
	.loc	15 4 32                 # ./minmax.h:4:32
	retq
.Ltmp651:
.Lfunc_end15:
	.size	max, .Lfunc_end15-max
	.cfi_endproc
                                        # -- End function
	.globl	median_of_three_of_median_of_three_auto_finish # -- Begin function median_of_three_of_median_of_three_auto_finish
	.p2align	4, 0x90
	.type	median_of_three_of_median_of_three_auto_finish,@function
median_of_three_of_median_of_three_auto_finish: # @median_of_three_of_median_of_three_auto_finish
.Lfunc_begin16:
	.loc	4 64 0 is_stmt 1        # ./median.h:64:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	movq	%rdx, %r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
.Ltmp652:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 65 12 prologue_end    # ./median.h:65:12
	subq	%rsi, %rdx
	.loc	4 65 18 is_stmt 0       # ./median.h:65:18
	cmpq	$31, %rdx
.Ltmp653:
	.loc	4 65 7                  # ./median.h:65:7
	jl	.LBB16_2
.Ltmp654:
# %bb.1:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 0 7                   # ./median.h:0:7
	movabsq	$-2049638230412172401, %rcx # imm = 0xE38E38E38E38E38F
.Ltmp655:
	.loc	4 104 35 is_stmt 1      # ./median.h:104:35
	movq	%rdx, %rax
	mulq	%rcx
	shrq	$3, %rdx
.Ltmp656:
	#DEBUG_VALUE: offset <- $rdx
	.loc	4 105 39                # ./median.h:105:39
	leaq	(%rdx,%rsi), %r9
.Ltmp657:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %r10d
.Ltmp658:
	#DEBUG_VALUE: sort_pair:x <- $r10d
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r9,4), %eax
.Ltmp659:
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %r10d
.Ltmp660:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ecx
	cmovll	%r10d, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovgel	%r10d, %eax
.Ltmp661:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r9,4)
.Ltmp662:
	.loc	4 106 52 is_stmt 1      # ./median.h:106:52
	leaq	(%rsi,%rdx,2), %r10
.Ltmp663:
	#DEBUG_VALUE: sort_pair:x <- $eax
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r10,4), %r11d
.Ltmp664:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %eax
.Ltmp665:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%r9,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r11d, %eax
.Ltmp666:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r10,4)
.Ltmp667:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp668:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r9,4), %r10d
.Ltmp669:
	#DEBUG_VALUE: sort_pair:y <- $r10d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r10d, %eax
.Ltmp670:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r10d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r10d, %eax
.Ltmp671:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r9,4)
.Ltmp672:
	.loc	4 108 35 is_stmt 1      # ./median.h:108:35
	leaq	(%rdx,%rdx,2), %r10
.Ltmp673:
	.loc	4 108 26 is_stmt 0      # ./median.h:108:26
	leaq	(%r10,%rsi), %r11
.Ltmp674:
	.loc	4 108 52                # ./median.h:108:52
	leaq	(%rsi,%rdx,4), %r14
.Ltmp675:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%r11,4), %eax
.Ltmp676:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r14,4), %ebx
.Ltmp677:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %eax
.Ltmp678:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %ebp
	cmovll	%eax, %ebp
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ebp, (%rdi,%r11,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovgel	%eax, %ebx
.Ltmp679:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%ebx, (%rdi,%r14,4)
.Ltmp680:
	.loc	4 109 61 is_stmt 1      # ./median.h:109:61
	leaq	(%rdx,%rdx,4), %rax
.Ltmp681:
	.loc	4 109 52 is_stmt 0      # ./median.h:109:52
	addq	%rsi, %rax
.Ltmp682:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 27 11 is_stmt 1       # ./median.h:27:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp683:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %ebx
.Ltmp684:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %ebp
	cmovll	%ebx, %ebp
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ebp, (%rdi,%r14,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %ebx
.Ltmp685:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%ebx, (%rdi,%rax,4)
.Ltmp686:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%r11,4), %eax
.Ltmp687:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r14,4), %ecx
.Ltmp688:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp689:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %ebx
	cmovll	%eax, %ebx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ebx, (%rdi,%r11,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp690:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r14,4)
.Ltmp691:
	.loc	4 111 26 is_stmt 1      # ./median.h:111:26
	leaq	(%rsi,%r10,2), %rcx
.Ltmp692:
	.loc	4 111 61 is_stmt 0      # ./median.h:111:61
	leaq	(,%rdx,8), %rax
	subq	%rdx, %rax
	.loc	4 111 52                # ./median.h:111:52
	addq	%rsi, %rax
.Ltmp693:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rcx,4), %edx
.Ltmp694:
	#DEBUG_VALUE: sort_pair:x <- $edx
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rax,4), %ebp
.Ltmp695:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %edx
.Ltmp696:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %esi
.Ltmp697:
	cmovll	%edx, %esi
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%esi, (%rdi,%rcx,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ebp, %edx
.Ltmp698:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%edx, (%rdi,%rax,4)
.Ltmp699:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 27 11 is_stmt 1       # ./median.h:27:11
	movl	(%rdi,%r8,4), %ebp
.Ltmp700:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %edx
.Ltmp701:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %esi
	cmovll	%edx, %esi
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%esi, (%rdi,%rax,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ebp, %edx
.Ltmp702:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%edx, (%rdi,%r8,4)
.Ltmp703:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rcx,4), %edx
.Ltmp704:
	#DEBUG_VALUE: sort_pair:x <- $edx
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rax,4), %ebp
.Ltmp705:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %edx
.Ltmp706:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %esi
	cmovll	%edx, %esi
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%esi, (%rdi,%rcx,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ebp, %edx
.Ltmp707:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%edx, (%rdi,%rax,4)
.Ltmp708:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%r9,4), %ecx
.Ltmp709:
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r14,4), %edx
.Ltmp710:
	#DEBUG_VALUE: sort_pair:y <- $edx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %ecx
.Ltmp711:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %esi
	cmovll	%ecx, %esi
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%esi, (%rdi,%r9,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%edx, %ecx
.Ltmp712:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%ecx, (%rdi,%r14,4)
.Ltmp713:
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 27 11 is_stmt 1       # ./median.h:27:11
	movl	(%rdi,%rax,4), %edx
.Ltmp714:
	#DEBUG_VALUE: sort_pair:y <- $edx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %ecx
.Ltmp715:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %esi
	cmovll	%ecx, %esi
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%esi, (%rdi,%r14,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%edx, %ecx
.Ltmp716:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%ecx, (%rdi,%rax,4)
.Ltmp717:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%r9,4), %eax
.Ltmp718:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r14,4), %ecx
.Ltmp719:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp720:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
.Ltmp721:
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%r9,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp722:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%r14,4)
.Ltmp723:
	#DEBUG_VALUE: swap:t <- $eax
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 3 8 is_stmt 1        # ./swap.h:3:8
	movl	(%rdi,%r8,4), %ecx
.Ltmp724:
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi,%r14,4)
	jmp	.LBB16_4
.Ltmp725:
.LBB16_2:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdx
.Ltmp726:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	jne	.LBB16_5
.Ltmp727:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 35 11 is_stmt 1       # ./median.h:35:11
	movl	$1, (%rcx)
.Ltmp728:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp729:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%r8,4), %ecx
.Ltmp730:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp731:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp732:
.LBB16_4:
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%eax, (%rdi,%r8,4)
.Ltmp733:
	.loc	4 124 1 is_stmt 1       # ./median.h:124:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp734:
.LBB16_5:
	.cfi_def_cfa_offset 32
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%r8,%rsi), %rbp
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rbp, %rax
	shrq	$63, %rax
	addq	%rbp, %rax
	shrq	%rax
.Ltmp735:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %r9d
.Ltmp736:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r9d
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %eax
.Ltmp737:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%r8,4), %ebp
.Ltmp738:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %r9d
.Ltmp739:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebx
	cmovll	%r9d, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %r9d
.Ltmp740:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %r9d
.Ltmp741:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %eax
.Ltmp742:
	cmovll	%r9d, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %r9d
.Ltmp743:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ebx
.Ltmp744:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %r11d
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %eax
.Ltmp745:
	.loc	4 49 18                 # ./median.h:49:18
	cmpq	$2, %rdx
.Ltmp746:
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB16_7
.Ltmp747:
# %bb.6:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	.loc	4 50 11 is_stmt 1       # ./median.h:50:11
	movl	$1, (%rcx)
.Ltmp748:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 51 16                 # ./median.h:51:16
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp749:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 52 16                 # ./median.h:52:16
	movl	%eax, (%rdi,%r10,4)
.Ltmp750:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 53 17                 # ./median.h:53:17
	movl	%r9d, (%rdi,%r8,4)
.Ltmp751:
	.loc	4 124 1                 # ./median.h:124:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp752:
.LBB16_7:
	.cfi_def_cfa_offset 32
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:high <- $r8
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_of_median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 57 14                 # ./median.h:57:14
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp753:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 58 15                 # ./median.h:58:15
	movl	%eax, (%rdi,%r8,4)
.Ltmp754:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 59 14                 # ./median.h:59:14
	movl	%r9d, (%rdi,%r10,4)
.Ltmp755:
	.loc	4 124 1                 # ./median.h:124:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp756:
.Lfunc_end16:
	.size	median_of_three_of_median_of_three_auto_finish, .Lfunc_end16-median_of_three_of_median_of_three_auto_finish
	.cfi_endproc
                                        # -- End function
	.globl	sort_pair               # -- Begin function sort_pair
	.p2align	4, 0x90
	.type	sort_pair,@function
sort_pair:                              # @sort_pair
.Lfunc_begin17:
	.loc	4 25 0                  # ./median.h:25:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_pair:i1 <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- $rdi
	#DEBUG_VALUE: sort_pair:i2 <- $rsi
	#DEBUG_VALUE: sort_pair:i2 <- $rsi
	.loc	4 26 11 prologue_end    # ./median.h:26:11
	movl	(%rdi), %eax
.Ltmp757:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rsi), %ecx
.Ltmp758:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp759:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%rdi)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp760:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rsi)
	.loc	4 31 1 is_stmt 1        # ./median.h:31:1
	retq
.Ltmp761:
.Lfunc_end17:
	.size	sort_pair, .Lfunc_end17-sort_pair
	.cfi_endproc
                                        # -- End function
	.globl	median_of_three_auto_finish # -- Begin function median_of_three_auto_finish
	.p2align	4, 0x90
	.type	median_of_three_auto_finish,@function
median_of_three_auto_finish:            # @median_of_three_auto_finish
.Lfunc_begin18:
	.loc	4 33 0                  # ./median.h:33:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp762:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB18_2
.Ltmp763:
# %bb.1:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 35 11 is_stmt 1       # ./median.h:35:11
	movl	$1, (%rcx)
.Ltmp764:
	#DEBUG_VALUE: sort_pair:i2 <- undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp765:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp766:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp767:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
.Ltmp768:
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp769:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp770:
	.loc	4 62 1 is_stmt 1        # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp771:
.LBB18_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %r9
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%r9, %rax
	shrq	$63, %rax
	addq	%r9, %rax
	shrq	%rax
.Ltmp772:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %r9d
.Ltmp773:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r9d
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %eax
.Ltmp774:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp775:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %r9d
.Ltmp776:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebx
	cmovll	%r9d, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %r9d
.Ltmp777:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %r9d
.Ltmp778:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %eax
.Ltmp779:
	cmovll	%r9d, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %r9d
.Ltmp780:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ebx
.Ltmp781:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %r11d
.Ltmp782:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %eax
.Ltmp783:
	.loc	4 49 18                 # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp784:
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB18_4
.Ltmp785:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	.loc	4 50 11 is_stmt 1       # ./median.h:50:11
	movl	$1, (%rcx)
.Ltmp786:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 51 16                 # ./median.h:51:16
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp787:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 52 16                 # ./median.h:52:16
	movl	%eax, (%rdi,%r10,4)
.Ltmp788:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 53 17                 # ./median.h:53:17
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp789:
	.loc	4 62 1                  # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp790:
.LBB18_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:done <- $rcx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $r11d
	.loc	4 57 14                 # ./median.h:57:14
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp791:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 58 15                 # ./median.h:58:15
	movl	%eax, (%rdi,%rdx,4)
.Ltmp792:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r9d
	.loc	4 59 14                 # ./median.h:59:14
	movl	%r9d, (%rdi,%r10,4)
	.loc	4 62 1                  # ./median.h:62:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp793:
.Lfunc_end18:
	.size	median_of_three_auto_finish, .Lfunc_end18-median_of_three_auto_finish
	.cfi_endproc
                                        # -- End function
	.globl	sign                    # -- Begin function sign
	.p2align	4, 0x90
	.type	sign,@function
sign:                                   # @sign
.Lfunc_begin19:
	.file	21 "/home/peeters/bachelor" "./mergeo.h"
	.loc	21 13 0                 # ./mergeo.h:13:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sign:x <- $edi
	#DEBUG_VALUE: sign:x <- $edi
	.loc	21 13 29 prologue_end   # ./mergeo.h:13:29
	movl	%edi, %ecx
	sarl	$31, %ecx
	.loc	21 13 64 is_stmt 0      # ./mergeo.h:13:64
	xorl	%eax, %eax
	testl	%edi, %edi
	setne	%al
	.loc	21 13 60                # ./mergeo.h:13:60
	orl	%ecx, %eax
	.loc	21 13 19                # ./mergeo.h:13:19
	retq
.Ltmp794:
.Lfunc_end19:
	.size	sign, .Lfunc_end19-sign
	.cfi_endproc
                                        # -- End function
	.globl	merging_optimzed        # -- Begin function merging_optimzed
	.p2align	4, 0x90
	.type	merging_optimzed,@function
merging_optimzed:                       # @merging_optimzed
.Lfunc_begin20:
	.loc	21 15 0 is_stmt 1       # ./mergeo.h:15:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp795:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	.loc	21 18 12 prologue_end   # ./mergeo.h:18:12
	leaq	1(%rdx), %r10
.Ltmp796:
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	.loc	21 21 27                # ./mergeo.h:21:27
	cmpq	%rcx, %rdx
.Ltmp797:
	.loc	21 21 3 is_stmt 0       # ./mergeo.h:21:3
	jge	.LBB20_1
.Ltmp798:
# %bb.8:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	cmpq	%rdx, %rsi
	jg	.LBB20_1
.Ltmp799:
# %bb.9:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3                  # ./mergeo.h:0:3
	movq	%rsi, %rax
	movq	%rsi, %r9
.Ltmp800:
	.p2align	4, 0x90
.LBB20_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r10, %r11
	movq	%rax, %r14
.Ltmp801:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r11
	#DEBUG_VALUE: merging_optimzed:l1 <- $r14
	.loc	21 22 13 is_stmt 1      # ./mergeo.h:22:13
	movl	(%rdi,%rax,4), %ebp
.Ltmp802:
	#DEBUG_VALUE: x <- $ebp
	.loc	21 23 13                # ./mergeo.h:23:13
	movl	(%rdi,%r10,4), %ebx
.Ltmp803:
	#DEBUG_VALUE: y <- $ebx
	.loc	21 24 15                # ./mergeo.h:24:15
	xorl	%r10d, %r10d
	xorl	%eax, %eax
	cmpl	%ebx, %ebp
	setg	%r10b
.Ltmp804:
	#DEBUG_VALUE: c <- $r10b
	setle	%al
	.loc	21 25 12                # ./mergeo.h:25:12
	cmovgl	%ebx, %ebp
.Ltmp805:
	.loc	21 25 10 is_stmt 0      # ./mergeo.h:25:10
	movl	%ebp, (%r8,%r9,4)
	.loc	21 26 8 is_stmt 1       # ./mergeo.h:26:8
	addq	%r14, %rax
.Ltmp806:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	.loc	21 27 8                 # ./mergeo.h:27:8
	addq	%r11, %r10
.Ltmp807:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	.loc	21 21 43                # ./mergeo.h:21:43
	incq	%r9
.Ltmp808:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	21 21 27 is_stmt 0      # ./mergeo.h:21:27
	cmpq	%rcx, %r10
.Ltmp809:
	.loc	21 21 3                 # ./mergeo.h:21:3
	jg	.LBB20_2
.Ltmp810:
# %bb.11:                               #   in Loop: Header=BB20_10 Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	cmpq	%rdx, %rax
	jle	.LBB20_10
	jmp	.LBB20_2
.Ltmp811:
.LBB20_1:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 0                  # ./mergeo.h:0:0
	movq	%rsi, %r9
.Ltmp812:
	movq	%rsi, %rax
.Ltmp813:
.LBB20_2:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	21 30 13 is_stmt 1      # ./mergeo.h:30:13
	cmpq	%rdx, %rax
	.loc	21 30 3 is_stmt 0       # ./mergeo.h:30:3
	jg	.LBB20_21
.Ltmp814:
# %bb.3:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rdx, %r11
	subq	%rax, %r11
	incq	%r11
	cmpq	$31, %r11
	jbe	.LBB20_19
.Ltmp815:
# %bb.4:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r8,%r9,4), %r14
	cmpq	%rdx, %rax
	movq	%rdx, %rbx
	cmovgeq	%rax, %rbx
	leaq	(%rdi,%rbx,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %r14
	jae	.LBB20_6
.Ltmp816:
# %bb.5:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%r9, %rbx
	subq	%rax, %rbx
	leaq	(%r8,%rbx,4), %rbx
	addq	$4, %rbx
	leaq	(%rdi,%rax,4), %rbp
	cmpq	%rbx, %rbp
	jb	.LBB20_19
.Ltmp817:
.LBB20_6:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r11, %r14
	andq	$-32, %r14
	leaq	-32(%r14), %rbp
	movq	%rbp, %rbx
	shrq	$5, %rbx
	incq	%rbx
	movl	%ebx, %r15d
	andl	$3, %r15d
	cmpq	$96, %rbp
	jae	.LBB20_12
.Ltmp818:
# %bb.7:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%ebx, %ebx
	jmp	.LBB20_14
.Ltmp819:
.LBB20_12:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 30 3                 # ./mergeo.h:30:3
	leaq	(%rdi,%rax,4), %r12
	addq	$480, %r12              # imm = 0x1E0
	leaq	(%r8,%r9,4), %r13
	addq	$480, %r13              # imm = 0x1E0
	movq	%r15, %rbp
	subq	%rbx, %rbp
	xorl	%ebx, %ebx
.Ltmp820:
	.p2align	4, 0x90
.LBB20_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 31 14 is_stmt 1      # ./mergeo.h:31:14
	vmovups	-480(%r12,%rbx,4), %ymm0
	vmovups	-448(%r12,%rbx,4), %ymm1
	vmovups	-416(%r12,%rbx,4), %ymm2
	vmovups	-384(%r12,%rbx,4), %ymm3
	.loc	21 31 12 is_stmt 0      # ./mergeo.h:31:12
	vmovups	%ymm0, -480(%r13,%rbx,4)
	vmovups	%ymm1, -448(%r13,%rbx,4)
	vmovups	%ymm2, -416(%r13,%rbx,4)
	vmovups	%ymm3, -384(%r13,%rbx,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-352(%r12,%rbx,4), %ymm0
	vmovups	-320(%r12,%rbx,4), %ymm1
	vmovups	-288(%r12,%rbx,4), %ymm2
	vmovups	-256(%r12,%rbx,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -352(%r13,%rbx,4)
	vmovups	%ymm1, -320(%r13,%rbx,4)
	vmovups	%ymm2, -288(%r13,%rbx,4)
	vmovups	%ymm3, -256(%r13,%rbx,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-224(%r12,%rbx,4), %ymm0
	vmovups	-192(%r12,%rbx,4), %ymm1
	vmovups	-160(%r12,%rbx,4), %ymm2
	vmovups	-128(%r12,%rbx,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -224(%r13,%rbx,4)
	vmovups	%ymm1, -192(%r13,%rbx,4)
	vmovups	%ymm2, -160(%r13,%rbx,4)
	vmovups	%ymm3, -128(%r13,%rbx,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-96(%r12,%rbx,4), %ymm0
	vmovups	-64(%r12,%rbx,4), %ymm1
	vmovups	-32(%r12,%rbx,4), %ymm2
	vmovups	(%r12,%rbx,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -96(%r13,%rbx,4)
	vmovups	%ymm1, -64(%r13,%rbx,4)
	vmovups	%ymm2, -32(%r13,%rbx,4)
	vmovups	%ymm3, (%r13,%rbx,4)
	subq	$-128, %rbx
	addq	$4, %rbp
	jne	.LBB20_13
.Ltmp821:
.LBB20_14:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 12                 # ./mergeo.h:0:12
	testq	%r15, %r15
	je	.LBB20_17
.Ltmp822:
# %bb.15:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r9,%rbx), %rbp
	leaq	(%r8,%rbp,4), %r12
	addq	%rax, %rbx
	leaq	(%rdi,%rbx,4), %rbx
	negq	%r15
	movl	$96, %ebp
.Ltmp823:
	.p2align	4, 0x90
.LBB20_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-96(%rbx,%rbp), %ymm0
	vmovups	-64(%rbx,%rbp), %ymm1
	vmovups	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -96(%r12,%rbp)
	vmovups	%ymm1, -64(%r12,%rbp)
	vmovups	%ymm2, -32(%r12,%rbp)
	vmovups	%ymm3, (%r12,%rbp)
	subq	$-128, %rbp
	incq	%r15
	jne	.LBB20_16
.Ltmp824:
.LBB20_17:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 12                 # ./mergeo.h:0:12
	addq	%r14, %r9
.Ltmp825:
	.loc	21 30 3 is_stmt 1       # ./mergeo.h:30:3
	cmpq	%r14, %r11
	je	.LBB20_21
.Ltmp826:
# %bb.18:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r14, %rax
.Ltmp827:
.LBB20_19:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 30 3                 # ./mergeo.h:30:3
	decq	%rax
.Ltmp828:
	.p2align	4, 0x90
.LBB20_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 31 14 is_stmt 1      # ./mergeo.h:31:14
	movl	4(%rdi,%rax,4), %ebp
	.loc	21 31 12 is_stmt 0      # ./mergeo.h:31:12
	movl	%ebp, (%r8,%r9,4)
	.loc	21 31 8                 # ./mergeo.h:31:8
	incq	%r9
.Ltmp829:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	21 30 13 is_stmt 1      # ./mergeo.h:30:13
	incq	%rax
	cmpq	%rdx, %rax
	.loc	21 30 3 is_stmt 0       # ./mergeo.h:30:3
	jl	.LBB20_20
.Ltmp830:
.LBB20_21:
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	.loc	21 34 13 is_stmt 1      # ./mergeo.h:34:13
	cmpq	%rcx, %r10
	.loc	21 34 3 is_stmt 0       # ./mergeo.h:34:3
	jg	.LBB20_25
.Ltmp831:
# %bb.22:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rcx, %r11
	subq	%r10, %r11
	incq	%r11
	cmpq	$31, %r11
	jbe	.LBB20_23
.Ltmp832:
# %bb.31:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $rdx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%r8,%r9,4), %r15
	cmpq	%rcx, %r10
	movq	%rcx, %rax
	cmovgeq	%r10, %rax
	leaq	(%rdi,%r10,4), %r12
	leaq	(%rdi,%rax,4), %rdx
.Ltmp833:
	addq	$4, %rdx
	cmpq	%rdx, %r15
	jae	.LBB20_33
.Ltmp834:
# %bb.32:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%r9, %rax
	subq	%r10, %rax
	leaq	(%r8,%rax,4), %rax
	addq	$4, %rax
	cmpq	%rax, %r12
	jb	.LBB20_23
.Ltmp835:
.LBB20_33:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r11, %r14
	andq	$-32, %r14
	leaq	-32(%r14), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r13d
	andl	$3, %r13d
	cmpq	$96, %rax
	jae	.LBB20_35
.Ltmp836:
# %bb.34:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%edx, %edx
	jmp	.LBB20_37
.Ltmp837:
.LBB20_35:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 34 3                 # ./mergeo.h:34:3
	leaq	(%rdi,%r10,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	(%r8,%r9,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r13, %rbp
	subq	%rdx, %rbp
	xorl	%edx, %edx
.Ltmp838:
	.p2align	4, 0x90
.LBB20_36:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 35 14 is_stmt 1      # ./mergeo.h:35:14
	vmovups	-480(%rax,%rdx,4), %ymm0
	vmovups	-448(%rax,%rdx,4), %ymm1
	vmovups	-416(%rax,%rdx,4), %ymm2
	vmovups	-384(%rax,%rdx,4), %ymm3
	.loc	21 35 12 is_stmt 0      # ./mergeo.h:35:12
	vmovups	%ymm0, -480(%rbx,%rdx,4)
	vmovups	%ymm1, -448(%rbx,%rdx,4)
	vmovups	%ymm2, -416(%rbx,%rdx,4)
	vmovups	%ymm3, -384(%rbx,%rdx,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-352(%rax,%rdx,4), %ymm0
	vmovups	-320(%rax,%rdx,4), %ymm1
	vmovups	-288(%rax,%rdx,4), %ymm2
	vmovups	-256(%rax,%rdx,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -352(%rbx,%rdx,4)
	vmovups	%ymm1, -320(%rbx,%rdx,4)
	vmovups	%ymm2, -288(%rbx,%rdx,4)
	vmovups	%ymm3, -256(%rbx,%rdx,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-224(%rax,%rdx,4), %ymm0
	vmovups	-192(%rax,%rdx,4), %ymm1
	vmovups	-160(%rax,%rdx,4), %ymm2
	vmovups	-128(%rax,%rdx,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -224(%rbx,%rdx,4)
	vmovups	%ymm1, -192(%rbx,%rdx,4)
	vmovups	%ymm2, -160(%rbx,%rdx,4)
	vmovups	%ymm3, -128(%rbx,%rdx,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-96(%rax,%rdx,4), %ymm0
	vmovups	-64(%rax,%rdx,4), %ymm1
	vmovups	-32(%rax,%rdx,4), %ymm2
	vmovups	(%rax,%rdx,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -96(%rbx,%rdx,4)
	vmovups	%ymm1, -64(%rbx,%rdx,4)
	vmovups	%ymm2, -32(%rbx,%rdx,4)
	vmovups	%ymm3, (%rbx,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %rbp
	jne	.LBB20_36
.Ltmp839:
.LBB20_37:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 12                 # ./mergeo.h:0:12
	testq	%r13, %r13
	je	.LBB20_40
.Ltmp840:
# %bb.38:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	96(,%rdx,4), %rax
	negq	%r13
.Ltmp841:
	.p2align	4, 0x90
.LBB20_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-96(%r12,%rax), %ymm0
	vmovups	-64(%r12,%rax), %ymm1
	vmovups	-32(%r12,%rax), %ymm2
	vmovups	(%r12,%rax), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -96(%r15,%rax)
	vmovups	%ymm1, -64(%r15,%rax)
	vmovups	%ymm2, -32(%r15,%rax)
	vmovups	%ymm3, (%r15,%rax)
	subq	$-128, %rax
	incq	%r13
	jne	.LBB20_39
.Ltmp842:
.LBB20_40:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 34 3 is_stmt 1       # ./mergeo.h:34:3
	cmpq	%r14, %r11
	je	.LBB20_25
.Ltmp843:
# %bb.41:
	#DEBUG_VALUE: merging_optimzed:i <- $r9
	#DEBUG_VALUE: merging_optimzed:l2 <- $r10
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r14, %r10
.Ltmp844:
	addq	%r14, %r9
.Ltmp845:
.LBB20_23:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 34 3                 # ./mergeo.h:34:3
	decq	%r10
	leaq	(%r8,%r9,4), %rax
.Ltmp846:
	.p2align	4, 0x90
.LBB20_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:l2 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 35 14 is_stmt 1      # ./mergeo.h:35:14
	movl	4(%rdi,%r10,4), %edx
.Ltmp847:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 35 12 is_stmt 0      # ./mergeo.h:35:12
	movl	%edx, (%rax)
.Ltmp848:
	.loc	21 34 13 is_stmt 1      # ./mergeo.h:34:13
	incq	%r10
	addq	$4, %rax
	cmpq	%rcx, %r10
	.loc	21 34 3 is_stmt 0       # ./mergeo.h:34:3
	jl	.LBB20_24
.Ltmp849:
.LBB20_25:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:low <- $rsi
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	21 38 27 is_stmt 1      # ./mergeo.h:38:27
	leaq	-7(%rcx), %rax
	.loc	21 38 19 is_stmt 0      # ./mergeo.h:38:19
	cmpq	%rsi, %rax
.Ltmp850:
	.loc	21 38 3                 # ./mergeo.h:38:3
	jl	.LBB20_26
.Ltmp851:
	.p2align	4, 0x90
.LBB20_53:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	21 39 44 is_stmt 1      # ./mergeo.h:39:44
	vmovups	(%r8,%rsi,4), %ymm0
	.loc	21 39 5 is_stmt 0       # ./mergeo.h:39:5
	vmovups	%ymm0, (%rdi,%rsi,4)
.Ltmp852:
	.loc	21 38 34 is_stmt 1      # ./mergeo.h:38:34
	addq	$8, %rsi
.Ltmp853:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	21 38 19 is_stmt 0      # ./mergeo.h:38:19
	cmpq	%rax, %rsi
.Ltmp854:
	.loc	21 38 3                 # ./mergeo.h:38:3
	jle	.LBB20_53
.Ltmp855:
.LBB20_26:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	.loc	21 42 12 is_stmt 1      # ./mergeo.h:42:12
	cmpq	%rcx, %rsi
.Ltmp856:
	.loc	21 42 3 is_stmt 0       # ./mergeo.h:42:3
	jg	.LBB20_30
.Ltmp857:
# %bb.27:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%rcx, %r10
	subq	%rsi, %r10
	incq	%r10
	cmpq	$31, %r10
	jbe	.LBB20_28
.Ltmp858:
# %bb.42:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%rdi,%rsi,4), %rdx
	cmpq	%rcx, %rsi
	movq	%rcx, %rax
	cmovgeq	%rsi, %rax
	leaq	(%r8,%rax,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %rdx
	jae	.LBB20_44
.Ltmp859:
# %bb.43:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	leaq	(%rdi,%rax,4), %rax
	addq	$4, %rax
	leaq	(%r8,%rsi,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB20_28
.Ltmp860:
.LBB20_44:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r11d
	andl	$3, %r11d
	cmpq	$96, %rax
	jae	.LBB20_46
.Ltmp861:
# %bb.45:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%edx, %edx
	jmp	.LBB20_48
.Ltmp862:
.LBB20_46:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 42 3                 # ./mergeo.h:42:3
	leaq	(%rdi,%rsi,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	(%r8,%rsi,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r11, %rbp
	subq	%rdx, %rbp
	xorl	%edx, %edx
.Ltmp863:
	.p2align	4, 0x90
.LBB20_47:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 43 12 is_stmt 1      # ./mergeo.h:43:12
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	21 43 10 is_stmt 0      # ./mergeo.h:43:10
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %rbp
	jne	.LBB20_47
.Ltmp864:
.LBB20_48:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 10                 # ./mergeo.h:0:10
	testq	%r11, %r11
	je	.LBB20_51
.Ltmp865:
# %bb.49:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	addq	%rsi, %rdx
	leaq	96(,%rdx,4), %rax
	negq	%r11
.Ltmp866:
	.p2align	4, 0x90
.LBB20_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-96(%r8,%rax), %ymm0
	vmovups	-64(%r8,%rax), %ymm1
	vmovups	-32(%r8,%rax), %ymm2
	vmovups	(%r8,%rax), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -96(%rdi,%rax)
	vmovups	%ymm1, -64(%rdi,%rax)
	vmovups	%ymm2, -32(%rdi,%rax)
	vmovups	%ymm3, (%rdi,%rax)
	subq	$-128, %rax
	incq	%r11
	jne	.LBB20_50
.Ltmp867:
.LBB20_51:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 42 3 is_stmt 1       # ./mergeo.h:42:3
	cmpq	%r9, %r10
	je	.LBB20_30
.Ltmp868:
# %bb.52:
	#DEBUG_VALUE: merging_optimzed:i <- $rsi
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r9, %rsi
.Ltmp869:
.LBB20_28:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 42 3                 # ./mergeo.h:42:3
	decq	%rsi
.Ltmp870:
	.p2align	4, 0x90
.LBB20_29:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	#DEBUG_VALUE: merging_optimzed:i <- undef
	.loc	21 43 12 is_stmt 1      # ./mergeo.h:43:12
	movl	4(%r8,%rsi,4), %eax
	.loc	21 43 10 is_stmt 0      # ./mergeo.h:43:10
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp871:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 42 12 is_stmt 1      # ./mergeo.h:42:12
	incq	%rsi
	cmpq	%rcx, %rsi
.Ltmp872:
	.loc	21 42 3 is_stmt 0       # ./mergeo.h:42:3
	jl	.LBB20_29
.Ltmp873:
.LBB20_30:
	#DEBUG_VALUE: merging_optimzed:b <- $r8
	#DEBUG_VALUE: merging_optimzed:high <- $rcx
	#DEBUG_VALUE: merging_optimzed:a <- $rdi
	.loc	21 45 1 is_stmt 1       # ./mergeo.h:45:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp874:
.Lfunc_end20:
	.size	merging_optimzed, .Lfunc_end20-merging_optimzed
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_o            # -- Begin function sort_merge_o
	.p2align	4, 0x90
	.type	sort_merge_o,@function
sort_merge_o:                           # @sort_merge_o
.Lfunc_begin21:
	.loc	21 47 0                 # ./mergeo.h:47:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	21 50 11 prologue_end   # ./mergeo.h:50:11
	cmpq	%rdx, %rsi
.Ltmp875:
	.loc	21 50 7 is_stmt 0       # ./mergeo.h:50:7
	jge	.LBB21_31
.Ltmp876:
# %bb.1:
	#DEBUG_VALUE: sort_merge_o:b <- $rcx
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	#DEBUG_VALUE: sort_merge_o:low <- $rsi
	#DEBUG_VALUE: sort_merge_o:a <- $rdi
	.loc	21 0 7                  # ./mergeo.h:0:7
	movq	%rcx, %r15
.Ltmp877:
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rdx, %rbp
.Ltmp878:
	#DEBUG_VALUE: sort_merge_o:high <- $rbp
	movq	%rsi, %r13
.Ltmp879:
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	movq	%rdi, %r12
.Ltmp880:
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	.loc	21 51 16 is_stmt 1      # ./mergeo.h:51:16
	leaq	(%rdx,%rsi), %rax
	.loc	21 51 24 is_stmt 0      # ./mergeo.h:51:24
	movq	%rax, %r14
	shrq	$63, %r14
	addq	%rax, %r14
	sarq	%r14
.Ltmp881:
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	.loc	21 52 5 is_stmt 1       # ./mergeo.h:52:5
	movq	%r14, %rdx
	movq	%rbp, (%rsp)            # 8-byte Spill
.Ltmp882:
	#DEBUG_VALUE: sort_merge_o:high <- [$rsp+0]
	callq	sort_merge_o
.Ltmp883:
	.loc	21 53 25                # ./mergeo.h:53:25
	leaq	1(%r14), %rbx
	.loc	21 53 5 is_stmt 0       # ./mergeo.h:53:5
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	(%rsp), %rdx            # 8-byte Reload
.Ltmp884:
	#DEBUG_VALUE: sort_merge_o:high <- $rdx
	movq	%r15, %rcx
	callq	sort_merge_o
.Ltmp885:
	.loc	21 0 5                  # ./mergeo.h:0:5
	movq	(%rsp), %r11            # 8-byte Reload
.Ltmp886:
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	.loc	21 21 27 is_stmt 1      # ./mergeo.h:21:27
	cmpq	%r11, %r14
.Ltmp887:
	.loc	21 21 3 is_stmt 0       # ./mergeo.h:21:3
	jge	.LBB21_2
.Ltmp888:
# %bb.9:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	cmpq	%r13, %r14
	jl	.LBB21_2
.Ltmp889:
# %bb.10:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3                  # ./mergeo.h:0:3
	movq	%r13, %rcx
	movq	%r13, %rax
.Ltmp890:
	.p2align	4, 0x90
.LBB21_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rbx, %rdx
	movq	%rcx, %rsi
.Ltmp891:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:l2 <- $rdx
	#DEBUG_VALUE: merging_optimzed:l1 <- $rsi
	.loc	21 22 13 is_stmt 1      # ./mergeo.h:22:13
	movl	(%r12,%rcx,4), %edi
.Ltmp892:
	#DEBUG_VALUE: x <- $edi
	.loc	21 23 13                # ./mergeo.h:23:13
	movl	(%r12,%rbx,4), %ebp
.Ltmp893:
	#DEBUG_VALUE: y <- $ebp
	.loc	21 24 15                # ./mergeo.h:24:15
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	cmpl	%ebp, %edi
	setg	%bl
.Ltmp894:
	#DEBUG_VALUE: c <- $bl
	setle	%cl
	.loc	21 25 12                # ./mergeo.h:25:12
	cmovgl	%ebp, %edi
.Ltmp895:
	.loc	21 25 10 is_stmt 0      # ./mergeo.h:25:10
	movl	%edi, (%r15,%rax,4)
	.loc	21 26 8 is_stmt 1       # ./mergeo.h:26:8
	addq	%rsi, %rcx
.Ltmp896:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	.loc	21 27 8                 # ./mergeo.h:27:8
	addq	%rdx, %rbx
.Ltmp897:
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	.loc	21 21 43                # ./mergeo.h:21:43
	incq	%rax
.Ltmp898:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	21 21 27 is_stmt 0      # ./mergeo.h:21:27
	cmpq	%r11, %rbx
.Ltmp899:
	.loc	21 21 3                 # ./mergeo.h:21:3
	jg	.LBB21_3
.Ltmp900:
# %bb.12:                               #   in Loop: Header=BB21_11 Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	cmpq	%r14, %rcx
	jle	.LBB21_11
	jmp	.LBB21_3
.Ltmp901:
.LBB21_2:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $r13
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 0                  # ./mergeo.h:0:0
	movq	%r13, %rax
.Ltmp902:
	movq	%r13, %rcx
.Ltmp903:
.LBB21_3:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	21 30 13 is_stmt 1      # ./mergeo.h:30:13
	cmpq	%r14, %rcx
	.loc	21 30 3 is_stmt 0       # ./mergeo.h:30:3
	jg	.LBB21_22
.Ltmp904:
# %bb.4:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r14, %r9
	subq	%rcx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB21_20
.Ltmp905:
# %bb.5:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r15,%rax,4), %rsi
	cmpq	%r14, %rcx
	movq	%r14, %rdx
	cmovgeq	%rcx, %rdx
	leaq	(%r12,%rdx,4), %rdi
	addq	$4, %rdi
	cmpq	%rdi, %rsi
	jae	.LBB21_7
.Ltmp906:
# %bb.6:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%rax, %rdx
	subq	%rcx, %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	$4, %rdx
	leaq	(%r12,%rcx,4), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB21_20
.Ltmp907:
.LBB21_7:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rdx
	jae	.LBB21_13
.Ltmp908:
# %bb.8:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%esi, %esi
	jmp	.LBB21_15
.Ltmp909:
.LBB21_13:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 30 3                 # ./mergeo.h:30:3
	leaq	(%r12,%rcx,4), %rdx
	addq	$480, %rdx              # imm = 0x1E0
	leaq	(%r15,%rax,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	movq	%r10, %rbp
	subq	%rsi, %rbp
	xorl	%esi, %esi
.Ltmp910:
	.p2align	4, 0x90
.LBB21_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 31 14 is_stmt 1      # ./mergeo.h:31:14
	vmovups	-480(%rdx,%rsi,4), %ymm0
	vmovups	-448(%rdx,%rsi,4), %ymm1
	vmovups	-416(%rdx,%rsi,4), %ymm2
	vmovups	-384(%rdx,%rsi,4), %ymm3
	.loc	21 31 12 is_stmt 0      # ./mergeo.h:31:12
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-352(%rdx,%rsi,4), %ymm0
	vmovups	-320(%rdx,%rsi,4), %ymm1
	vmovups	-288(%rdx,%rsi,4), %ymm2
	vmovups	-256(%rdx,%rsi,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-224(%rdx,%rsi,4), %ymm0
	vmovups	-192(%rdx,%rsi,4), %ymm1
	vmovups	-160(%rdx,%rsi,4), %ymm2
	vmovups	-128(%rdx,%rsi,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-96(%rdx,%rsi,4), %ymm0
	vmovups	-64(%rdx,%rsi,4), %ymm1
	vmovups	-32(%rdx,%rsi,4), %ymm2
	vmovups	(%rdx,%rsi,4), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rbp
	jne	.LBB21_14
.Ltmp911:
.LBB21_15:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 12                 # ./mergeo.h:0:12
	testq	%r10, %r10
	je	.LBB21_18
.Ltmp912:
# %bb.16:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%rax,%rsi), %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	%rcx, %rsi
	leaq	(%r12,%rsi,4), %rsi
	negq	%r10
	movl	$96, %edi
.Ltmp913:
	.p2align	4, 0x90
.LBB21_17:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 31 14                # ./mergeo.h:31:14
	vmovups	-96(%rsi,%rdi), %ymm0
	vmovups	-64(%rsi,%rdi), %ymm1
	vmovups	-32(%rsi,%rdi), %ymm2
	vmovups	(%rsi,%rdi), %ymm3
	.loc	21 31 12                # ./mergeo.h:31:12
	vmovups	%ymm0, -96(%rdx,%rdi)
	vmovups	%ymm1, -64(%rdx,%rdi)
	vmovups	%ymm2, -32(%rdx,%rdi)
	vmovups	%ymm3, (%rdx,%rdi)
	subq	$-128, %rdi
	incq	%r10
	jne	.LBB21_17
.Ltmp914:
.LBB21_18:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 12                 # ./mergeo.h:0:12
	addq	%r8, %rax
.Ltmp915:
	.loc	21 30 3 is_stmt 1       # ./mergeo.h:30:3
	cmpq	%r8, %r9
	je	.LBB21_22
.Ltmp916:
# %bb.19:
	#DEBUG_VALUE: merging_optimzed:l1 <- $rcx
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r8, %rcx
.Ltmp917:
.LBB21_20:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 30 3                 # ./mergeo.h:30:3
	decq	%rcx
.Ltmp918:
	.p2align	4, 0x90
.LBB21_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l1 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 31 14 is_stmt 1      # ./mergeo.h:31:14
	movl	4(%r12,%rcx,4), %edx
	.loc	21 31 12 is_stmt 0      # ./mergeo.h:31:12
	movl	%edx, (%r15,%rax,4)
	.loc	21 31 8                 # ./mergeo.h:31:8
	incq	%rax
.Ltmp919:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	21 30 13 is_stmt 1      # ./mergeo.h:30:13
	incq	%rcx
	cmpq	%r14, %rcx
	.loc	21 30 3 is_stmt 0       # ./mergeo.h:30:3
	jl	.LBB21_21
.Ltmp920:
.LBB21_22:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	.loc	21 34 13 is_stmt 1      # ./mergeo.h:34:13
	cmpq	%r11, %rbx
	.loc	21 34 3 is_stmt 0       # ./mergeo.h:34:3
	jg	.LBB21_26
.Ltmp921:
# %bb.23:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r11, %r9
	subq	%rbx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB21_24
.Ltmp922:
# %bb.32:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r15,%rax,4), %r10
	cmpq	%r11, %rbx
	movq	%r11, %rcx
	cmovgeq	%rbx, %rcx
	leaq	(%r12,%rbx,4), %r11
	leaq	(%r12,%rcx,4), %rdx
	addq	$4, %rdx
	cmpq	%rdx, %r10
	jae	.LBB21_35
.Ltmp923:
# %bb.33:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%rax, %rcx
	subq	%rbx, %rcx
	leaq	(%r15,%rcx,4), %rcx
	addq	$4, %rcx
	cmpq	%rcx, %r11
	jae	.LBB21_35
.Ltmp924:
# %bb.34:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3                  # ./mergeo.h:0:3
	movq	(%rsp), %r11            # 8-byte Reload
	jmp	.LBB21_24
.Ltmp925:
.LBB21_35:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 34 3                 # ./mergeo.h:34:3
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rcx
	movq	%rcx, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %esi
	andl	$3, %esi
	cmpq	$96, %rcx
	jae	.LBB21_37
.Ltmp926:
# %bb.36:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%edi, %edi
	jmp	.LBB21_39
.Ltmp927:
.LBB21_37:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 34 3                 # ./mergeo.h:34:3
	leaq	(%r12,%rbx,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	leaq	(%r15,%rax,4), %rdx
	addq	$480, %rdx              # imm = 0x1E0
	movq	%rsi, %rbp
	subq	%rdi, %rbp
	xorl	%edi, %edi
.Ltmp928:
	.p2align	4, 0x90
.LBB21_38:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 35 14 is_stmt 1      # ./mergeo.h:35:14
	vmovups	-480(%rcx,%rdi,4), %ymm0
	vmovups	-448(%rcx,%rdi,4), %ymm1
	vmovups	-416(%rcx,%rdi,4), %ymm2
	vmovups	-384(%rcx,%rdi,4), %ymm3
	.loc	21 35 12 is_stmt 0      # ./mergeo.h:35:12
	vmovups	%ymm0, -480(%rdx,%rdi,4)
	vmovups	%ymm1, -448(%rdx,%rdi,4)
	vmovups	%ymm2, -416(%rdx,%rdi,4)
	vmovups	%ymm3, -384(%rdx,%rdi,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-352(%rcx,%rdi,4), %ymm0
	vmovups	-320(%rcx,%rdi,4), %ymm1
	vmovups	-288(%rcx,%rdi,4), %ymm2
	vmovups	-256(%rcx,%rdi,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -352(%rdx,%rdi,4)
	vmovups	%ymm1, -320(%rdx,%rdi,4)
	vmovups	%ymm2, -288(%rdx,%rdi,4)
	vmovups	%ymm3, -256(%rdx,%rdi,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-224(%rcx,%rdi,4), %ymm0
	vmovups	-192(%rcx,%rdi,4), %ymm1
	vmovups	-160(%rcx,%rdi,4), %ymm2
	vmovups	-128(%rcx,%rdi,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -224(%rdx,%rdi,4)
	vmovups	%ymm1, -192(%rdx,%rdi,4)
	vmovups	%ymm2, -160(%rdx,%rdi,4)
	vmovups	%ymm3, -128(%rdx,%rdi,4)
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-96(%rcx,%rdi,4), %ymm0
	vmovups	-64(%rcx,%rdi,4), %ymm1
	vmovups	-32(%rcx,%rdi,4), %ymm2
	vmovups	(%rcx,%rdi,4), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -96(%rdx,%rdi,4)
	vmovups	%ymm1, -64(%rdx,%rdi,4)
	vmovups	%ymm2, -32(%rdx,%rdi,4)
	vmovups	%ymm3, (%rdx,%rdi,4)
	subq	$-128, %rdi
	addq	$4, %rbp
	jne	.LBB21_38
.Ltmp929:
.LBB21_39:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 12                 # ./mergeo.h:0:12
	testq	%rsi, %rsi
	je	.LBB21_42
.Ltmp930:
# %bb.40:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	96(,%rdi,4), %rcx
	negq	%rsi
.Ltmp931:
	.p2align	4, 0x90
.LBB21_41:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 35 14                # ./mergeo.h:35:14
	vmovups	-96(%r11,%rcx), %ymm0
	vmovups	-64(%r11,%rcx), %ymm1
	vmovups	-32(%r11,%rcx), %ymm2
	vmovups	(%r11,%rcx), %ymm3
	.loc	21 35 12                # ./mergeo.h:35:12
	vmovups	%ymm0, -96(%r10,%rcx)
	vmovups	%ymm1, -64(%r10,%rcx)
	vmovups	%ymm2, -32(%r10,%rcx)
	vmovups	%ymm3, (%r10,%rcx)
	subq	$-128, %rcx
	incq	%rsi
	jne	.LBB21_41
.Ltmp932:
.LBB21_42:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 34 3 is_stmt 1       # ./mergeo.h:34:3
	cmpq	%r8, %r9
	movq	(%rsp), %r11            # 8-byte Reload
	je	.LBB21_26
.Ltmp933:
# %bb.43:
	#DEBUG_VALUE: merging_optimzed:i <- $rax
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%r8, %rbx
.Ltmp934:
	addq	%r8, %rax
.Ltmp935:
.LBB21_24:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 34 3                 # ./mergeo.h:34:3
	decq	%rbx
	leaq	(%r15,%rax,4), %rax
.Ltmp936:
	.p2align	4, 0x90
.LBB21_25:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:l2 <- undef
	#DEBUG_VALUE: merging_optimzed:i <- undef
	#DEBUG_VALUE: merging_optimzed:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 35 14 is_stmt 1      # ./mergeo.h:35:14
	movl	4(%r12,%rbx,4), %ecx
.Ltmp937:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 35 12 is_stmt 0      # ./mergeo.h:35:12
	movl	%ecx, (%rax)
.Ltmp938:
	.loc	21 34 13 is_stmt 1      # ./mergeo.h:34:13
	incq	%rbx
	addq	$4, %rax
	cmpq	%r11, %rbx
	.loc	21 34 3 is_stmt 0       # ./mergeo.h:34:3
	jl	.LBB21_25
.Ltmp939:
.LBB21_26:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:low <- $r13
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:low <- $r13
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	21 38 27 is_stmt 1      # ./mergeo.h:38:27
	leaq	-7(%r11), %rax
	.loc	21 38 19 is_stmt 0      # ./mergeo.h:38:19
	cmpq	%r13, %rax
.Ltmp940:
	.loc	21 38 3                 # ./mergeo.h:38:3
	jl	.LBB21_27
.Ltmp941:
	.p2align	4, 0x90
.LBB21_55:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	21 39 44 is_stmt 1      # ./mergeo.h:39:44
	vmovups	(%r15,%r13,4), %ymm0
	.loc	21 39 5 is_stmt 0       # ./mergeo.h:39:5
	vmovups	%ymm0, (%r12,%r13,4)
.Ltmp942:
	.loc	21 38 34 is_stmt 1      # ./mergeo.h:38:34
	addq	$8, %r13
.Ltmp943:
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	21 38 19 is_stmt 0      # ./mergeo.h:38:19
	cmpq	%rax, %r13
.Ltmp944:
	.loc	21 38 3                 # ./mergeo.h:38:3
	jle	.LBB21_55
.Ltmp945:
.LBB21_27:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	.loc	21 42 12 is_stmt 1      # ./mergeo.h:42:12
	cmpq	%r11, %r13
.Ltmp946:
	.loc	21 42 3 is_stmt 0       # ./mergeo.h:42:3
	jg	.LBB21_31
.Ltmp947:
# %bb.28:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%r11, %rax
	subq	%r13, %rax
	incq	%rax
	cmpq	$31, %rax
	jbe	.LBB21_29
.Ltmp948:
# %bb.44:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r12,%r13,4), %rdx
	cmpq	%r11, %r13
	movq	%r11, %rcx
	cmovgeq	%r13, %rcx
	leaq	(%r15,%rcx,4), %rsi
	addq	$4, %rsi
	cmpq	%rsi, %rdx
	jae	.LBB21_46
.Ltmp949:
# %bb.45:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	leaq	(%r12,%rcx,4), %rcx
	addq	$4, %rcx
	leaq	(%r15,%r13,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB21_29
.Ltmp950:
.LBB21_46:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	movq	%rax, %rcx
	andq	$-32, %rcx
	leaq	-32(%rcx), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %ebx
	andl	$3, %ebx
	cmpq	$96, %rdx
	jae	.LBB21_48
.Ltmp951:
# %bb.47:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3                  # ./mergeo.h:0:3
	xorl	%esi, %esi
	jmp	.LBB21_50
.Ltmp952:
.LBB21_48:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 42 3                 # ./mergeo.h:42:3
	leaq	(%r12,%r13,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	leaq	(%r15,%r13,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	movq	%rbx, %rdx
	subq	%rsi, %rdx
	xorl	%esi, %esi
.Ltmp953:
	.p2align	4, 0x90
.LBB21_49:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 43 12 is_stmt 1      # ./mergeo.h:43:12
	vmovups	-480(%rbp,%rsi,4), %ymm0
	vmovups	-448(%rbp,%rsi,4), %ymm1
	vmovups	-416(%rbp,%rsi,4), %ymm2
	vmovups	-384(%rbp,%rsi,4), %ymm3
	.loc	21 43 10 is_stmt 0      # ./mergeo.h:43:10
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-352(%rbp,%rsi,4), %ymm0
	vmovups	-320(%rbp,%rsi,4), %ymm1
	vmovups	-288(%rbp,%rsi,4), %ymm2
	vmovups	-256(%rbp,%rsi,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-224(%rbp,%rsi,4), %ymm0
	vmovups	-192(%rbp,%rsi,4), %ymm1
	vmovups	-160(%rbp,%rsi,4), %ymm2
	vmovups	-128(%rbp,%rsi,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-96(%rbp,%rsi,4), %ymm0
	vmovups	-64(%rbp,%rsi,4), %ymm1
	vmovups	-32(%rbp,%rsi,4), %ymm2
	vmovups	(%rbp,%rsi,4), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB21_49
.Ltmp954:
.LBB21_50:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 10                 # ./mergeo.h:0:10
	testq	%rbx, %rbx
	je	.LBB21_53
.Ltmp955:
# %bb.51:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	addq	%r13, %rsi
	leaq	96(,%rsi,4), %rdx
	negq	%rbx
.Ltmp956:
	.p2align	4, 0x90
.LBB21_52:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 43 12                # ./mergeo.h:43:12
	vmovups	-96(%r15,%rdx), %ymm0
	vmovups	-64(%r15,%rdx), %ymm1
	vmovups	-32(%r15,%rdx), %ymm2
	vmovups	(%r15,%rdx), %ymm3
	.loc	21 43 10                # ./mergeo.h:43:10
	vmovups	%ymm0, -96(%r12,%rdx)
	vmovups	%ymm1, -64(%r12,%rdx)
	vmovups	%ymm2, -32(%r12,%rdx)
	vmovups	%ymm3, (%r12,%rdx)
	subq	$-128, %rdx
	incq	%rbx
	jne	.LBB21_52
.Ltmp957:
.LBB21_53:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 42 3 is_stmt 1       # ./mergeo.h:42:3
	cmpq	%rcx, %rax
	je	.LBB21_31
.Ltmp958:
# %bb.54:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- $r13
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 0 3 is_stmt 0        # ./mergeo.h:0:3
	addq	%rcx, %r13
.Ltmp959:
.LBB21_29:
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	.loc	21 42 3                 # ./mergeo.h:42:3
	decq	%r13
.Ltmp960:
	.p2align	4, 0x90
.LBB21_30:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_optimzed:mid <- $r14
	#DEBUG_VALUE: merging_optimzed:a <- $r12
	#DEBUG_VALUE: merging_optimzed:high <- [$rsp+0]
	#DEBUG_VALUE: merging_optimzed:b <- $r15
	#DEBUG_VALUE: sort_merge_o:mid <- $r14
	#DEBUG_VALUE: sort_merge_o:a <- $r12
	#DEBUG_VALUE: sort_merge_o:b <- $r15
	#DEBUG_VALUE: merging_optimzed:i <- undef
	.loc	21 43 12 is_stmt 1      # ./mergeo.h:43:12
	movl	4(%r15,%r13,4), %eax
	.loc	21 43 10 is_stmt 0      # ./mergeo.h:43:10
	movl	%eax, 4(%r12,%r13,4)
.Ltmp961:
	#DEBUG_VALUE: merging_optimzed:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	21 42 12 is_stmt 1      # ./mergeo.h:42:12
	incq	%r13
	cmpq	%r11, %r13
.Ltmp962:
	.loc	21 42 3 is_stmt 0       # ./mergeo.h:42:3
	jl	.LBB21_30
.Ltmp963:
.LBB21_31:
	.loc	21 58 1 is_stmt 1       # ./mergeo.h:58:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp964:
.Lfunc_end21:
	.size	sort_merge_o, .Lfunc_end21-sort_merge_o
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_optimized    # -- Begin function sort_merge_optimized
	.p2align	4, 0x90
	.type	sort_merge_optimized,@function
sort_merge_optimized:                   # @sort_merge_optimized
.Lfunc_begin22:
	.loc	21 60 0                 # ./mergeo.h:60:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_optimized:a <- $rdi
	#DEBUG_VALUE: sort_merge_optimized:low <- $rsi
	#DEBUG_VALUE: sort_merge_optimized:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp965:
	#DEBUG_VALUE: sort_merge_optimized:high <- $r14
	#DEBUG_VALUE: sort_merge_optimized:low <- $r12
	#DEBUG_VALUE: sort_merge_optimized:a <- $r15
	.loc	21 61 43 prologue_end   # ./mergeo.h:61:43
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	21 61 35 is_stmt 0      # ./mergeo.h:61:35
	leaq	(,%rax,4), %rdi
	.loc	21 61 12                # ./mergeo.h:61:12
	callq	malloc
.Ltmp966:
	movq	%rax, %rbx
.Ltmp967:
	#DEBUG_VALUE: sort_merge_optimized:b <- $rbx
	.loc	21 62 3 is_stmt 1       # ./mergeo.h:62:3
	movq	%r15, %rdi
.Ltmp968:
	#DEBUG_VALUE: sort_merge_optimized:a <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_merge_o
.Ltmp969:
	.loc	21 63 3                 # ./mergeo.h:63:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp970:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp971:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp972:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp973:
.Lfunc_end22:
	.size	sort_merge_optimized, .Lfunc_end22-sort_merge_optimized
	.cfi_endproc
                                        # -- End function
	.globl	merging_standard        # -- Begin function merging_standard
	.p2align	4, 0x90
	.type	merging_standard,@function
merging_standard:                       # @merging_standard
.Lfunc_begin23:
	.loc	10 6 0                  # ./mergeu.h:6:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:high <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp974:
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	.loc	10 9 27 prologue_end    # ./mergeu.h:9:27
	leaq	1(%rdx), %r9
.Ltmp975:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	.loc	10 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%rdx, %rsi
.Ltmp976:
	.loc	10 9 3                  # ./mergeu.h:9:3
	jg	.LBB23_1
.Ltmp977:
# %bb.8:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rcx, %rdx
	jge	.LBB23_1
.Ltmp978:
# %bb.9:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3                  # ./mergeu.h:0:3
	movq	%rsi, %r8
	movq	%rsi, %rax
.Ltmp979:
	.p2align	4, 0x90
.LBB23_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%rax, %r11
	movq	%r9, %r10
.Ltmp980:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r10
	#DEBUG_VALUE: merging_standard:l1 <- $r11
	.loc	10 10 9 is_stmt 1       # ./mergeu.h:10:9
	movl	(%rdi,%rax,4), %ebx
	.loc	10 10 18 is_stmt 0      # ./mergeu.h:10:18
	movl	(%rdi,%r9,4), %ebp
	.loc	10 10 15                # ./mergeu.h:10:15
	xorl	%r9d, %r9d
	xorl	%eax, %eax
	cmpl	%ebp, %ebx
	setg	%r9b
	setle	%al
.Ltmp981:
	.loc	10 10 9                 # ./mergeu.h:10:9
	cmovgl	%ebp, %ebx
	addq	%r11, %rax
	addq	%r10, %r9
.Ltmp982:
	.loc	10 13 12 is_stmt 1      # ./mergeu.h:13:12
	movl	%ebx, b(,%r8,4)
.Ltmp983:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	.loc	10 9 67                 # ./mergeu.h:9:67
	incq	%r8
.Ltmp984:
	#DEBUG_VALUE: merging_standard:i <- $r8
	.loc	10 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%rdx, %rax
.Ltmp985:
	.loc	10 9 3                  # ./mergeu.h:9:3
	jg	.LBB23_2
.Ltmp986:
# %bb.11:                               #   in Loop: Header=BB23_10 Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rcx, %r9
	jle	.LBB23_10
	jmp	.LBB23_2
.Ltmp987:
.LBB23_1:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 0                  # ./mergeu.h:0:0
	movq	%rsi, %rax
	movq	%rsi, %r8
.Ltmp988:
.LBB23_2:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:i <- $r8
	.loc	10 16 13 is_stmt 1      # ./mergeu.h:16:13
	cmpq	%rdx, %rax
	.loc	10 16 3 is_stmt 0       # ./mergeu.h:16:3
	jg	.LBB23_21
.Ltmp989:
# %bb.3:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%rdx, %r10
	subq	%rax, %r10
	incq	%r10
	cmpq	$31, %r10
	jbe	.LBB23_19
.Ltmp990:
# %bb.4:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	b(,%r8,4), %r11
	cmpq	%rdx, %rax
	movq	%rdx, %r14
	cmovgeq	%rax, %r14
	leaq	(%rdi,%r14,4), %rbx
	addq	$4, %rbx
	cmpq	%rbx, %r11
	jae	.LBB23_6
.Ltmp991:
# %bb.5:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%r8, %r14
	subq	%rax, %r14
	leaq	b+4(,%r14,4), %r11
	leaq	(%rdi,%rax,4), %rbx
	cmpq	%r11, %rbx
	jb	.LBB23_19
.Ltmp992:
.LBB23_6:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r10, %r11
	andq	$-32, %r11
	leaq	-32(%r11), %r15
	movq	%r15, %rbx
	shrq	$5, %rbx
	incq	%rbx
	movl	%ebx, %r14d
	andl	$3, %r14d
	cmpq	$96, %r15
	jae	.LBB23_12
.Ltmp993:
# %bb.7:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%ebp, %ebp
	jmp	.LBB23_14
.Ltmp994:
.LBB23_12:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 16 3                 # ./mergeu.h:16:3
	leaq	b+480(,%r8,4), %r15
	leaq	(%rdi,%rax,4), %r12
	addq	$480, %r12              # imm = 0x1E0
	movq	%r14, %r13
	subq	%rbx, %r13
	xorl	%ebp, %ebp
.Ltmp995:
	.p2align	4, 0x90
.LBB23_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 17 14 is_stmt 1      # ./mergeu.h:17:14
	vmovups	-480(%r12,%rbp,4), %ymm0
	vmovups	-448(%r12,%rbp,4), %ymm1
	vmovups	-416(%r12,%rbp,4), %ymm2
	vmovups	-384(%r12,%rbp,4), %ymm3
	.loc	10 17 12 is_stmt 0      # ./mergeu.h:17:12
	vmovups	%ymm0, -480(%r15,%rbp,4)
	vmovups	%ymm1, -448(%r15,%rbp,4)
	vmovups	%ymm2, -416(%r15,%rbp,4)
	vmovups	%ymm3, -384(%r15,%rbp,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-352(%r12,%rbp,4), %ymm0
	vmovups	-320(%r12,%rbp,4), %ymm1
	vmovups	-288(%r12,%rbp,4), %ymm2
	vmovups	-256(%r12,%rbp,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -352(%r15,%rbp,4)
	vmovups	%ymm1, -320(%r15,%rbp,4)
	vmovups	%ymm2, -288(%r15,%rbp,4)
	vmovups	%ymm3, -256(%r15,%rbp,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-224(%r12,%rbp,4), %ymm0
	vmovups	-192(%r12,%rbp,4), %ymm1
	vmovups	-160(%r12,%rbp,4), %ymm2
	vmovups	-128(%r12,%rbp,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -224(%r15,%rbp,4)
	vmovups	%ymm1, -192(%r15,%rbp,4)
	vmovups	%ymm2, -160(%r15,%rbp,4)
	vmovups	%ymm3, -128(%r15,%rbp,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-96(%r12,%rbp,4), %ymm0
	vmovups	-64(%r12,%rbp,4), %ymm1
	vmovups	-32(%r12,%rbp,4), %ymm2
	vmovups	(%r12,%rbp,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -96(%r15,%rbp,4)
	vmovups	%ymm1, -64(%r15,%rbp,4)
	vmovups	%ymm2, -32(%r15,%rbp,4)
	vmovups	%ymm3, (%r15,%rbp,4)
	subq	$-128, %rbp
	addq	$4, %r13
	jne	.LBB23_13
.Ltmp996:
.LBB23_14:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 12                 # ./mergeu.h:0:12
	testq	%r14, %r14
	je	.LBB23_17
.Ltmp997:
# %bb.15:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rax,%rbp), %rbx
	leaq	(%rdi,%rbx,4), %r15
	addq	%r8, %rbp
	negq	%r14
	movl	$96, %r12d
.Ltmp998:
	.p2align	4, 0x90
.LBB23_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-96(%r15,%r12), %ymm0
	vmovups	-64(%r15,%r12), %ymm1
	vmovups	-32(%r15,%r12), %ymm2
	vmovups	(%r15,%r12), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, b-96(%r12,%rbp,4)
	vmovups	%ymm1, b-64(%r12,%rbp,4)
	vmovups	%ymm2, b-32(%r12,%rbp,4)
	vmovups	%ymm3, b(%r12,%rbp,4)
	subq	$-128, %r12
	incq	%r14
	jne	.LBB23_16
.Ltmp999:
.LBB23_17:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 12                 # ./mergeu.h:0:12
	addq	%r11, %r8
.Ltmp1000:
	.loc	10 16 3 is_stmt 1       # ./mergeu.h:16:3
	cmpq	%r11, %r10
	je	.LBB23_21
.Ltmp1001:
# %bb.18:
	#DEBUG_VALUE: merging_standard:l1 <- $rax
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r11, %rax
.Ltmp1002:
.LBB23_19:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 16 3                 # ./mergeu.h:16:3
	decq	%rax
.Ltmp1003:
	.p2align	4, 0x90
.LBB23_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l1 <- undef
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 17 14 is_stmt 1      # ./mergeu.h:17:14
	movl	4(%rdi,%rax,4), %ebp
	.loc	10 17 12 is_stmt 0      # ./mergeu.h:17:12
	movl	%ebp, b(,%r8,4)
	.loc	10 17 8                 # ./mergeu.h:17:8
	incq	%r8
.Ltmp1004:
	#DEBUG_VALUE: merging_standard:i <- $r8
	.loc	10 16 13 is_stmt 1      # ./mergeu.h:16:13
	incq	%rax
	cmpq	%rdx, %rax
	.loc	10 16 3 is_stmt 0       # ./mergeu.h:16:3
	jl	.LBB23_20
.Ltmp1005:
.LBB23_21:
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:i <- $r8
	.loc	10 19 13 is_stmt 1      # ./mergeu.h:19:13
	cmpq	%rcx, %r9
	.loc	10 19 3 is_stmt 0       # ./mergeu.h:19:3
	jg	.LBB23_25
.Ltmp1006:
# %bb.22:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%rcx, %r11
	subq	%r9, %r11
	incq	%r11
	cmpq	$31, %r11
	jbe	.LBB23_23
.Ltmp1007:
# %bb.30:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $rdx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	b(,%r8,4), %rdx
.Ltmp1008:
	cmpq	%rcx, %r9
	movq	%rcx, %rax
	cmovgeq	%r9, %rax
	leaq	(%rdi,%rax,4), %rbp
	addq	$4, %rbp
	cmpq	%rbp, %rdx
	jae	.LBB23_32
.Ltmp1009:
# %bb.31:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%r8, %rax
	subq	%r9, %rax
	leaq	b+4(,%rax,4), %rax
	leaq	(%rdi,%r9,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB23_23
.Ltmp1010:
.LBB23_32:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r11, %r10
	andq	$-32, %r10
	leaq	-32(%r10), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r14d
	andl	$3, %r14d
	cmpq	$96, %rax
	jae	.LBB23_34
.Ltmp1011:
# %bb.33:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%edx, %edx
	jmp	.LBB23_36
.Ltmp1012:
.LBB23_34:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 19 3                 # ./mergeu.h:19:3
	leaq	b+480(,%r8,4), %rax
	leaq	(%rdi,%r9,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	movq	%r14, %r15
	subq	%rdx, %r15
	xorl	%edx, %edx
.Ltmp1013:
	.p2align	4, 0x90
.LBB23_35:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 20 14 is_stmt 1      # ./mergeu.h:20:14
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	10 20 12 is_stmt 0      # ./mergeu.h:20:12
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %r15
	jne	.LBB23_35
.Ltmp1014:
.LBB23_36:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 12                 # ./mergeu.h:0:12
	testq	%r14, %r14
	je	.LBB23_39
.Ltmp1015:
# %bb.37:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%r9,%rdx), %rax
	leaq	(%rdi,%rax,4), %rax
	addq	%r8, %rdx
	negq	%r14
	movl	$96, %ebx
.Ltmp1016:
	.p2align	4, 0x90
.LBB23_38:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rax,%rbx), %ymm0
	vmovups	-64(%rax,%rbx), %ymm1
	vmovups	-32(%rax,%rbx), %ymm2
	vmovups	(%rax,%rbx), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, b-96(%rbx,%rdx,4)
	vmovups	%ymm1, b-64(%rbx,%rdx,4)
	vmovups	%ymm2, b-32(%rbx,%rdx,4)
	vmovups	%ymm3, b(%rbx,%rdx,4)
	subq	$-128, %rbx
	incq	%r14
	jne	.LBB23_38
.Ltmp1017:
.LBB23_39:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 19 3 is_stmt 1       # ./mergeu.h:19:3
	cmpq	%r10, %r11
	je	.LBB23_25
.Ltmp1018:
# %bb.40:
	#DEBUG_VALUE: merging_standard:i <- $r8
	#DEBUG_VALUE: merging_standard:l2 <- $r9
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r10, %r8
.Ltmp1019:
	addq	%r10, %r9
.Ltmp1020:
.LBB23_23:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 19 3                 # ./mergeu.h:19:3
	leaq	b(,%r8,4), %rax
	decq	%r9
.Ltmp1021:
	.p2align	4, 0x90
.LBB23_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:l2 <- undef
	#DEBUG_VALUE: merging_standard:i <- undef
	#DEBUG_VALUE: merging_standard:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 20 14 is_stmt 1      # ./mergeu.h:20:14
	movl	4(%rdi,%r9,4), %edx
.Ltmp1022:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 20 12 is_stmt 0      # ./mergeu.h:20:12
	movl	%edx, (%rax)
	.loc	10 19 13 is_stmt 1      # ./mergeu.h:19:13
	addq	$4, %rax
	incq	%r9
	cmpq	%rcx, %r9
	.loc	10 19 3 is_stmt 0       # ./mergeu.h:19:3
	jl	.LBB23_24
.Ltmp1023:
.LBB23_25:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:i <- $rsi
	.loc	10 22 19 is_stmt 1      # ./mergeu.h:22:19
	cmpq	%rcx, %rsi
.Ltmp1024:
	.loc	10 22 3 is_stmt 0       # ./mergeu.h:22:3
	jg	.LBB23_29
.Ltmp1025:
# %bb.26:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	cmpq	%rsi, %rcx
	movq	%rsi, %r9
	cmovgeq	%rcx, %r9
	subq	%rsi, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB23_27
.Ltmp1026:
# %bb.41:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rdi,%rsi,4), %rdx
	cmpq	%rsi, %rcx
	movq	%rsi, %rax
	cmovgeq	%rcx, %rax
	leaq	b+4(,%rax,4), %rbp
	cmpq	%rbp, %rdx
	jae	.LBB23_43
.Ltmp1027:
# %bb.42:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	leaq	(%rdi,%rax,4), %rax
	addq	$4, %rax
	leaq	b(,%rsi,4), %rdx
	cmpq	%rax, %rdx
	jb	.LBB23_27
.Ltmp1028:
.LBB23_43:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rax
	movq	%rax, %rdx
	shrq	$5, %rdx
	incq	%rdx
	movl	%edx, %r10d
	andl	$3, %r10d
	cmpq	$96, %rax
	jae	.LBB23_45
.Ltmp1029:
# %bb.44:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%edx, %edx
	jmp	.LBB23_47
.Ltmp1030:
.LBB23_45:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 22 3                 # ./mergeu.h:22:3
	leaq	(%rdi,%rsi,4), %rax
	addq	$480, %rax              # imm = 0x1E0
	leaq	b+480(,%rsi,4), %rbx
	movq	%r10, %r11
	subq	%rdx, %r11
	xorl	%edx, %edx
.Ltmp1031:
	.p2align	4, 0x90
.LBB23_46:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 23 12 is_stmt 1      # ./mergeu.h:23:12
	vmovups	-480(%rbx,%rdx,4), %ymm0
	vmovups	-448(%rbx,%rdx,4), %ymm1
	vmovups	-416(%rbx,%rdx,4), %ymm2
	vmovups	-384(%rbx,%rdx,4), %ymm3
	.loc	10 23 10 is_stmt 0      # ./mergeu.h:23:10
	vmovups	%ymm0, -480(%rax,%rdx,4)
	vmovups	%ymm1, -448(%rax,%rdx,4)
	vmovups	%ymm2, -416(%rax,%rdx,4)
	vmovups	%ymm3, -384(%rax,%rdx,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-352(%rbx,%rdx,4), %ymm0
	vmovups	-320(%rbx,%rdx,4), %ymm1
	vmovups	-288(%rbx,%rdx,4), %ymm2
	vmovups	-256(%rbx,%rdx,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -352(%rax,%rdx,4)
	vmovups	%ymm1, -320(%rax,%rdx,4)
	vmovups	%ymm2, -288(%rax,%rdx,4)
	vmovups	%ymm3, -256(%rax,%rdx,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-224(%rbx,%rdx,4), %ymm0
	vmovups	-192(%rbx,%rdx,4), %ymm1
	vmovups	-160(%rbx,%rdx,4), %ymm2
	vmovups	-128(%rbx,%rdx,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -224(%rax,%rdx,4)
	vmovups	%ymm1, -192(%rax,%rdx,4)
	vmovups	%ymm2, -160(%rax,%rdx,4)
	vmovups	%ymm3, -128(%rax,%rdx,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-96(%rbx,%rdx,4), %ymm0
	vmovups	-64(%rbx,%rdx,4), %ymm1
	vmovups	-32(%rbx,%rdx,4), %ymm2
	vmovups	(%rbx,%rdx,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -96(%rax,%rdx,4)
	vmovups	%ymm1, -64(%rax,%rdx,4)
	vmovups	%ymm2, -32(%rax,%rdx,4)
	vmovups	%ymm3, (%rax,%rdx,4)
	subq	$-128, %rdx
	addq	$4, %r11
	jne	.LBB23_46
.Ltmp1032:
.LBB23_47:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 10                 # ./mergeu.h:0:10
	testq	%r10, %r10
	je	.LBB23_50
.Ltmp1033:
# %bb.48:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	addq	%rsi, %rdx
	shlq	$2, %rdx
	negq	%r10
.Ltmp1034:
	.p2align	4, 0x90
.LBB23_49:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	b(%rdx), %ymm0
	vmovups	b+32(%rdx), %ymm1
	vmovups	b+64(%rdx), %ymm2
	vmovups	b+96(%rdx), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, (%rdi,%rdx)
	vmovups	%ymm1, 32(%rdi,%rdx)
	vmovups	%ymm2, 64(%rdi,%rdx)
	vmovups	%ymm3, 96(%rdi,%rdx)
	subq	$-128, %rdx
	incq	%r10
	jne	.LBB23_49
.Ltmp1035:
.LBB23_50:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 22 3 is_stmt 1       # ./mergeu.h:22:3
	cmpq	%r8, %r9
	je	.LBB23_29
.Ltmp1036:
# %bb.51:
	#DEBUG_VALUE: merging_standard:i <- $rsi
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:low <- $rsi
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rsi
.Ltmp1037:
.LBB23_27:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 22 3                 # ./mergeu.h:22:3
	decq	%rsi
.Ltmp1038:
	.p2align	4, 0x90
.LBB23_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	#DEBUG_VALUE: merging_standard:i <- undef
	.loc	10 23 12 is_stmt 1      # ./mergeu.h:23:12
	movl	b+4(,%rsi,4), %eax
	.loc	10 23 10 is_stmt 0      # ./mergeu.h:23:10
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp1039:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 22 19 is_stmt 1      # ./mergeu.h:22:19
	incq	%rsi
	cmpq	%rcx, %rsi
.Ltmp1040:
	.loc	10 22 3 is_stmt 0       # ./mergeu.h:22:3
	jl	.LBB23_28
.Ltmp1041:
.LBB23_29:
	#DEBUG_VALUE: merging_standard:high <- $rcx
	#DEBUG_VALUE: merging_standard:a <- $rdi
	.loc	10 24 1 is_stmt 1       # ./mergeu.h:24:1
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1042:
.Lfunc_end23:
	.size	merging_standard, .Lfunc_end23-merging_standard
	.cfi_endproc
                                        # -- End function
	.globl	sort_merge_standard     # -- Begin function sort_merge_standard
	.p2align	4, 0x90
	.type	sort_merge_standard,@function
sort_merge_standard:                    # @sort_merge_standard
.Lfunc_begin24:
	.loc	10 26 0                 # ./mergeu.h:26:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	10 29 11 prologue_end   # ./mergeu.h:29:11
	cmpq	%rdx, %rsi
.Ltmp1043:
	.loc	10 29 7 is_stmt 0       # ./mergeu.h:29:7
	jge	.LBB24_30
.Ltmp1044:
# %bb.1:
	#DEBUG_VALUE: sort_merge_standard:high <- $rdx
	#DEBUG_VALUE: sort_merge_standard:low <- $rsi
	#DEBUG_VALUE: sort_merge_standard:a <- $rdi
	.loc	10 0 7                  # ./mergeu.h:0:7
	movq	%rdx, %r14
.Ltmp1045:
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%rsi, %r12
.Ltmp1046:
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	movq	%rdi, %r15
.Ltmp1047:
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	.loc	10 30 16 is_stmt 1      # ./mergeu.h:30:16
	leaq	(%rdx,%rsi), %rax
	.loc	10 30 24 is_stmt 0      # ./mergeu.h:30:24
	movq	%rax, %r13
	shrq	$63, %r13
	addq	%rax, %r13
	sarq	%r13
.Ltmp1048:
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	.loc	10 31 5 is_stmt 1       # ./mergeu.h:31:5
	movq	%r13, %rdx
	callq	sort_merge_standard
.Ltmp1049:
	.loc	10 32 32                # ./mergeu.h:32:32
	leaq	1(%r13), %rbx
	.loc	10 32 5 is_stmt 0       # ./mergeu.h:32:5
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	callq	sort_merge_standard
.Ltmp1050:
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:mid <- $r13
	.loc	10 9 44 is_stmt 1       # ./mergeu.h:9:44
	cmpq	%r12, %r13
.Ltmp1051:
	.loc	10 9 3 is_stmt 0        # ./mergeu.h:9:3
	jl	.LBB24_2
.Ltmp1052:
# %bb.9:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r14, %r13
	jge	.LBB24_2
.Ltmp1053:
# %bb.10:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3                  # ./mergeu.h:0:3
	movq	%r12, %rbp
	movq	%r12, %rcx
.Ltmp1054:
	.p2align	4, 0x90
.LBB24_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%rcx, %rdx
	movq	%rbx, %rsi
.Ltmp1055:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:l2 <- $rsi
	#DEBUG_VALUE: merging_standard:l1 <- $rdx
	.loc	10 10 9 is_stmt 1       # ./mergeu.h:10:9
	movl	(%r15,%rcx,4), %edi
	.loc	10 10 18 is_stmt 0      # ./mergeu.h:10:18
	movl	(%r15,%rbx,4), %eax
	.loc	10 10 15                # ./mergeu.h:10:15
	xorl	%ebx, %ebx
	xorl	%ecx, %ecx
	cmpl	%eax, %edi
	setg	%bl
	setle	%cl
.Ltmp1056:
	.loc	10 10 9                 # ./mergeu.h:10:9
	cmovgl	%eax, %edi
	addq	%rdx, %rcx
	addq	%rsi, %rbx
.Ltmp1057:
	.loc	10 13 12 is_stmt 1      # ./mergeu.h:13:12
	movl	%edi, b(,%rbp,4)
.Ltmp1058:
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	.loc	10 9 67                 # ./mergeu.h:9:67
	incq	%rbp
.Ltmp1059:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	.loc	10 9 44 is_stmt 0       # ./mergeu.h:9:44
	cmpq	%r13, %rcx
.Ltmp1060:
	.loc	10 9 3                  # ./mergeu.h:9:3
	jg	.LBB24_3
.Ltmp1061:
# %bb.12:                               #   in Loop: Header=BB24_11 Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r14, %rbx
	jle	.LBB24_11
	jmp	.LBB24_3
.Ltmp1062:
.LBB24_2:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $r12
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 0                  # ./mergeu.h:0:0
	movq	%r12, %rcx
	movq	%r12, %rbp
.Ltmp1063:
.LBB24_3:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	.loc	10 16 13 is_stmt 1      # ./mergeu.h:16:13
	cmpq	%r13, %rcx
	.loc	10 16 3 is_stmt 0       # ./mergeu.h:16:3
	jg	.LBB24_22
.Ltmp1064:
# %bb.4:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r13, %r9
	subq	%rcx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB24_20
.Ltmp1065:
# %bb.5:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	b(,%rbp,4), %rsi
	cmpq	%r13, %rcx
	movq	%r13, %rdx
	cmovgeq	%rcx, %rdx
	leaq	(%r15,%rdx,4), %rdi
	addq	$4, %rdi
	cmpq	%rdi, %rsi
	jae	.LBB24_7
.Ltmp1066:
# %bb.6:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%rbp, %rdx
	subq	%rcx, %rdx
	leaq	b+4(,%rdx,4), %rdx
	leaq	(%r15,%rcx,4), %rsi
	cmpq	%rdx, %rsi
	jb	.LBB24_20
.Ltmp1067:
.LBB24_7:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rdx
	jae	.LBB24_13
.Ltmp1068:
# %bb.8:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%esi, %esi
	jmp	.LBB24_15
.Ltmp1069:
.LBB24_13:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 16 3                 # ./mergeu.h:16:3
	leaq	b+480(,%rbp,4), %rdx
	leaq	(%r15,%rcx,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	movq	%r10, %r11
	subq	%rsi, %r11
	xorl	%esi, %esi
.Ltmp1070:
	.p2align	4, 0x90
.LBB24_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 17 14 is_stmt 1      # ./mergeu.h:17:14
	vmovups	-480(%rdi,%rsi,4), %ymm0
	vmovups	-448(%rdi,%rsi,4), %ymm1
	vmovups	-416(%rdi,%rsi,4), %ymm2
	vmovups	-384(%rdi,%rsi,4), %ymm3
	.loc	10 17 12 is_stmt 0      # ./mergeu.h:17:12
	vmovups	%ymm0, -480(%rdx,%rsi,4)
	vmovups	%ymm1, -448(%rdx,%rsi,4)
	vmovups	%ymm2, -416(%rdx,%rsi,4)
	vmovups	%ymm3, -384(%rdx,%rsi,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-352(%rdi,%rsi,4), %ymm0
	vmovups	-320(%rdi,%rsi,4), %ymm1
	vmovups	-288(%rdi,%rsi,4), %ymm2
	vmovups	-256(%rdi,%rsi,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -352(%rdx,%rsi,4)
	vmovups	%ymm1, -320(%rdx,%rsi,4)
	vmovups	%ymm2, -288(%rdx,%rsi,4)
	vmovups	%ymm3, -256(%rdx,%rsi,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-224(%rdi,%rsi,4), %ymm0
	vmovups	-192(%rdi,%rsi,4), %ymm1
	vmovups	-160(%rdi,%rsi,4), %ymm2
	vmovups	-128(%rdi,%rsi,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -224(%rdx,%rsi,4)
	vmovups	%ymm1, -192(%rdx,%rsi,4)
	vmovups	%ymm2, -160(%rdx,%rsi,4)
	vmovups	%ymm3, -128(%rdx,%rsi,4)
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-96(%rdi,%rsi,4), %ymm0
	vmovups	-64(%rdi,%rsi,4), %ymm1
	vmovups	-32(%rdi,%rsi,4), %ymm2
	vmovups	(%rdi,%rsi,4), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, -96(%rdx,%rsi,4)
	vmovups	%ymm1, -64(%rdx,%rsi,4)
	vmovups	%ymm2, -32(%rdx,%rsi,4)
	vmovups	%ymm3, (%rdx,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %r11
	jne	.LBB24_14
.Ltmp1071:
.LBB24_15:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 12                 # ./mergeu.h:0:12
	testq	%r10, %r10
	je	.LBB24_18
.Ltmp1072:
# %bb.16:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%rcx,%rsi), %rdx
	leaq	(%r15,%rdx,4), %rdx
	addq	%rbp, %rsi
	negq	%r10
	movl	$96, %edi
.Ltmp1073:
	.p2align	4, 0x90
.LBB24_17:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 17 14                # ./mergeu.h:17:14
	vmovups	-96(%rdx,%rdi), %ymm0
	vmovups	-64(%rdx,%rdi), %ymm1
	vmovups	-32(%rdx,%rdi), %ymm2
	vmovups	(%rdx,%rdi), %ymm3
	.loc	10 17 12                # ./mergeu.h:17:12
	vmovups	%ymm0, b-96(%rdi,%rsi,4)
	vmovups	%ymm1, b-64(%rdi,%rsi,4)
	vmovups	%ymm2, b-32(%rdi,%rsi,4)
	vmovups	%ymm3, b(%rdi,%rsi,4)
	subq	$-128, %rdi
	incq	%r10
	jne	.LBB24_17
.Ltmp1074:
.LBB24_18:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 12                 # ./mergeu.h:0:12
	addq	%r8, %rbp
.Ltmp1075:
	.loc	10 16 3 is_stmt 1       # ./mergeu.h:16:3
	cmpq	%r8, %r9
	je	.LBB24_22
.Ltmp1076:
# %bb.19:
	#DEBUG_VALUE: merging_standard:l1 <- $rcx
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rcx
.Ltmp1077:
.LBB24_20:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 16 3                 # ./mergeu.h:16:3
	decq	%rcx
.Ltmp1078:
	.p2align	4, 0x90
.LBB24_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l1 <- undef
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:l1 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 17 14 is_stmt 1      # ./mergeu.h:17:14
	movl	4(%r15,%rcx,4), %eax
	.loc	10 17 12 is_stmt 0      # ./mergeu.h:17:12
	movl	%eax, b(,%rbp,4)
	.loc	10 17 8                 # ./mergeu.h:17:8
	incq	%rbp
.Ltmp1079:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	.loc	10 16 13 is_stmt 1      # ./mergeu.h:16:13
	incq	%rcx
	cmpq	%r13, %rcx
	.loc	10 16 3 is_stmt 0       # ./mergeu.h:16:3
	jl	.LBB24_21
.Ltmp1080:
.LBB24_22:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: merging_standard:i <- $rbp
	.loc	10 19 13 is_stmt 1      # ./mergeu.h:19:13
	cmpq	%r14, %rbx
	.loc	10 19 3 is_stmt 0       # ./mergeu.h:19:3
	jg	.LBB24_26
.Ltmp1081:
# %bb.23:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r14, %r9
	subq	%rbx, %r9
	incq	%r9
	cmpq	$31, %r9
	jbe	.LBB24_24
.Ltmp1082:
# %bb.31:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	b(,%rbp,4), %rax
	cmpq	%r14, %rbx
	movq	%r14, %rcx
	cmovgeq	%rbx, %rcx
	leaq	(%r15,%rcx,4), %rdx
	addq	$4, %rdx
	cmpq	%rdx, %rax
	jae	.LBB24_33
.Ltmp1083:
# %bb.32:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%rbp, %rcx
	subq	%rbx, %rcx
	leaq	b+4(,%rcx,4), %rax
	leaq	(%r15,%rbx,4), %rcx
	cmpq	%rax, %rcx
	jb	.LBB24_24
.Ltmp1084:
.LBB24_33:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%r9, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rax
	movq	%rax, %rdi
	shrq	$5, %rdi
	incq	%rdi
	movl	%edi, %r10d
	andl	$3, %r10d
	cmpq	$96, %rax
	jae	.LBB24_35
.Ltmp1085:
# %bb.34:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%edi, %edi
	jmp	.LBB24_37
.Ltmp1086:
.LBB24_35:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 19 3                 # ./mergeu.h:19:3
	leaq	b+480(,%rbp,4), %rdx
	leaq	(%r15,%rbx,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	movq	%r10, %rsi
	subq	%rdi, %rsi
	xorl	%edi, %edi
.Ltmp1087:
	.p2align	4, 0x90
.LBB24_36:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 20 14 is_stmt 1      # ./mergeu.h:20:14
	vmovups	-480(%rcx,%rdi,4), %ymm0
	vmovups	-448(%rcx,%rdi,4), %ymm1
	vmovups	-416(%rcx,%rdi,4), %ymm2
	vmovups	-384(%rcx,%rdi,4), %ymm3
	.loc	10 20 12 is_stmt 0      # ./mergeu.h:20:12
	vmovups	%ymm0, -480(%rdx,%rdi,4)
	vmovups	%ymm1, -448(%rdx,%rdi,4)
	vmovups	%ymm2, -416(%rdx,%rdi,4)
	vmovups	%ymm3, -384(%rdx,%rdi,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-352(%rcx,%rdi,4), %ymm0
	vmovups	-320(%rcx,%rdi,4), %ymm1
	vmovups	-288(%rcx,%rdi,4), %ymm2
	vmovups	-256(%rcx,%rdi,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -352(%rdx,%rdi,4)
	vmovups	%ymm1, -320(%rdx,%rdi,4)
	vmovups	%ymm2, -288(%rdx,%rdi,4)
	vmovups	%ymm3, -256(%rdx,%rdi,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-224(%rcx,%rdi,4), %ymm0
	vmovups	-192(%rcx,%rdi,4), %ymm1
	vmovups	-160(%rcx,%rdi,4), %ymm2
	vmovups	-128(%rcx,%rdi,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -224(%rdx,%rdi,4)
	vmovups	%ymm1, -192(%rdx,%rdi,4)
	vmovups	%ymm2, -160(%rdx,%rdi,4)
	vmovups	%ymm3, -128(%rdx,%rdi,4)
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rcx,%rdi,4), %ymm0
	vmovups	-64(%rcx,%rdi,4), %ymm1
	vmovups	-32(%rcx,%rdi,4), %ymm2
	vmovups	(%rcx,%rdi,4), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, -96(%rdx,%rdi,4)
	vmovups	%ymm1, -64(%rdx,%rdi,4)
	vmovups	%ymm2, -32(%rdx,%rdi,4)
	vmovups	%ymm3, (%rdx,%rdi,4)
	subq	$-128, %rdi
	addq	$4, %rsi
	jne	.LBB24_36
.Ltmp1088:
.LBB24_37:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 12                 # ./mergeu.h:0:12
	testq	%r10, %r10
	je	.LBB24_40
.Ltmp1089:
# %bb.38:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%rbx,%rdi), %rax
	leaq	(%r15,%rax,4), %rcx
	addq	%rbp, %rdi
	negq	%r10
	movl	$96, %edx
.Ltmp1090:
	.p2align	4, 0x90
.LBB24_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 20 14                # ./mergeu.h:20:14
	vmovups	-96(%rcx,%rdx), %ymm0
	vmovups	-64(%rcx,%rdx), %ymm1
	vmovups	-32(%rcx,%rdx), %ymm2
	vmovups	(%rcx,%rdx), %ymm3
	.loc	10 20 12                # ./mergeu.h:20:12
	vmovups	%ymm0, b-96(%rdx,%rdi,4)
	vmovups	%ymm1, b-64(%rdx,%rdi,4)
	vmovups	%ymm2, b-32(%rdx,%rdi,4)
	vmovups	%ymm3, b(%rdx,%rdi,4)
	subq	$-128, %rdx
	incq	%r10
	jne	.LBB24_39
.Ltmp1091:
.LBB24_40:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 19 3 is_stmt 1       # ./mergeu.h:19:3
	cmpq	%r8, %r9
	je	.LBB24_26
.Ltmp1092:
# %bb.41:
	#DEBUG_VALUE: merging_standard:i <- $rbp
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- $rbx
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %rbp
.Ltmp1093:
	addq	%r8, %rbx
.Ltmp1094:
.LBB24_24:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 19 3                 # ./mergeu.h:19:3
	leaq	b(,%rbp,4), %rax
	decq	%rbx
.Ltmp1095:
	.p2align	4, 0x90
.LBB24_25:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:l2 <- undef
	#DEBUG_VALUE: merging_standard:i <- undef
	#DEBUG_VALUE: merging_standard:l2 <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 20 14 is_stmt 1      # ./mergeu.h:20:14
	movl	4(%r15,%rbx,4), %ecx
.Ltmp1096:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 20 12 is_stmt 0      # ./mergeu.h:20:12
	movl	%ecx, (%rax)
	.loc	10 19 13 is_stmt 1      # ./mergeu.h:19:13
	addq	$4, %rax
	incq	%rbx
	cmpq	%r14, %rbx
	.loc	10 19 3 is_stmt 0       # ./mergeu.h:19:3
	jl	.LBB24_25
.Ltmp1097:
.LBB24_26:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	.loc	10 22 19 is_stmt 1      # ./mergeu.h:22:19
	cmpq	%r14, %r12
.Ltmp1098:
	.loc	10 22 3 is_stmt 0       # ./mergeu.h:22:3
	jg	.LBB24_30
.Ltmp1099:
# %bb.27:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	cmpq	%r12, %r14
	movq	%r12, %rax
	cmovgeq	%r14, %rax
	subq	%r12, %rax
	incq	%rax
	cmpq	$31, %rax
	jbe	.LBB24_28
.Ltmp1100:
# %bb.42:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%r15,%r12,4), %rdx
	cmpq	%r12, %r14
	movq	%r12, %rcx
	cmovgeq	%r14, %rcx
	leaq	b+4(,%rcx,4), %rsi
	cmpq	%rsi, %rdx
	jae	.LBB24_44
.Ltmp1101:
# %bb.43:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	leaq	(%r15,%rcx,4), %rcx
	addq	$4, %rcx
	leaq	b(,%r12,4), %rdx
	cmpq	%rcx, %rdx
	jb	.LBB24_28
.Ltmp1102:
.LBB24_44:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	movq	%rax, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rdx
	movq	%rdx, %rsi
	shrq	$5, %rsi
	incq	%rsi
	movl	%esi, %ecx
	andl	$3, %ecx
	cmpq	$96, %rdx
	jae	.LBB24_46
.Ltmp1103:
# %bb.45:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3                  # ./mergeu.h:0:3
	xorl	%esi, %esi
	jmp	.LBB24_48
.Ltmp1104:
.LBB24_46:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 22 3                 # ./mergeu.h:22:3
	leaq	(%r15,%r12,4), %rdi
	addq	$480, %rdi              # imm = 0x1E0
	leaq	b+480(,%r12,4), %rbx
	movq	%rcx, %rdx
	subq	%rsi, %rdx
	xorl	%esi, %esi
.Ltmp1105:
	.p2align	4, 0x90
.LBB24_47:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 23 12 is_stmt 1      # ./mergeu.h:23:12
	vmovups	-480(%rbx,%rsi,4), %ymm0
	vmovups	-448(%rbx,%rsi,4), %ymm1
	vmovups	-416(%rbx,%rsi,4), %ymm2
	vmovups	-384(%rbx,%rsi,4), %ymm3
	.loc	10 23 10 is_stmt 0      # ./mergeu.h:23:10
	vmovups	%ymm0, -480(%rdi,%rsi,4)
	vmovups	%ymm1, -448(%rdi,%rsi,4)
	vmovups	%ymm2, -416(%rdi,%rsi,4)
	vmovups	%ymm3, -384(%rdi,%rsi,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-352(%rbx,%rsi,4), %ymm0
	vmovups	-320(%rbx,%rsi,4), %ymm1
	vmovups	-288(%rbx,%rsi,4), %ymm2
	vmovups	-256(%rbx,%rsi,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -352(%rdi,%rsi,4)
	vmovups	%ymm1, -320(%rdi,%rsi,4)
	vmovups	%ymm2, -288(%rdi,%rsi,4)
	vmovups	%ymm3, -256(%rdi,%rsi,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-224(%rbx,%rsi,4), %ymm0
	vmovups	-192(%rbx,%rsi,4), %ymm1
	vmovups	-160(%rbx,%rsi,4), %ymm2
	vmovups	-128(%rbx,%rsi,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -224(%rdi,%rsi,4)
	vmovups	%ymm1, -192(%rdi,%rsi,4)
	vmovups	%ymm2, -160(%rdi,%rsi,4)
	vmovups	%ymm3, -128(%rdi,%rsi,4)
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	-96(%rbx,%rsi,4), %ymm0
	vmovups	-64(%rbx,%rsi,4), %ymm1
	vmovups	-32(%rbx,%rsi,4), %ymm2
	vmovups	(%rbx,%rsi,4), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, -96(%rdi,%rsi,4)
	vmovups	%ymm1, -64(%rdi,%rsi,4)
	vmovups	%ymm2, -32(%rdi,%rsi,4)
	vmovups	%ymm3, (%rdi,%rsi,4)
	subq	$-128, %rsi
	addq	$4, %rdx
	jne	.LBB24_47
.Ltmp1106:
.LBB24_48:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 10                 # ./mergeu.h:0:10
	testq	%rcx, %rcx
	je	.LBB24_51
.Ltmp1107:
# %bb.49:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	addq	%r12, %rsi
	shlq	$2, %rsi
	negq	%rcx
.Ltmp1108:
	.p2align	4, 0x90
.LBB24_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 23 12                # ./mergeu.h:23:12
	vmovups	b(%rsi), %ymm0
	vmovups	b+32(%rsi), %ymm1
	vmovups	b+64(%rsi), %ymm2
	vmovups	b+96(%rsi), %ymm3
	.loc	10 23 10                # ./mergeu.h:23:10
	vmovups	%ymm0, (%r15,%rsi)
	vmovups	%ymm1, 32(%r15,%rsi)
	vmovups	%ymm2, 64(%r15,%rsi)
	vmovups	%ymm3, 96(%r15,%rsi)
	subq	$-128, %rsi
	incq	%rcx
	jne	.LBB24_50
.Ltmp1109:
.LBB24_51:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 22 3 is_stmt 1       # ./mergeu.h:22:3
	cmpq	%r8, %rax
	je	.LBB24_30
.Ltmp1110:
# %bb.52:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:low <- $r12
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- $r12
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:low <- $r12
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 0 3 is_stmt 0        # ./mergeu.h:0:3
	addq	%r8, %r12
.Ltmp1111:
.LBB24_28:
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	.loc	10 22 3                 # ./mergeu.h:22:3
	decq	%r12
.Ltmp1112:
	.p2align	4, 0x90
.LBB24_29:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: merging_standard:mid <- $r13
	#DEBUG_VALUE: merging_standard:a <- $r15
	#DEBUG_VALUE: merging_standard:high <- $r14
	#DEBUG_VALUE: sort_merge_standard:mid <- $r13
	#DEBUG_VALUE: sort_merge_standard:a <- $r15
	#DEBUG_VALUE: sort_merge_standard:high <- $r14
	#DEBUG_VALUE: merging_standard:i <- undef
	.loc	10 23 12 is_stmt 1      # ./mergeu.h:23:12
	movl	b+4(,%r12,4), %eax
	.loc	10 23 10 is_stmt 0      # ./mergeu.h:23:10
	movl	%eax, 4(%r15,%r12,4)
.Ltmp1113:
	#DEBUG_VALUE: merging_standard:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	10 22 19 is_stmt 1      # ./mergeu.h:22:19
	incq	%r12
	cmpq	%r14, %r12
.Ltmp1114:
	.loc	10 22 3 is_stmt 0       # ./mergeu.h:22:3
	jl	.LBB24_29
.Ltmp1115:
.LBB24_30:
	.loc	10 37 1 is_stmt 1       # ./mergeu.h:37:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1116:
.Lfunc_end24:
	.size	sort_merge_standard, .Lfunc_end24-sort_merge_standard
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized # -- Begin function partition_quick_optimized
	.p2align	4, 0x90
	.type	partition_quick_optimized,@function
partition_quick_optimized:              # @partition_quick_optimized
.Lfunc_begin25:
	.loc	9 13 0                  # ./quicko.h:13:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$16, %rsp
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %rbx
	movq	%rdi, %r15
.Ltmp1117:
	#DEBUG_VALUE: partition_quick_optimized:done <- 0
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	.loc	9 14 7 prologue_end     # ./quicko.h:14:7
	movl	$0, 12(%rsp)
.Ltmp1118:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	9 0 7 is_stmt 0         # ./quicko.h:0:7
	leaq	12(%rsp), %rcx
	.loc	9 15 15 is_stmt 1       # ./quicko.h:15:15
	callq	median_of_three_of_median_of_three_auto_finish
.Ltmp1119:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- undef
	.loc	9 16 7                  # ./quicko.h:16:7
	cmpl	$0, 12(%rsp)
.Ltmp1120:
	.loc	9 16 7 is_stmt 0        # ./quicko.h:16:7
	je	.LBB25_1
.Ltmp1121:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	.loc	9 17 17 is_stmt 1       # ./quicko.h:17:17
	addq	%rbx, %r14
.Ltmp1122:
	.loc	9 17 25 is_stmt 0       # ./quicko.h:17:25
	movq	%r14, %rbx
.Ltmp1123:
	shrq	$63, %rbx
	addq	%r14, %rbx
	sarq	%rbx
	jmp	.LBB25_8
.Ltmp1124:
.LBB25_1:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rbx
	.loc	9 20 27 is_stmt 1       # ./quicko.h:20:27
	cmpq	%rbx, %r14
.Ltmp1125:
	.loc	9 20 3 is_stmt 0        # ./quicko.h:20:3
	jle	.LBB25_5
.Ltmp1126:
# %bb.2:
	#DEBUG_VALUE: j <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:low <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	movl	%r14d, %r9d
	subl	%ebx, %r9d
	movq	%rbx, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%rbx, %rcx
	andq	$3, %r9
	je	.LBB25_4
.Ltmp1127:
	.p2align	4, 0x90
.LBB25_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	9 21 21 is_stmt 1       # ./quicko.h:21:21
	movl	(%r15,%rcx,4), %edi
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%edx, %edx
	cmpl	%edi, %eax
	setg	%dl
.Ltmp1128:
	#DEBUG_VALUE: c <- $bl
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r15,%rbx,4), %r10d
.Ltmp1129:
	#DEBUG_VALUE: z <- $edi
	#DEBUG_VALUE: y <- $r10d
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%r10d, %esi
	cmovgl	%edi, %esi
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%esi, (%r15,%rbx,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%r10d, %edi
.Ltmp1130:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edi, (%r15,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rdx, %rbx
.Ltmp1131:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	9 20 36                 # ./quicko.h:20:36
	incq	%rcx
.Ltmp1132:
	#DEBUG_VALUE: j <- $rcx
	.loc	9 20 3 is_stmt 0        # ./quicko.h:20:3
	decq	%r9
	jne	.LBB25_3
.Ltmp1133:
.LBB25_4:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	cmpq	$3, %r8
	jb	.LBB25_5
.Ltmp1134:
	.p2align	4, 0x90
.LBB25_6:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	9 21 21 is_stmt 1       # ./quicko.h:21:21
	movl	(%r15,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1135:
	#DEBUG_VALUE: c <- $sil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r15,%rbx,4), %r8d
.Ltmp1136:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%r8d, %edi
	cmovgl	%edx, %edi
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%edi, (%r15,%rbx,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1137:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, (%r15,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rbx, %rsi
.Ltmp1138:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	4(%r15,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%edi, %edi
	cmpl	%edx, %eax
	setg	%dil
.Ltmp1139:
	#DEBUG_VALUE: c <- $dil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r15,%rsi,4), %r8d
.Ltmp1140:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%r8d, %ebx
	cmovgl	%edx, %ebx
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%ebx, (%r15,%rsi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1141:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 4(%r15,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rsi, %rdi
.Ltmp1142:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rdi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	8(%r15,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1143:
	#DEBUG_VALUE: c <- $sil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r15,%rdi,4), %r8d
.Ltmp1144:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%r8d, %ebx
	cmovgl	%edx, %ebx
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%ebx, (%r15,%rdi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1145:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 8(%r15,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rdi, %rsi
.Ltmp1146:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	12(%r15,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%ebx, %ebx
	cmpl	%edx, %eax
	setg	%bl
.Ltmp1147:
	#DEBUG_VALUE: c <- $bl
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r15,%rsi,4), %r8d
.Ltmp1148:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $r8d
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%r8d, %edi
	cmovgl	%edx, %edi
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%edi, (%r15,%rsi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%r8d, %edx
.Ltmp1149:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 12(%r15,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rsi, %rbx
.Ltmp1150:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	9 20 36                 # ./quicko.h:20:36
	addq	$4, %rcx
.Ltmp1151:
	#DEBUG_VALUE: j <- $rcx
	.loc	9 20 27 is_stmt 0       # ./quicko.h:20:27
	cmpq	%rcx, %r14
.Ltmp1152:
	.loc	9 20 3                  # ./quicko.h:20:3
	jne	.LBB25_6
.Ltmp1153:
.LBB25_5:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r15,%rbx,4), %eax
.Ltmp1154:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r15,%rbx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
.Ltmp1155:
.LBB25_8:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:array <- $r15
	.loc	9 30 1                  # ./quicko.h:30:1
	movq	%rbx, %rax
	addq	$16, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1156:
	.cfi_def_cfa_offset 8
	retq
.Ltmp1157:
.Lfunc_end25:
	.size	partition_quick_optimized, .Lfunc_end25-partition_quick_optimized
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized    # -- Begin function sort_quick_optimized
	.p2align	4, 0x90
	.type	sort_quick_optimized,@function
sort_quick_optimized:                   # @sort_quick_optimized
.Lfunc_begin26:
	.loc	9 32 0                  # ./quicko.h:32:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$16, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, %r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
.Ltmp1158:
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	.loc	9 33 11 prologue_end    # ./quicko.h:33:11
	movq	%rdx, %rsi
	subq	%r15, %rsi
.Ltmp1159:
	.loc	9 33 7 is_stmt 0        # ./quicko.h:33:7
	jle	.LBB26_28
.Ltmp1160:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	9 0 7                   # ./quicko.h:0:7
	movq	%rdi, %r12
.Ltmp1161:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	9 34 9 is_stmt 1        # ./quicko.h:34:9
	jle	.LBB26_10
.Ltmp1162:
# %bb.2:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	9 0 9 is_stmt 0         # ./quicko.h:0:9
	movq	%rdx, %r14
.Ltmp1163:
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:done <- 0
	.loc	9 14 7 is_stmt 1        # ./quicko.h:14:7
	movl	$0, 12(%rsp)
.Ltmp1164:
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	.loc	9 0 7 is_stmt 0         # ./quicko.h:0:7
	leaq	12(%rsp), %rcx
	.loc	9 15 15 is_stmt 1       # ./quicko.h:15:15
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	median_of_three_of_median_of_three_auto_finish
.Ltmp1165:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- undef
	.loc	9 16 7                  # ./quicko.h:16:7
	cmpl	$0, 12(%rsp)
.Ltmp1166:
	.loc	9 16 7 is_stmt 0        # ./quicko.h:16:7
	je	.LBB26_3
.Ltmp1167:
# %bb.8:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	.loc	9 17 17 is_stmt 1       # ./quicko.h:17:17
	leaq	(%r14,%r15), %rax
.Ltmp1168:
	.loc	9 17 25 is_stmt 0       # ./quicko.h:17:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
	jmp	.LBB26_9
.Ltmp1169:
.LBB26_10:
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	9 39 43 is_stmt 1       # ./quicko.h:39:43
	incl	%esi
.Ltmp1170:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	.loc	18 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %esi
.Ltmp1171:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB26_28
.Ltmp1172:
# %bb.11:
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%r15,4), %rax
.Ltmp1173:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp1174:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%esi, %r10d
.Ltmp1175:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp1176:
	cmpl	$2, %esi
	jne	.LBB26_12
.Ltmp1177:
.LBB26_22:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB26_28
.Ltmp1178:
# %bb.23:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp1179:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp1180:
	.p2align	4, 0x90
.LBB26_24:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB26_27
.Ltmp1181:
# %bb.25:                               #   in Loop: Header=BB26_24 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp1182:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp1183:
	leaq	-1(%r15), %r15
.Ltmp1184:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB26_24
.Ltmp1185:
# %bb.26:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp1186:
.LBB26_27:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp1187:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB26_28:
	.loc	9 42 1 is_stmt 1        # ./quicko.h:42:1
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB26_3:
	.cfi_def_cfa_offset 64
.Ltmp1188:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	.loc	9 20 3                  # ./quicko.h:20:3
	movl	%r14d, %r9d
	subl	%r15d, %r9d
	movq	%r15, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%r15, %rbx
	movq	%r15, %rcx
	andq	$3, %r9
	je	.LBB26_5
.Ltmp1189:
	.p2align	4, 0x90
.LBB26_4:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	(%r12,%rcx,4), %edi
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%ebp, %ebp
	cmpl	%edi, %eax
	setg	%bpl
.Ltmp1190:
	#DEBUG_VALUE: c <- $bl
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r12,%rbx,4), %esi
.Ltmp1191:
	#DEBUG_VALUE: z <- $edi
	#DEBUG_VALUE: y <- $esi
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%esi, %edx
	cmovgl	%edi, %edx
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%edx, (%r12,%rbx,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%esi, %edi
.Ltmp1192:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edi, (%r12,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rbp, %rbx
.Ltmp1193:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	9 20 36                 # ./quicko.h:20:36
	incq	%rcx
.Ltmp1194:
	#DEBUG_VALUE: j <- $rcx
	.loc	9 20 3 is_stmt 0        # ./quicko.h:20:3
	decq	%r9
	jne	.LBB26_4
.Ltmp1195:
.LBB26_5:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	cmpq	$3, %r8
	jb	.LBB26_6
.Ltmp1196:
	.p2align	4, 0x90
.LBB26_7:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	9 21 21 is_stmt 1       # ./quicko.h:21:21
	movl	(%r12,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1197:
	#DEBUG_VALUE: c <- $sil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r12,%rbx,4), %ebp
.Ltmp1198:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebp
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%ebp, %edi
	cmovgl	%edx, %edi
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%edi, (%r12,%rbx,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%ebp, %edx
.Ltmp1199:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, (%r12,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rbx, %rsi
.Ltmp1200:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	4(%r12,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%edi, %edi
	cmpl	%edx, %eax
	setg	%dil
.Ltmp1201:
	#DEBUG_VALUE: c <- $dil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r12,%rsi,4), %ebx
.Ltmp1202:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebx
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%ebx, %ebp
	cmovgl	%edx, %ebp
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%ebp, (%r12,%rsi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%ebx, %edx
.Ltmp1203:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 4(%r12,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rsi, %rdi
.Ltmp1204:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rdi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	8(%r12,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%esi, %esi
	cmpl	%edx, %eax
	setg	%sil
.Ltmp1205:
	#DEBUG_VALUE: c <- $sil
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r12,%rdi,4), %ebx
.Ltmp1206:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebx
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%ebx, %ebp
	cmovgl	%edx, %ebp
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%ebp, (%r12,%rdi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%ebx, %edx
.Ltmp1207:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 8(%r12,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rdi, %rsi
.Ltmp1208:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rsi
	.loc	9 21 21                 # ./quicko.h:21:21
	movl	12(%r12,%rcx,4), %edx
	.loc	9 21 19 is_stmt 0       # ./quicko.h:21:19
	xorl	%ebx, %ebx
.Ltmp1209:
	cmpl	%edx, %eax
	setg	%bl
.Ltmp1210:
	#DEBUG_VALUE: c <- $bl
	.loc	9 22 13 is_stmt 1       # ./quicko.h:22:13
	movl	(%r12,%rsi,4), %ebp
.Ltmp1211:
	#DEBUG_VALUE: z <- $edx
	#DEBUG_VALUE: y <- $ebp
	.loc	9 24 16                 # ./quicko.h:24:16
	movl	%ebp, %edi
	cmovgl	%edx, %edi
	.loc	9 24 14 is_stmt 0       # ./quicko.h:24:14
	movl	%edi, (%r12,%rsi,4)
	.loc	9 25 16 is_stmt 1       # ./quicko.h:25:16
	cmovgl	%ebp, %edx
.Ltmp1212:
	.loc	9 25 14 is_stmt 0       # ./quicko.h:25:14
	movl	%edx, 12(%r12,%rcx,4)
	.loc	9 26 7 is_stmt 1        # ./quicko.h:26:7
	addq	%rsi, %rbx
.Ltmp1213:
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	.loc	9 20 36                 # ./quicko.h:20:36
	addq	$4, %rcx
.Ltmp1214:
	#DEBUG_VALUE: j <- $rcx
	.loc	9 20 27 is_stmt 0       # ./quicko.h:20:27
	cmpq	%rcx, %r14
.Ltmp1215:
	.loc	9 20 3                  # ./quicko.h:20:3
	jne	.LBB26_7
.Ltmp1216:
.LBB26_6:
	#DEBUG_VALUE: partition_quick_optimized:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized:done <- [DW_OP_plus_uconst 12, DW_OP_deref] $rsp
	#DEBUG_VALUE: partition_quick_optimized:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: partition_quick_optimized:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp1217:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
.Ltmp1218:
.LBB26_9:
	#DEBUG_VALUE: sort_quick_optimized:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:low <- $r15
	#DEBUG_VALUE: pi <- $rbx
	.loc	9 36 43                 # ./quicko.h:36:43
	leaq	-1(%rbx), %rdx
	.loc	9 36 7 is_stmt 0        # ./quicko.h:36:7
	movq	%r12, %rdi
	movq	%r15, %rsi
	callq	sort_quick_optimized
.Ltmp1219:
	.loc	9 37 38 is_stmt 1       # ./quicko.h:37:38
	incq	%rbx
.Ltmp1220:
	.loc	9 37 7 is_stmt 0        # ./quicko.h:37:7
	movq	%r12, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rdx
	addq	$16, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
.Ltmp1221:
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1222:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1223:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1224:
.LBB26_12:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized:high <- $rdx
	.loc	9 0 7                   # ./quicko.h:0:7
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp1225:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
	jmp	.LBB26_13
.Ltmp1226:
	.p2align	4, 0x90
.LBB26_21:                              #   in Loop: Header=BB26_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 25 5                 # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp1227:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp1228:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB26_22
.Ltmp1229:
.LBB26_13:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB26_14 Depth 2
                                        #     Child Loop BB26_18 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp1230:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp1231:
	.p2align	4, 0x90
.LBB26_14:                              #   Parent Loop BB26_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB26_17
.Ltmp1232:
# %bb.15:                               #   in Loop: Header=BB26_14 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1233:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp1234:
	leaq	-1(%rdi), %rdi
.Ltmp1235:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB26_14
.Ltmp1236:
# %bb.16:                               #   in Loop: Header=BB26_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp1237:
.LBB26_17:                              #   in Loop: Header=BB26_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp1238:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp1239:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp1240:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp1241:
	.p2align	4, 0x90
.LBB26_18:                              #   Parent Loop BB26_13 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB26_21
.Ltmp1242:
# %bb.19:                               #   in Loop: Header=BB26_18 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1243:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp1244:
	leaq	-1(%rdi), %rdi
.Ltmp1245:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB26_18
.Ltmp1246:
# %bb.20:                               #   in Loop: Header=BB26_13 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB26_21
.Lfunc_end26:
	.size	sort_quick_optimized, .Lfunc_end26-sort_quick_optimized
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_dual # -- Begin function partition_quick_optimized_dual
	.p2align	4, 0x90
	.type	partition_quick_optimized_dual,@function
partition_quick_optimized_dual:         # @partition_quick_optimized_dual
.Lfunc_begin27:
	.file	22 "/home/peeters/bachelor" "./quickodualpivot.h"
	.loc	22 22 0 is_stmt 1       # ./quickodualpivot.h:22:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	22 24 7 prologue_end    # ./quickodualpivot.h:24:7
	movl	(%rdi,%rsi,4), %r10d
.Ltmp1247:
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r10d
	.loc	22 25 7                 # ./quickodualpivot.h:25:7
	movl	(%rdi,%rdx,4), %eax
.Ltmp1248:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $eax
	.loc	22 26 9                 # ./quickodualpivot.h:26:9
	cmpl	%eax, %r10d
.Ltmp1249:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- undef
	.loc	22 27 19                # ./quickodualpivot.h:27:19
	movl	%eax, %r11d
	cmovll	%r10d, %r11d
.Ltmp1250:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	.loc	22 28 20                # ./quickodualpivot.h:28:20
	cmovll	%eax, %r10d
.Ltmp1251:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	.loc	22 29 14                # ./quickodualpivot.h:29:14
	movl	%r11d, (%rdi,%rsi,4)
	.loc	22 30 15                # ./quickodualpivot.h:30:15
	movl	%r10d, (%rdi,%rdx,4)
	.loc	22 39 19                # ./quickodualpivot.h:39:19
	leaq	1(%rsi), %r9
.Ltmp1252:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r9
	.loc	22 41 20                # ./quickodualpivot.h:41:20
	leaq	-1(%rdx), %r14
.Ltmp1253:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	22 43 12                # ./quickodualpivot.h:43:12
	cmpq	%rsi, %r14
	.loc	22 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB27_3
.Ltmp1254:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $eax
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	.loc	22 0 3                  # ./quickodualpivot.h:0:3
	movq	%r9, %rbx
.Ltmp1255:
	.p2align	4, 0x90
.LBB27_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rbx
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	22 44 21 is_stmt 1      # ./quickodualpivot.h:44:21
	movl	(%rdi,%rbx,4), %ebp
	.loc	22 44 19 is_stmt 0      # ./quickodualpivot.h:44:19
	xorl	%r12d, %r12d
	cmpl	%ebp, %r11d
	setg	%r12b
.Ltmp1256:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r9b
	.loc	22 45 9 is_stmt 1       # ./quickodualpivot.h:45:9
	movl	(%rdi,%r9,4), %r15d
.Ltmp1257:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $ebp
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r15d
	.loc	22 47 16                # ./quickodualpivot.h:47:16
	movl	%r15d, %eax
	cmovgl	%ebp, %eax
	.loc	22 47 14 is_stmt 0      # ./quickodualpivot.h:47:14
	movl	%eax, (%rdi,%r9,4)
	.loc	22 48 16 is_stmt 1      # ./quickodualpivot.h:48:16
	cmovgl	%r15d, %ebp
.Ltmp1258:
	.loc	22 48 14 is_stmt 0      # ./quickodualpivot.h:48:14
	movl	%ebp, (%rdi,%rbx,4)
	.loc	22 54 7 is_stmt 1       # ./quickodualpivot.h:54:7
	addq	%r12, %r9
.Ltmp1259:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	.loc	22 56 20                # ./quickodualpivot.h:56:20
	xorl	%r12d, %r12d
	cmpl	%ebp, %r10d
	setl	%r12b
.Ltmp1260:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r12b
	.loc	22 57 9                 # ./quickodualpivot.h:57:9
	movl	(%rdi,%r14,4), %r15d
.Ltmp1261:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $ebp
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r15d
	.loc	22 59 16                # ./quickodualpivot.h:59:16
	movl	%r15d, %eax
	cmovll	%ebp, %eax
	.loc	22 59 14 is_stmt 0      # ./quickodualpivot.h:59:14
	movl	%eax, (%rdi,%r14,4)
	.loc	22 60 16 is_stmt 1      # ./quickodualpivot.h:60:16
	cmovll	%r15d, %ebp
.Ltmp1262:
	.loc	22 60 14 is_stmt 0      # ./quickodualpivot.h:60:14
	movl	%ebp, (%rdi,%rbx,4)
.Ltmp1263:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- undef
	.loc	22 65 7 is_stmt 1       # ./quickodualpivot.h:65:7
	subq	%r12, %r14
.Ltmp1264:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	.loc	22 66 7                 # ./quickodualpivot.h:66:7
	subq	%r12, %rbx
	.loc	22 68 6                 # ./quickodualpivot.h:68:6
	incq	%rbx
.Ltmp1265:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rbx
	.loc	22 43 12                # ./quickodualpivot.h:43:12
	cmpq	%r14, %rbx
	.loc	22 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB27_2
.Ltmp1266:
.LBB27_3:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r9
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r10d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r11d
	#DEBUG_VALUE: partition_quick_optimized_dual:phigh <- $r8
	#DEBUG_VALUE: partition_quick_optimized_dual:plow <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- undef
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- undef
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	-4(%rdi,%r9,4), %eax
.Ltmp1267:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rsi,4), %ebp
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebp, -4(%rdi,%r9,4)
.Ltmp1268:
	.loc	22 70 4 is_stmt 1       # ./quickodualpivot.h:70:4
	leaq	-1(%r9), %rbp
.Ltmp1269:
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%eax, (%rdi,%rsi,4)
.Ltmp1270:
	#DEBUG_VALUE: swap:b <- undef
	#DEBUG_VALUE: swap:a <- undef
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%r14,4), %eax
.Ltmp1271:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
.Ltmp1272:
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, 4(%rdi,%r14,4)
.Ltmp1273:
	.loc	22 71 4 is_stmt 1       # ./quickodualpivot.h:71:4
	leaq	1(%r14), %rsi
.Ltmp1274:
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%eax, (%rdi,%rdx,4)
.Ltmp1275:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	22 75 9                 # ./quickodualpivot.h:75:9
	movq	%rbp, (%rcx)
	.loc	22 76 10                # ./quickodualpivot.h:76:10
	movq	%rsi, (%r8)
.Ltmp1276:
	#DEBUG_VALUE: swap:b <- undef
	.loc	22 83 1                 # ./quickodualpivot.h:83:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1277:
.Lfunc_end27:
	.size	partition_quick_optimized_dual, .Lfunc_end27-partition_quick_optimized_dual
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_dual # -- Begin function sort_quick_optimized_dual
	.p2align	4, 0x90
	.type	sort_quick_optimized_dual,@function
sort_quick_optimized_dual:              # @sort_quick_optimized_dual
.Lfunc_begin28:
	.loc	22 85 0                 # ./quickodualpivot.h:85:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	pushq	%rax
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	22 86 11 prologue_end   # ./quickodualpivot.h:86:11
	cmpq	%rsi, %rdx
.Ltmp1278:
	.loc	22 86 7 is_stmt 0       # ./quickodualpivot.h:86:7
	jle	.LBB28_7
.Ltmp1279:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $rdi
	.loc	22 0 7                  # ./quickodualpivot.h:0:7
	movq	%rdx, %r14
.Ltmp1280:
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	movq	%rdi, %r15
.Ltmp1281:
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	leaq	-1(%rdx), %r13
	jmp	.LBB28_2
.Ltmp1282:
	.p2align	4, 0x90
.LBB28_6:                               #   in Loop: Header=BB28_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- undef
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- undef
	#DEBUG_VALUE: swap:a <- [DW_OP_constu 4, DW_OP_minus, DW_OP_stack_value] undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	-4(%r15,%r12,4), %eax
.Ltmp1283:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r15,%rsi,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, -4(%r15,%r12,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%rsi,4)
.Ltmp1284:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%r15,%rbp,4), %eax
.Ltmp1285:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, 4(%r15,%rbp,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
.Ltmp1286:
	#DEBUG_VALUE: pivot_low <- undef
	.loc	22 90 55                # ./quickodualpivot.h:90:55
	leaq	-2(%r12), %rdx
	.loc	22 90 7 is_stmt 0       # ./quickodualpivot.h:90:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_dual
.Ltmp1287:
	#DEBUG_VALUE: pivot_high <- undef
	.loc	22 91 7 is_stmt 1       # ./quickodualpivot.h:91:7
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%rbp, %rdx
	callq	sort_quick_optimized_dual
.Ltmp1288:
	.loc	22 92 51                # ./quickodualpivot.h:92:51
	addq	$2, %rbp
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
.Ltmp1289:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rbp
	.loc	22 0 51 is_stmt 0       # ./quickodualpivot.h:0:51
	movq	%rbp, %rsi
.Ltmp1290:
	.loc	22 86 11 is_stmt 1      # ./quickodualpivot.h:86:11
	cmpq	%r14, %rbp
.Ltmp1291:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- undef
	.loc	22 86 7 is_stmt 0       # ./quickodualpivot.h:86:7
	jge	.LBB28_7
.Ltmp1292:
.LBB28_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB28_5 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	22 87 14 is_stmt 1      # ./quickodualpivot.h:87:14
	movq	%r14, %rax
	subq	%rsi, %rax
	.loc	22 87 20 is_stmt 0      # ./quickodualpivot.h:87:20
	cmpq	$1001, %rax             # imm = 0x3E9
.Ltmp1293:
	.loc	22 87 9                 # ./quickodualpivot.h:87:9
	jl	.LBB28_8
.Ltmp1294:
# %bb.3:                                #   in Loop: Header=BB28_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	.loc	22 24 7 is_stmt 1       # ./quickodualpivot.h:24:7
	movl	(%r15,%rsi,4), %r9d
.Ltmp1295:
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $r9d
	.loc	22 25 7                 # ./quickodualpivot.h:25:7
	movl	(%r15,%r14,4), %edx
.Ltmp1296:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edx
	.loc	22 26 9                 # ./quickodualpivot.h:26:9
	cmpl	%edx, %r9d
.Ltmp1297:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- undef
	.loc	22 27 19                # ./quickodualpivot.h:27:19
	movl	%edx, %r8d
	cmovll	%r9d, %r8d
.Ltmp1298:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	.loc	22 28 20                # ./quickodualpivot.h:28:20
	cmovll	%edx, %r9d
.Ltmp1299:
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	.loc	22 29 14                # ./quickodualpivot.h:29:14
	movl	%r8d, (%r15,%rsi,4)
	.loc	22 30 15                # ./quickodualpivot.h:30:15
	movl	%r9d, (%r15,%r14,4)
	.loc	22 39 19                # ./quickodualpivot.h:39:19
	leaq	1(%rsi), %r12
.Ltmp1300:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r13
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r12
	.loc	22 0 19 is_stmt 0       # ./quickodualpivot.h:0:19
	movq	%r13, %rbp
	.loc	22 43 12 is_stmt 1      # ./quickodualpivot.h:43:12
	cmpq	%rsi, %r13
	.loc	22 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB28_6
.Ltmp1301:
# %bb.4:                                #   in Loop: Header=BB28_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $r13
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edx
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	22 0 3                  # ./quickodualpivot.h:0:3
	movq	%r12, %rdx
.Ltmp1302:
	.p2align	4, 0x90
.LBB28_5:                               #   Parent Loop BB28_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_high <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_dual:pivot_low <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $rbp
	.loc	22 44 21 is_stmt 1      # ./quickodualpivot.h:44:21
	movl	(%r15,%rdx,4), %edi
	.loc	22 44 19 is_stmt 0      # ./quickodualpivot.h:44:19
	xorl	%ecx, %ecx
	cmpl	%edi, %r8d
	setg	%cl
.Ltmp1303:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $r12b
	.loc	22 45 9 is_stmt 1       # ./quickodualpivot.h:45:9
	movl	(%r15,%r12,4), %ebx
.Ltmp1304:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edi
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $ebx
	.loc	22 47 16                # ./quickodualpivot.h:47:16
	movl	%ebx, %eax
	cmovgl	%edi, %eax
	.loc	22 47 14 is_stmt 0      # ./quickodualpivot.h:47:14
	movl	%eax, (%r15,%r12,4)
	.loc	22 48 16 is_stmt 1      # ./quickodualpivot.h:48:16
	cmovgl	%ebx, %edi
.Ltmp1305:
	.loc	22 48 14 is_stmt 0      # ./quickodualpivot.h:48:14
	movl	%edi, (%r15,%rdx,4)
	.loc	22 54 7 is_stmt 1       # ./quickodualpivot.h:54:7
	addq	%rcx, %r12
.Ltmp1306:
	#DEBUG_VALUE: partition_quick_optimized_dual:k <- $r12
	.loc	22 56 20                # ./quickodualpivot.h:56:20
	xorl	%eax, %eax
	cmpl	%edi, %r9d
	setl	%al
.Ltmp1307:
	#DEBUG_VALUE: partition_quick_optimized_dual:c <- $al
	.loc	22 57 9                 # ./quickodualpivot.h:57:9
	movl	(%r15,%rbp,4), %ebx
.Ltmp1308:
	#DEBUG_VALUE: partition_quick_optimized_dual:z <- $edi
	#DEBUG_VALUE: partition_quick_optimized_dual:y <- $ebx
	.loc	22 59 16                # ./quickodualpivot.h:59:16
	movl	%ebx, %ecx
	cmovll	%edi, %ecx
	.loc	22 59 14 is_stmt 0      # ./quickodualpivot.h:59:14
	movl	%ecx, (%r15,%rbp,4)
	.loc	22 60 16 is_stmt 1      # ./quickodualpivot.h:60:16
	cmovll	%ebx, %edi
.Ltmp1309:
	.loc	22 60 14 is_stmt 0      # ./quickodualpivot.h:60:14
	movl	%edi, (%r15,%rdx,4)
.Ltmp1310:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- undef
	.loc	22 65 7 is_stmt 1       # ./quickodualpivot.h:65:7
	subq	%rax, %rbp
.Ltmp1311:
	#DEBUG_VALUE: partition_quick_optimized_dual:g <- $rbp
	.loc	22 66 7                 # ./quickodualpivot.h:66:7
	subq	%rax, %rdx
	.loc	22 68 6                 # ./quickodualpivot.h:68:6
	incq	%rdx
.Ltmp1312:
	#DEBUG_VALUE: partition_quick_optimized_dual:j <- $rdx
	.loc	22 43 12                # ./quickodualpivot.h:43:12
	cmpq	%rbp, %rdx
	.loc	22 43 3 is_stmt 0       # ./quickodualpivot.h:43:3
	jle	.LBB28_5
	jmp	.LBB28_6
.Ltmp1313:
.LBB28_7:
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	22 97 1 is_stmt 1       # ./quickodualpivot.h:97:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1314:
.LBB28_8:
	.cfi_def_cfa_offset 64
	#DEBUG_VALUE: sort_quick_optimized_dual:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_dual:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_dual:low <- $rsi
	.loc	22 94 7                 # ./quickodualpivot.h:94:7
	movq	%r15, %rdi
	movq	%r14, %rdx
	addq	$8, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1315:
	.cfi_def_cfa_offset 24
	popq	%r15
.Ltmp1316:
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1317:
.Lfunc_end28:
	.size	sort_quick_optimized_dual, .Lfunc_end28-sort_quick_optimized_dual
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi   # -- Begin function partition_quick_multi
	.p2align	4, 0x90
	.type	partition_quick_multi,@function
partition_quick_multi:                  # @partition_quick_multi
.Lfunc_begin29:
	.loc	5 21 0                  # ./quickomulti.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp1318:
	#DEBUG_VALUE: partition_quick_multi:pivots <- undef
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	5 27 27 prologue_end    # ./quickomulti.h:27:27
	movq	%rdx, %r9
	subq	%rsi, %r9
.Ltmp1319:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	jle	.LBB29_1
.Ltmp1320:
# %bb.7:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	vmovdqu	(%rdi,%rsi,4), %ymm0
.Ltmp1321:
	.loc	5 27 3                  # ./quickomulti.h:27:3
	vmovd	%xmm0, %r10d
	leaq	1(%rsi), %r11
.Ltmp1322:
	.p2align	4, 0x90
.LBB29_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	5 28 28 is_stmt 1       # ./quickomulti.h:28:28
	vmovd	%r10d, %xmm1
	vpbroadcastd	%xmm1, %ymm1
.Ltmp1323:
	#DEBUG_VALUE: currentValue <- $ymm1
	.loc	5 29 24                 # ./quickomulti.h:29:24
	vpcmpgtd	%ymm1, %ymm0, %ymm1
.Ltmp1324:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.file	23 "/home/peeters/bachelor" "./simd.h"
	.loc	23 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm1, %xmm2
	.loc	23 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1325:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	23 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm2, %xmm1, %xmm1
.Ltmp1326:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1327:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1328:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %eax
.Ltmp1329:
	.loc	5 31 23                 # ./quickomulti.h:31:23
	addl	$8, %eax
.Ltmp1330:
	#DEBUG_VALUE: index <- $rax
	.loc	5 32 9                  # ./quickomulti.h:32:9
	movslq	(%rcx,%rax,4), %rbx
	.loc	5 32 25 is_stmt 0       # ./quickomulti.h:32:25
	movl	%r10d, (%r8,%rbx,4)
	.loc	5 33 20 is_stmt 1       # ./quickomulti.h:33:20
	incl	(%rcx,%rax,4)
.Ltmp1331:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 27 27                 # ./quickomulti.h:27:27
	cmpq	%r11, %rdx
.Ltmp1332:
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	je	.LBB29_1
.Ltmp1333:
# %bb.9:                                #   in Loop: Header=BB29_8 Depth=1
	#DEBUG_VALUE: index <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 28 46 is_stmt 1       # ./quickomulti.h:28:46
	movl	(%rdi,%r11,4), %r10d
.Ltmp1334:
	.loc	5 27 3                  # ./quickomulti.h:27:3
	incq	%r11
	jmp	.LBB29_8
.Ltmp1335:
.LBB29_1:
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 0 3 is_stmt 0         # ./quickomulti.h:0:3
	xorl	%r11d, %r11d
	jmp	.LBB29_2
.Ltmp1336:
	.p2align	4, 0x90
.LBB29_5:                               #   in Loop: Header=BB29_2 Depth=1
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	subl	%r10d, %edx
	movl	%edx, (%rcx,%r11,4)
.Ltmp1337:
	.loc	5 38 43                 # ./quickomulti.h:38:43
	incq	%r11
.Ltmp1338:
	#DEBUG_VALUE: index <- $r11
	.loc	5 38 33 is_stmt 0       # ./quickomulti.h:38:33
	cmpq	$9, %r11
.Ltmp1339:
	.loc	5 38 3                  # ./quickomulti.h:38:3
	je	.LBB29_6
.Ltmp1340:
.LBB29_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB29_10 Depth 2
                                        #     Child Loop BB29_4 Depth 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 39 23 is_stmt 1       # ./quickomulti.h:39:23
	movq	%r11, %r10
	imulq	%r9, %r10
.Ltmp1341:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	movq	%rdx, %rbx
	addq	$-7, %rbx
.Ltmp1342:
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rax
.Ltmp1343:
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rbx, %r10
.Ltmp1344:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB29_3
.Ltmp1345:
	.p2align	4, 0x90
.LBB29_10:                              #   Parent Loop BB29_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r8,%rax,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rsi
.Ltmp1346:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rax
.Ltmp1347:
	#DEBUG_VALUE: j <- $rax
	.loc	5 40 16 is_stmt 0       # ./quickomulti.h:40:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 40 31                 # ./quickomulti.h:40:31
	leaq	-7(%rdx), %rbx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rbx, %rax
.Ltmp1348:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB29_10
.Ltmp1349:
.LBB29_3:                               #   in Loop: Header=BB29_2 Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 45 16 is_stmt 1       # ./quickomulti.h:45:16
	movslq	%edx, %rbx
	.loc	5 45 14 is_stmt 0       # ./quickomulti.h:45:14
	cmpq	%rbx, %rax
.Ltmp1350:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB29_5
.Ltmp1351:
	.p2align	4, 0x90
.LBB29_4:                               #   Parent Loop BB29_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- $r11
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r8,%rax,4), %edx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%edx, (%rdi,%rsi,4)
	.loc	5 47 17 is_stmt 1       # ./quickomulti.h:47:17
	incq	%rsi
.Ltmp1352:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	.loc	5 45 33                 # ./quickomulti.h:45:33
	incq	%rax
.Ltmp1353:
	#DEBUG_VALUE: j <- $rax
	.loc	5 45 16 is_stmt 0       # ./quickomulti.h:45:16
	movslq	(%rcx,%r11,4), %rdx
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rdx, %rax
.Ltmp1354:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jl	.LBB29_4
	jmp	.LBB29_5
.Ltmp1355:
.LBB29_6:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r9
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multi:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multi:array <- $rdi
	.loc	5 56 1 is_stmt 1        # ./quickomulti.h:56:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1356:
.Lfunc_end29:
	.size	partition_quick_multi, .Lfunc_end29-partition_quick_multi
	.cfi_endproc
	.file	24 "/usr/include/x86_64-linux-gnu/bits" "stdint-uintn.h"
                                        # -- End function
	.globl	hsum_8x32               # -- Begin function hsum_8x32
	.p2align	4, 0x90
	.type	hsum_8x32,@function
hsum_8x32:                              # @hsum_8x32
.Lfunc_begin30:
	.loc	23 16 0                 # ./simd.h:16:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: hsum_8x32:v <- $ymm0
	#DEBUG_VALUE: hsum_8x32:v <- $ymm0
	.loc	23 18 48 prologue_end   # ./simd.h:18:48
	vextracti128	$1, %ymm0, %xmm1
	.loc	23 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1357:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	23 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
	vpaddd	%xmm1, %xmm0, %xmm0
.Ltmp1358:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp1359:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1360:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %eax
.Ltmp1361:
	.loc	23 19 3                 # ./simd.h:19:3
	vzeroupper
.Ltmp1362:
	retq
.Ltmp1363:
.Lfunc_end30:
	.size	hsum_8x32, .Lfunc_end30-hsum_8x32
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst16,"aM",@progbits,16
	.p2align	4               # -- Begin function sort_quick_multi_h
.LCPI31_0:
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.text
	.globl	sort_quick_multi_h
	.p2align	4, 0x90
	.type	sort_quick_multi_h,@function
sort_quick_multi_h:                     # @sort_quick_multi_h
.Lfunc_begin31:
	.loc	5 58 0                  # ./quickomulti.h:58:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$120, %rsp
	.cfi_def_cfa_offset 176
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	5 60 11 prologue_end    # ./quickomulti.h:60:11
	movq	%rdx, %r8
	subq	%rsi, %r8
.Ltmp1364:
	.loc	5 60 7 is_stmt 0        # ./quickomulti.h:60:7
	jle	.LBB31_242
.Ltmp1365:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	.loc	5 0 7                   # ./quickomulti.h:0:7
	movq	%rdi, %r14
.Ltmp1366:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 61 20 is_stmt 1       # ./quickomulti.h:61:20
	cmpq	$51, %r8
.Ltmp1367:
	.loc	5 61 9 is_stmt 0        # ./quickomulti.h:61:9
	jl	.LBB31_5
.Ltmp1368:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 9                   # ./quickomulti.h:0:9
	movq	%rcx, %r12
.Ltmp1369:
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	.loc	5 62 18 is_stmt 1       # ./quickomulti.h:62:18
	leal	1(%r8), %eax
.Ltmp1370:
	#DEBUG_VALUE: size <- $eax
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	$0, 32(%rsp)
	movl	%eax, 36(%rsp)
	.loc	5 63 49 is_stmt 0       # ./quickomulti.h:63:49
	vmovd	%eax, %xmm0
	vpbroadcastd	%xmm0, %xmm0
	vpmulld	.LCPI31_0(%rip), %xmm0, %xmm0
	.loc	5 63 23                 # ./quickomulti.h:63:23
	vmovdqu	%xmm0, 40(%rsp)
	.loc	5 64 39 is_stmt 1       # ./quickomulti.h:64:39
	leal	2(%r8,%r8), %ecx
	leal	(%rcx,%rcx,2), %ecx
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	%ecx, 56(%rsp)
	.loc	5 64 49                 # ./quickomulti.h:64:49
	leal	8(,%r8,8), %ecx
	movl	%ecx, %edi
	subl	%eax, %edi
	.loc	5 63 23                 # ./quickomulti.h:63:23
	movl	%edi, 60(%rsp)
	movl	%ecx, 64(%rsp)
.Ltmp1371:
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: partition_quick_multi:targets <- undef
	#DEBUG_VALUE: partition_quick_multi:high <- undef
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	.loc	5 22 23                 # ./quickomulti.h:22:23
	incq	%r8
.Ltmp1372:
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	.loc	5 23 20                 # ./quickomulti.h:23:20
	vmovdqu	(%r14,%rsi,4), %ymm0
.Ltmp1373:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:pivots <- undef
	.loc	5 27 3                  # ./quickomulti.h:27:3
	vmovdqu	(%r14,%rsi,4), %xmm1
	vmovd	%xmm1, %ecx
	movq	%rsi, %rax
.Ltmp1374:
	.p2align	4, 0x90
.LBB31_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	5 28 28                 # ./quickomulti.h:28:28
	vmovd	%ecx, %xmm1
	vpbroadcastd	%xmm1, %ymm1
.Ltmp1375:
	#DEBUG_VALUE: currentValue <- $ymm1
	.loc	5 29 24                 # ./quickomulti.h:29:24
	vpcmpgtd	%ymm1, %ymm0, %ymm1
.Ltmp1376:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	23 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm1, %xmm2
	.loc	23 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1377:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	23 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm2, %xmm1, %xmm1
.Ltmp1378:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1379:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1380:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %edi
.Ltmp1381:
	.loc	5 31 23                 # ./quickomulti.h:31:23
	addl	$8, %edi
.Ltmp1382:
	#DEBUG_VALUE: index <- $rdi
	.loc	5 32 9                  # ./quickomulti.h:32:9
	movslq	32(%rsp,%rdi,4), %rbp
	.loc	5 32 25 is_stmt 0       # ./quickomulti.h:32:25
	movl	%ecx, (%r12,%rbp,4)
	.loc	5 33 20 is_stmt 1       # ./quickomulti.h:33:20
	leal	1(%rbp), %ecx
	movl	%ecx, 32(%rsp,%rdi,4)
.Ltmp1383:
	#DEBUG_VALUE: j <- undef
	.loc	5 27 27                 # ./quickomulti.h:27:27
	cmpq	%rax, %rdx
.Ltmp1384:
	.loc	5 27 3 is_stmt 0        # ./quickomulti.h:27:3
	je	.LBB31_6
.Ltmp1385:
# %bb.4:                                #   in Loop: Header=BB31_3 Depth=1
	#DEBUG_VALUE: index <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 28 46 is_stmt 1       # ./quickomulti.h:28:46
	movl	4(%r14,%rax,4), %ecx
.Ltmp1386:
	.loc	5 0 0 is_stmt 0         # ./quickomulti.h:0:0
	incq	%rax
.Ltmp1387:
	#DEBUG_VALUE: j <- $rax
	jmp	.LBB31_3
.Ltmp1388:
.LBB31_5:
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 75 7 is_stmt 1        # ./quickomulti.h:75:7
	movq	%r14, %rdi
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
.Ltmp1389:
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1390:
.LBB31_6:
	.cfi_def_cfa_offset 176
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	32(%rsp), %rcx
.Ltmp1391:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	cmpq	$8, %rcx
	movq	%rcx, 72(%rsp)          # 8-byte Spill
.Ltmp1392:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_10
.Ltmp1393:
# %bb.7:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	leaq	-7(%rcx), %rax
	.loc	5 40 5                  # ./quickomulti.h:40:5
	leaq	(%r14,%rsi,4), %rcx
	xorl	%edi, %edi
.Ltmp1394:
	.p2align	4, 0x90
.LBB31_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%rcx,%rdi,4)
.Ltmp1395:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rdi
.Ltmp1396:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 14 is_stmt 0       # ./quickomulti.h:40:14
	cmpq	%rax, %rdi
.Ltmp1397:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB31_8
.Ltmp1398:
# %bb.9:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 16 is_stmt 1       # ./quickomulti.h:45:16
	leaq	(%rsi,%rdi), %rax
	movq	72(%rsp), %rcx          # 8-byte Reload
	#DEBUG_VALUE: j <- $rdi
.Ltmp1399:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 0       # ./quickomulti.h:45:14
	cmpq	%rcx, %rdi
.Ltmp1400:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jl	.LBB31_11
	jmp	.LBB31_32
.Ltmp1401:
.LBB31_10:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%edi, %edi
	movq	%rsi, %rax
.Ltmp1402:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rcx, %rdi
.Ltmp1403:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_32
.Ltmp1404:
.LBB31_11:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%rcx, %r10
	subq	%rdi, %r10
	cmpq	$31, %r10
	jbe	.LBB31_24
.Ltmp1405:
# %bb.12:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rcx, %rbx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_15
.Ltmp1406:
# %bb.13:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jae	.LBB31_15
.Ltmp1407:
# %bb.14:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rcx
	jmp	.LBB31_24
.Ltmp1408:
.LBB31_15:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r10, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r11d
	andl	$3, %r11d
	cmpq	$96, %rcx
	jae	.LBB31_17
.Ltmp1409:
# %bb.16:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebp, %ebp
	jmp	.LBB31_19
.Ltmp1410:
.LBB31_17:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r11, %r15
	leaq	(%r12,%rdi,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%ebp, %ebp
.Ltmp1411:
	.p2align	4, 0x90
.LBB31_18:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rcx,%rbp,4), %ymm0
	vmovups	-448(%rcx,%rbp,4), %ymm1
	vmovups	-416(%rcx,%rbp,4), %ymm2
	vmovups	-384(%rcx,%rbp,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rbp,4)
	vmovups	%ymm1, -448(%rbx,%rbp,4)
	vmovups	%ymm2, -416(%rbx,%rbp,4)
	vmovups	%ymm3, -384(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rcx,%rbp,4), %ymm0
	vmovups	-320(%rcx,%rbp,4), %ymm1
	vmovups	-288(%rcx,%rbp,4), %ymm2
	vmovups	-256(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rbp,4)
	vmovups	%ymm1, -320(%rbx,%rbp,4)
	vmovups	%ymm2, -288(%rbx,%rbp,4)
	vmovups	%ymm3, -256(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rcx,%rbp,4), %ymm0
	vmovups	-192(%rcx,%rbp,4), %ymm1
	vmovups	-160(%rcx,%rbp,4), %ymm2
	vmovups	-128(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rbp,4)
	vmovups	%ymm1, -192(%rbx,%rbp,4)
	vmovups	%ymm2, -160(%rbx,%rbp,4)
	vmovups	%ymm3, -128(%rbx,%rbp,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rcx,%rbp,4), %ymm0
	vmovdqu	-64(%rcx,%rbp,4), %ymm1
	vmovdqu	-32(%rcx,%rbp,4), %ymm2
	vmovups	(%rcx,%rbp,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rbp,4)
	vmovdqu	%ymm1, -64(%rbx,%rbp,4)
	vmovdqu	%ymm2, -32(%rbx,%rbp,4)
	vmovups	%ymm3, (%rbx,%rbp,4)
	subq	$-128, %rbp
	addq	$-4, %r15
	jne	.LBB31_18
.Ltmp1412:
.LBB31_19:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r11, %r11
	je	.LBB31_22
.Ltmp1413:
# %bb.20:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbp), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbp
	leaq	(%r12,%rbp,4), %rbx
	negq	%r11
	movl	$96, %ebp
.Ltmp1414:
	.p2align	4, 0x90
.LBB31_21:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r11
	jne	.LBB31_21
.Ltmp1415:
.LBB31_22:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1416:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r10
	je	.LBB31_32
.Ltmp1417:
# %bb.23:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1418:
	movq	72(%rsp), %rcx          # 8-byte Reload
.Ltmp1419:
.LBB31_24:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ecx, %r15d
	subl	%edi, %r15d
	movq	%rdi, %r9
	notq	%r9
	addq	%rcx, %r9
	andq	$7, %r15
	je	.LBB31_28
.Ltmp1420:
# %bb.25:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r12,%rdi,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%r15
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1421:
	.p2align	4, 0x90
.LBB31_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r11,%rcx)
.Ltmp1422:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r15
	jne	.LBB31_26
.Ltmp1423:
# %bb.27:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	subq	%rbx, %rdi
	subq	%rbx, %rax
.Ltmp1424:
.LBB31_28:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$7, %r9
	jb	.LBB31_32
.Ltmp1425:
# %bb.29:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	72(%rsp), %r9           # 8-byte Reload
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1426:
	.p2align	4, 0x90
.LBB31_30:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1427:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1428:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_30
.Ltmp1429:
# %bb.31:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 40 16 is_stmt 1       # ./quickomulti.h:40:16
	addq	%rdi, %rax
.Ltmp1430:
.LBB31_32:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	movslq	36(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r8
.Ltmp1431:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_37
.Ltmp1432:
# %bb.33:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %r9
	.loc	5 40 5                  # ./quickomulti.h:40:5
	leaq	(%rcx,%rsi), %rbx
	subq	%rdx, %rbx
	addq	$-2, %rbx
	movl	%ebx, %ebp
	shrl	$3, %ebp
	incl	%ebp
	andq	$7, %rbp
	je	.LBB31_38
.Ltmp1433:
# %bb.34:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	negq	%rbp
	movq	%r8, %rdi
.Ltmp1434:
	.p2align	4, 0x90
.LBB31_35:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1435:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$8, %rdi
.Ltmp1436:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	incq	%rbp
	jne	.LBB31_35
.Ltmp1437:
# %bb.36:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$56, %rbx
	movq	%r9, %rbx
	jae	.LBB31_39
	jmp	.LBB31_40
.Ltmp1438:
.LBB31_37:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r8, %rdi
	jmp	.LBB31_40
.Ltmp1439:
.LBB31_38:
	#DEBUG_VALUE: j <- $r8
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%r8, %rdi
.Ltmp1440:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	cmpq	$56, %rbx
	movq	%r9, %rbx
	jb	.LBB31_40
.Ltmp1441:
	.p2align	4, 0x90
.LBB31_39:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovups	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, (%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	32(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 32(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	64(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 64(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	96(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 96(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	128(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 128(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	160(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 160(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovups	192(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovups	%ymm0, 192(%r14,%rax,4)
	.loc	5 42 27                 # ./quickomulti.h:42:27
	vmovdqu	224(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, 224(%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$64, %rax
.Ltmp1442:
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 38                 # ./quickomulti.h:40:38
	addq	$64, %rdi
.Ltmp1443:
	#DEBUG_VALUE: j <- $rdi
	.loc	5 40 14 is_stmt 0       # ./quickomulti.h:40:14
	cmpq	%rcx, %rdi
.Ltmp1444:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jl	.LBB31_39
.Ltmp1445:
.LBB31_40:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
.Ltmp1446:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jge	.LBB31_61
.Ltmp1447:
# %bb.41:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%rbx, %r10
	subq	%rdi, %r10
	cmpq	$32, %r10
	jb	.LBB31_53
.Ltmp1448:
# %bb.42:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r14,%rax,4), %r11
	leaq	(%r12,%rdi,4), %r15
	leaq	(%r12,%rbx,4), %rcx
	cmpq	%rcx, %r11
	jae	.LBB31_44
.Ltmp1449:
# %bb.43:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	cmpq	%rcx, %r15
	jb	.LBB31_53
.Ltmp1450:
.LBB31_44:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 112(%rsp)         # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r10, %rcx
	andq	$-32, %rcx
	movq	%rcx, 16(%rsp)          # 8-byte Spill
	addq	$-32, %rcx
	movq	%rcx, %rbp
	shrq	$5, %rbp
	incq	%rbp
	movl	%ebp, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB31_46
.Ltmp1451:
# %bb.45:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ecx, %ecx
	jmp	.LBB31_48
.Ltmp1452:
.LBB31_46:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %rbp
	leaq	(%r12,%rdi,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %r9
	addq	$480, %r9               # imm = 0x1E0
	xorl	%ecx, %ecx
.Ltmp1453:
	.p2align	4, 0x90
.LBB31_47:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbx,%rcx,4), %ymm0
	vmovups	-448(%rbx,%rcx,4), %ymm1
	vmovups	-416(%rbx,%rcx,4), %ymm2
	vmovups	-384(%rbx,%rcx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%r9,%rcx,4)
	vmovups	%ymm1, -448(%r9,%rcx,4)
	vmovups	%ymm2, -416(%r9,%rcx,4)
	vmovups	%ymm3, -384(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbx,%rcx,4), %ymm0
	vmovups	-320(%rbx,%rcx,4), %ymm1
	vmovups	-288(%rbx,%rcx,4), %ymm2
	vmovups	-256(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%r9,%rcx,4)
	vmovups	%ymm1, -320(%r9,%rcx,4)
	vmovups	%ymm2, -288(%r9,%rcx,4)
	vmovups	%ymm3, -256(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbx,%rcx,4), %ymm0
	vmovups	-192(%rbx,%rcx,4), %ymm1
	vmovups	-160(%rbx,%rcx,4), %ymm2
	vmovups	-128(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%r9,%rcx,4)
	vmovups	%ymm1, -192(%r9,%rcx,4)
	vmovups	%ymm2, -160(%r9,%rcx,4)
	vmovups	%ymm3, -128(%r9,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rcx,4), %ymm0
	vmovdqu	-64(%rbx,%rcx,4), %ymm1
	vmovdqu	-32(%rbx,%rcx,4), %ymm2
	vmovups	(%rbx,%rcx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r9,%rcx,4)
	vmovdqu	%ymm1, -64(%r9,%rcx,4)
	vmovdqu	%ymm2, -32(%r9,%rcx,4)
	vmovups	%ymm3, (%r9,%rcx,4)
	subq	$-128, %rcx
	addq	$-4, %rbp
	jne	.LBB31_47
.Ltmp1454:
.LBB31_48:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_51
.Ltmp1455:
# %bb.49:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	96(,%rcx,4), %rcx
	negq	%r13
.Ltmp1456:
	.p2align	4, 0x90
.LBB31_50:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%r15,%rcx), %ymm0
	vmovdqu	-64(%r15,%rcx), %ymm1
	vmovdqu	-32(%r15,%rcx), %ymm2
	vmovups	(%r15,%rcx), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r11,%rcx)
	vmovdqu	%ymm1, -64(%r11,%rcx)
	vmovdqu	%ymm2, -32(%r11,%rcx)
	vmovups	%ymm3, (%r11,%rcx)
	subq	$-128, %rcx
	incq	%r13
	jne	.LBB31_50
.Ltmp1457:
.LBB31_51:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	movq	16(%rsp), %rcx          # 8-byte Reload
	addq	%rcx, %rax
.Ltmp1458:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%rcx, %r10
	movq	112(%rsp), %rbx         # 8-byte Reload
	je	.LBB31_61
.Ltmp1459:
# %bb.52:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%rcx, %rdi
.Ltmp1460:
.LBB31_53:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r15d
	subl	%edi, %r15d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r15
	je	.LBB31_57
.Ltmp1461:
# %bb.54:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %r13
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%r15
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1462:
	.p2align	4, 0x90
.LBB31_55:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r11,%rcx)
.Ltmp1463:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r15
	jne	.LBB31_55
.Ltmp1464:
# %bb.56:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	%r13, %rbx
.Ltmp1465:
.LBB31_57:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	cmpq	$7, %r9
	jb	.LBB31_61
.Ltmp1466:
# %bb.58:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r10
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1467:
	.p2align	4, 0x90
.LBB31_59:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1468:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1469:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_59
.Ltmp1470:
# %bb.60:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r10, %rbx
.Ltmp1471:
.LBB31_61:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r8d, %ebx
	movl	%ebx, 36(%rsp)
.Ltmp1472:
	#DEBUG_VALUE: index <- 2
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8), %r10
.Ltmp1473:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	40(%rsp), %r15
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r15), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbx, 112(%rsp)         # 8-byte Spill
.Ltmp1474:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_65
.Ltmp1475:
# %bb.62:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rdx,%rdx), %rdi
	leaq	(%rsi,%rsi), %rbp
	subq	%rbp, %rdi
	addq	$2, %rdi
.Ltmp1476:
	.p2align	4, 0x90
.LBB31_63:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1477:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1478:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_63
.Ltmp1479:
# %bb.64:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r15, %rdi
	movq	%rsi, 24(%rsp)          # 8-byte Spill
.Ltmp1480:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_66
	jmp	.LBB31_86
.Ltmp1481:
.LBB31_65:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1482:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r15, %rdi
	movq	%rsi, 24(%rsp)          # 8-byte Spill
.Ltmp1483:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_86
.Ltmp1484:
.LBB31_66:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	movq	%r15, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB31_78
.Ltmp1485:
# %bb.67:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r15,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_69
.Ltmp1486:
# %bb.68:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%r15), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB31_78
.Ltmp1487:
.LBB31_69:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r15, 8(%rsp)           # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rbx
	movq	%rbx, %rcx
	shrq	$5, %rcx
	incq	%rcx
	movl	%ecx, %r13d
	andl	$3, %r13d
	cmpq	$96, %rbx
	jae	.LBB31_71
.Ltmp1488:
# %bb.70:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB31_73
.Ltmp1489:
.LBB31_71:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %rcx
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %r15
	addq	$480, %r15              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1490:
	.p2align	4, 0x90
.LBB31_72:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%r15,%rbx,4)
	vmovups	%ymm1, -448(%r15,%rbx,4)
	vmovups	%ymm2, -416(%r15,%rbx,4)
	vmovups	%ymm3, -384(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%r15,%rbx,4)
	vmovups	%ymm1, -320(%r15,%rbx,4)
	vmovups	%ymm2, -288(%r15,%rbx,4)
	vmovups	%ymm3, -256(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%r15,%rbx,4)
	vmovups	%ymm1, -192(%r15,%rbx,4)
	vmovups	%ymm2, -160(%r15,%rbx,4)
	vmovups	%ymm3, -128(%r15,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%r15,%rbx,4)
	vmovdqu	%ymm1, -64(%r15,%rbx,4)
	vmovdqu	%ymm2, -32(%r15,%rbx,4)
	vmovups	%ymm3, (%r15,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %rcx
	jne	.LBB31_72
.Ltmp1491:
.LBB31_73:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_76
.Ltmp1492:
# %bb.74:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1493:
	.p2align	4, 0x90
.LBB31_75:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_75
.Ltmp1494:
.LBB31_76:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1495:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	je	.LBB31_86
.Ltmp1496:
# %bb.77:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1497:
.LBB31_78:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r15d, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%r15, %r9
	andq	$7, %r13
	je	.LBB31_82
.Ltmp1498:
# %bb.79:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:i <- $rsi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_h:low <- $rsi
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r15, %rsi
.Ltmp1499:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1500:
	.p2align	4, 0x90
.LBB31_80:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1501:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB31_80
.Ltmp1502:
# %bb.81:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	%rsi, %r15
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1503:
.LBB31_82:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB31_86
.Ltmp1504:
# %bb.83:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r15, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1505:
	.p2align	4, 0x90
.LBB31_84:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1506:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1507:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_84
.Ltmp1508:
# %bb.85:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
.Ltmp1509:
.LBB31_86:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %r15d
	movl	%r15d, 40(%rsp)
.Ltmp1510:
	#DEBUG_VALUE: index <- 3
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8,2), %r10
.Ltmp1511:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	44(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
.Ltmp1512:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_90
.Ltmp1513:
# %bb.87:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx,2), %rdi
	leaq	(%rsi,%rsi,2), %rbp
	subq	%rbp, %rdi
	addq	$3, %rdi
.Ltmp1514:
	.p2align	4, 0x90
.LBB31_88:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1515:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1516:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_88
.Ltmp1517:
# %bb.89:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r15, 8(%rsp)           # 8-byte Spill
.Ltmp1518:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_91
	jmp	.LBB31_111
.Ltmp1519:
.LBB31_90:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1520:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r15, 8(%rsp)           # 8-byte Spill
.Ltmp1521:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_111
.Ltmp1522:
.LBB31_91:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbx, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB31_103
.Ltmp1523:
# %bb.92:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_94
.Ltmp1524:
# %bb.93:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB31_103
.Ltmp1525:
.LBB31_94:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 104(%rsp)         # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB31_96
.Ltmp1526:
# %bb.95:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB31_98
.Ltmp1527:
.LBB31_96:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1528:
	.p2align	4, 0x90
.LBB31_97:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB31_97
.Ltmp1529:
.LBB31_98:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_101
.Ltmp1530:
# %bb.99:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1531:
	.p2align	4, 0x90
.LBB31_100:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_100
.Ltmp1532:
.LBB31_101:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1533:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	104(%rsp), %rbx         # 8-byte Reload
	je	.LBB31_111
.Ltmp1534:
# %bb.102:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1535:
.LBB31_103:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r13
	je	.LBB31_107
.Ltmp1536:
# %bb.104:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1537:
	.p2align	4, 0x90
.LBB31_105:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1538:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB31_105
.Ltmp1539:
# %bb.106:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbx
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1540:
.LBB31_107:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB31_111
.Ltmp1541:
# %bb.108:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1542:
	.p2align	4, 0x90
.LBB31_109:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1543:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1544:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_109
.Ltmp1545:
# %bb.110:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbx
.Ltmp1546:
.LBB31_111:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebx
	movl	%ebx, 44(%rsp)
.Ltmp1547:
	#DEBUG_VALUE: index <- 4
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(,%r8,4), %r10
.Ltmp1548:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	48(%rsp), %rbp
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbp), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbx, 104(%rsp)         # 8-byte Spill
.Ltmp1549:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_119
.Ltmp1550:
# %bb.112:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(,%rdx,4), %rdi
	movq	%rbp, %rbx
	movq	%rsi, %r9
	leaq	(,%rsi,4), %rbp
	subq	%rbp, %rdi
	movq	%rbx, %rbp
	addq	$4, %rdi
.Ltmp1551:
	.p2align	4, 0x90
.LBB31_113:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1552:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1553:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_113
.Ltmp1554:
# %bb.114:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbp, %rdi
.Ltmp1555:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jge	.LBB31_120
	jmp	.LBB31_115
.Ltmp1556:
.LBB31_119:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rsi, %r9
	movq	%r10, %rdi
.Ltmp1557:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbp, %rdi
.Ltmp1558:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_120
.Ltmp1559:
.LBB31_115:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbp, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB31_131
.Ltmp1560:
# %bb.116:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	movq	%rbp, %rsi
	leaq	(%r12,%rbp,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_121
.Ltmp1561:
# %bb.117:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rsi), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jae	.LBB31_121
.Ltmp1562:
# %bb.118:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rsi, %rbp
	jmp	.LBB31_131
.Ltmp1563:
.LBB31_121:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rsi, 96(%rsp)          # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %rsi
	andq	$-32, %rsi
	leaq	-32(%rsi), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB31_123
.Ltmp1564:
# %bb.122:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB31_125
.Ltmp1565:
.LBB31_123:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1566:
	.p2align	4, 0x90
.LBB31_124:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB31_124
.Ltmp1567:
.LBB31_125:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_128
.Ltmp1568:
# %bb.126:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1569:
	.p2align	4, 0x90
.LBB31_127:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_127
.Ltmp1570:
.LBB31_128:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%rsi, %rax
.Ltmp1571:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%rsi, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	96(%rsp), %rbp          # 8-byte Reload
	jne	.LBB31_130
.Ltmp1572:
.LBB31_120:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%r9, %rsi
	jmp	.LBB31_139
.Ltmp1573:
.LBB31_130:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	addq	%rsi, %rdi
.Ltmp1574:
.LBB31_131:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebp, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbp, %r9
	andq	$7, %r13
	je	.LBB31_135
.Ltmp1575:
# %bb.132:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbp, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1576:
	.p2align	4, 0x90
.LBB31_133:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1577:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB31_133
.Ltmp1578:
# %bb.134:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbp
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1579:
.LBB31_135:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB31_139
.Ltmp1580:
# %bb.136:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbp, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbp, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1581:
	.p2align	4, 0x90
.LBB31_137:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1582:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1583:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_137
.Ltmp1584:
# %bb.138:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbp
.Ltmp1585:
.LBB31_139:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebp
	movl	%ebp, 48(%rsp)
.Ltmp1586:
	#DEBUG_VALUE: index <- 5
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(%r8,%r8,4), %r10
.Ltmp1587:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	52(%rsp), %r9
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r9), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
	movq	%rbp, 96(%rsp)          # 8-byte Spill
.Ltmp1588:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_143
.Ltmp1589:
# %bb.140:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx,4), %rdi
	leaq	(%rsi,%rsi,4), %rbp
	subq	%rbp, %rdi
	addq	$5, %rdi
.Ltmp1590:
	.p2align	4, 0x90
.LBB31_141:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1591:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1592:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_141
.Ltmp1593:
# %bb.142:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r9, %rdi
.Ltmp1594:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_144
	jmp	.LBB31_165
.Ltmp1595:
.LBB31_143:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1596:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r9, %rdi
.Ltmp1597:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_165
.Ltmp1598:
.LBB31_144:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	movq	%r9, 16(%rsp)           # 8-byte Spill
	jb	.LBB31_156
.Ltmp1599:
# %bb.145:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r9,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_147
.Ltmp1600:
# %bb.146:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%r9), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB31_156
.Ltmp1601:
.LBB31_147:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB31_149
.Ltmp1602:
# %bb.148:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB31_151
.Ltmp1603:
.LBB31_149:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1604:
	.p2align	4, 0x90
.LBB31_150:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB31_150
.Ltmp1605:
.LBB31_151:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_154
.Ltmp1606:
# %bb.152:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1607:
	.p2align	4, 0x90
.LBB31_153:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_153
.Ltmp1608:
.LBB31_154:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1609:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	je	.LBB31_164
.Ltmp1610:
# %bb.155:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1611:
	movq	16(%rsp), %r9           # 8-byte Reload
.Ltmp1612:
.LBB31_156:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r9d, %r13d
	subl	%edi, %r13d
	movq	%r9, %rcx
	movq	%rdi, %r9
	notq	%r9
	addq	%rcx, %r9
	andq	$7, %r13
	je	.LBB31_160
.Ltmp1613:
# %bb.157:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1614:
	.p2align	4, 0x90
.LBB31_158:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1615:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB31_158
.Ltmp1616:
# %bb.159:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp1617:
.LBB31_160:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	movq	16(%rsp), %r9           # 8-byte Reload
	jb	.LBB31_165
.Ltmp1618:
# %bb.161:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1619:
	.p2align	4, 0x90
.LBB31_162:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1620:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1621:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_162
.Ltmp1622:
# %bb.163:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
.Ltmp1623:
.LBB31_164:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 20 is_stmt 0        # ./quickomulti.h:0:20
	movq	16(%rsp), %r9           # 8-byte Reload
.Ltmp1624:
.LBB31_165:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 49 20                 # ./quickomulti.h:49:20
	subl	%r10d, %r9d
	movl	%r9d, 52(%rsp)
.Ltmp1625:
	#DEBUG_VALUE: index <- 6
	.loc	5 39 23 is_stmt 1       # ./quickomulti.h:39:23
	leaq	(%r8,%r8), %rcx
	leaq	(%rcx,%rcx,2), %r10
.Ltmp1626:
	#DEBUG_VALUE: j <- $r10
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	56(%rsp), %rbx
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%rbx), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r10
.Ltmp1627:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_169
.Ltmp1628:
# %bb.166:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rdx,%rdx), %rdi
	leaq	(%rdi,%rdi,2), %rdi
	leaq	(%rsi,%rsi), %rbp
	leaq	(%rbp,%rbp,2), %rbp
	subq	%rbp, %rdi
	addq	$6, %rdi
.Ltmp1629:
	.p2align	4, 0x90
.LBB31_167:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdi,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1630:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdi
	cmpq	%rcx, %rdi
.Ltmp1631:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_167
.Ltmp1632:
# %bb.168:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r9, 16(%rsp)           # 8-byte Spill
.Ltmp1633:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_170
	jmp	.LBB31_190
.Ltmp1634:
.LBB31_169:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r10, %rdi
.Ltmp1635:
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%rbx, %rdi
	movq	%r9, 16(%rsp)           # 8-byte Spill
.Ltmp1636:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_190
.Ltmp1637:
.LBB31_170:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%rbx, %r11
	subq	%rdi, %r11
	cmpq	$32, %r11
	jb	.LBB31_182
.Ltmp1638:
# %bb.171:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%rbx,4), %rbp
	cmpq	%rbp, %rcx
	jae	.LBB31_173
.Ltmp1639:
# %bb.172:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	subq	%rdi, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdi,4), %rbp
	cmpq	%rcx, %rbp
	jb	.LBB31_182
.Ltmp1640:
.LBB31_173:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, 88(%rsp)          # 8-byte Spill
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%r11, %r9
	andq	$-32, %r9
	leaq	-32(%r9), %rcx
	movq	%rcx, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rcx
	jae	.LBB31_175
.Ltmp1641:
# %bb.174:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%ebx, %ebx
	jmp	.LBB31_177
.Ltmp1642:
.LBB31_175:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rdi,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	xorl	%ebx, %ebx
.Ltmp1643:
	.p2align	4, 0x90
.LBB31_176:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rbx,4), %ymm0
	vmovups	-448(%rbp,%rbx,4), %ymm1
	vmovups	-416(%rbp,%rbx,4), %ymm2
	vmovups	-384(%rbp,%rbx,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rcx,%rbx,4)
	vmovups	%ymm1, -448(%rcx,%rbx,4)
	vmovups	%ymm2, -416(%rcx,%rbx,4)
	vmovups	%ymm3, -384(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rbx,4), %ymm0
	vmovups	-320(%rbp,%rbx,4), %ymm1
	vmovups	-288(%rbp,%rbx,4), %ymm2
	vmovups	-256(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rcx,%rbx,4)
	vmovups	%ymm1, -320(%rcx,%rbx,4)
	vmovups	%ymm2, -288(%rcx,%rbx,4)
	vmovups	%ymm3, -256(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rbx,4), %ymm0
	vmovups	-192(%rbp,%rbx,4), %ymm1
	vmovups	-160(%rbp,%rbx,4), %ymm2
	vmovups	-128(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rcx,%rbx,4)
	vmovups	%ymm1, -192(%rcx,%rbx,4)
	vmovups	%ymm2, -160(%rcx,%rbx,4)
	vmovups	%ymm3, -128(%rcx,%rbx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rbx,4), %ymm0
	vmovdqu	-64(%rbp,%rbx,4), %ymm1
	vmovdqu	-32(%rbp,%rbx,4), %ymm2
	vmovups	(%rbp,%rbx,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx,4)
	vmovdqu	%ymm1, -64(%rcx,%rbx,4)
	vmovdqu	%ymm2, -32(%rcx,%rbx,4)
	vmovups	%ymm3, (%rcx,%rbx,4)
	subq	$-128, %rbx
	addq	$-4, %r15
	jne	.LBB31_176
.Ltmp1644:
.LBB31_177:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_180
.Ltmp1645:
# %bb.178:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rbx), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdi, %rbx
	leaq	(%r12,%rbx,4), %rbx
	negq	%r13
	movl	$96, %ebp
.Ltmp1646:
	.p2align	4, 0x90
.LBB31_179:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbx,%rbp), %ymm0
	vmovdqu	-64(%rbx,%rbp), %ymm1
	vmovdqu	-32(%rbx,%rbp), %ymm2
	vmovups	(%rbx,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbp)
	vmovdqu	%ymm1, -64(%rcx,%rbp)
	vmovdqu	%ymm2, -32(%rcx,%rbp)
	vmovups	%ymm3, (%rcx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_179
.Ltmp1647:
.LBB31_180:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r9, %rax
.Ltmp1648:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r9, %r11
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	88(%rsp), %rbx          # 8-byte Reload
	je	.LBB31_190
.Ltmp1649:
# %bb.181:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: j <- $rdi
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r9, %rdi
.Ltmp1650:
.LBB31_182:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%ebx, %r13d
	subl	%edi, %r13d
	movq	%rdi, %r9
	notq	%r9
	addq	%rbx, %r9
	andq	$7, %r13
	je	.LBB31_186
.Ltmp1651:
# %bb.183:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%rbx, %rsi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	leaq	(%r12,%rdi,4), %r11
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%ecx, %ecx
	xorl	%ebx, %ebx
.Ltmp1652:
	.p2align	4, 0x90
.LBB31_184:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r11,%rcx), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rcx)
.Ltmp1653:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rcx
	cmpq	%rbx, %r13
	jne	.LBB31_184
.Ltmp1654:
# %bb.185:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rdi
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	%rsi, %rbx
	movq	24(%rsp), %rsi          # 8-byte Reload
.Ltmp1655:
.LBB31_186:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	cmpq	$7, %r9
	jb	.LBB31_190
.Ltmp1656:
# %bb.187:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%rbx, %r11
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movq	%rbx, %r9
	subq	%rdi, %r9
	leaq	(%r12,%rdi,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%edi, %edi
.Ltmp1657:
	.p2align	4, 0x90
.LBB31_188:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rdi,4), %ecx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ecx, -28(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -24(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -20(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -16(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -12(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -8(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, -4(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rdi,4), %ecx
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ecx, (%rbx,%rdi,4)
.Ltmp1658:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %r9
.Ltmp1659:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_188
.Ltmp1660:
# %bb.189:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rdi, %rax
	movq	%r11, %rbx
.Ltmp1661:
.LBB31_190:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	subl	%r10d, %ebx
	movl	%ebx, 56(%rsp)
.Ltmp1662:
	#DEBUG_VALUE: index <- 7
	.loc	5 39 23                 # ./quickomulti.h:39:23
	leaq	(,%r8,8), %r9
	movq	%r9, %r11
	subq	%r8, %r11
.Ltmp1663:
	#DEBUG_VALUE: j <- $r11
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	60(%rsp), %r13
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r13), %rdi
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rdi, %r11
	movq	%rbx, 88(%rsp)          # 8-byte Spill
.Ltmp1664:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_194
.Ltmp1665:
# %bb.191:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(,%rdx,8), %rcx
	subq	%rdx, %rcx
	leaq	(,%rsi,8), %rbp
	movq	%rsi, %rbx
	subq	%rbp, %rbx
	addq	%rbx, %rcx
	addq	$7, %rcx
.Ltmp1666:
	.p2align	4, 0x90
.LBB31_192:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rcx,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1667:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rcx
	cmpq	%rdi, %rcx
.Ltmp1668:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_192
.Ltmp1669:
# %bb.193:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r13, %rcx
.Ltmp1670:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_195
	jmp	.LBB31_217
.Ltmp1671:
.LBB31_194:
	#DEBUG_VALUE: j <- $r11
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r11, %rcx
.Ltmp1672:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r13, %rcx
.Ltmp1673:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_217
.Ltmp1674:
.LBB31_195:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %r10
	subq	%rcx, %r10
	cmpq	$32, %r10
	jb	.LBB31_196
.Ltmp1675:
# %bb.197:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r14,%rax,4), %rdi
	leaq	(%r12,%r13,4), %rbp
	cmpq	%rbp, %rdi
	jae	.LBB31_200
.Ltmp1676:
# %bb.198:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%r13), %rdi
	subq	%rcx, %rdi
	leaq	(%r14,%rdi,4), %rdi
	leaq	(%r12,%rcx,4), %rbp
	cmpq	%rdi, %rbp
	jae	.LBB31_200
.Ltmp1677:
.LBB31_196:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5                   # ./quickomulti.h:0:5
	movq	%r9, %rsi
.Ltmp1678:
.LBB31_209:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %rdi
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subl	%ecx, %r13d
	movq	%rcx, %r8
	notq	%r8
	movq	%rdi, %r9
	addq	%rdi, %r8
	andq	$7, %r13
	je	.LBB31_213
.Ltmp1679:
# %bb.210:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%r12,%rcx,4), %r10
	leaq	(%r14,%rax,4), %r15
	negq	%r13
	xorl	%edi, %edi
	xorl	%ebx, %ebx
.Ltmp1680:
	.p2align	4, 0x90
.LBB31_211:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rdi), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, (%r15,%rdi)
.Ltmp1681:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rbx
	addq	$4, %rdi
	cmpq	%rbx, %r13
	jne	.LBB31_211
.Ltmp1682:
# %bb.212:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	subq	%rbx, %rcx
	subq	%rbx, %rax
	movq	8(%rsp), %r15           # 8-byte Reload
.Ltmp1683:
.LBB31_213:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	movq	%r9, %r13
	movq	%rsi, %r9
	movq	24(%rsp), %rsi          # 8-byte Reload
	.loc	5 45 5                  # ./quickomulti.h:45:5
	cmpq	$7, %r8
	jb	.LBB31_217
.Ltmp1684:
# %bb.214:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r13, %r8
	subq	%rcx, %r8
	leaq	(%r12,%rcx,4), %rbp
	addq	$28, %rbp
	leaq	(%r14,%rax,4), %rbx
	addq	$28, %rbx
	xorl	%ecx, %ecx
.Ltmp1685:
	.p2align	4, 0x90
.LBB31_215:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	-28(%rbp,%rcx,4), %edi
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%edi, -28(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -24(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -20(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -16(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -12(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -8(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, -4(%rbx,%rcx,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rbp,%rcx,4), %edi
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%edi, (%rbx,%rcx,4)
.Ltmp1686:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rcx
	cmpq	%rcx, %r8
.Ltmp1687:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_215
.Ltmp1688:
# %bb.216:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	addq	%rcx, %rax
	jmp	.LBB31_217
.Ltmp1689:
.LBB31_200:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:size <- $r8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 20 is_stmt 0        # ./quickomulti.h:0:20
	movq	%r13, 80(%rsp)          # 8-byte Spill
.Ltmp1690:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	movq	%r10, %r8
.Ltmp1691:
	andq	$-32, %r8
	leaq	-32(%r8), %rdi
	movq	%rdi, %r15
	shrq	$5, %r15
	incq	%r15
	movl	%r15d, %r13d
	andl	$3, %r13d
	cmpq	$96, %rdi
	jae	.LBB31_202
.Ltmp1692:
# %bb.201:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	xorl	%edi, %edi
	jmp	.LBB31_204
.Ltmp1693:
.LBB31_202:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r13, %r15
	leaq	(%r12,%rcx,4), %rbp
	addq	$480, %rbp              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%edi, %edi
.Ltmp1694:
	.p2align	4, 0x90
.LBB31_203:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rbp,%rdi,4), %ymm0
	vmovups	-448(%rbp,%rdi,4), %ymm1
	vmovups	-416(%rbp,%rdi,4), %ymm2
	vmovups	-384(%rbp,%rdi,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rdi,4)
	vmovups	%ymm1, -448(%rbx,%rdi,4)
	vmovups	%ymm2, -416(%rbx,%rdi,4)
	vmovups	%ymm3, -384(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rbp,%rdi,4), %ymm0
	vmovups	-320(%rbp,%rdi,4), %ymm1
	vmovups	-288(%rbp,%rdi,4), %ymm2
	vmovups	-256(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rdi,4)
	vmovups	%ymm1, -320(%rbx,%rdi,4)
	vmovups	%ymm2, -288(%rbx,%rdi,4)
	vmovups	%ymm3, -256(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rbp,%rdi,4), %ymm0
	vmovups	-192(%rbp,%rdi,4), %ymm1
	vmovups	-160(%rbp,%rdi,4), %ymm2
	vmovups	-128(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rdi,4)
	vmovups	%ymm1, -192(%rbx,%rdi,4)
	vmovups	%ymm2, -160(%rbx,%rdi,4)
	vmovups	%ymm3, -128(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rbp,%rdi,4), %ymm0
	vmovdqu	-64(%rbp,%rdi,4), %ymm1
	vmovdqu	-32(%rbp,%rdi,4), %ymm2
	vmovups	(%rbp,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rdi,4)
	vmovdqu	%ymm1, -64(%rbx,%rdi,4)
	vmovdqu	%ymm2, -32(%rbx,%rdi,4)
	vmovups	%ymm3, (%rbx,%rdi,4)
	subq	$-128, %rdi
	addq	$-4, %r15
	jne	.LBB31_203
.Ltmp1695:
.LBB31_204:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r13, %r13
	je	.LBB31_207
.Ltmp1696:
# %bb.205:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	leaq	(%rax,%rdi), %rbx
	leaq	(%r14,%rbx,4), %rbx
	addq	%rcx, %rdi
	leaq	(%r12,%rdi,4), %rdi
	negq	%r13
	movl	$96, %ebp
.Ltmp1697:
	.p2align	4, 0x90
.LBB31_206:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rdi,%rbp), %ymm0
	vmovdqu	-64(%rdi,%rbp), %ymm1
	vmovdqu	-32(%rdi,%rbp), %ymm2
	vmovups	(%rdi,%rbp), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rbp)
	vmovdqu	%ymm1, -64(%rbx,%rbp)
	vmovdqu	%ymm2, -32(%rbx,%rbp)
	vmovups	%ymm3, (%rbx,%rbp)
	subq	$-128, %rbp
	incq	%r13
	jne	.LBB31_206
.Ltmp1698:
.LBB31_207:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 25                  # ./quickomulti.h:0:25
	addq	%r8, %rax
.Ltmp1699:
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r8, %r10
	movq	8(%rsp), %r15           # 8-byte Reload
	movq	80(%rsp), %r13          # 8-byte Reload
	jne	.LBB31_208
.Ltmp1700:
.LBB31_217:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 49 20                 # ./quickomulti.h:49:20
	subl	%r11d, %r13d
	movq	%r13, 80(%rsp)          # 8-byte Spill
	movl	%r13d, 60(%rsp)
.Ltmp1701:
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: index <- 8
	.loc	5 40 16                 # ./quickomulti.h:40:16
	movslq	64(%rsp), %r13
	.loc	5 40 31 is_stmt 0       # ./quickomulti.h:40:31
	leaq	-7(%r13), %rcx
	.loc	5 40 14                 # ./quickomulti.h:40:14
	cmpq	%rcx, %r9
.Ltmp1702:
	.loc	5 40 5                  # ./quickomulti.h:40:5
	jge	.LBB31_221
.Ltmp1703:
# %bb.218:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	shlq	$3, %rdx
.Ltmp1704:
	leaq	(,%rsi,8), %rdi
	subq	%rdi, %rdx
	addq	$8, %rdx
.Ltmp1705:
	.p2align	4, 0x90
.LBB31_219:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 42 27 is_stmt 1       # ./quickomulti.h:42:27
	vmovdqu	(%r12,%rdx,4), %ymm0
	.loc	5 41 7                  # ./quickomulti.h:41:7
	vmovdqu	%ymm0, (%r14,%rax,4)
	.loc	5 43 18                 # ./quickomulti.h:43:18
	addq	$8, %rax
.Ltmp1706:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 40 14                 # ./quickomulti.h:40:14
	addq	$8, %rdx
	cmpq	%rcx, %rdx
.Ltmp1707:
	.loc	5 40 5 is_stmt 0        # ./quickomulti.h:40:5
	jl	.LBB31_219
.Ltmp1708:
# %bb.220:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	cmpq	%r13, %rdx
.Ltmp1709:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jl	.LBB31_222
	jmp	.LBB31_241
.Ltmp1710:
.LBB31_221:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	.loc	5 0 0                   # ./quickomulti.h:0:0
	movq	%r9, %rdx
.Ltmp1711:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	.loc	5 45 14                 # ./quickomulti.h:45:14
	cmpq	%r13, %rdx
.Ltmp1712:
	.loc	5 45 5                  # ./quickomulti.h:45:5
	jge	.LBB31_241
.Ltmp1713:
.LBB31_222:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r13, %r10
	subq	%rdx, %r10
	cmpq	$32, %r10
	jb	.LBB31_234
.Ltmp1714:
# %bb.223:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%r14,%rax,4), %rcx
	leaq	(%r12,%r13,4), %rdi
	cmpq	%rdi, %rcx
	jae	.LBB31_225
.Ltmp1715:
# %bb.224:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%rax,%r13), %rcx
	subq	%rdx, %rcx
	leaq	(%r14,%rcx,4), %rcx
	leaq	(%r12,%rdx,4), %rdi
	cmpq	%rcx, %rdi
	jb	.LBB31_234
.Ltmp1716:
.LBB31_225:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r10, %r8
	andq	$-32, %r8
	leaq	-32(%r8), %rcx
	movq	%rcx, %rbp
	shrq	$5, %rbp
	incq	%rbp
	movl	%ebp, %r11d
	andl	$3, %r11d
	cmpq	$96, %rcx
	jae	.LBB31_227
.Ltmp1717:
# %bb.226:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 5                   # ./quickomulti.h:0:5
	xorl	%edi, %edi
	jmp	.LBB31_229
.Ltmp1718:
.LBB31_208:
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_h:high <- $rdx
	movq	%r9, %rsi
	addq	%r8, %rcx
.Ltmp1719:
	jmp	.LBB31_209
.Ltmp1720:
.LBB31_227:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5                  # ./quickomulti.h:45:5
	subq	%r11, %rbp
	leaq	(%r12,%rdx,4), %rcx
	addq	$480, %rcx              # imm = 0x1E0
	leaq	(%r14,%rax,4), %rbx
	addq	$480, %rbx              # imm = 0x1E0
	xorl	%edi, %edi
.Ltmp1721:
	.p2align	4, 0x90
.LBB31_228:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	vmovups	-480(%rcx,%rdi,4), %ymm0
	vmovups	-448(%rcx,%rdi,4), %ymm1
	vmovups	-416(%rcx,%rdi,4), %ymm2
	vmovups	-384(%rcx,%rdi,4), %ymm3
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	vmovups	%ymm0, -480(%rbx,%rdi,4)
	vmovups	%ymm1, -448(%rbx,%rdi,4)
	vmovups	%ymm2, -416(%rbx,%rdi,4)
	vmovups	%ymm3, -384(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-352(%rcx,%rdi,4), %ymm0
	vmovups	-320(%rcx,%rdi,4), %ymm1
	vmovups	-288(%rcx,%rdi,4), %ymm2
	vmovups	-256(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -352(%rbx,%rdi,4)
	vmovups	%ymm1, -320(%rbx,%rdi,4)
	vmovups	%ymm2, -288(%rbx,%rdi,4)
	vmovups	%ymm3, -256(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovups	-224(%rcx,%rdi,4), %ymm0
	vmovups	-192(%rcx,%rdi,4), %ymm1
	vmovups	-160(%rcx,%rdi,4), %ymm2
	vmovups	-128(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovups	%ymm0, -224(%rbx,%rdi,4)
	vmovups	%ymm1, -192(%rbx,%rdi,4)
	vmovups	%ymm2, -160(%rbx,%rdi,4)
	vmovups	%ymm3, -128(%rbx,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rcx,%rdi,4), %ymm0
	vmovdqu	-64(%rcx,%rdi,4), %ymm1
	vmovdqu	-32(%rcx,%rdi,4), %ymm2
	vmovups	(%rcx,%rdi,4), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rbx,%rdi,4)
	vmovdqu	%ymm1, -64(%rbx,%rdi,4)
	vmovdqu	%ymm2, -32(%rbx,%rdi,4)
	vmovups	%ymm3, (%rbx,%rdi,4)
	subq	$-128, %rdi
	addq	$-4, %rbp
	jne	.LBB31_228
.Ltmp1722:
.LBB31_229:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 25                  # ./quickomulti.h:0:25
	testq	%r11, %r11
	je	.LBB31_232
.Ltmp1723:
# %bb.230:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%rax,%rdi), %rcx
	leaq	(%r14,%rcx,4), %rcx
	addq	%rdx, %rdi
	leaq	(%r12,%rdi,4), %rdi
	negq	%r11
	movl	$96, %ebx
.Ltmp1724:
	.p2align	4, 0x90
.LBB31_231:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 46 27                 # ./quickomulti.h:46:27
	vmovdqu	-96(%rdi,%rbx), %ymm0
	vmovdqu	-64(%rdi,%rbx), %ymm1
	vmovdqu	-32(%rdi,%rbx), %ymm2
	vmovups	(%rdi,%rbx), %ymm3
	.loc	5 46 25                 # ./quickomulti.h:46:25
	vmovdqu	%ymm0, -96(%rcx,%rbx)
	vmovdqu	%ymm1, -64(%rcx,%rbx)
	vmovdqu	%ymm2, -32(%rcx,%rbx)
	vmovups	%ymm3, (%rcx,%rbx)
	subq	$-128, %rbx
	incq	%r11
	jne	.LBB31_231
.Ltmp1725:
.LBB31_232:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	cmpq	%r8, %r10
	je	.LBB31_241
.Ltmp1726:
# %bb.233:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- $rax
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 0 5 is_stmt 0         # ./quickomulti.h:0:5
	addq	%r8, %rdx
.Ltmp1727:
	addq	%r8, %rax
.Ltmp1728:
.LBB31_234:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 45 5                  # ./quickomulti.h:45:5
	movl	%r13d, %edi
	subl	%edx, %edi
	movq	%rdx, %r8
	notq	%r8
	addq	%r13, %r8
	andq	$7, %rdi
	je	.LBB31_238
.Ltmp1729:
# %bb.235:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	leaq	(%r12,%rdx,4), %r10
	leaq	(%r14,%rax,4), %r11
	negq	%rdi
	xorl	%ebp, %ebp
	xorl	%ecx, %ecx
.Ltmp1730:
	.p2align	4, 0x90
.LBB31_236:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27 is_stmt 1       # ./quickomulti.h:46:27
	movl	(%r10,%rbp), %ebx
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebx, (%r11,%rbp)
.Ltmp1731:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	5 45 5 is_stmt 1        # ./quickomulti.h:45:5
	decq	%rcx
	addq	$4, %rbp
	cmpq	%rcx, %rdi
	jne	.LBB31_236
.Ltmp1732:
# %bb.237:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	subq	%rcx, %rdx
	subq	%rcx, %rax
.Ltmp1733:
.LBB31_238:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	cmpq	$7, %r8
	jb	.LBB31_241
.Ltmp1734:
# %bb.239:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	movq	%r13, %rcx
	subq	%rdx, %rcx
	leaq	(%r12,%rdx,4), %rdx
	addq	$28, %rdx
	leaq	(%r14,%rax,4), %rax
	addq	$28, %rax
	xorl	%edi, %edi
.Ltmp1735:
	.p2align	4, 0x90
.LBB31_240:                             # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- undef
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-28(%rdx,%rdi,4), %ebp
	.loc	5 46 25 is_stmt 0       # ./quickomulti.h:46:25
	movl	%ebp, -28(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-24(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -24(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-20(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -20(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-16(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -16(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-12(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -12(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-8(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -8(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	-4(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, -4(%rax,%rdi,4)
	.loc	5 46 27                 # ./quickomulti.h:46:27
	movl	(%rdx,%rdi,4), %ebp
	.loc	5 46 25                 # ./quickomulti.h:46:25
	movl	%ebp, (%rax,%rdi,4)
.Ltmp1736:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_multi:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	5 45 14 is_stmt 1       # ./quickomulti.h:45:14
	addq	$8, %rdi
	cmpq	%rdi, %rcx
.Ltmp1737:
	.loc	5 45 5 is_stmt 0        # ./quickomulti.h:45:5
	jne	.LBB31_240
.Ltmp1738:
.LBB31_241:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: partition_quick_multi:array <- $r14
	#DEBUG_VALUE: partition_quick_multi:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:tmp <- $r12
	#DEBUG_VALUE: sort_quick_multi_h:array <- $r14
	.loc	5 49 20 is_stmt 1       # ./quickomulti.h:49:20
	subl	%r9d, %r13d
	movq	72(%rsp), %rbp          # 8-byte Reload
.Ltmp1739:
	.loc	5 71 46                 # ./quickomulti.h:71:46
	leaq	(%rsi,%rbp), %rdx
	decq	%rdx
.Ltmp1740:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: start <- $rsi
	#DEBUG_VALUE: index <- 9
	.loc	5 70 29                 # ./quickomulti.h:70:29
	addq	%rsi, %rbp
.Ltmp1741:
	#DEBUG_VALUE: end <- $rbp
	.loc	5 71 9                  # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r12, %rcx
	vzeroupper
	callq	sort_quick_multi_h
.Ltmp1742:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: start <- $rbp
	.loc	5 70 31                 # ./quickomulti.h:70:31
	movslq	112(%rsp), %rax         # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rax,%rbp), %rbx
.Ltmp1743:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbp), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbp, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1744:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	%r15d, %rax
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1745:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1746:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	104(%rsp), %rax         # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1747:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1748:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	96(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1749:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1750:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	16(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1751:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1752:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	88(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%rbx,%rax), %r15
.Ltmp1753:
	#DEBUG_VALUE: end <- $r15
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1754:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: start <- $r15
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	80(%rsp), %rax          # 4-byte Folded Reload
	.loc	5 70 29 is_stmt 0       # ./quickomulti.h:70:29
	leaq	(%r15,%rax), %rbx
.Ltmp1755:
	#DEBUG_VALUE: end <- $rbx
	.loc	5 71 46 is_stmt 1       # ./quickomulti.h:71:46
	leaq	(%rax,%r15), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1756:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: start <- $rbx
	.loc	5 70 31 is_stmt 1       # ./quickomulti.h:70:31
	movslq	%r13d, %rax
.Ltmp1757:
	#DEBUG_VALUE: end <- undef
	.loc	5 71 46                 # ./quickomulti.h:71:46
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	5 71 9 is_stmt 0        # ./quickomulti.h:71:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	movq	%r12, %rcx
	callq	sort_quick_multi_h
.Ltmp1758:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: start <- undef
.LBB31_242:
	.loc	5 79 1 is_stmt 1        # ./quickomulti.h:79:1
	addq	$120, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp1759:
.Lfunc_end31:
	.size	sort_quick_multi_h, .Lfunc_end31-sort_quick_multi_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi        # -- Begin function sort_quick_multi
	.p2align	4, 0x90
	.type	sort_quick_multi,@function
sort_quick_multi:                       # @sort_quick_multi
.Lfunc_begin32:
	.loc	5 83 0                  # ./quickomulti.h:83:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp1760:
	#DEBUG_VALUE: sort_quick_multi:high <- $r14
	#DEBUG_VALUE: sort_quick_multi:low <- $r12
	#DEBUG_VALUE: sort_quick_multi:array <- $r15
	.loc	5 84 45 prologue_end    # ./quickomulti.h:84:45
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	5 84 52 is_stmt 0       # ./quickomulti.h:84:52
	shlq	$2, %rax
	leaq	(%rax,%rax,8), %rdi
	.loc	5 84 14                 # ./quickomulti.h:84:14
	callq	malloc
.Ltmp1761:
	movq	%rax, %rbx
.Ltmp1762:
	#DEBUG_VALUE: sort_quick_multi:tmp <- $rbx
	.loc	5 85 3 is_stmt 1        # ./quickomulti.h:85:3
	movq	%r15, %rdi
.Ltmp1763:
	#DEBUG_VALUE: sort_quick_multi:array <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_quick_multi_h
.Ltmp1764:
	.loc	5 86 3                  # ./quickomulti.h:86:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1765:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp1766:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1767:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp1768:
.Lfunc_end32:
	.size	sort_quick_multi, .Lfunc_end32-sort_quick_multi
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi_inplace # -- Begin function partition_quick_multi_inplace
	.p2align	4, 0x90
	.type	partition_quick_multi_inplace,@function
partition_quick_multi_inplace:          # @partition_quick_multi_inplace
.Lfunc_begin33:
	.file	25 "/home/peeters/bachelor" "./quickomultiinplace.h"
	.loc	25 20 0                 # ./quickomultiinplace.h:20:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $rcx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r13
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	subq	$48, %rsp
	.cfi_def_cfa_offset 96
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r13, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rcx, %r15
	movq	%rdx, %r14
	movq	%rsi, %r13
	movq	%rdi, %rbx
.Ltmp1769:
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:low <- $r13
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	.loc	25 21 20 prologue_end   # ./quickomultiinplace.h:21:20
	vmovdqu	(%rdi,%rsi,4), %ymm0
.Ltmp1770:
	#DEBUG_VALUE: partition_quick_multi_inplace:pivots <- undef
	.loc	25 0 20 is_stmt 0       # ./quickomultiinplace.h:0:20
	vmovdqu	%ymm0, (%rsp)           # 32-byte Spill
	.loc	25 22 40 is_stmt 1      # ./quickomultiinplace.h:22:40
	leaq	7(%rsi), %r12
	.loc	25 22 3 is_stmt 0       # ./quickomultiinplace.h:22:3
	movq	%r12, %rdx
	vzeroupper
	callq	sort_quick_optimized
.Ltmp1771:
	.loc	25 0 3                  # ./quickomultiinplace.h:0:3
	vmovdqu	(%rsp), %ymm2           # 32-byte Reload
.Ltmp1772:
	.loc	25 24 24 is_stmt 1      # ./quickomultiinplace.h:24:24
	addq	$8, %r13
.Ltmp1773:
	#DEBUG_VALUE: j <- $r13
	.loc	25 24 31 is_stmt 0      # ./quickomultiinplace.h:24:31
	cmpq	%r14, %r13
.Ltmp1774:
	.loc	25 24 3                 # ./quickomultiinplace.h:24:3
	jg	.LBB33_2
.Ltmp1775:
	.p2align	4, 0x90
.LBB33_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $r13
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	#DEBUG_VALUE: j <- undef
	.loc	25 26 46 is_stmt 1      # ./quickomultiinplace.h:26:46
	movl	4(%rbx,%r12,4), %ecx
	.loc	25 26 28 is_stmt 0      # ./quickomultiinplace.h:26:28
	vmovd	%ecx, %xmm0
	vpbroadcastd	%xmm0, %ymm0
.Ltmp1776:
	#DEBUG_VALUE: currentValue <- $ymm0
	.loc	25 27 24 is_stmt 1      # ./quickomultiinplace.h:27:24
	vpcmpgtd	%ymm0, %ymm2, %ymm0
.Ltmp1777:
	#DEBUG_VALUE: hsum_8x32:v <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	23 18 48                # ./simd.h:18:48
	vextracti128	$1, %ymm0, %xmm1
	.loc	23 18 7 is_stmt 0       # ./simd.h:18:7
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1778:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: hsum_8x32:sum128 <- undef
	.loc	23 10 19 is_stmt 1      # ./simd.h:10:19
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
	vpaddd	%xmm1, %xmm0, %xmm0
.Ltmp1779:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp1780:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1781:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %r8d
.Ltmp1782:
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	xorl	%esi, %esi
.Ltmp1783:
	.loc	25 29 23                # ./quickomultiinplace.h:29:23
	movl	%r8d, %eax
	addl	$8, %eax
.Ltmp1784:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: index <- $eax
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	sete	%sil
.Ltmp1785:
	#DEBUG_VALUE: x <- $ecx
	#DEBUG_VALUE: c <- $esi
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	(%r15), %rdi
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdi,4), %edi
.Ltmp1786:
	#DEBUG_VALUE: y <- $edi
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %edx
	cmovel	%edi, %edx
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edx, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovel	%ecx, %edi
.Ltmp1787:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	(%r15), %rcx
.Ltmp1788:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edi, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	addl	%esi, (%r15)
.Ltmp1789:
	#DEBUG_VALUE: i <- 1
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$2, %eax
.Ltmp1790:
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1791:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	4(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1792:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1793:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	4(%r15), %rcx
.Ltmp1794:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 4(%r15)
.Ltmp1795:
	#DEBUG_VALUE: i <- 2
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$3, %eax
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1796:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	8(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1797:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1798:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	8(%r15), %rcx
.Ltmp1799:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 8(%r15)
.Ltmp1800:
	#DEBUG_VALUE: i <- 3
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$4, %eax
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1801:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	12(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1802:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1803:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	12(%r15), %rcx
.Ltmp1804:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 12(%r15)
.Ltmp1805:
	#DEBUG_VALUE: i <- 4
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$5, %eax
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1806:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	16(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1807:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1808:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	16(%r15), %rcx
.Ltmp1809:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 16(%r15)
.Ltmp1810:
	#DEBUG_VALUE: i <- 5
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$6, %eax
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1811:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	20(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1812:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1813:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	20(%r15), %rcx
.Ltmp1814:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 20(%r15)
.Ltmp1815:
	#DEBUG_VALUE: i <- 6
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$7, %eax
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %ecx
.Ltmp1816:
	#DEBUG_VALUE: x <- $ecx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	24(%r15), %rdx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rdx,4), %edx
.Ltmp1817:
	#DEBUG_VALUE: y <- $edx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%ecx, %esi
	cmovbl	%edx, %esi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%esi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%ecx, %edx
.Ltmp1818:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	24(%r15), %rcx
.Ltmp1819:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%edx, (%rbx,%rcx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 24(%r15)
.Ltmp1820:
	#DEBUG_VALUE: i <- 7
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	xorl	%ecx, %ecx
	cmpl	$-9, %r8d
	seta	%cl
.Ltmp1821:
	#DEBUG_VALUE: c <- $ecx
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %edx
.Ltmp1822:
	#DEBUG_VALUE: x <- $edx
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	28(%r15), %rsi
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rsi,4), %esi
.Ltmp1823:
	#DEBUG_VALUE: y <- $esi
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%edx, %edi
	cmoval	%esi, %edi
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edi, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmoval	%edx, %esi
.Ltmp1824:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	28(%r15), %rdx
.Ltmp1825:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%esi, (%rbx,%rdx,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	addl	%ecx, 28(%r15)
.Ltmp1826:
	#DEBUG_VALUE: i <- 8
	.loc	25 33 17                # ./quickomultiinplace.h:33:17
	cmpl	$9, %eax
.Ltmp1827:
	#DEBUG_VALUE: c <- undef
	.loc	25 34 15                # ./quickomultiinplace.h:34:15
	movl	4(%rbx,%r12,4), %eax
.Ltmp1828:
	#DEBUG_VALUE: x <- $eax
	.loc	25 35 21                # ./quickomultiinplace.h:35:21
	movslq	32(%r15), %rcx
	.loc	25 35 15 is_stmt 0      # ./quickomultiinplace.h:35:15
	movl	(%rbx,%rcx,4), %ecx
.Ltmp1829:
	#DEBUG_VALUE: y <- $ecx
	.loc	25 36 18 is_stmt 1      # ./quickomultiinplace.h:36:18
	movl	%eax, %edx
	cmovbl	%ecx, %edx
	.loc	25 36 16 is_stmt 0      # ./quickomultiinplace.h:36:16
	movl	%edx, 4(%rbx,%r12,4)
	.loc	25 37 27 is_stmt 1      # ./quickomultiinplace.h:37:27
	cmovbl	%eax, %ecx
.Ltmp1830:
	.loc	25 37 13 is_stmt 0      # ./quickomultiinplace.h:37:13
	movslq	32(%r15), %rax
.Ltmp1831:
	.loc	25 37 25                # ./quickomultiinplace.h:37:25
	movl	%ecx, (%rbx,%rax,4)
	.loc	25 38 18 is_stmt 1      # ./quickomultiinplace.h:38:18
	adcl	$0, 32(%r15)
.Ltmp1832:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: i <- 9
	.loc	25 24 31                # ./quickomultiinplace.h:24:31
	incq	%r12
	cmpq	%r14, %r12
.Ltmp1833:
	.loc	25 24 3 is_stmt 0       # ./quickomultiinplace.h:24:3
	jl	.LBB33_1
.Ltmp1834:
.LBB33_2:
	#DEBUG_VALUE: partition_quick_multi_inplace:array <- $rbx
	#DEBUG_VALUE: partition_quick_multi_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_inplace:targets <- $r15
	.loc	25 41 1 is_stmt 1       # ./quickomultiinplace.h:41:1
	addq	$48, %rsp
	.cfi_def_cfa_offset 48
	popq	%rbx
.Ltmp1835:
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r13
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1836:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1837:
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1838:
.Lfunc_end33:
	.size	partition_quick_multi_inplace, .Lfunc_end33-partition_quick_multi_inplace
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function sort_quick_multi_inplace_h
.LCPI34_0:
	.long	1                       # 0x1
	.long	2                       # 0x2
	.long	3                       # 0x3
	.long	4                       # 0x4
	.long	5                       # 0x5
	.long	6                       # 0x6
	.long	7                       # 0x7
	.long	8                       # 0x8
	.text
	.globl	sort_quick_multi_inplace_h
	.p2align	4, 0x90
	.type	sort_quick_multi_inplace_h,@function
sort_quick_multi_inplace_h:             # @sort_quick_multi_inplace_h
.Lfunc_begin34:
	.loc	25 43 0                 # ./quickomultiinplace.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$48, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	25 45 11 prologue_end   # ./quickomultiinplace.h:45:11
	movq	%rdx, %rax
	subq	%rsi, %rax
.Ltmp1839:
	.loc	25 45 7 is_stmt 0       # ./quickomultiinplace.h:45:7
	jle	.LBB34_3
.Ltmp1840:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $rdi
	.loc	25 0 7                  # ./quickomultiinplace.h:0:7
	movq	%rsi, %rbx
.Ltmp1841:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	movq	%rdi, %r14
.Ltmp1842:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	.loc	25 46 20 is_stmt 1      # ./quickomultiinplace.h:46:20
	cmpq	$201, %rax
.Ltmp1843:
	.loc	25 46 9 is_stmt 0       # ./quickomultiinplace.h:46:9
	jl	.LBB34_4
.Ltmp1844:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	.loc	25 47 23 is_stmt 1      # ./quickomultiinplace.h:47:23
	movl	%ebx, (%rsp)
	.loc	25 47 29 is_stmt 0      # ./quickomultiinplace.h:47:29
	vmovd	%ebx, %xmm0
	vpbroadcastd	%xmm0, %ymm0
	vpaddd	.LCPI34_0(%rip), %ymm0, %ymm0
	.loc	25 47 23                # ./quickomultiinplace.h:47:23
	vmovdqu	%ymm0, 4(%rsp)
	movq	%rsp, %rcx
	.loc	25 48 7 is_stmt 1       # ./quickomultiinplace.h:48:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	vzeroupper
	callq	partition_quick_multi_inplace
.Ltmp1845:
	.loc	25 55 46                # ./quickomultiinplace.h:55:46
	movslq	(%rsp), %r15
	.loc	25 55 56 is_stmt 0      # ./quickomultiinplace.h:55:56
	leaq	-1(%r15), %rdx
	.loc	25 55 7                 # ./quickomultiinplace.h:55:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1846:
	#DEBUG_VALUE: index <- 1
	.loc	25 57 62 is_stmt 1      # ./quickomultiinplace.h:57:62
	movslq	4(%rsp), %rbx
.Ltmp1847:
	.loc	25 57 76 is_stmt 0      # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1848:
	#DEBUG_VALUE: index <- 2
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	8(%rsp), %r15
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1849:
	#DEBUG_VALUE: index <- 3
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	12(%rsp), %rbx
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1850:
	#DEBUG_VALUE: index <- 4
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	16(%rsp), %r15
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1851:
	#DEBUG_VALUE: index <- 5
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	20(%rsp), %rbx
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1852:
	#DEBUG_VALUE: index <- 6
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	24(%rsp), %r15
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%r15), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1853:
	#DEBUG_VALUE: index <- 7
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	28(%rsp), %rbx
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	leaq	-1(%rbx), %rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%r15, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1854:
	#DEBUG_VALUE: index <- 8
	.loc	25 57 62                # ./quickomultiinplace.h:57:62
	movslq	32(%rsp), %rdx
	.loc	25 57 76                # ./quickomultiinplace.h:57:76
	decq	%rdx
	.loc	25 57 9                 # ./quickomultiinplace.h:57:9
	movq	%r14, %rdi
	movq	%rbx, %rsi
	callq	sort_quick_multi_inplace_h
.Ltmp1855:
	#DEBUG_VALUE: index <- 9
.LBB34_3:
	.loc	25 64 1 is_stmt 1       # ./quickomultiinplace.h:64:1
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB34_4:
	.cfi_def_cfa_offset 80
.Ltmp1856:
	#DEBUG_VALUE: sort_quick_multi_inplace_h:array <- $r14
	#DEBUG_VALUE: sort_quick_multi_inplace_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multi_inplace_h:high <- $rdx
	.loc	25 60 7                 # ./quickomultiinplace.h:60:7
	movq	%r14, %rdi
	movq	%rbx, %rsi
	addq	$48, %rsp
	.cfi_def_cfa_offset 32
	popq	%rbx
.Ltmp1857:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp1858:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1859:
.Lfunc_end34:
	.size	sort_quick_multi_inplace_h, .Lfunc_end34-sort_quick_multi_inplace_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_inplace # -- Begin function sort_quick_multi_inplace
	.p2align	4, 0x90
	.type	sort_quick_multi_inplace,@function
sort_quick_multi_inplace:               # @sort_quick_multi_inplace
.Lfunc_begin35:
	.loc	25 66 0                 # ./quickomultiinplace.h:66:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_inplace:high <- $rdx
	.loc	25 67 47 prologue_end   # ./quickomultiinplace.h:67:47
	incq	%rdx
.Ltmp1860:
	#DEBUG_VALUE: sort_quick_multi_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_inplace:array <- $rdi
	.loc	25 67 3 is_stmt 0       # ./quickomultiinplace.h:67:3
	jmp	sort_quick_multi_inplace_h # TAILCALL
.Ltmp1861:
.Lfunc_end35:
	.size	sort_quick_multi_inplace, .Lfunc_end35-sort_quick_multi_inplace
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multix4 # -- Begin function partition_quick_multix4
	.p2align	4, 0x90
	.type	partition_quick_multix4,@function
partition_quick_multix4:                # @partition_quick_multix4
.Lfunc_begin36:
	.loc	6 20 0 is_stmt 1        # ./quickomultix4.h:20:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp1862:
	#DEBUG_VALUE: partition_quick_multix4:pivots <- undef
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	6 26 27 prologue_end    # ./quickomultix4.h:26:27
	movq	%rdx, %r9
	subq	%rsi, %r9
.Ltmp1863:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	.loc	6 26 3 is_stmt 0        # ./quickomultix4.h:26:3
	jle	.LBB36_3
.Ltmp1864:
# %bb.1:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	vmovdqu	(%rdi,%rsi,4), %xmm0
.Ltmp1865:
	.loc	6 26 3                  # ./quickomultix4.h:26:3
	vmovd	%xmm0, %r10d
	leaq	1(%rsi), %r11
.Ltmp1866:
	.p2align	4, 0x90
.LBB36_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	6 27 28 is_stmt 1       # ./quickomultix4.h:27:28
	vmovd	%r10d, %xmm1
	vpbroadcastd	%xmm1, %xmm1
.Ltmp1867:
	#DEBUG_VALUE: currentValue <- $xmm1
	.loc	6 28 24                 # ./quickomultix4.h:28:24
	vpcmpgtd	%xmm1, %xmm0, %xmm1
.Ltmp1868:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	#DEBUG_VALUE: hsum_epi32_avx:x <- undef
	#DEBUG_VALUE: compares <- undef
	.loc	23 10 19                # ./simd.h:10:19
	vpshufd	$238, %xmm1, %xmm2      # xmm2 = xmm1[2,3,2,3]
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1869:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm1
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm1, %xmm2      # xmm2 = xmm1[1,1,2,3]
.Ltmp1870:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm2
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm1, %xmm2, %xmm1
.Ltmp1871:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm1
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm1, %eax
.Ltmp1872:
	.loc	6 30 23                 # ./quickomultix4.h:30:23
	addl	$4, %eax
.Ltmp1873:
	#DEBUG_VALUE: index <- $rax
	.loc	6 31 9                  # ./quickomultix4.h:31:9
	movslq	(%rcx,%rax,4), %rbx
	.loc	6 31 25 is_stmt 0       # ./quickomultix4.h:31:25
	movl	%r10d, (%r8,%rbx,4)
	.loc	6 32 20 is_stmt 1       # ./quickomultix4.h:32:20
	incl	(%rcx,%rax,4)
.Ltmp1874:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	6 26 27                 # ./quickomultix4.h:26:27
	cmpq	%r11, %rdx
.Ltmp1875:
	.loc	6 26 3 is_stmt 0        # ./quickomultix4.h:26:3
	je	.LBB36_3
.Ltmp1876:
# %bb.5:                                #   in Loop: Header=BB36_2 Depth=1
	#DEBUG_VALUE: index <- $rax
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 27 43 is_stmt 1       # ./quickomultix4.h:27:43
	movl	(%rdi,%r11,4), %r10d
.Ltmp1877:
	.loc	6 26 3                  # ./quickomultix4.h:26:3
	incq	%r11
	jmp	.LBB36_2
.Ltmp1878:
.LBB36_3:
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movl	(%rcx), %eax
	.loc	6 39 14 is_stmt 0       # ./quickomultix4.h:39:14
	cmpl	$8, %eax
.Ltmp1879:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_4
.Ltmp1880:
# %bb.11:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	leaq	(%rdi,%rsi,4), %r10
	xorl	%edx, %edx
.Ltmp1881:
	.p2align	4, 0x90
.LBB36_12:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- undef
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%r10,%rdx,4)
.Ltmp1882:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- [DW_OP_plus_uconst 8, DW_OP_stack_value] undef
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1883:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1884:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_12
.Ltmp1885:
# %bb.6:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	addq	%rdx, %rsi
.Ltmp1886:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1887:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_8
	jmp	.LBB36_9
.Ltmp1888:
.LBB36_4:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: j <- 0
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:i <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:high <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:low <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	xorl	%edx, %edx
.Ltmp1889:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1890:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB36_9
.Ltmp1891:
	.p2align	4, 0x90
.LBB36_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1892:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1893:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1894:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_8
.Ltmp1895:
.LBB36_9:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	movl	%eax, (%rcx)
.Ltmp1896:
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: index <- 1
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	4(%rcx), %rdx
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rdx, %rax
	addq	$-7, %rax
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rax, %r9
.Ltmp1897:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB36_10
.Ltmp1898:
# %bb.13:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r9, %rax
.Ltmp1899:
	.p2align	4, 0x90
.LBB36_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rax,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1900:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rax
.Ltmp1901:
	#DEBUG_VALUE: j <- $rax
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	4(%rcx), %rdx
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rdx), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rax
.Ltmp1902:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_14
.Ltmp1903:
# %bb.15:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%edx, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rax
.Ltmp1904:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB36_17
.Ltmp1905:
	.p2align	4, 0x90
.LBB36_16:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rax,4), %edx
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%edx, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1906:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rax
.Ltmp1907:
	#DEBUG_VALUE: j <- $rax
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	4(%rcx), %rdx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rdx, %rax
.Ltmp1908:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_16
.Ltmp1909:
.LBB36_17:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r9d, %edx
	movl	%edx, 4(%rcx)
.Ltmp1910:
	#DEBUG_VALUE: index <- 2
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	leaq	(%r9,%r9), %r10
.Ltmp1911:
	#DEBUG_VALUE: j <- $r10
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	8(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r10
.Ltmp1912:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB36_18
.Ltmp1913:
# %bb.19:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r10, %rdx
.Ltmp1914:
	.p2align	4, 0x90
.LBB36_20:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1915:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1916:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	8(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1917:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_20
.Ltmp1918:
# %bb.21:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1919:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB36_23
.Ltmp1920:
	.p2align	4, 0x90
.LBB36_22:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1921:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1922:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	8(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1923:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_22
.Ltmp1924:
.LBB36_23:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r10d, %eax
	movl	%eax, 8(%rcx)
.Ltmp1925:
	#DEBUG_VALUE: index <- 3
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	leaq	(%r9,%r9,2), %r10
.Ltmp1926:
	#DEBUG_VALUE: j <- $r10
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	12(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r10
.Ltmp1927:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB36_24
.Ltmp1928:
# %bb.25:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r10, %rdx
.Ltmp1929:
	.p2align	4, 0x90
.LBB36_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1930:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1931:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	12(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1932:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_26
.Ltmp1933:
# %bb.27:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1934:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB36_29
.Ltmp1935:
	.p2align	4, 0x90
.LBB36_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rdi,%rsi,4)
	.loc	6 46 17 is_stmt 1       # ./quickomultix4.h:46:17
	incq	%rsi
.Ltmp1936:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 33                 # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1937:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	12(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rax, %rdx
.Ltmp1938:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_28
.Ltmp1939:
.LBB36_29:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r10d, %eax
	movl	%eax, 12(%rcx)
.Ltmp1940:
	#DEBUG_VALUE: index <- 4
	.loc	6 38 23                 # ./quickomultix4.h:38:23
	shlq	$2, %r9
.Ltmp1941:
	#DEBUG_VALUE: j <- $r9
	.loc	6 39 16                 # ./quickomultix4.h:39:16
	movslq	16(%rcx), %rax
	.loc	6 39 31 is_stmt 0       # ./quickomultix4.h:39:31
	movq	%rax, %rdx
	addq	$-7, %rdx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rdx, %r9
.Ltmp1942:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jge	.LBB36_30
.Ltmp1943:
# %bb.31:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 5                   # ./quickomultix4.h:0:5
	movq	%r9, %rdx
.Ltmp1944:
	.p2align	4, 0x90
.LBB36_32:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 41 27 is_stmt 1       # ./quickomultix4.h:41:27
	vmovdqu	(%r8,%rdx,4), %ymm0
	.loc	6 40 7                  # ./quickomultix4.h:40:7
	vmovdqu	%ymm0, (%rdi,%rsi,4)
	.loc	6 42 18                 # ./quickomultix4.h:42:18
	addq	$8, %rsi
.Ltmp1945:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 39 38                 # ./quickomultix4.h:39:38
	addq	$8, %rdx
.Ltmp1946:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 39 16 is_stmt 0       # ./quickomultix4.h:39:16
	movslq	16(%rcx), %rax
	.loc	6 39 31                 # ./quickomultix4.h:39:31
	leaq	-7(%rax), %rbx
	.loc	6 39 14                 # ./quickomultix4.h:39:14
	cmpq	%rbx, %rdx
.Ltmp1947:
	.loc	6 39 5                  # ./quickomultix4.h:39:5
	jl	.LBB36_32
.Ltmp1948:
# %bb.33:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16 is_stmt 1       # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14 is_stmt 0       # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1949:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_34
	jmp	.LBB36_36
.Ltmp1950:
.LBB36_10:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r9, %rax
.Ltmp1951:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%edx, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rax
.Ltmp1952:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_16
	jmp	.LBB36_17
.Ltmp1953:
.LBB36_18:
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r10, %rdx
.Ltmp1954:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1955:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_22
	jmp	.LBB36_23
.Ltmp1956:
.LBB36_24:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: j <- $r10
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:size <- $r9
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r10, %rdx
.Ltmp1957:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1958:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_28
	jmp	.LBB36_29
.Ltmp1959:
.LBB36_30:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $r9
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 0 0                   # ./quickomultix4.h:0:0
	movq	%r9, %rdx
.Ltmp1960:
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	.loc	6 44 16                 # ./quickomultix4.h:44:16
	movslq	%eax, %rbx
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	cmpq	%rbx, %rdx
.Ltmp1961:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jge	.LBB36_36
.Ltmp1962:
.LBB36_34:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- $rsi
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	leaq	(%rdi,%rsi,4), %rsi
.Ltmp1963:
	.p2align	4, 0x90
.LBB36_35:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- undef
	.loc	6 45 27 is_stmt 1       # ./quickomultix4.h:45:27
	movl	(%r8,%rdx,4), %eax
	.loc	6 45 25 is_stmt 0       # ./quickomultix4.h:45:25
	movl	%eax, (%rsi)
.Ltmp1964:
	#DEBUG_VALUE: partition_quick_multix4:arrayIndex <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	6 44 33 is_stmt 1       # ./quickomultix4.h:44:33
	incq	%rdx
.Ltmp1965:
	#DEBUG_VALUE: j <- $rdx
	.loc	6 44 16 is_stmt 0       # ./quickomultix4.h:44:16
	movslq	16(%rcx), %rax
	.loc	6 44 14                 # ./quickomultix4.h:44:14
	addq	$4, %rsi
	cmpq	%rax, %rdx
.Ltmp1966:
	.loc	6 44 5                  # ./quickomultix4.h:44:5
	jl	.LBB36_35
.Ltmp1967:
.LBB36_36:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multix4:tmp <- $r8
	#DEBUG_VALUE: partition_quick_multix4:targets <- $rcx
	#DEBUG_VALUE: partition_quick_multix4:array <- $rdi
	.loc	6 48 20 is_stmt 1       # ./quickomultix4.h:48:20
	subl	%r9d, %eax
	movl	%eax, 16(%rcx)
.Ltmp1968:
	#DEBUG_VALUE: index <- 5
	.loc	6 50 1                  # ./quickomultix4.h:50:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	vzeroupper
	retq
.Ltmp1969:
.Lfunc_end36:
	.size	partition_quick_multix4, .Lfunc_end36-partition_quick_multix4
	.cfi_endproc
                                        # -- End function
	.globl	hsum_epi32_avx          # -- Begin function hsum_epi32_avx
	.p2align	4, 0x90
	.type	hsum_epi32_avx,@function
hsum_epi32_avx:                         # @hsum_epi32_avx
.Lfunc_begin37:
	.loc	23 8 0                  # ./simd.h:8:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: hsum_epi32_avx:x <- $xmm0
	#DEBUG_VALUE: hsum_epi32_avx:x <- $xmm0
	.loc	23 9 18 prologue_end    # ./simd.h:9:18
	vpshufd	$238, %xmm0, %xmm1      # xmm1 = xmm0[2,3,2,3]
.Ltmp1970:
	#DEBUG_VALUE: hsum_epi32_avx:hi64 <- undef
	.loc	23 10 19                # ./simd.h:10:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1971:
	#DEBUG_VALUE: hsum_epi32_avx:sum64 <- $xmm0
	.loc	23 11 18                # ./simd.h:11:18
	vpshufd	$229, %xmm0, %xmm1      # xmm1 = xmm0[1,1,2,3]
.Ltmp1972:
	#DEBUG_VALUE: hsum_epi32_avx:hi32 <- $xmm1
	.loc	23 12 19                # ./simd.h:12:19
	vpaddd	%xmm0, %xmm1, %xmm0
.Ltmp1973:
	#DEBUG_VALUE: hsum_epi32_avx:sum32 <- $xmm0
	.loc	23 13 10                # ./simd.h:13:10
	vmovd	%xmm0, %eax
	.loc	23 13 3 is_stmt 0       # ./simd.h:13:3
	retq
.Ltmp1974:
.Lfunc_end37:
	.size	hsum_epi32_avx, .Lfunc_end37-hsum_epi32_avx
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multix4_h    # -- Begin function sort_quick_multix4_h
	.p2align	4, 0x90
	.type	sort_quick_multix4_h,@function
sort_quick_multix4_h:                   # @sort_quick_multix4_h
.Lfunc_begin38:
	.loc	6 52 0 is_stmt 1        # ./quickomultix4.h:52:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	subq	$24, %rsp
	.cfi_def_cfa_offset 64
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	6 53 11 prologue_end    # ./quickomultix4.h:53:11
	movq	%rdx, %rax
	subq	%rsi, %rax
.Ltmp1975:
	.loc	6 53 7 is_stmt 0        # ./quickomultix4.h:53:7
	jle	.LBB38_3
.Ltmp1976:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	.loc	6 0 7                   # ./quickomultix4.h:0:7
	movq	%rsi, %rbx
.Ltmp1977:
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	movq	%rdi, %r15
.Ltmp1978:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	.loc	6 54 20 is_stmt 1       # ./quickomultix4.h:54:20
	cmpq	$41, %rax
.Ltmp1979:
	.loc	6 54 9 is_stmt 0        # ./quickomultix4.h:54:9
	jl	.LBB38_4
.Ltmp1980:
# %bb.2:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	.loc	6 0 9                   # ./quickomultix4.h:0:9
	movq	%rcx, %r14
.Ltmp1981:
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $r14
	.loc	6 55 18 is_stmt 1       # ./quickomultix4.h:55:18
	leal	1(%rax), %ecx
.Ltmp1982:
	#DEBUG_VALUE: size <- $ecx
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	$0, (%rsp)
	movl	%ecx, 4(%rsp)
	.loc	6 56 42 is_stmt 0       # ./quickomultix4.h:56:42
	leal	(%rax,%rax), %esi
	addl	$2, %esi
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%esi, 8(%rsp)
	.loc	6 56 52                 # ./quickomultix4.h:56:52
	leal	(%rcx,%rcx,2), %ecx
.Ltmp1983:
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%ecx, 12(%rsp)
	.loc	6 56 62                 # ./quickomultix4.h:56:62
	leal	4(,%rax,4), %eax
	.loc	6 56 23                 # ./quickomultix4.h:56:23
	movl	%eax, 16(%rsp)
	.loc	6 57 48 is_stmt 1       # ./quickomultix4.h:57:48
	incq	%rdx
.Ltmp1984:
	.loc	6 0 48 is_stmt 0        # ./quickomultix4.h:0:48
	movq	%rsp, %rcx
	.loc	6 57 7                  # ./quickomultix4.h:57:7
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %r8
	callq	partition_quick_multix4
.Ltmp1985:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	(%rsp), %r12
	.loc	6 63 48                 # ./quickomultix4.h:63:48
	leaq	(%r12,%rbx), %rdx
	decq	%rdx
	.loc	6 62 29                 # ./quickomultix4.h:62:29
	addq	%rbx, %r12
.Ltmp1986:
	#DEBUG_VALUE: end <- $r12
	.loc	6 63 9                  # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp1987:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: start <- $r12
	.loc	6 62 31                 # ./quickomultix4.h:62:31
	movslq	4(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%r12,%rax), %rbx
.Ltmp1988:
	#DEBUG_VALUE: end <- $rbx
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%r12), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp1989:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	8(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%rbx,%rax), %r12
.Ltmp1990:
	#DEBUG_VALUE: end <- $r12
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp1991:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: start <- $r12
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	12(%rsp), %rax
	.loc	6 62 29 is_stmt 0       # ./quickomultix4.h:62:29
	leaq	(%r12,%rax), %rbx
.Ltmp1992:
	#DEBUG_VALUE: end <- $rbx
	.loc	6 63 48 is_stmt 1       # ./quickomultix4.h:63:48
	leaq	(%rax,%r12), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp1993:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: start <- $rbx
	.loc	6 62 31 is_stmt 1       # ./quickomultix4.h:62:31
	movslq	16(%rsp), %rax
.Ltmp1994:
	#DEBUG_VALUE: end <- undef
	.loc	6 63 48                 # ./quickomultix4.h:63:48
	leaq	(%rax,%rbx), %rdx
	decq	%rdx
	.loc	6 63 9 is_stmt 0        # ./quickomultix4.h:63:9
	movq	%r15, %rdi
	movq	%rbx, %rsi
	movq	%r14, %rcx
	callq	sort_quick_multix4_h
.Ltmp1995:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: start <- undef
.LBB38_3:
	.loc	6 70 1 is_stmt 1        # ./quickomultix4.h:70:1
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.LBB38_4:
	.cfi_def_cfa_offset 64
.Ltmp1996:
	#DEBUG_VALUE: sort_quick_multix4_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multix4_h:low <- $rbx
	#DEBUG_VALUE: sort_quick_multix4_h:tmp <- $rcx
	#DEBUG_VALUE: sort_quick_multix4_h:high <- $rdx
	.loc	6 67 7                  # ./quickomultix4.h:67:7
	movq	%r15, %rdi
	movq	%rbx, %rsi
	addq	$24, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp1997:
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp1998:
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp1999:
.Lfunc_end38:
	.size	sort_quick_multix4_h, .Lfunc_end38-sort_quick_multix4_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multix4      # -- Begin function sort_quick_multix4
	.p2align	4, 0x90
	.type	sort_quick_multix4,@function
sort_quick_multix4:                     # @sort_quick_multix4
.Lfunc_begin39:
	.loc	6 72 0                  # ./quickomultix4.h:72:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multix4:array <- $rdi
	#DEBUG_VALUE: sort_quick_multix4:low <- $rsi
	#DEBUG_VALUE: sort_quick_multix4:high <- $rdx
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	movq	%rdx, %r14
	movq	%rsi, %r12
	movq	%rdi, %r15
.Ltmp2000:
	#DEBUG_VALUE: sort_quick_multix4:high <- $r14
	#DEBUG_VALUE: sort_quick_multix4:low <- $r12
	#DEBUG_VALUE: sort_quick_multix4:array <- $r15
	.loc	6 73 45 prologue_end    # ./quickomultix4.h:73:45
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	6 73 52 is_stmt 0       # ./quickomultix4.h:73:52
	shlq	$2, %rax
	leaq	(%rax,%rax,4), %rdi
	.loc	6 73 14                 # ./quickomultix4.h:73:14
	callq	malloc
.Ltmp2001:
	movq	%rax, %rbx
.Ltmp2002:
	#DEBUG_VALUE: sort_quick_multix4:tmp <- $rbx
	.loc	6 74 3 is_stmt 1        # ./quickomultix4.h:74:3
	movq	%r15, %rdi
.Ltmp2003:
	#DEBUG_VALUE: sort_quick_multix4:array <- $rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	movq	%rax, %rcx
	callq	sort_quick_multix4_h
.Ltmp2004:
	.loc	6 75 3                  # ./quickomultix4.h:75:3
	movq	%rbx, %rdi
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
.Ltmp2005:
	.cfi_def_cfa_offset 32
	popq	%r12
.Ltmp2006:
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2007:
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp2008:
.Lfunc_end39:
	.size	sort_quick_multix4, .Lfunc_end39-sort_quick_multix4
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_multi_x4_inplace # -- Begin function partition_quick_multi_x4_inplace
	.p2align	4, 0x90
	.type	partition_quick_multi_x4_inplace,@function
partition_quick_multi_x4_inplace:       # @partition_quick_multi_x4_inplace
.Lfunc_begin40:
	.file	26 "/home/peeters/bachelor" "./quickomultix4inplace.h"
	.loc	26 23 0                 # ./quickomultix4inplace.h:23:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	.loc	4 26 11 prologue_end    # ./median.h:26:11
	movl	(%rdi,%rsi,4), %r11d
.Ltmp2009:
	#DEBUG_VALUE: sort_pair:x <- $r11d
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%rdi,%rsi,4), %r10d
.Ltmp2010:
	#DEBUG_VALUE: sort_pair:y <- $r10d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r10d, %r11d
.Ltmp2011:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r10d, %r9d
	cmovll	%r11d, %r9d
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%r9d, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r10d, %r11d
.Ltmp2012:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%r11d, 4(%rdi,%rsi,4)
.Ltmp2013:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	.loc	26 44 24 is_stmt 1      # ./quickomultix4inplace.h:44:24
	leaq	2(%rsi), %rax
.Ltmp2014:
	#DEBUG_VALUE: j <- $rax
	.loc	26 44 31 is_stmt 0      # ./quickomultix4inplace.h:44:31
	cmpq	%rdx, %rax
.Ltmp2015:
	.loc	26 44 3                 # ./quickomultix4inplace.h:44:3
	jg	.LBB40_3
.Ltmp2016:
# %bb.1:
	#DEBUG_VALUE: j <- $rax
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	incq	%rsi
.Ltmp2017:
	.p2align	4, 0x90
.LBB40_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: j <- undef
	.loc	26 45 13 is_stmt 1      # ./quickomultix4inplace.h:45:13
	movl	4(%rdi,%rsi,4), %eax
.Ltmp2018:
	#DEBUG_VALUE: x <- $eax
	.loc	26 52 19                # ./quickomultix4inplace.h:52:19
	movslq	(%rcx), %r10
	.loc	26 52 13 is_stmt 0      # ./quickomultix4inplace.h:52:13
	movl	(%rdi,%r10,4), %r14d
.Ltmp2019:
	#DEBUG_VALUE: a <- $r14d
	.loc	26 53 15 is_stmt 1      # ./quickomultix4inplace.h:53:15
	xorl	%ebp, %ebp
	cmpl	%r9d, %eax
	setl	%bpl
.Ltmp2020:
	#DEBUG_VALUE: c <- $ebp
	.loc	26 54 18                # ./quickomultix4inplace.h:54:18
	movl	%r14d, %ebx
	cmovll	%eax, %ebx
	.loc	26 54 16 is_stmt 0      # ./quickomultix4inplace.h:54:16
	movl	%ebx, (%rdi,%r10,4)
	.loc	26 55 9 is_stmt 1       # ./quickomultix4inplace.h:55:9
	cmovll	%r14d, %eax
.Ltmp2021:
	#DEBUG_VALUE: x <- $eax
	.loc	26 56 9                 # ./quickomultix4inplace.h:56:9
	addl	%ebp, (%rcx)
	.loc	26 58 15                # ./quickomultix4inplace.h:58:15
	movslq	(%r8), %r14
.Ltmp2022:
	.loc	26 58 9 is_stmt 0       # ./quickomultix4inplace.h:58:9
	movl	(%rdi,%r14,4), %r10d
.Ltmp2023:
	#DEBUG_VALUE: a <- $r10d
	.loc	26 59 11 is_stmt 1      # ./quickomultix4inplace.h:59:11
	xorl	%ebx, %ebx
	cmpl	%r11d, %eax
	setl	%bl
.Ltmp2024:
	#DEBUG_VALUE: c <- $ebx
	.loc	26 60 18                # ./quickomultix4inplace.h:60:18
	movl	%r10d, %ebp
	cmovll	%eax, %ebp
	.loc	26 60 16 is_stmt 0      # ./quickomultix4inplace.h:60:16
	movl	%ebp, (%rdi,%r14,4)
	.loc	26 61 9 is_stmt 1       # ./quickomultix4inplace.h:61:9
	cmovll	%r10d, %eax
.Ltmp2025:
	#DEBUG_VALUE: x <- $eax
	.loc	26 62 9                 # ./quickomultix4inplace.h:62:9
	addl	%ebx, (%r8)
	.loc	26 76 14                # ./quickomultix4inplace.h:76:14
	movl	%eax, 4(%rdi,%rsi,4)
.Ltmp2026:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	26 44 31                # ./quickomultix4inplace.h:44:31
	incq	%rsi
	cmpq	%rdx, %rsi
.Ltmp2027:
	.loc	26 44 3 is_stmt 0       # ./quickomultix4inplace.h:44:3
	jl	.LBB40_2
.Ltmp2028:
.LBB40_3:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r11d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t1 <- $r8
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:t0 <- $rcx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $rdi
	.loc	26 78 1 is_stmt 1       # ./quickomultix4inplace.h:78:1
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2029:
.Lfunc_end40:
	.size	partition_quick_multi_x4_inplace, .Lfunc_end40-partition_quick_multi_x4_inplace
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_x4_inplace_h # -- Begin function sort_quick_multi_x4_inplace_h
	.p2align	4, 0x90
	.type	sort_quick_multi_x4_inplace_h,@function
sort_quick_multi_x4_inplace_h:          # @sort_quick_multi_x4_inplace_h
.Lfunc_begin41:
	.loc	26 80 0                 # ./quickomultix4inplace.h:80:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	26 82 11 prologue_end   # ./quickomultix4inplace.h:82:11
	cmpq	%rsi, %rdx
.Ltmp2030:
	.loc	26 82 7 is_stmt 0       # ./quickomultix4inplace.h:82:7
	jle	.LBB41_8
.Ltmp2031:
# %bb.1:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $rdi
	.loc	26 0 7                  # ./quickomultix4inplace.h:0:7
	movq	%rdx, %r14
.Ltmp2032:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	movq	%rdi, %r15
.Ltmp2033:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	jmp	.LBB41_2
.Ltmp2034:
	.p2align	4, 0x90
.LBB41_4:                               #   in Loop: Header=BB41_2 Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: t1 <- $r12d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	movl	%esi, %ebx
.Ltmp2035:
.LBB41_7:                               #   in Loop: Header=BB41_2 Depth=1
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: t0 <- $ebx
	.loc	26 96 52 is_stmt 1      # ./quickomultix4inplace.h:96:52
	leal	-1(%rbx), %eax
	.loc	26 96 49 is_stmt 0      # ./quickomultix4inplace.h:96:49
	movslq	%eax, %rdx
	.loc	26 96 7                 # ./quickomultix4inplace.h:96:7
	movq	%r15, %rdi
	callq	sort_quick_multi_x4_inplace_h
.Ltmp2036:
	.loc	26 97 44 is_stmt 1      # ./quickomultix4inplace.h:97:44
	movslq	%ebx, %rsi
.Ltmp2037:
	#DEBUG_VALUE: t1 <- $r12d
	.loc	26 97 51 is_stmt 0      # ./quickomultix4inplace.h:97:51
	leal	-1(%r12), %eax
	.loc	26 97 48                # ./quickomultix4inplace.h:97:48
	movslq	%eax, %rdx
	.loc	26 97 7                 # ./quickomultix4inplace.h:97:7
	movq	%r15, %rdi
	callq	sort_quick_multi_x4_inplace_h
.Ltmp2038:
	.loc	26 101 44 is_stmt 1     # ./quickomultix4inplace.h:101:44
	movslq	%r12d, %rsi
.Ltmp2039:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	26 82 11                # ./quickomultix4inplace.h:82:11
	cmpq	%r14, %rsi
.Ltmp2040:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- undef
	.loc	26 82 7 is_stmt 0       # ./quickomultix4inplace.h:82:7
	jge	.LBB41_8
.Ltmp2041:
.LBB41_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB41_6 Depth 2
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	26 83 14 is_stmt 1      # ./quickomultix4inplace.h:83:14
	movq	%r14, %rax
	subq	%rsi, %rax
	.loc	26 83 20 is_stmt 0      # ./quickomultix4inplace.h:83:20
	cmpq	$1001, %rax             # imm = 0x3E9
.Ltmp2042:
	.loc	26 83 9                 # ./quickomultix4inplace.h:83:9
	jl	.LBB41_9
.Ltmp2043:
# %bb.3:                                #   in Loop: Header=BB41_2 Depth=1
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: t0 <- $esi
	.loc	26 86 16 is_stmt 1      # ./quickomultix4inplace.h:86:16
	leal	1(%rsi), %r12d
.Ltmp2044:
	#DEBUG_VALUE: sort_pair:i2 <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: t1 <- $r12d
	.loc	4 26 11                 # ./median.h:26:11
	movl	(%r15,%rsi,4), %edx
.Ltmp2045:
	#DEBUG_VALUE: sort_pair:x <- $edx
	.loc	4 27 11                 # ./median.h:27:11
	movl	4(%r15,%rsi,4), %r9d
.Ltmp2046:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2047:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r8d
	cmovll	%edx, %r8d
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%r8d, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2048:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%r9d, 4(%r15,%rsi,4)
.Ltmp2049:
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	.loc	26 44 24 is_stmt 1      # ./quickomultix4inplace.h:44:24
	leaq	2(%rsi), %rdx
.Ltmp2050:
	#DEBUG_VALUE: j <- $rdx
	.loc	26 44 31 is_stmt 0      # ./quickomultix4inplace.h:44:31
	cmpq	%r14, %rdx
.Ltmp2051:
	.loc	26 44 3                 # ./quickomultix4inplace.h:44:3
	jg	.LBB41_4
.Ltmp2052:
# %bb.5:                                #   in Loop: Header=BB41_2 Depth=1
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: t1 <- $r12d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	leaq	1(%rsi), %rdx
.Ltmp2053:
	.loc	26 0 0                  # ./quickomultix4inplace.h:0:0
	movl	%esi, %ebx
.Ltmp2054:
	.p2align	4, 0x90
.LBB41_6:                               #   Parent Loop BB41_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p2 <- $r9d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:p1 <- $r8d
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:array <- $r15
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: partition_quick_multi_x4_inplace:high <- $r14
	#DEBUG_VALUE: t0 <- $esi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: j <- undef
	.loc	26 45 13 is_stmt 1      # ./quickomultix4inplace.h:45:13
	movl	4(%r15,%rdx,4), %edi
.Ltmp2055:
	#DEBUG_VALUE: x <- $edi
	.loc	26 52 13                # ./quickomultix4inplace.h:52:13
	movslq	%ebx, %rbx
	movl	(%r15,%rbx,4), %r10d
.Ltmp2056:
	#DEBUG_VALUE: a <- $r10d
	.loc	26 53 15                # ./quickomultix4inplace.h:53:15
	xorl	%eax, %eax
	cmpl	%r8d, %edi
	setl	%al
.Ltmp2057:
	#DEBUG_VALUE: c <- $eax
	.loc	26 54 18                # ./quickomultix4inplace.h:54:18
	movl	%r10d, %ecx
	cmovll	%edi, %ecx
	.loc	26 54 16 is_stmt 0      # ./quickomultix4inplace.h:54:16
	movl	%ecx, (%r15,%rbx,4)
	.loc	26 55 9 is_stmt 1       # ./quickomultix4inplace.h:55:9
	cmovll	%r10d, %edi
.Ltmp2058:
	#DEBUG_VALUE: x <- $edi
	.loc	26 56 9                 # ./quickomultix4inplace.h:56:9
	addl	%eax, %ebx
	.loc	26 58 9                 # ./quickomultix4inplace.h:58:9
	movslq	%r12d, %r12
	movl	(%r15,%r12,4), %r10d
.Ltmp2059:
	#DEBUG_VALUE: a <- $r10d
	.loc	26 59 11                # ./quickomultix4inplace.h:59:11
	xorl	%ecx, %ecx
	cmpl	%r9d, %edi
	setl	%cl
.Ltmp2060:
	#DEBUG_VALUE: c <- $ecx
	.loc	26 60 18                # ./quickomultix4inplace.h:60:18
	movl	%r10d, %eax
	cmovll	%edi, %eax
	.loc	26 60 16 is_stmt 0      # ./quickomultix4inplace.h:60:16
	movl	%eax, (%r15,%r12,4)
	.loc	26 61 9 is_stmt 1       # ./quickomultix4inplace.h:61:9
	cmovll	%r10d, %edi
.Ltmp2061:
	#DEBUG_VALUE: x <- $edi
	.loc	26 62 9                 # ./quickomultix4inplace.h:62:9
	addl	%ecx, %r12d
	.loc	26 76 14                # ./quickomultix4inplace.h:76:14
	movl	%edi, 4(%r15,%rdx,4)
.Ltmp2062:
	#DEBUG_VALUE: j <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	26 44 31                # ./quickomultix4inplace.h:44:31
	incq	%rdx
	cmpq	%r14, %rdx
.Ltmp2063:
	.loc	26 44 3 is_stmt 0       # ./quickomultix4inplace.h:44:3
	jl	.LBB41_6
	jmp	.LBB41_7
.Ltmp2064:
.LBB41_8:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	26 107 1 is_stmt 1      # ./quickomultix4inplace.h:107:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp2065:
.LBB41_9:
	.cfi_def_cfa_offset 48
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:array <- $r15
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:high <- $r14
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace_h:low <- $rsi
	.loc	26 103 7                # ./quickomultix4inplace.h:103:7
	movq	%r15, %rdi
	movq	%r14, %rdx
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
.Ltmp2066:
	.cfi_def_cfa_offset 16
	popq	%r15
.Ltmp2067:
	.cfi_def_cfa_offset 8
	jmp	sort_quick_optimized    # TAILCALL
.Ltmp2068:
.Lfunc_end41:
	.size	sort_quick_multi_x4_inplace_h, .Lfunc_end41-sort_quick_multi_x4_inplace_h
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_multi_x4_inplace # -- Begin function sort_quick_multi_x4_inplace
	.p2align	4, 0x90
	.type	sort_quick_multi_x4_inplace,@function
sort_quick_multi_x4_inplace:            # @sort_quick_multi_x4_inplace
.Lfunc_begin42:
	.loc	26 109 0                # ./quickomultix4inplace.h:109:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:high <- $rdx
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:high <- $rdx
	.loc	26 110 50 prologue_end  # ./quickomultix4inplace.h:110:50
	incq	%rdx
.Ltmp2069:
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:low <- $rsi
	#DEBUG_VALUE: sort_quick_multi_x4_inplace:array <- $rdi
	.loc	26 110 3 is_stmt 0      # ./quickomultix4inplace.h:110:3
	jmp	sort_quick_multi_x4_inplace_h # TAILCALL
.Ltmp2070:
.Lfunc_end42:
	.size	sort_quick_multi_x4_inplace, .Lfunc_end42-sort_quick_multi_x4_inplace
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_simd    # -- Begin function partition_quick_simd
	.p2align	4, 0x90
	.type	partition_quick_simd,@function
partition_quick_simd:                   # @partition_quick_simd
.Lfunc_begin43:
	.file	27 "/home/peeters/bachelor" "./quickosimd.h"
	.loc	27 23 0 is_stmt 1       # ./quickosimd.h:23:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- undef
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset %rbp, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register %rbp
.Ltmp2071:
	pushq	%r15
	pushq	%r14
	pushq	%rbx
	andq	$-32, %rsp
	subq	$64, %rsp
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
.Ltmp2072:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2073:
	#DEBUG_VALUE: partition_quick_simd:zeros <- undef
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB43_2
.Ltmp2074:
# %bb.1:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2075:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2076:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2077:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2078:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2079:
	.loc	27 28 17 is_stmt 1      # ./quickosimd.h:28:17
	addq	%rsi, %rdx
.Ltmp2080:
	.loc	27 28 25 is_stmt 0      # ./quickosimd.h:28:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
	jmp	.LBB43_12
.Ltmp2081:
.LBB43_2:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2082:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2083:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r9d
.Ltmp2084:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2085:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ecx
.Ltmp2086:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r9d, %ecx
.Ltmp2087:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2088:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r9d
.Ltmp2089:
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2090:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ebx
.Ltmp2091:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r11d
.Ltmp2092:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r9d
.Ltmp2093:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2094:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2095:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB43_4
.Ltmp2096:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%rdi,%r10,4)
.Ltmp2097:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2098:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB43_12
.Ltmp2099:
.LBB43_4:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp2100:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2101:
	#DEBUG_VALUE: partition_quick_simd:p <- undef
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	.loc	27 33 19                # ./quickosimd.h:33:19
	leaq	-7(%rdx), %r8
	.loc	27 33 12 is_stmt 0      # ./quickosimd.h:33:12
	cmpq	%rsi, %r8
.Ltmp2102:
	.loc	27 33 3                 # ./quickosimd.h:33:3
	jle	.LBB43_5
.Ltmp2103:
# %bb.13:
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	27 0 3                  # ./quickosimd.h:0:3
	vmovd	%r9d, %xmm0
	vpbroadcastd	%xmm0, %ymm0
.Ltmp2104:
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	movq	%rsi, %r15
.Ltmp2105:
	.p2align	4, 0x90
.LBB43_14:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: values <- undef
	.loc	27 36 18 is_stmt 1      # ./quickosimd.h:36:18
	vpcmpgtd	(%rdi,%r15,4), %ymm0, %ymm1
	vpsrld	$31, %ymm1, %ymm1
.Ltmp2106:
	#DEBUG_VALUE: cs <- $ymm1
	.loc	27 44 15                # ./quickosimd.h:44:15
	vmovdqu	(%rdi,%r15,4), %xmm2
.Ltmp2107:
	.loc	27 39 5                 # ./quickosimd.h:39:5
	vmovdqa	%ymm1, (%rsp)
.Ltmp2108:
	#DEBUG_VALUE: k <- 0
	.loc	27 42 15                # ./quickosimd.h:42:15
	vmovd	%xmm1, %ecx
.Ltmp2109:
	#DEBUG_VALUE: c <- $ecx
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rsi,4), %r10d
.Ltmp2110:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	vmovd	%xmm2, %ebx
.Ltmp2111:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%ecx, %ecx
	movl	%r10d, %eax
	cmovnel	%ebx, %eax
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%eax, (%rdi,%rsi,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ebx
.Ltmp2112:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, (%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%rsi, %rcx
.Ltmp2113:
	#DEBUG_VALUE: k <- 1
	#DEBUG_VALUE: partition_quick_simd:i <- $rcx
	.loc	27 42 15                # ./quickosimd.h:42:15
	vpextrd	$1, %xmm1, %eax
.Ltmp2114:
	#DEBUG_VALUE: c <- $eax
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rcx,4), %r10d
.Ltmp2115:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	4(%rdi,%r15,4), %ebx
.Ltmp2116:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%eax, %eax
	movl	%r10d, %esi
	cmovnel	%ebx, %esi
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%esi, (%rdi,%rcx,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ebx
.Ltmp2117:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, 4(%rdi,%r15,4)
	.loc	27 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vpextrd	$2, %xmm1, %esi
.Ltmp2118:
	#DEBUG_VALUE: c <- $esi
	.loc	27 55 9                 # ./quickosimd.h:55:9
	addq	%rcx, %rax
.Ltmp2119:
	#DEBUG_VALUE: k <- 2
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rax,4), %r10d
.Ltmp2120:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	8(%rdi,%r15,4), %ebx
.Ltmp2121:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%esi, %esi
	movl	%r10d, %ecx
	cmovnel	%ebx, %ecx
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%ecx, (%rdi,%rax,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ebx
.Ltmp2122:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, 8(%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%rax, %rsi
.Ltmp2123:
	#DEBUG_VALUE: k <- 3
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 42 15                # ./quickosimd.h:42:15
	vpextrd	$3, %xmm1, %eax
.Ltmp2124:
	#DEBUG_VALUE: c <- $eax
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rsi,4), %r10d
.Ltmp2125:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	12(%rdi,%r15,4), %ebx
.Ltmp2126:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%eax, %eax
	movl	%r10d, %ecx
	cmovnel	%ebx, %ecx
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%ecx, (%rdi,%rsi,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ebx
.Ltmp2127:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, 12(%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%rsi, %rax
.Ltmp2128:
	#DEBUG_VALUE: k <- 4
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
	.loc	27 42 15                # ./quickosimd.h:42:15
	vextracti128	$1, %ymm1, %xmm1
.Ltmp2129:
	vmovd	%xmm1, %ecx
.Ltmp2130:
	#DEBUG_VALUE: c <- $ecx
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rax,4), %r10d
.Ltmp2131:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	16(%rdi,%r15,4), %ebx
.Ltmp2132:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%ecx, %ecx
	movl	%r10d, %esi
	cmovnel	%ebx, %esi
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%esi, (%rdi,%rax,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ebx
.Ltmp2133:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, 16(%rdi,%r15,4)
	.loc	27 42 15 is_stmt 1      # ./quickosimd.h:42:15
	vpextrd	$1, %xmm1, %ebx
.Ltmp2134:
	#DEBUG_VALUE: c <- $ebx
	.loc	27 55 9                 # ./quickosimd.h:55:9
	addq	%rax, %rcx
.Ltmp2135:
	#DEBUG_VALUE: k <- 5
	#DEBUG_VALUE: partition_quick_simd:i <- $rcx
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rcx,4), %r10d
.Ltmp2136:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	20(%rdi,%r15,4), %esi
.Ltmp2137:
	#DEBUG_VALUE: z <- $esi
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%ebx, %ebx
	movl	%r10d, %eax
	cmovnel	%esi, %eax
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%eax, (%rdi,%rcx,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %esi
.Ltmp2138:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%esi, 20(%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%rcx, %rbx
.Ltmp2139:
	#DEBUG_VALUE: k <- 6
	#DEBUG_VALUE: partition_quick_simd:i <- $rbx
	.loc	27 42 15                # ./quickosimd.h:42:15
	vpextrd	$2, %xmm1, %esi
.Ltmp2140:
	#DEBUG_VALUE: c <- $esi
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rbx,4), %r10d
.Ltmp2141:
	#DEBUG_VALUE: y <- $r10d
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	24(%rdi,%r15,4), %ecx
.Ltmp2142:
	#DEBUG_VALUE: z <- $ecx
	.loc	27 45 18                # ./quickosimd.h:45:18
	testl	%esi, %esi
	movl	%r10d, %eax
	cmovnel	%ecx, %eax
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%eax, (%rdi,%rbx,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%r10d, %ecx
.Ltmp2143:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ecx, 24(%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%rbx, %rsi
.Ltmp2144:
	#DEBUG_VALUE: k <- 7
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 42 15                # ./quickosimd.h:42:15
	movslq	28(%rsp), %r10
.Ltmp2145:
	testq	%r10, %r10
.Ltmp2146:
	#DEBUG_VALUE: c <- undef
	.loc	27 43 15                # ./quickosimd.h:43:15
	movl	(%rdi,%rsi,4), %eax
.Ltmp2147:
	#DEBUG_VALUE: y <- $eax
	.loc	27 44 15                # ./quickosimd.h:44:15
	movl	28(%rdi,%r15,4), %ebx
.Ltmp2148:
	#DEBUG_VALUE: z <- $ebx
	.loc	27 45 18                # ./quickosimd.h:45:18
	movl	%eax, %ecx
	cmovnel	%ebx, %ecx
	.loc	27 45 16 is_stmt 0      # ./quickosimd.h:45:16
	movl	%ecx, (%rdi,%rsi,4)
	.loc	27 46 18 is_stmt 1      # ./quickosimd.h:46:18
	cmovnel	%eax, %ebx
.Ltmp2149:
	.loc	27 46 16 is_stmt 0      # ./quickosimd.h:46:16
	movl	%ebx, 28(%rdi,%r15,4)
	.loc	27 55 9 is_stmt 1       # ./quickosimd.h:55:9
	addq	%r10, %rsi
.Ltmp2150:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 56 8                 # ./quickosimd.h:56:8
	addq	$8, %r15
.Ltmp2151:
	#DEBUG_VALUE: k <- 8
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 33 12                # ./quickosimd.h:33:12
	cmpq	%r8, %r15
.Ltmp2152:
	.loc	27 33 3 is_stmt 0       # ./quickosimd.h:33:3
	jl	.LBB43_14
.Ltmp2153:
# %bb.6:
	#DEBUG_VALUE: partition_quick_simd:p <- $ymm0
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 59 12 is_stmt 1      # ./quickosimd.h:59:12
	cmpq	%rdx, %r15
.Ltmp2154:
	.loc	27 59 3 is_stmt 0       # ./quickosimd.h:59:3
	jl	.LBB43_7
	jmp	.LBB43_11
.Ltmp2155:
.LBB43_5:
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:low <- $rsi
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	27 31 11 is_stmt 1      # ./quickosimd.h:31:11
	movq	%rsi, %r15
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
.Ltmp2156:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 59 12                # ./quickosimd.h:59:12
	cmpq	%rdx, %r15
.Ltmp2157:
	.loc	27 59 3 is_stmt 0       # ./quickosimd.h:59:3
	jge	.LBB43_11
.Ltmp2158:
.LBB43_7:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	movl	%edx, %r10d
	subl	%r15d, %r10d
	movq	%r15, %r8
	notq	%r8
	addq	%rdx, %r8
	andq	$3, %r10
	je	.LBB43_9
.Ltmp2159:
	.p2align	4, 0x90
.LBB43_8:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 60 21 is_stmt 1      # ./quickosimd.h:60:21
	movl	(%rdi,%r15,4), %ebx
	.loc	27 60 19 is_stmt 0      # ./quickosimd.h:60:19
	xorl	%r14d, %r14d
	cmpl	%ebx, %r9d
	setg	%r14b
.Ltmp2160:
	#DEBUG_VALUE: c <- $sil
	.loc	27 61 13 is_stmt 1      # ./quickosimd.h:61:13
	movl	(%rdi,%rsi,4), %r11d
.Ltmp2161:
	#DEBUG_VALUE: z <- $ebx
	#DEBUG_VALUE: y <- $r11d
	.loc	27 63 16                # ./quickosimd.h:63:16
	movl	%r11d, %ecx
	cmovgl	%ebx, %ecx
	.loc	27 63 14 is_stmt 0      # ./quickosimd.h:63:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	27 64 16 is_stmt 1      # ./quickosimd.h:64:16
	cmovgl	%r11d, %ebx
.Ltmp2162:
	.loc	27 64 14 is_stmt 0      # ./quickosimd.h:64:14
	movl	%ebx, (%rdi,%r15,4)
	.loc	27 69 7 is_stmt 1       # ./quickosimd.h:69:7
	addq	%r14, %rsi
.Ltmp2163:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 59 21                # ./quickosimd.h:59:21
	incq	%r15
.Ltmp2164:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 59 3 is_stmt 0       # ./quickosimd.h:59:3
	decq	%r10
	jne	.LBB43_8
.Ltmp2165:
.LBB43_9:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	cmpq	$3, %r8
	jb	.LBB43_11
.Ltmp2166:
	.p2align	4, 0x90
.LBB43_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 60 21 is_stmt 1      # ./quickosimd.h:60:21
	movl	(%rdi,%r15,4), %eax
	.loc	27 60 19 is_stmt 0      # ./quickosimd.h:60:19
	xorl	%ecx, %ecx
	cmpl	%eax, %r9d
	setg	%cl
.Ltmp2167:
	#DEBUG_VALUE: c <- $cl
	.loc	27 61 13 is_stmt 1      # ./quickosimd.h:61:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2168:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $r8d
	.loc	27 63 16                # ./quickosimd.h:63:16
	movl	%r8d, %ebx
	cmovgl	%eax, %ebx
	.loc	27 63 14 is_stmt 0      # ./quickosimd.h:63:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	27 64 16 is_stmt 1      # ./quickosimd.h:64:16
	cmovgl	%r8d, %eax
.Ltmp2169:
	.loc	27 64 14 is_stmt 0      # ./quickosimd.h:64:14
	movl	%eax, (%rdi,%r15,4)
	.loc	27 69 7 is_stmt 1       # ./quickosimd.h:69:7
	addq	%rsi, %rcx
.Ltmp2170:
	#DEBUG_VALUE: partition_quick_simd:i <- $rcx
	.loc	27 60 21                # ./quickosimd.h:60:21
	movl	4(%rdi,%r15,4), %eax
	.loc	27 60 19 is_stmt 0      # ./quickosimd.h:60:19
	xorl	%esi, %esi
	cmpl	%eax, %r9d
	setg	%sil
.Ltmp2171:
	#DEBUG_VALUE: c <- $sil
	.loc	27 61 13 is_stmt 1      # ./quickosimd.h:61:13
	movl	(%rdi,%rcx,4), %r8d
.Ltmp2172:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $r8d
	.loc	27 63 16                # ./quickosimd.h:63:16
	movl	%r8d, %ebx
	cmovgl	%eax, %ebx
	.loc	27 63 14 is_stmt 0      # ./quickosimd.h:63:14
	movl	%ebx, (%rdi,%rcx,4)
	.loc	27 64 16 is_stmt 1      # ./quickosimd.h:64:16
	cmovgl	%r8d, %eax
.Ltmp2173:
	.loc	27 64 14 is_stmt 0      # ./quickosimd.h:64:14
	movl	%eax, 4(%rdi,%r15,4)
	.loc	27 69 7 is_stmt 1       # ./quickosimd.h:69:7
	addq	%rcx, %rsi
.Ltmp2174:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 60 21                # ./quickosimd.h:60:21
	movl	8(%rdi,%r15,4), %eax
	.loc	27 60 19 is_stmt 0      # ./quickosimd.h:60:19
	xorl	%ecx, %ecx
	cmpl	%eax, %r9d
	setg	%cl
.Ltmp2175:
	#DEBUG_VALUE: c <- $cl
	.loc	27 61 13 is_stmt 1      # ./quickosimd.h:61:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2176:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $r8d
	.loc	27 63 16                # ./quickosimd.h:63:16
	movl	%r8d, %ebx
	cmovgl	%eax, %ebx
	.loc	27 63 14 is_stmt 0      # ./quickosimd.h:63:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	27 64 16 is_stmt 1      # ./quickosimd.h:64:16
	cmovgl	%r8d, %eax
.Ltmp2177:
	.loc	27 64 14 is_stmt 0      # ./quickosimd.h:64:14
	movl	%eax, 8(%rdi,%r15,4)
	.loc	27 69 7 is_stmt 1       # ./quickosimd.h:69:7
	addq	%rsi, %rcx
.Ltmp2178:
	#DEBUG_VALUE: partition_quick_simd:i <- $rcx
	.loc	27 60 21                # ./quickosimd.h:60:21
	movl	12(%rdi,%r15,4), %eax
	.loc	27 60 19 is_stmt 0      # ./quickosimd.h:60:19
	xorl	%esi, %esi
	cmpl	%eax, %r9d
	setg	%sil
.Ltmp2179:
	#DEBUG_VALUE: c <- $sil
	.loc	27 61 13 is_stmt 1      # ./quickosimd.h:61:13
	movl	(%rdi,%rcx,4), %r8d
.Ltmp2180:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $r8d
	.loc	27 63 16                # ./quickosimd.h:63:16
	movl	%r8d, %ebx
	cmovgl	%eax, %ebx
	.loc	27 63 14 is_stmt 0      # ./quickosimd.h:63:14
	movl	%ebx, (%rdi,%rcx,4)
	.loc	27 64 16 is_stmt 1      # ./quickosimd.h:64:16
	cmovgl	%r8d, %eax
.Ltmp2181:
	.loc	27 64 14 is_stmt 0      # ./quickosimd.h:64:14
	movl	%eax, 12(%rdi,%r15,4)
	.loc	27 69 7 is_stmt 1       # ./quickosimd.h:69:7
	addq	%rcx, %rsi
.Ltmp2182:
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	.loc	27 59 21                # ./quickosimd.h:59:21
	addq	$4, %r15
.Ltmp2183:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	.loc	27 59 12 is_stmt 0      # ./quickosimd.h:59:12
	cmpq	%r15, %rdx
.Ltmp2184:
	.loc	27 59 3                 # ./quickosimd.h:59:3
	jne	.LBB43_10
.Ltmp2185:
.LBB43_11:
	#DEBUG_VALUE: partition_quick_simd:j <- $r15
	#DEBUG_VALUE: partition_quick_simd:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:high <- $rdx
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	#DEBUG_VALUE: partition_quick_simd:i <- $rsi
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2186:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi,%rsi,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2187:
	#DEBUG_VALUE: swap:b <- undef
	.loc	27 0 0 is_stmt 0        # ./quickosimd.h:0:0
	movq	%rsi, %rax
.Ltmp2188:
	#DEBUG_VALUE: partition_quick_simd:i <- $rax
.LBB43_12:
	#DEBUG_VALUE: partition_quick_simd:done <- 0
	#DEBUG_VALUE: partition_quick_simd:array <- $rdi
	.loc	27 73 1 is_stmt 1       # ./quickosimd.h:73:1
	leaq	-24(%rbp), %rsp
	popq	%rbx
	popq	%r14
	popq	%r15
	popq	%rbp
	.cfi_def_cfa %rsp, 8
	vzeroupper
	retq
.Ltmp2189:
.Lfunc_end43:
	.size	partition_quick_simd, .Lfunc_end43-partition_quick_simd
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_simd         # -- Begin function sort_quick_simd
	.p2align	4, 0x90
	.type	sort_quick_simd,@function
sort_quick_simd:                        # @sort_quick_simd
.Lfunc_begin44:
	.loc	27 75 0                 # ./quickosimd.h:75:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	pushq	%r15
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%r12
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r12, -32
	.cfi_offset %r14, -24
	.cfi_offset %r15, -16
	.loc	27 77 11 prologue_end   # ./quickosimd.h:77:11
	cmpq	%rdx, %rsi
.Ltmp2190:
	.loc	27 77 7 is_stmt 0       # ./quickosimd.h:77:7
	jge	.LBB44_3
.Ltmp2191:
# %bb.1:
	#DEBUG_VALUE: sort_quick_simd:high <- $rdx
	#DEBUG_VALUE: sort_quick_simd:low <- $rsi
	#DEBUG_VALUE: sort_quick_simd:array <- $rdi
	.loc	27 0 7                  # ./quickosimd.h:0:7
	movq	%rdx, %r14
.Ltmp2192:
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	movq	%rsi, %r12
.Ltmp2193:
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	movq	%rdi, %r15
.Ltmp2194:
	#DEBUG_VALUE: sort_quick_simd:array <- $r15
	.p2align	4, 0x90
.LBB44_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_simd:array <- $r15
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:high <- $r14
	.loc	27 78 18 is_stmt 1      # ./quickosimd.h:78:18
	movq	%r15, %rdi
	movq	%r12, %rsi
	movq	%r14, %rdx
	callq	partition_quick_simd
.Ltmp2195:
	movq	%rax, %rbx
.Ltmp2196:
	#DEBUG_VALUE: pi <- $rbx
	.loc	27 80 36                # ./quickosimd.h:80:36
	leaq	-1(%rax), %rdx
	.loc	27 80 5 is_stmt 0       # ./quickosimd.h:80:5
	movq	%r15, %rdi
	movq	%r12, %rsi
	callq	sort_quick_simd
.Ltmp2197:
	.loc	27 81 31 is_stmt 1      # ./quickosimd.h:81:31
	incq	%rbx
.Ltmp2198:
	#DEBUG_VALUE: sort_quick_simd:low <- $rbx
	.loc	27 0 31 is_stmt 0       # ./quickosimd.h:0:31
	movq	%rbx, %r12
.Ltmp2199:
	.loc	27 77 11 is_stmt 1      # ./quickosimd.h:77:11
	cmpq	%r14, %rbx
.Ltmp2200:
	#DEBUG_VALUE: sort_quick_simd:low <- $r12
	#DEBUG_VALUE: sort_quick_simd:array <- undef
	.loc	27 77 7 is_stmt 0       # ./quickosimd.h:77:7
	jl	.LBB44_2
.Ltmp2201:
.LBB44_3:
	.loc	27 83 1 is_stmt 1       # ./quickosimd.h:83:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r12
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%r15
	.cfi_def_cfa_offset 8
	retq
.Ltmp2202:
.Lfunc_end44:
	.size	sort_quick_simd, .Lfunc_end44-sort_quick_simd
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_arith # -- Begin function partition_quick_optimized_swap_arith
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_arith,@function
partition_quick_optimized_swap_arith:   # @partition_quick_optimized_swap_arith
.Lfunc_begin45:
	.file	28 "/home/peeters/bachelor" "./quickoswaparith.h"
	.loc	28 21 0                 # ./quickoswaparith.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp2203:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r9
	subq	%rsi, %r9
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r9
.Ltmp2204:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB45_2
.Ltmp2205:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2206:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2207:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2208:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2209:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2210:
	.loc	28 25 17 is_stmt 1      # ./quickoswaparith.h:25:17
	addq	%rsi, %rdx
.Ltmp2211:
	.loc	28 25 25 is_stmt 0      # ./quickoswaparith.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2212:
	.loc	28 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2213:
.LBB45_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2214:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2215:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r8d
.Ltmp2216:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2217:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ecx
.Ltmp2218:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r8d, %ecx
.Ltmp2219:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2220:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r8d
.Ltmp2221:
	cmovll	%ecx, %r8d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2222:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %ebx
.Ltmp2223:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %r11d
.Ltmp2224:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r8d
.Ltmp2225:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2226:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r9
.Ltmp2227:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB45_4
.Ltmp2228:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r8d, (%rdi,%r10,4)
.Ltmp2229:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	28 0 0 is_stmt 0        # ./quickoswaparith.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2230:
	#DEBUG_VALUE: swap:b <- undef
	.loc	28 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2231:
.LBB45_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r8d, (%rdi,%rdx,4)
.Ltmp2232:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2233:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	28 29 27                # ./quickoswaparith.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2234:
	.loc	28 29 3 is_stmt 0       # ./quickoswaparith.h:29:3
	jle	.LBB45_5
.Ltmp2235:
# %bb.6:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r9
	notq	%r9
	testb	$1, %al
	jne	.LBB45_8
.Ltmp2236:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
                                        # implicit-def: $rax
	.loc	28 0 3                  # ./quickoswaparith.h:0:3
	movq	%rsi, %r10
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	addq	%rdx, %r9
	jne	.LBB45_10
	jmp	.LBB45_12
.Ltmp2237:
.LBB45_5:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r8d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	28 0 0                  # ./quickoswaparith.h:0:0
	movq	%rsi, %rax
.Ltmp2238:
	jmp	.LBB45_12
.Ltmp2239:
.LBB45_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	28 30 19 is_stmt 1      # ./quickoswaparith.h:30:19
	xorl	%eax, %eax
	cmpl	(%rdi,%rsi,4), %r8d
	setg	%al
.Ltmp2240:
	#DEBUG_VALUE: f <- undef
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: y <- undef
	#DEBUG_VALUE: x <- undef
	#DEBUG_VALUE: c <- $al
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rax
.Ltmp2241:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	.loc	28 29 36                # ./quickoswaparith.h:29:36
	movq	%rsi, %r10
.Ltmp2242:
	#DEBUG_VALUE: j <- $r10
	incq	%r10
.Ltmp2243:
	#DEBUG_VALUE: j <- $r10
	.loc	28 0 36 is_stmt 0       # ./quickoswaparith.h:0:36
	movq	%rax, %rsi
.Ltmp2244:
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	addq	%rdx, %r9
	je	.LBB45_12
.Ltmp2245:
.LBB45_10:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	.loc	28 0 3                  # ./quickoswaparith.h:0:3
	movq	%rsi, %rax
.Ltmp2246:
	.p2align	4, 0x90
.LBB45_11:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	#DEBUG_VALUE: j <- $r10
	.loc	28 30 21 is_stmt 1      # ./quickoswaparith.h:30:21
	movl	(%rdi,%r10,4), %r9d
	.loc	28 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%esi, %esi
	cmpl	%r9d, %r8d
	setg	%sil
.Ltmp2247:
	#DEBUG_VALUE: c <- $sil
	.loc	28 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%rdi,%rax,4), %ebx
.Ltmp2248:
	#DEBUG_VALUE: y <- $r9d
	#DEBUG_VALUE: x <- $ebx
	.loc	28 33 19                # ./quickoswaparith.h:33:19
	movl	%r9d, %ecx
	cmovgl	%ebx, %ecx
.Ltmp2249:
	#DEBUG_VALUE: d <- $ecx
	.loc	28 34 15                # ./quickoswaparith.h:34:15
	addl	%r9d, %ebx
.Ltmp2250:
	.loc	28 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%ecx, %ebx
.Ltmp2251:
	#DEBUG_VALUE: f <- $ebx
	.loc	28 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%ecx, (%rdi,%r10,4)
	.loc	28 36 14                # ./quickoswaparith.h:36:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rax, %rsi
.Ltmp2252:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	.loc	28 30 21                # ./quickoswaparith.h:30:21
	movl	4(%rdi,%r10,4), %r9d
.Ltmp2253:
	.loc	28 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%eax, %eax
	cmpl	%r9d, %r8d
	setg	%al
.Ltmp2254:
	#DEBUG_VALUE: c <- $al
	.loc	28 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%rdi,%rsi,4), %ebx
.Ltmp2255:
	#DEBUG_VALUE: y <- $r9d
	#DEBUG_VALUE: x <- $ebx
	.loc	28 33 19                # ./quickoswaparith.h:33:19
	movl	%r9d, %ecx
.Ltmp2256:
	cmovgl	%ebx, %ecx
.Ltmp2257:
	#DEBUG_VALUE: d <- $ecx
	.loc	28 34 15                # ./quickoswaparith.h:34:15
	addl	%r9d, %ebx
.Ltmp2258:
	.loc	28 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%ecx, %ebx
.Ltmp2259:
	#DEBUG_VALUE: f <- $ebx
	.loc	28 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%ecx, 4(%rdi,%r10,4)
	.loc	28 36 14                # ./quickoswaparith.h:36:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rax
.Ltmp2260:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	.loc	28 29 36                # ./quickoswaparith.h:29:36
	addq	$2, %r10
.Ltmp2261:
	#DEBUG_VALUE: j <- $r10
	.loc	28 29 27 is_stmt 0      # ./quickoswaparith.h:29:27
	cmpq	%r10, %rdx
.Ltmp2262:
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	jne	.LBB45_11
.Ltmp2263:
.LBB45_12:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r8d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rax
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp2264:
	#DEBUG_VALUE: swap:t <- $ecx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
.Ltmp2265:
	.loc	28 0 0                  # ./quickoswaparith.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2266:
	#DEBUG_VALUE: swap:b <- undef
	.loc	28 41 1 is_stmt 1       # ./quickoswaparith.h:41:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2267:
.Lfunc_end45:
	.size	partition_quick_optimized_swap_arith, .Lfunc_end45-partition_quick_optimized_swap_arith
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_arith # -- Begin function sort_quick_optimized_swap_arith
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_arith,@function
sort_quick_optimized_swap_arith:        # @sort_quick_optimized_swap_arith
.Lfunc_begin46:
	.loc	28 43 0                 # ./quickoswaparith.h:43:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	28 44 11 prologue_end   # ./quickoswaparith.h:44:11
	cmpq	%rsi, %rdx
.Ltmp2268:
	.loc	28 44 7 is_stmt 0       # ./quickoswaparith.h:44:7
	jle	.LBB46_30
.Ltmp2269:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $rdi
	.loc	28 0 7                  # ./quickoswaparith.h:0:7
	movq	%rdx, %r14
.Ltmp2270:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	movq	%rdi, %r12
.Ltmp2271:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	movq	%rdx, %r15
	negq	%r15
	jmp	.LBB46_2
.Ltmp2272:
	.p2align	4, 0x90
.LBB46_4:                               #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r12,%rsi,4), %eax
.Ltmp2273:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r12,%r14,4), %ecx
.Ltmp2274:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2275:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r12,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2276:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r12,%r14,4)
.Ltmp2277:
	.loc	28 25 17 is_stmt 1      # ./quickoswaparith.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	28 25 25 is_stmt 0      # ./quickoswaparith.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2278:
.LBB46_11:                              #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	28 47 54 is_stmt 1      # ./quickoswaparith.h:47:54
	leaq	-1(%rbx), %rdx
	.loc	28 47 7 is_stmt 0       # ./quickoswaparith.h:47:7
	movq	%r12, %rdi
	callq	sort_quick_optimized_swap_arith
.Ltmp2279:
	.loc	28 48 49 is_stmt 1      # ./quickoswaparith.h:48:49
	incq	%rbx
.Ltmp2280:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rbx
	.loc	28 0 49 is_stmt 0       # ./quickoswaparith.h:0:49
	movq	%rbx, %rsi
.Ltmp2281:
	.loc	28 44 11 is_stmt 1      # ./quickoswaparith.h:44:11
	cmpq	%r14, %rbx
.Ltmp2282:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- undef
	.loc	28 44 7 is_stmt 0       # ./quickoswaparith.h:44:7
	jge	.LBB46_30
.Ltmp2283:
.LBB46_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB46_31 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	28 45 20 is_stmt 1      # ./quickoswaparith.h:45:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2284:
	.loc	28 45 9 is_stmt 0       # ./quickoswaparith.h:45:9
	jle	.LBB46_12
.Ltmp2285:
# %bb.3:                                #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2286:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB46_4
.Ltmp2287:
# %bb.5:                                #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2288:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r12,%rsi,4), %ecx
.Ltmp2289:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r12,%r8,4), %eax
.Ltmp2290:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r12,%r14,4), %ebp
.Ltmp2291:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2292:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2293:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2294:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %r9d
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2295:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2296:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebp
.Ltmp2297:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2298:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r12,%rsi,4)
.Ltmp2299:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2300:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB46_7
.Ltmp2301:
# %bb.6:                                #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%r12,%r8,4)
.Ltmp2302:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r12,%r14,4)
.Ltmp2303:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB46_11
.Ltmp2304:
	.p2align	4, 0x90
.LBB46_7:                               #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r9d, (%r12,%r14,4)
.Ltmp2305:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r12,%r8,4)
.Ltmp2306:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	movl	%r14d, %edi
	subl	%esi, %edi
	movq	%rsi, %rdx
	notq	%rdx
	movq	%rsi, %rbx
.Ltmp2307:
	.loc	28 0 3 is_stmt 0        # ./quickoswaparith.h:0:3
	movq	%rsi, %rcx
.Ltmp2308:
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	testb	$1, %dil
	je	.LBB46_9
.Ltmp2309:
# %bb.8:                                #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	.loc	28 30 19 is_stmt 1      # ./quickoswaparith.h:30:19
	xorl	%ebx, %ebx
	cmpl	(%r12,%rsi,4), %r9d
	setg	%bl
.Ltmp2310:
	#DEBUG_VALUE: f <- undef
	#DEBUG_VALUE: d <- undef
	#DEBUG_VALUE: y <- undef
	#DEBUG_VALUE: x <- undef
	#DEBUG_VALUE: c <- $bl
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rsi, %rbx
.Ltmp2311:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	.loc	28 29 36                # ./quickoswaparith.h:29:36
	leaq	1(%rsi), %rcx
.Ltmp2312:
	#DEBUG_VALUE: j <- $rcx
.LBB46_9:                               #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	28 29 3 is_stmt 0       # ./quickoswaparith.h:29:3
	cmpq	%r15, %rdx
	je	.LBB46_10
.Ltmp2313:
	.p2align	4, 0x90
.LBB46_31:                              #   Parent Loop BB46_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	28 30 21 is_stmt 1      # ./quickoswaparith.h:30:21
	movl	(%r12,%rcx,4), %eax
	.loc	28 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2314:
	#DEBUG_VALUE: c <- $dl
	.loc	28 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%r12,%rbx,4), %ebp
.Ltmp2315:
	#DEBUG_VALUE: y <- $eax
	#DEBUG_VALUE: x <- $ebp
	.loc	28 33 19                # ./quickoswaparith.h:33:19
	movl	%eax, %edi
	cmovgl	%ebp, %edi
.Ltmp2316:
	#DEBUG_VALUE: d <- $edi
	.loc	28 34 15                # ./quickoswaparith.h:34:15
	addl	%eax, %ebp
.Ltmp2317:
	.loc	28 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%edi, %ebp
.Ltmp2318:
	#DEBUG_VALUE: f <- $ebp
	.loc	28 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%edi, (%r12,%rcx,4)
	.loc	28 36 14                # ./quickoswaparith.h:36:14
	movl	%ebp, (%r12,%rbx,4)
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rbx, %rdx
.Ltmp2319:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rdx
	.loc	28 30 21                # ./quickoswaparith.h:30:21
	movl	4(%r12,%rcx,4), %ebp
.Ltmp2320:
	.loc	28 30 19 is_stmt 0      # ./quickoswaparith.h:30:19
	xorl	%ebx, %ebx
	cmpl	%ebp, %r9d
	setg	%bl
.Ltmp2321:
	#DEBUG_VALUE: c <- $bl
	.loc	28 31 13 is_stmt 1      # ./quickoswaparith.h:31:13
	movl	(%r12,%rdx,4), %edi
.Ltmp2322:
	#DEBUG_VALUE: y <- $ebp
	#DEBUG_VALUE: x <- $edi
	.loc	28 33 19                # ./quickoswaparith.h:33:19
	movl	%ebp, %eax
	cmovgl	%edi, %eax
.Ltmp2323:
	#DEBUG_VALUE: d <- $eax
	.loc	28 34 15                # ./quickoswaparith.h:34:15
	addl	%ebp, %edi
.Ltmp2324:
	.loc	28 34 19 is_stmt 0      # ./quickoswaparith.h:34:19
	subl	%eax, %edi
.Ltmp2325:
	#DEBUG_VALUE: f <- $edi
	.loc	28 35 14 is_stmt 1      # ./quickoswaparith.h:35:14
	movl	%eax, 4(%r12,%rcx,4)
	.loc	28 36 14                # ./quickoswaparith.h:36:14
	movl	%edi, (%r12,%rdx,4)
	.loc	28 37 7                 # ./quickoswaparith.h:37:7
	addq	%rdx, %rbx
.Ltmp2326:
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	.loc	28 29 36                # ./quickoswaparith.h:29:36
	addq	$2, %rcx
.Ltmp2327:
	#DEBUG_VALUE: j <- $rcx
	.loc	28 29 27 is_stmt 0      # ./quickoswaparith.h:29:27
	cmpq	%rcx, %r14
.Ltmp2328:
	.loc	28 29 3                 # ./quickoswaparith.h:29:3
	jne	.LBB46_31
.Ltmp2329:
.LBB46_10:                              #   in Loop: Header=BB46_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_arith:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp2330:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
	jmp	.LBB46_11
.Ltmp2331:
.LBB46_12:
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	28 50 43                # ./quickoswaparith.h:50:43
	incl	%edi
.Ltmp2332:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	18 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2333:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB46_30
.Ltmp2334:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%rsi,4), %rax
.Ltmp2335:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2336:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2337:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB46_14
.Ltmp2338:
.LBB46_24:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB46_30
.Ltmp2339:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2340:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2341:
	.p2align	4, 0x90
.LBB46_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB46_29
.Ltmp2342:
# %bb.27:                               #   in Loop: Header=BB46_26 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2343:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2344:
	leaq	-1(%r15), %r15
.Ltmp2345:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB46_26
.Ltmp2346:
# %bb.28:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2347:
.LBB46_29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2348:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB46_30:
	.loc	28 53 1 is_stmt 1       # ./quickoswaparith.h:53:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB46_14:
	.cfi_def_cfa_offset 48
.Ltmp2349:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:low <- $rsi
	.loc	28 0 1 is_stmt 0        # ./quickoswaparith.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2350:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2351:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB46_15
.Ltmp2352:
	.p2align	4, 0x90
.LBB46_23:                              #   in Loop: Header=BB46_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2353:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2354:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB46_24
.Ltmp2355:
.LBB46_15:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB46_16 Depth 2
                                        #     Child Loop BB46_20 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2356:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2357:
	.p2align	4, 0x90
.LBB46_16:                              #   Parent Loop BB46_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB46_19
.Ltmp2358:
# %bb.17:                               #   in Loop: Header=BB46_16 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2359:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2360:
	leaq	-1(%rdi), %rdi
.Ltmp2361:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB46_16
.Ltmp2362:
# %bb.18:                               #   in Loop: Header=BB46_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2363:
.LBB46_19:                              #   in Loop: Header=BB46_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2364:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2365:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2366:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2367:
	.p2align	4, 0x90
.LBB46_20:                              #   Parent Loop BB46_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB46_23
.Ltmp2368:
# %bb.21:                               #   in Loop: Header=BB46_20 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2369:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2370:
	leaq	-1(%rdi), %rdi
.Ltmp2371:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB46_20
.Ltmp2372:
# %bb.22:                               #   in Loop: Header=BB46_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_arith:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB46_23
.Lfunc_end46:
	.size	sort_quick_optimized_swap_arith, .Lfunc_end46-sort_quick_optimized_swap_arith
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_array # -- Begin function partition_quick_optimized_swap_array
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_array,@function
partition_quick_optimized_swap_array:   # @partition_quick_optimized_swap_array
.Lfunc_begin47:
	.file	29 "/home/peeters/bachelor" "./quickoswaparray.h"
	.loc	29 21 0 is_stmt 1       # ./quickoswaparray.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
.Ltmp2373:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2374:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB47_2
.Ltmp2375:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2376:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2377:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2378:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2379:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2380:
	.loc	29 25 17 is_stmt 1      # ./quickoswaparray.h:25:17
	addq	%rsi, %rdx
.Ltmp2381:
	.loc	29 25 25 is_stmt 0      # ./quickoswaparray.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2382:
	.loc	29 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2383:
.LBB47_2:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2384:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2385:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r9d
.Ltmp2386:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2387:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ecx
.Ltmp2388:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r9d, %ecx
.Ltmp2389:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2390:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r9d
.Ltmp2391:
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2392:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ebx
.Ltmp2393:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r11d
.Ltmp2394:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r9d
.Ltmp2395:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2396:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2397:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB47_4
.Ltmp2398:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%rdi,%r10,4)
.Ltmp2399:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	29 0 0 is_stmt 0        # ./quickoswaparray.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2400:
	#DEBUG_VALUE: swap:b <- undef
	.loc	29 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2401:
.LBB47_4:
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp2402:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2403:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	29 29 27                # ./quickoswaparray.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2404:
	.loc	29 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	jle	.LBB47_5
.Ltmp2405:
# %bb.6:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	movl	%edx, %eax
	subl	%esi, %eax
	movq	%rsi, %r8
	notq	%r8
	testb	$1, %al
	jne	.LBB47_8
.Ltmp2406:
# %bb.7:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	29 0 3                  # ./quickoswaparray.h:0:3
	movq	%rsi, %rax
	.loc	29 29 3                 # ./quickoswaparray.h:29:3
	addq	%rdx, %r8
	jne	.LBB47_13
	jmp	.LBB47_10
.Ltmp2407:
.LBB47_5:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	.loc	29 0 0                  # ./quickoswaparray.h:0:0
	movq	%rsi, %rax
.Ltmp2408:
	jmp	.LBB47_10
.Ltmp2409:
.LBB47_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	.loc	29 30 21 is_stmt 1      # ./quickoswaparray.h:30:21
	movl	(%rdi,%rsi,4), %ecx
	.loc	29 30 19 is_stmt 0      # ./quickoswaparray.h:30:19
	xorl	%eax, %eax
	xorl	%ebx, %ebx
	cmpl	%ecx, %r9d
	setg	%al
.Ltmp2410:
	#DEBUG_VALUE: c <- $al
	setle	%bl
	.loc	29 31 10 is_stmt 1      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	29 32 12                # ./quickoswaparray.h:32:12
	movl	(%rdi,%rsi,4), %ecx
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rax,4), %ecx
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rsi, %rax
.Ltmp2411:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	29 29 36                # ./quickoswaparray.h:29:36
	incq	%rsi
.Ltmp2412:
	.loc	29 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	addq	%rdx, %r8
	je	.LBB47_10
.Ltmp2413:
	.p2align	4, 0x90
.LBB47_13:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	29 30 19 is_stmt 1      # ./quickoswaparray.h:30:19
	xorl	%r8d, %r8d
	xorl	%ebx, %ebx
	cmpl	(%rdi,%rsi,4), %r9d
	setg	%r8b
.Ltmp2414:
	#DEBUG_VALUE: c <- $r8b
	setle	%bl
	.loc	29 31 12                # ./quickoswaparray.h:31:12
	movl	(%rdi,%rax,4), %ecx
	.loc	29 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	29 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	(%rdi,%rsi,4), %ecx
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%rdi,%rsi,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%r8,4), %ecx
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%r8, %rax
.Ltmp2415:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	29 30 19                # ./quickoswaparray.h:30:19
	xorl	%r8d, %r8d
.Ltmp2416:
	xorl	%ebx, %ebx
	cmpl	4(%rdi,%rsi,4), %r9d
	setg	%r8b
.Ltmp2417:
	#DEBUG_VALUE: c <- $r8b
	setle	%bl
	.loc	29 31 12                # ./quickoswaparray.h:31:12
	movl	(%rdi,%rax,4), %ecx
	.loc	29 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	29 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	4(%rdi,%rsi,4), %ecx
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rbx,4), %ecx
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, 4(%rdi,%rsi,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%r8,4), %ecx
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%r8, %rax
.Ltmp2418:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	.loc	29 29 36                # ./quickoswaparray.h:29:36
	addq	$2, %rsi
.Ltmp2419:
	#DEBUG_VALUE: j <- $rsi
	.loc	29 29 27 is_stmt 0      # ./quickoswaparray.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2420:
	.loc	29 29 3                 # ./quickoswaparray.h:29:3
	jne	.LBB47_13
.Ltmp2421:
.LBB47_10:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rax
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rax,4), %ecx
.Ltmp2422:
	#DEBUG_VALUE: swap:t <- $ecx
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %esi
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%esi, (%rdi,%rax,4)
.Ltmp2423:
	.loc	29 0 0                  # ./quickoswaparray.h:0:0
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2424:
	#DEBUG_VALUE: swap:b <- undef
	.loc	29 39 1 is_stmt 1       # ./quickoswaparray.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2425:
.Lfunc_end47:
	.size	partition_quick_optimized_swap_array, .Lfunc_end47-partition_quick_optimized_swap_array
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_array # -- Begin function sort_quick_optimized_swap_array
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_array,@function
sort_quick_optimized_swap_array:        # @sort_quick_optimized_swap_array
.Lfunc_begin48:
	.loc	29 41 0                 # ./quickoswaparray.h:41:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	29 42 11 prologue_end   # ./quickoswaparray.h:42:11
	cmpq	%rsi, %rdx
.Ltmp2426:
	.loc	29 42 7 is_stmt 0       # ./quickoswaparray.h:42:7
	jle	.LBB48_30
.Ltmp2427:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $rdi
	.loc	29 0 7                  # ./quickoswaparray.h:0:7
	movq	%rdx, %r14
.Ltmp2428:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	movq	%rdi, %r12
.Ltmp2429:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	movq	%rdx, %r15
	negq	%r15
	jmp	.LBB48_2
.Ltmp2430:
	.p2align	4, 0x90
.LBB48_4:                               #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r12,%rsi,4), %eax
.Ltmp2431:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r12,%r14,4), %ecx
.Ltmp2432:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2433:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r12,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2434:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r12,%r14,4)
.Ltmp2435:
	.loc	29 25 17 is_stmt 1      # ./quickoswaparray.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	29 25 25 is_stmt 0      # ./quickoswaparray.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2436:
.LBB48_11:                              #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	29 45 54 is_stmt 1      # ./quickoswaparray.h:45:54
	leaq	-1(%rbx), %rdx
	.loc	29 45 7 is_stmt 0       # ./quickoswaparray.h:45:7
	movq	%r12, %rdi
	callq	sort_quick_optimized_swap_array
.Ltmp2437:
	.loc	29 46 49 is_stmt 1      # ./quickoswaparray.h:46:49
	incq	%rbx
.Ltmp2438:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rbx
	.loc	29 0 49 is_stmt 0       # ./quickoswaparray.h:0:49
	movq	%rbx, %rsi
.Ltmp2439:
	.loc	29 42 11 is_stmt 1      # ./quickoswaparray.h:42:11
	cmpq	%r14, %rbx
.Ltmp2440:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- undef
	.loc	29 42 7 is_stmt 0       # ./quickoswaparray.h:42:7
	jge	.LBB48_30
.Ltmp2441:
.LBB48_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB48_31 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	29 43 20 is_stmt 1      # ./quickoswaparray.h:43:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2442:
	.loc	29 43 9 is_stmt 0       # ./quickoswaparray.h:43:9
	jle	.LBB48_12
.Ltmp2443:
# %bb.3:                                #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2444:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB48_4
.Ltmp2445:
# %bb.5:                                #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2446:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r12,%rsi,4), %ecx
.Ltmp2447:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r12,%r8,4), %eax
.Ltmp2448:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r12,%r14,4), %ebp
.Ltmp2449:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2450:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2451:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2452:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %eax
.Ltmp2453:
	cmovll	%ecx, %eax
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2454:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %edx
.Ltmp2455:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %ebp
.Ltmp2456:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %eax
.Ltmp2457:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r12,%rsi,4)
.Ltmp2458:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2459:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB48_7
.Ltmp2460:
# %bb.6:                                #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%eax, (%r12,%r8,4)
.Ltmp2461:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r12,%r14,4)
.Ltmp2462:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB48_11
.Ltmp2463:
	.p2align	4, 0x90
.LBB48_7:                               #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r12
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%eax, (%r12,%r14,4)
.Ltmp2464:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r12,%r8,4)
.Ltmp2465:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	.loc	29 29 3                 # ./quickoswaparray.h:29:3
	movl	%r14d, %edi
	subl	%esi, %edi
	movq	%rsi, %rdx
	notq	%rdx
	movq	%rsi, %rcx
.Ltmp2466:
	.loc	29 0 3 is_stmt 0        # ./quickoswaparray.h:0:3
	movq	%rsi, %rbx
.Ltmp2467:
	.loc	29 29 3                 # ./quickoswaparray.h:29:3
	testb	$1, %dil
	je	.LBB48_9
.Ltmp2468:
# %bb.8:                                #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rsi
	.loc	29 30 21 is_stmt 1      # ./quickoswaparray.h:30:21
	movl	(%r12,%rsi,4), %ecx
	.loc	29 30 19 is_stmt 0      # ./quickoswaparray.h:30:19
	xorl	%ebx, %ebx
	xorl	%edi, %edi
	cmpl	%ecx, %eax
	setg	%bl
.Ltmp2469:
	#DEBUG_VALUE: c <- $bl
	setle	%dil
	.loc	29 31 10 is_stmt 1      # ./quickoswaparray.h:31:10
	movl	%ecx, x(%rip)
	.loc	29 32 12                # ./quickoswaparray.h:32:12
	movl	(%r12,%rsi,4), %ecx
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ecx, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %ecx
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%ecx, (%r12,%rsi,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rbx,4), %ecx
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%ecx, (%r12,%rsi,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rsi, %rbx
.Ltmp2470:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	29 29 36                # ./quickoswaparray.h:29:36
	leaq	1(%rsi), %rcx
.Ltmp2471:
	#DEBUG_VALUE: j <- $rcx
.LBB48_9:                               #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	29 29 3 is_stmt 0       # ./quickoswaparray.h:29:3
	cmpq	%r15, %rdx
	je	.LBB48_10
.Ltmp2472:
	.p2align	4, 0x90
.LBB48_31:                              #   Parent Loop BB48_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: j <- $rcx
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	29 30 19 is_stmt 1      # ./quickoswaparray.h:30:19
	xorl	%edx, %edx
	xorl	%edi, %edi
	cmpl	(%r12,%rcx,4), %eax
	setg	%dl
.Ltmp2473:
	#DEBUG_VALUE: c <- $dl
	setle	%dil
	.loc	29 31 12                # ./quickoswaparray.h:31:12
	movl	(%r12,%rbx,4), %ebp
	.loc	29 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ebp, x(%rip)
	.loc	29 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	(%r12,%rcx,4), %ebp
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ebp, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %edi
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%edi, (%r12,%rcx,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rdx,4), %edi
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%edi, (%r12,%rbx,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rdx, %rbx
.Ltmp2474:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	29 30 19                # ./quickoswaparray.h:30:19
	xorl	%edx, %edx
.Ltmp2475:
	xorl	%edi, %edi
	cmpl	4(%r12,%rcx,4), %eax
	setg	%dl
.Ltmp2476:
	#DEBUG_VALUE: c <- $dl
	setle	%dil
	.loc	29 31 12                # ./quickoswaparray.h:31:12
	movl	(%r12,%rbx,4), %ebp
	.loc	29 31 10 is_stmt 0      # ./quickoswaparray.h:31:10
	movl	%ebp, x(%rip)
	.loc	29 32 12 is_stmt 1      # ./quickoswaparray.h:32:12
	movl	4(%r12,%rcx,4), %ebp
	.loc	29 32 10 is_stmt 0      # ./quickoswaparray.h:32:10
	movl	%ebp, x+4(%rip)
	.loc	29 33 16 is_stmt 1      # ./quickoswaparray.h:33:16
	movl	x(,%rdi,4), %edi
	.loc	29 33 14 is_stmt 0      # ./quickoswaparray.h:33:14
	movl	%edi, 4(%r12,%rcx,4)
	.loc	29 34 16 is_stmt 1      # ./quickoswaparray.h:34:16
	movl	x(,%rdx,4), %edi
	.loc	29 34 14 is_stmt 0      # ./quickoswaparray.h:34:14
	movl	%edi, (%r12,%rbx,4)
	.loc	29 35 7 is_stmt 1       # ./quickoswaparray.h:35:7
	addq	%rdx, %rbx
.Ltmp2477:
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	.loc	29 29 36                # ./quickoswaparray.h:29:36
	addq	$2, %rcx
.Ltmp2478:
	#DEBUG_VALUE: j <- $rcx
	.loc	29 29 27 is_stmt 0      # ./quickoswaparray.h:29:27
	cmpq	%rcx, %r14
.Ltmp2479:
	.loc	29 29 3                 # ./quickoswaparray.h:29:3
	jne	.LBB48_31
.Ltmp2480:
.LBB48_10:                              #   in Loop: Header=BB48_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_array:pivot <- $eax
	#DEBUG_VALUE: partition_quick_optimized_swap_array:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_array:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r12,%rbx,4), %eax
.Ltmp2481:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r12,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r12,%rbx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r12,%r14,4)
	jmp	.LBB48_11
.Ltmp2482:
.LBB48_12:
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	29 48 43                # ./quickoswaparray.h:48:43
	incl	%edi
.Ltmp2483:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	18 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2484:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB48_30
.Ltmp2485:
# %bb.13:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r12,%rsi,4), %rax
.Ltmp2486:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2487:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2488:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB48_14
.Ltmp2489:
.LBB48_24:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB48_30
.Ltmp2490:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2491:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2492:
	.p2align	4, 0x90
.LBB48_26:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB48_29
.Ltmp2493:
# %bb.27:                               #   in Loop: Header=BB48_26 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2494:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2495:
	leaq	-1(%r15), %r15
.Ltmp2496:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB48_26
.Ltmp2497:
# %bb.28:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2498:
.LBB48_29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2499:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB48_30:
	.loc	29 51 1 is_stmt 1       # ./quickoswaparray.h:51:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB48_14:
	.cfi_def_cfa_offset 48
.Ltmp2500:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: sort_quick_optimized_swap_array:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_array:low <- $rsi
	.loc	29 0 1 is_stmt 0        # ./quickoswaparray.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2501:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2502:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB48_15
.Ltmp2503:
	.p2align	4, 0x90
.LBB48_23:                              #   in Loop: Header=BB48_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2504:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2505:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB48_24
.Ltmp2506:
.LBB48_15:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB48_16 Depth 2
                                        #     Child Loop BB48_20 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2507:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2508:
	.p2align	4, 0x90
.LBB48_16:                              #   Parent Loop BB48_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB48_19
.Ltmp2509:
# %bb.17:                               #   in Loop: Header=BB48_16 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2510:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2511:
	leaq	-1(%rdi), %rdi
.Ltmp2512:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB48_16
.Ltmp2513:
# %bb.18:                               #   in Loop: Header=BB48_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2514:
.LBB48_19:                              #   in Loop: Header=BB48_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2515:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2516:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2517:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2518:
	.p2align	4, 0x90
.LBB48_20:                              #   Parent Loop BB48_15 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB48_23
.Ltmp2519:
# %bb.21:                               #   in Loop: Header=BB48_20 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2520:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2521:
	leaq	-1(%rdi), %rdi
.Ltmp2522:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB48_20
.Ltmp2523:
# %bb.22:                               #   in Loop: Header=BB48_15 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: sort_quick_optimized_swap_array:array <- $r12
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB48_23
.Lfunc_end48:
	.size	sort_quick_optimized_swap_array, .Lfunc_end48-sort_quick_optimized_swap_array
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_asm # -- Begin function partition_quick_optimized_swap_asm
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_asm,@function
partition_quick_optimized_swap_asm:     # @partition_quick_optimized_swap_asm
.Lfunc_begin49:
	.file	30 "/home/peeters/bachelor" "./quickoswapasm.h"
	.loc	30 21 0 is_stmt 1       # ./quickoswapasm.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%r12
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %r12, -16
.Ltmp2524:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2525:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB49_2
.Ltmp2526:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2527:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %ebx
.Ltmp2528:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %eax
.Ltmp2529:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ebx, %eax
.Ltmp2530:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2531:
	.loc	30 25 17 is_stmt 1      # ./quickoswapasm.h:25:17
	addq	%rsi, %rdx
.Ltmp2532:
	.loc	30 25 25 is_stmt 0      # ./quickoswapasm.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2533:
	.loc	30 96 1 is_stmt 1       # ./quickoswapasm.h:96:1
	popq	%rbx
.Ltmp2534:
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2535:
.LBB49_2:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2536:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2537:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r9
	movl	(%rdi,%r9,4), %ebx
.Ltmp2538:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r10d
.Ltmp2539:
	#DEBUG_VALUE: sort_pair:y <- $ebx
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r10d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %ecx
.Ltmp2540:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %r11d
	cmovll	%ecx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebx, %ecx
.Ltmp2541:
	#DEBUG_VALUE: sort_pair:y <- $r10d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r10d, %ecx
.Ltmp2542:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r10d, %ebx
.Ltmp2543:
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r10d, %ecx
.Ltmp2544:
	#DEBUG_VALUE: sort_pair:x <- $r11d
	#DEBUG_VALUE: sort_pair:y <- $ebx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebx, %r11d
.Ltmp2545:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebx, %r10d
.Ltmp2546:
	cmovll	%r11d, %r10d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%r11d, %ebx
.Ltmp2547:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r10d, (%rdi,%rsi,4)
.Ltmp2548:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2549:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB49_4
.Ltmp2550:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%ebx, (%rdi,%r9,4)
.Ltmp2551:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2552:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	30 96 1                 # ./quickoswapasm.h:96:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2553:
.LBB49_4:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%ebx, (%rdi,%rdx,4)
.Ltmp2554:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r9,4)
.Ltmp2555:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:pivot <- $ebx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $ebx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	30 28 3                 # ./quickoswapasm.h:28:3
	#APP
	movq	%rsi, %r12
.Ltmp2556:

	movl	(%rdi,%r12,4), %r8d
	movl	(%rdi,%rsi,4), %r9d
	xorq	%r10, %r10
	cmpl	%ebx, %r8d
	setl	%r10b
	movl	%r8d, %r11d
	cmovll	%r9d, %r11d
	movl	%r11d, (%rdi,%r12,4)
	cmovll	%r8d, %r9d
	movl	%r9d, (%rdi,%rsi,4)
	addq	%r10, %rsi

	incq	%r12
	cmpq	%r12, %rdx
	jne	.Ltmp2556

	movl	(%rdi,%rsi,4), %r9d
	movl	(%rdi,%rdx,4), %r8d
	movl	%r9d, (%rdi,%rdx,4)
	movl	%r8d, (%rdi,%rsi,4)

	#NO_APP
.Ltmp2557:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	.loc	30 96 1                 # ./quickoswapasm.h:96:1
	movq	%rsi, %rax
.Ltmp2558:
	popq	%rbx
.Ltmp2559:
	.cfi_def_cfa_offset 16
	popq	%r12
	.cfi_def_cfa_offset 8
	retq
.Ltmp2560:
.Lfunc_end49:
	.size	partition_quick_optimized_swap_asm, .Lfunc_end49-partition_quick_optimized_swap_asm
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_asm # -- Begin function sort_quick_optimized_swap_asm
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_asm,@function
sort_quick_optimized_swap_asm:          # @sort_quick_optimized_swap_asm
.Lfunc_begin50:
	.loc	30 98 0                 # ./quickoswapasm.h:98:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r12
	.cfi_def_cfa_offset 40
	pushq	%rbx
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -48
	.cfi_offset %r12, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	30 99 11 prologue_end   # ./quickoswapasm.h:99:11
	cmpq	%rsi, %rdx
.Ltmp2561:
	.loc	30 99 7 is_stmt 0       # ./quickoswapasm.h:99:7
	jle	.LBB50_27
.Ltmp2562:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $rdi
	.loc	30 0 7                  # ./quickoswapasm.h:0:7
	movq	%rdx, %r14
.Ltmp2563:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	movq	%rdi, %r15
.Ltmp2564:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	jmp	.LBB50_2
.Ltmp2565:
	.p2align	4, 0x90
.LBB50_4:                               #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2566:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r15,%r14,4), %ecx
.Ltmp2567:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2568:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2569:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r15,%r14,4)
.Ltmp2570:
	.loc	30 25 17 is_stmt 1      # ./quickoswapasm.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	30 25 25 is_stmt 0      # ./quickoswapasm.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2571:
.LBB50_8:                               #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	30 102 52 is_stmt 1     # ./quickoswapasm.h:102:52
	leaq	-1(%rbx), %rdx
	.loc	30 102 7 is_stmt 0      # ./quickoswapasm.h:102:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_swap_asm
.Ltmp2572:
	.loc	30 103 47 is_stmt 1     # ./quickoswapasm.h:103:47
	incq	%rbx
.Ltmp2573:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rbx
	.loc	30 0 47 is_stmt 0       # ./quickoswapasm.h:0:47
	movq	%rbx, %rsi
.Ltmp2574:
	.loc	30 99 11 is_stmt 1      # ./quickoswapasm.h:99:11
	cmpq	%r14, %rbx
.Ltmp2575:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- undef
	.loc	30 99 7 is_stmt 0       # ./quickoswapasm.h:99:7
	jge	.LBB50_27
.Ltmp2576:
.LBB50_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	30 100 20 is_stmt 1     # ./quickoswapasm.h:100:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2577:
	.loc	30 100 9 is_stmt 0      # ./quickoswapasm.h:100:9
	jle	.LBB50_9
.Ltmp2578:
# %bb.3:                                #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2579:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB50_4
.Ltmp2580:
# %bb.5:                                #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2581:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2582:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $eax
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r15,%r8,4), %edx
.Ltmp2583:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r15,%r14,4), %ebp
.Ltmp2584:
	#DEBUG_VALUE: sort_pair:y <- $edx
	#DEBUG_VALUE: sort_pair:x <- $eax
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %eax
.Ltmp2585:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %ecx
	cmovll	%eax, %ecx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%edx, %eax
.Ltmp2586:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %eax
.Ltmp2587:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %edx
.Ltmp2588:
	cmovll	%eax, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %eax
.Ltmp2589:
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: sort_pair:y <- $edx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%edx, %ecx
.Ltmp2590:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%edx, %ebp
.Ltmp2591:
	cmovll	%ecx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ecx, %edx
.Ltmp2592:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r15,%rsi,4)
.Ltmp2593:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2594:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB50_7
.Ltmp2595:
# %bb.6:                                #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%edx, (%r15,%r8,4)
.Ltmp2596:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $eax
	.loc	4 53 17                 # ./median.h:53:17
	movl	%eax, (%r15,%r14,4)
.Ltmp2597:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB50_8
.Ltmp2598:
	.p2align	4, 0x90
.LBB50_7:                               #   in Loop: Header=BB50_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%edx, (%r15,%r14,4)
.Ltmp2599:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $eax
	.loc	4 59 14                 # ./median.h:59:14
	movl	%eax, (%r15,%r8,4)
.Ltmp2600:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:pivot <- $edx
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $edx
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:done <- 0
	.loc	30 28 3                 # ./quickoswapasm.h:28:3
	movq	%rsi, %rbx
.Ltmp2601:
	#APP
	movq	%rbx, %r12
.Ltmp2602:

	movl	(%r15,%r12,4), %r8d
	movl	(%r15,%rbx,4), %r9d
	xorq	%r10, %r10
	cmpl	%edx, %r8d
	setl	%r10b
	movl	%r8d, %r11d
	cmovll	%r9d, %r11d
	movl	%r11d, (%r15,%r12,4)
	cmovll	%r8d, %r9d
	movl	%r9d, (%r15,%rbx,4)
	addq	%r10, %rbx

	incq	%r12
	cmpq	%r12, %r14
	jne	.Ltmp2602

	movl	(%r15,%rbx,4), %r9d
	movl	(%r15,%r14,4), %r8d
	movl	%r9d, (%r15,%r14,4)
	movl	%r8d, (%r15,%rbx,4)

	#NO_APP
.Ltmp2603:
	#DEBUG_VALUE: partition_quick_optimized_swap_asm:low <- $rbx
	.loc	30 0 3 is_stmt 0        # ./quickoswapasm.h:0:3
	jmp	.LBB50_8
.Ltmp2604:
.LBB50_9:
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	30 105 43 is_stmt 1     # ./quickoswapasm.h:105:43
	incl	%edi
.Ltmp2605:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	18 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2606:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB50_27
.Ltmp2607:
# %bb.10:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r15,%rsi,4), %rax
.Ltmp2608:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2609:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2610:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp2611:
	cmpl	$2, %edi
	jne	.LBB50_11
.Ltmp2612:
.LBB50_21:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB50_27
.Ltmp2613:
# %bb.22:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2614:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2615:
	.p2align	4, 0x90
.LBB50_23:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB50_26
.Ltmp2616:
# %bb.24:                               #   in Loop: Header=BB50_23 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2617:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2618:
	leaq	-1(%r15), %r15
.Ltmp2619:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB50_23
.Ltmp2620:
# %bb.25:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2621:
.LBB50_26:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2622:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB50_27:
	.loc	30 108 1 is_stmt 1      # ./quickoswapasm.h:108:1
	popq	%rbx
	.cfi_def_cfa_offset 40
	popq	%r12
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB50_11:
	.cfi_def_cfa_offset 48
.Ltmp2623:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_asm:low <- $rsi
	.loc	30 0 1 is_stmt 0        # ./quickoswapasm.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2624:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2625:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB50_12
.Ltmp2626:
	.p2align	4, 0x90
.LBB50_20:                              #   in Loop: Header=BB50_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2627:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2628:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB50_21
.Ltmp2629:
.LBB50_12:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB50_13 Depth 2
                                        #     Child Loop BB50_17 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2630:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2631:
	.p2align	4, 0x90
.LBB50_13:                              #   Parent Loop BB50_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB50_16
.Ltmp2632:
# %bb.14:                               #   in Loop: Header=BB50_13 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2633:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2634:
	leaq	-1(%rdi), %rdi
.Ltmp2635:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB50_13
.Ltmp2636:
# %bb.15:                               #   in Loop: Header=BB50_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2637:
.LBB50_16:                              #   in Loop: Header=BB50_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2638:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2639:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2640:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2641:
	.p2align	4, 0x90
.LBB50_17:                              #   Parent Loop BB50_12 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB50_20
.Ltmp2642:
# %bb.18:                               #   in Loop: Header=BB50_17 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2643:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2644:
	leaq	-1(%rdi), %rdi
.Ltmp2645:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB50_17
.Ltmp2646:
# %bb.19:                               #   in Loop: Header=BB50_12 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB50_20
.Lfunc_end50:
	.size	sort_quick_optimized_swap_asm, .Lfunc_end50-sort_quick_optimized_swap_asm
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_optimized_swap_cmov # -- Begin function partition_quick_optimized_swap_cmov
	.p2align	4, 0x90
	.type	partition_quick_optimized_swap_cmov,@function
partition_quick_optimized_swap_cmov:    # @partition_quick_optimized_swap_cmov
.Lfunc_begin51:
	.file	31 "/home/peeters/bachelor" "./quickoswapcmov.h"
	.loc	31 21 0 is_stmt 1       # ./quickoswapcmov.h:21:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%rbx
	.cfi_def_cfa_offset 24
	.cfi_offset %rbx, -24
	.cfi_offset %rbp, -16
.Ltmp2647:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	4 34 12 prologue_end    # ./median.h:34:12
	movq	%rdx, %r8
	subq	%rsi, %r8
	.loc	4 34 18 is_stmt 0       # ./median.h:34:18
	cmpq	$1, %r8
.Ltmp2648:
	.loc	4 34 7                  # ./median.h:34:7
	jne	.LBB51_2
.Ltmp2649:
# %bb.1:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	#DEBUG_VALUE: sort_pair:i2 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2650:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%rdi,%rdx,4), %r8d
.Ltmp2651:
	#DEBUG_VALUE: sort_pair:y <- $r8d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r8d, %eax
.Ltmp2652:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r8d, %ecx
	cmovll	%eax, %ecx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%ecx, (%rdi,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%r8d, %eax
.Ltmp2653:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2654:
	.loc	31 25 17 is_stmt 1      # ./quickoswapcmov.h:25:17
	addq	%rsi, %rdx
.Ltmp2655:
	.loc	31 25 25 is_stmt 0      # ./quickoswapcmov.h:25:25
	movq	%rdx, %rax
	shrq	$63, %rax
	addq	%rdx, %rax
	sarq	%rax
.Ltmp2656:
	.loc	31 39 1 is_stmt 1       # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2657:
.LBB51_2:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 40 18                 # ./median.h:40:18
	leaq	(%rdx,%rsi), %rcx
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rcx, %rax
	shrq	$63, %rax
	addq	%rcx, %rax
	sarq	%rax
.Ltmp2658:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%rdi,%rsi,4), %ecx
.Ltmp2659:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%eax, %r10
	movl	(%rdi,%r10,4), %r9d
.Ltmp2660:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2661:
	#DEBUG_VALUE: sort_pair:y <- $r9d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $r11d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ecx
.Ltmp2662:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebx
	cmovll	%ecx, %ebx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r9d, %ecx
.Ltmp2663:
	#DEBUG_VALUE: sort_pair:y <- $r11d
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r11d, %ecx
.Ltmp2664:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r11d, %r9d
.Ltmp2665:
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%r11d, %ecx
.Ltmp2666:
	#DEBUG_VALUE: sort_pair:x <- $ebx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %ebx
.Ltmp2667:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %r11d
.Ltmp2668:
	cmovll	%ebx, %r11d
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%ebx, %r9d
.Ltmp2669:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%r11d, (%rdi,%rsi,4)
.Ltmp2670:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %r8
.Ltmp2671:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB51_4
.Ltmp2672:
# %bb.3:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%rdi,%r10,4)
.Ltmp2673:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%rdi,%rdx,4)
.Ltmp2674:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	31 39 1                 # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2675:
.LBB51_4:
	.cfi_def_cfa_offset 24
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rax
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $rdx
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	.loc	4 58 15                 # ./median.h:58:15
	movl	%r9d, (%rdi,%rdx,4)
.Ltmp2676:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%rdi,%r10,4)
.Ltmp2677:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	31 29 27                # ./quickoswapcmov.h:29:27
	cmpq	%rsi, %rdx
.Ltmp2678:
	.loc	31 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	jle	.LBB51_8
.Ltmp2679:
# %bb.5:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	movl	%edx, %r10d
	subl	%esi, %r10d
	movq	%rsi, %r8
	notq	%r8
	addq	%rdx, %r8
	movq	%rsi, %rax
	andq	$3, %r10
	je	.LBB51_7
.Ltmp2680:
	.p2align	4, 0x90
.LBB51_6:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	31 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%rdi,%rax,4), %ebx
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ecx, %ecx
	cmpl	%ebx, %r9d
	setg	%cl
.Ltmp2681:
	#DEBUG_VALUE: c <- $sil
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r11d
.Ltmp2682:
	#DEBUG_VALUE: z <- $ebx
	#DEBUG_VALUE: y <- $r11d
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%r11d, %ebp
	cmovgl	%ebx, %ebp
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%rdi,%rsi,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r11d, %ebx
.Ltmp2683:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ebx, (%rdi,%rax,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rcx, %rsi
.Ltmp2684:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	31 29 36                # ./quickoswapcmov.h:29:36
	incq	%rax
.Ltmp2685:
	#DEBUG_VALUE: j <- $rax
	.loc	31 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	decq	%r10
	jne	.LBB51_6
.Ltmp2686:
.LBB51_7:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	cmpq	$3, %r8
	jb	.LBB51_8
.Ltmp2687:
	.p2align	4, 0x90
.LBB51_10:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rax
	.loc	31 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%rdi,%rax,4), %ecx
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebp, %ebp
	cmpl	%ecx, %r9d
	setg	%bpl
.Ltmp2688:
	#DEBUG_VALUE: c <- $bpl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2689:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2690:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, (%rdi,%rax,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rsi, %rbp
.Ltmp2691:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbp
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	4(%rdi,%rax,4), %ecx
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%esi, %esi
	cmpl	%ecx, %r9d
	setg	%sil
.Ltmp2692:
	#DEBUG_VALUE: c <- $sil
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rbp,4), %r8d
.Ltmp2693:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rbp,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2694:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 4(%rdi,%rax,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbp, %rsi
.Ltmp2695:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	8(%rdi,%rax,4), %ecx
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebp, %ebp
	cmpl	%ecx, %r9d
	setg	%bpl
.Ltmp2696:
	#DEBUG_VALUE: c <- $bpl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rsi,4), %r8d
.Ltmp2697:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rsi,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2698:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 8(%rdi,%rax,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rsi, %rbp
.Ltmp2699:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbp
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	12(%rdi,%rax,4), %ecx
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%esi, %esi
	cmpl	%ecx, %r9d
	setg	%sil
.Ltmp2700:
	#DEBUG_VALUE: c <- $sil
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%rdi,%rbp,4), %r8d
.Ltmp2701:
	#DEBUG_VALUE: z <- $ecx
	#DEBUG_VALUE: y <- $r8d
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%r8d, %ebx
	cmovgl	%ecx, %ebx
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebx, (%rdi,%rbp,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%r8d, %ecx
.Ltmp2702:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ecx, 12(%rdi,%rax,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbp, %rsi
.Ltmp2703:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	.loc	31 29 36                # ./quickoswapcmov.h:29:36
	addq	$4, %rax
.Ltmp2704:
	#DEBUG_VALUE: j <- $rax
	.loc	31 29 27 is_stmt 0      # ./quickoswapcmov.h:29:27
	cmpq	%rax, %rdx
.Ltmp2705:
	.loc	31 29 3                 # ./quickoswapcmov.h:29:3
	jne	.LBB51_10
.Ltmp2706:
.LBB51_8:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%rdi,%rsi,4), %eax
.Ltmp2707:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%rdi,%rsi,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rdi,%rdx,4)
.Ltmp2708:
	#DEBUG_VALUE: swap:b <- undef
	.loc	31 0 0 is_stmt 0        # ./quickoswapcmov.h:0:0
	movq	%rsi, %rax
.Ltmp2709:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rax
	.loc	31 39 1 is_stmt 1       # ./quickoswapcmov.h:39:1
	popq	%rbx
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp2710:
.Lfunc_end51:
	.size	partition_quick_optimized_swap_cmov, .Lfunc_end51-partition_quick_optimized_swap_cmov
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_optimized_swap_cmov # -- Begin function sort_quick_optimized_swap_cmov
	.p2align	4, 0x90
	.type	sort_quick_optimized_swap_cmov,@function
sort_quick_optimized_swap_cmov:         # @sort_quick_optimized_swap_cmov
.Lfunc_begin52:
	.loc	31 41 0                 # ./quickoswapcmov.h:41:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	31 42 11 prologue_end   # ./quickoswapcmov.h:42:11
	cmpq	%rsi, %rdx
.Ltmp2711:
	.loc	31 42 7 is_stmt 0       # ./quickoswapcmov.h:42:7
	jle	.LBB52_31
.Ltmp2712:
# %bb.1:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $rdx
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $rdi
	.loc	31 0 7                  # ./quickoswapcmov.h:0:7
	movq	%rdx, %r14
.Ltmp2713:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	movq	%rdi, %r15
.Ltmp2714:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	jmp	.LBB52_2
.Ltmp2715:
	.p2align	4, 0x90
.LBB52_4:                               #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_pair:i1 <- undef
	.loc	4 26 11 is_stmt 1       # ./median.h:26:11
	movl	(%r15,%rsi,4), %eax
.Ltmp2716:
	#DEBUG_VALUE: sort_pair:x <- $eax
	.loc	4 27 11                 # ./median.h:27:11
	movl	(%r15,%r14,4), %ecx
.Ltmp2717:
	#DEBUG_VALUE: sort_pair:y <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ecx, %eax
.Ltmp2718:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ecx, %edx
	cmovll	%eax, %edx
	.loc	4 29 7 is_stmt 0        # ./median.h:29:7
	movl	%edx, (%r15,%rsi,4)
	.loc	4 30 9 is_stmt 1        # ./median.h:30:9
	cmovll	%ecx, %eax
.Ltmp2719:
	.loc	4 30 7 is_stmt 0        # ./median.h:30:7
	movl	%eax, (%r15,%r14,4)
.Ltmp2720:
	.loc	31 25 17 is_stmt 1      # ./quickoswapcmov.h:25:17
	leaq	(%rsi,%r14), %rax
	.loc	31 25 25 is_stmt 0      # ./quickoswapcmov.h:25:25
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2721:
.LBB52_12:                              #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: pi <- $rbx
	.loc	31 45 53 is_stmt 1      # ./quickoswapcmov.h:45:53
	leaq	-1(%rbx), %rdx
	.loc	31 45 7 is_stmt 0       # ./quickoswapcmov.h:45:7
	movq	%r15, %rdi
	callq	sort_quick_optimized_swap_cmov
.Ltmp2722:
	.loc	31 46 48 is_stmt 1      # ./quickoswapcmov.h:46:48
	incq	%rbx
.Ltmp2723:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rbx
	.loc	31 0 48 is_stmt 0       # ./quickoswapcmov.h:0:48
	movq	%rbx, %rsi
.Ltmp2724:
	.loc	31 42 11 is_stmt 1      # ./quickoswapcmov.h:42:11
	cmpq	%r14, %rbx
.Ltmp2725:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- undef
	.loc	31 42 7 is_stmt 0       # ./quickoswapcmov.h:42:7
	jge	.LBB52_31
.Ltmp2726:
.LBB52_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB52_9 Depth 2
                                        #     Child Loop BB52_32 Depth 2
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	31 43 20 is_stmt 1      # ./quickoswapcmov.h:43:20
	movq	%r14, %rdi
	subq	%rsi, %rdi
.Ltmp2727:
	.loc	31 43 9 is_stmt 0       # ./quickoswapcmov.h:43:9
	jle	.LBB52_13
.Ltmp2728:
# %bb.3:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	.loc	4 34 18 is_stmt 1       # ./median.h:34:18
	cmpq	$1, %rdi
.Ltmp2729:
	.loc	4 34 7 is_stmt 0        # ./median.h:34:7
	je	.LBB52_4
.Ltmp2730:
# %bb.5:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 40 18 is_stmt 1       # ./median.h:40:18
	leaq	(%rsi,%r14), %rax
	.loc	4 40 26 is_stmt 0       # ./median.h:40:26
	movq	%rax, %rbx
	shrq	$63, %rbx
	addq	%rax, %rbx
	sarq	%rbx
.Ltmp2731:
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	.loc	4 41 11 is_stmt 1       # ./median.h:41:11
	movl	(%r15,%rsi,4), %ecx
.Ltmp2732:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- $ecx
	.loc	4 42 11                 # ./median.h:42:11
	movslq	%ebx, %r8
	movl	(%r15,%r8,4), %eax
.Ltmp2733:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $eax
	.loc	4 43 11                 # ./median.h:43:11
	movl	(%r15,%r14,4), %ebp
.Ltmp2734:
	#DEBUG_VALUE: sort_pair:y <- $eax
	#DEBUG_VALUE: sort_pair:x <- $ecx
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ebp
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%eax, %ecx
.Ltmp2735:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%eax, %edx
	cmovll	%ecx, %edx
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%eax, %ecx
.Ltmp2736:
	#DEBUG_VALUE: sort_pair:y <- $ebp
	#DEBUG_VALUE: sort_pair:x <- $ecx
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%ebp, %ecx
.Ltmp2737:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%ebp, %r9d
	cmovll	%ecx, %r9d
	.loc	4 30 9                  # ./median.h:30:9
	cmovll	%ebp, %ecx
.Ltmp2738:
	#DEBUG_VALUE: sort_pair:x <- $edx
	#DEBUG_VALUE: sort_pair:y <- $r9d
	.loc	4 28 13                 # ./median.h:28:13
	cmpl	%r9d, %edx
.Ltmp2739:
	#DEBUG_VALUE: sort_pair:c <- undef
	.loc	4 29 9                  # ./median.h:29:9
	movl	%r9d, %ebp
.Ltmp2740:
	cmovll	%edx, %ebp
	.loc	4 30 9                  # ./median.h:30:9
	cmovgel	%edx, %r9d
.Ltmp2741:
	.loc	4 0 0 is_stmt 0         # ./median.h:0:0
	movl	%ebp, (%r15,%rsi,4)
.Ltmp2742:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	.loc	4 49 18 is_stmt 1       # ./median.h:49:18
	cmpq	$2, %rdi
.Ltmp2743:
	#DEBUG_VALUE: median_of_three_auto_finish:x <- undef
	.loc	4 49 7 is_stmt 0        # ./median.h:49:7
	jne	.LBB52_7
.Ltmp2744:
# %bb.6:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 52 16 is_stmt 1       # ./median.h:52:16
	movl	%r9d, (%r15,%r8,4)
.Ltmp2745:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 53 17                 # ./median.h:53:17
	movl	%ecx, (%r15,%r14,4)
.Ltmp2746:
	#DEBUG_VALUE: median_of_three_auto_finish:y <- undef
	.loc	4 0 17 is_stmt 0        # ./median.h:0:17
	jmp	.LBB52_12
.Ltmp2747:
	.p2align	4, 0x90
.LBB52_7:                               #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rbx
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	4 58 15 is_stmt 1       # ./median.h:58:15
	movl	%r9d, (%r15,%r14,4)
.Ltmp2748:
	#DEBUG_VALUE: median_of_three_auto_finish:z <- $ecx
	.loc	4 59 14                 # ./median.h:59:14
	movl	%ecx, (%r15,%r8,4)
.Ltmp2749:
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	.loc	31 29 3                 # ./quickoswapcmov.h:29:3
	movl	%r14d, %r10d
	subl	%esi, %r10d
	movq	%rsi, %r8
	notq	%r8
	addq	%r14, %r8
	movq	%rsi, %rbx
.Ltmp2750:
	.loc	31 0 3 is_stmt 0        # ./quickoswapcmov.h:0:3
	movq	%rsi, %rcx
.Ltmp2751:
	.loc	31 29 3                 # ./quickoswapcmov.h:29:3
	andq	$3, %r10
	je	.LBB52_10
.Ltmp2752:
# %bb.8:                                #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rsi
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:y <- $r9d
	#DEBUG_VALUE: median_of_three_auto_finish:high <- $r14
	#DEBUG_VALUE: median_of_three_auto_finish:low <- $rsi
	#DEBUG_VALUE: median_of_three_auto_finish:array <- $r15
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	31 0 3                  # ./quickoswapcmov.h:0:3
	movq	%rsi, %rbx
	movq	%rsi, %rcx
.Ltmp2753:
	.p2align	4, 0x90
.LBB52_9:                               #   Parent Loop BB52_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	31 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%r15,%rcx,4), %ebp
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%ebp, %r9d
	setg	%dl
.Ltmp2754:
	#DEBUG_VALUE: c <- $bl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rbx,4), %edi
.Ltmp2755:
	#DEBUG_VALUE: z <- $ebp
	#DEBUG_VALUE: y <- $edi
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%edi, %eax
	cmovgl	%ebp, %eax
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%eax, (%r15,%rbx,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%edi, %ebp
.Ltmp2756:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%ebp, (%r15,%rcx,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rbx
.Ltmp2757:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	.loc	31 29 36                # ./quickoswapcmov.h:29:36
	incq	%rcx
.Ltmp2758:
	#DEBUG_VALUE: j <- $rcx
	.loc	31 29 3 is_stmt 0       # ./quickoswapcmov.h:29:3
	decq	%r10
	jne	.LBB52_9
.Ltmp2759:
.LBB52_10:                              #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	cmpq	$3, %r8
	jb	.LBB52_11
.Ltmp2760:
	.p2align	4, 0x90
.LBB52_32:                              #   Parent Loop BB52_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: j <- $rcx
	.loc	31 30 21 is_stmt 1      # ./quickoswapcmov.h:30:21
	movl	(%r15,%rcx,4), %eax
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2761:
	#DEBUG_VALUE: c <- $dl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rbx,4), %ebp
.Ltmp2762:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebp
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebp, %edi
	cmovgl	%eax, %edi
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%edi, (%r15,%rbx,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebp, %eax
.Ltmp2763:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, (%r15,%rcx,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rbx, %rdx
.Ltmp2764:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdx
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	4(%r15,%rcx,4), %eax
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edi, %edi
	cmpl	%eax, %r9d
	setg	%dil
.Ltmp2765:
	#DEBUG_VALUE: c <- $dil
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdx,4), %ebx
.Ltmp2766:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebx
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebx, %ebp
	cmovgl	%eax, %ebp
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%r15,%rdx,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebx, %eax
.Ltmp2767:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 4(%r15,%rcx,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rdi
.Ltmp2768:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdi
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	8(%r15,%rcx,4), %eax
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%edx, %edx
	cmpl	%eax, %r9d
	setg	%dl
.Ltmp2769:
	#DEBUG_VALUE: c <- $dl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdi,4), %ebx
.Ltmp2770:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebx
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebx, %ebp
	cmovgl	%eax, %ebp
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%ebp, (%r15,%rdi,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebx, %eax
.Ltmp2771:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 8(%r15,%rcx,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdi, %rdx
.Ltmp2772:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rdx
	.loc	31 30 21                # ./quickoswapcmov.h:30:21
	movl	12(%r15,%rcx,4), %eax
	.loc	31 30 19 is_stmt 0      # ./quickoswapcmov.h:30:19
	xorl	%ebx, %ebx
.Ltmp2773:
	cmpl	%eax, %r9d
	setg	%bl
.Ltmp2774:
	#DEBUG_VALUE: c <- $bl
	.loc	31 31 13 is_stmt 1      # ./quickoswapcmov.h:31:13
	movl	(%r15,%rdx,4), %ebp
.Ltmp2775:
	#DEBUG_VALUE: z <- $eax
	#DEBUG_VALUE: y <- $ebp
	.loc	31 33 16                # ./quickoswapcmov.h:33:16
	movl	%ebp, %edi
	cmovgl	%eax, %edi
	.loc	31 33 14 is_stmt 0      # ./quickoswapcmov.h:33:14
	movl	%edi, (%r15,%rdx,4)
	.loc	31 34 16 is_stmt 1      # ./quickoswapcmov.h:34:16
	cmovgl	%ebp, %eax
.Ltmp2776:
	.loc	31 34 14 is_stmt 0      # ./quickoswapcmov.h:34:14
	movl	%eax, 12(%r15,%rcx,4)
	.loc	31 35 7 is_stmt 1       # ./quickoswapcmov.h:35:7
	addq	%rdx, %rbx
.Ltmp2777:
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	.loc	31 29 36                # ./quickoswapcmov.h:29:36
	addq	$4, %rcx
.Ltmp2778:
	#DEBUG_VALUE: j <- $rcx
	.loc	31 29 27 is_stmt 0      # ./quickoswapcmov.h:29:27
	cmpq	%rcx, %r14
.Ltmp2779:
	.loc	31 29 3                 # ./quickoswapcmov.h:29:3
	jne	.LBB52_32
.Ltmp2780:
.LBB52_11:                              #   in Loop: Header=BB52_2 Depth=1
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:done <- 0
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: partition_quick_optimized_swap_cmov:i <- $rbx
	#DEBUG_VALUE: swap:a <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	(%r15,%rbx,4), %eax
.Ltmp2781:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%r15,%r14,4), %ecx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, (%r15,%rbx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%r15,%r14,4)
	jmp	.LBB52_12
.Ltmp2782:
.LBB52_13:
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	31 48 43                # ./quickoswapcmov.h:48:43
	incl	%edi
.Ltmp2783:
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: insertionSortOptimized:array <- undef
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	.loc	18 17 17                # ./insertionssort.h:17:17
	cmpl	$2, %edi
.Ltmp2784:
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	jl	.LBB52_31
.Ltmp2785:
# %bb.14:
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:array <- $r15
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%r15,%rsi,4), %rax
.Ltmp2786:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2787:
	.loc	18 17 17                # ./insertionssort.h:17:17
	movl	%edi, %r10d
.Ltmp2788:
	.loc	18 17 3                 # ./insertionssort.h:17:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
.Ltmp2789:
	cmpl	$2, %edi
	jne	.LBB52_15
.Ltmp2790:
.LBB52_25:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	testq	%r8, %r8
	je	.LBB52_31
.Ltmp2791:
# %bb.26:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2792:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 21 19                # ./insertionssort.h:21:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2793:
	.p2align	4, 0x90
.LBB52_27:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 0      # ./insertionssort.h:21:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31                # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_30
.Ltmp2794:
# %bb.28:                               #   in Loop: Header=BB52_27 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2795:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2796:
	leaq	-1(%r15), %r15
.Ltmp2797:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_27
.Ltmp2798:
# %bb.29:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2799:
.LBB52_30:
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%r15d, %rcx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2800:
	#DEBUG_VALUE: insertionSortOptimized:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB52_31:
	.loc	31 51 1 is_stmt 1       # ./quickoswapcmov.h:51:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB52_15:
	.cfi_def_cfa_offset 48
.Ltmp2801:
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:n <- $edi
	#DEBUG_VALUE: insertionSortOptimized:i <- 1
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:high <- $r14
	#DEBUG_VALUE: sort_quick_optimized_swap_cmov:low <- $rsi
	.loc	31 0 1 is_stmt 0        # ./quickoswapcmov.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2802:
	.loc	18 17 3 is_stmt 1       # ./insertionssort.h:17:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2803:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB52_16
.Ltmp2804:
	.p2align	4, 0x90
.LBB52_24:                              #   in Loop: Header=BB52_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2805:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	addq	$2, %r15
.Ltmp2806:
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 17 3 is_stmt 0       # ./insertionssort.h:17:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB52_25
.Ltmp2807:
.LBB52_16:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB52_17 Depth 2
                                        #     Child Loop BB52_21 Depth 2
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	.loc	18 18 15 is_stmt 1      # ./insertionssort.h:18:15
	movl	(%rax,%r15,4), %esi
.Ltmp2808:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2809:
	.p2align	4, 0x90
.LBB52_17:                              #   Parent Loop BB52_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_20
.Ltmp2810:
# %bb.18:                               #   in Loop: Header=BB52_17 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2811:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2812:
	leaq	-1(%rdi), %rdi
.Ltmp2813:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_17
.Ltmp2814:
# %bb.19:                               #   in Loop: Header=BB52_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2815:
.LBB52_20:                              #   in Loop: Header=BB52_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:i <- $r15
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 25 5 is_stmt 1       # ./insertionssort.h:25:5
	movslq	%edi, %rdx
	.loc	18 25 18 is_stmt 0      # ./insertionssort.h:25:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2816:
	.loc	18 17 23 is_stmt 1      # ./insertionssort.h:17:23
	leaq	1(%r15), %rdi
.Ltmp2817:
	#DEBUG_VALUE: insertionSortOptimized:i <- $rdi
	.loc	18 18 15                # ./insertionssort.h:18:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2818:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2819:
	.p2align	4, 0x90
.LBB52_21:                              #   Parent Loop BB52_16 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 21 22 is_stmt 1      # ./insertionssort.h:21:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 21 31 is_stmt 0      # ./insertionssort.h:21:31
	cmpl	%esi, %ebp
	.loc	18 21 5                 # ./insertionssort.h:21:5
	jle	.LBB52_24
.Ltmp2820:
# %bb.22:                               #   in Loop: Header=BB52_21 Depth=2
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 22 20 is_stmt 1      # ./insertionssort.h:22:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2821:
	#DEBUG_VALUE: insertionSortOptimized:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp2822:
	leaq	-1(%rdi), %rdi
.Ltmp2823:
	.loc	18 21 19 is_stmt 1      # ./insertionssort.h:21:19
	jg	.LBB52_21
.Ltmp2824:
# %bb.23:                               #   in Loop: Header=BB52_16 Depth=1
	#DEBUG_VALUE: insertionSortOptimized:element <- $esi
	#DEBUG_VALUE: insertionSortOptimized:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB52_24
.Lfunc_end52:
	.size	sort_quick_optimized_swap_cmov, .Lfunc_end52-sort_quick_optimized_swap_cmov
	.cfi_endproc
                                        # -- End function
	.globl	partition_quick_standard # -- Begin function partition_quick_standard
	.p2align	4, 0x90
	.type	partition_quick_standard,@function
partition_quick_standard:               # @partition_quick_standard
.Lfunc_begin53:
	.file	32 "/home/peeters/bachelor" "./quicku.h"
	.loc	32 11 0 is_stmt 1       # ./quicku.h:11:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:high <- $rdx
	pushq	%rbx
	.cfi_def_cfa_offset 16
	.cfi_offset %rbx, -16
	.loc	4 5 12 prologue_end     # ./median.h:5:12
	movq	%rdx, %rax
	subq	%rsi, %rax
	.loc	4 5 18 is_stmt 0        # ./median.h:5:18
	cmpq	$1, %rax
.Ltmp2825:
	.loc	4 5 7                   # ./median.h:5:7
	jg	.LBB53_2
.Ltmp2826:
# %bb.1:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	4 6 12 is_stmt 1        # ./median.h:6:12
	movl	(%rdi,%rdx,4), %r9d
.Ltmp2827:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	32 14 21                # ./quicku.h:14:21
	movslq	%esi, %rcx
.Ltmp2828:
	.loc	32 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %eax
.Ltmp2829:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 14 23                # ./quicku.h:14:23
	cmpq	%rdx, %rcx
.Ltmp2830:
	.loc	32 14 3 is_stmt 0       # ./quicku.h:14:3
	jl	.LBB53_4
	jmp	.LBB53_18
.Ltmp2831:
.LBB53_2:
	#DEBUG_VALUE: median_of_three:high <- $rdx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	4 9 18 is_stmt 1        # ./median.h:9:18
	leaq	(%rdx,%rsi), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp2832:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rdi,%rsi,4), %r10d
.Ltmp2833:
	#DEBUG_VALUE: median_of_three:x <- $r10d
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %r8
	movl	(%rdi,%r8,4), %r9d
.Ltmp2834:
	#DEBUG_VALUE: median_of_three:y <- $r9d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rdi,%rdx,4), %r11d
.Ltmp2835:
	#DEBUG_VALUE: median_of_three:z <- $r11d
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%r9d, %r10d
.Ltmp2836:
	#DEBUG_VALUE: min:y <- $r9d
	#DEBUG_VALUE: min:x <- $r10d
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r9d, %eax
	cmovlel	%r10d, %eax
.Ltmp2837:
	#DEBUG_VALUE: max:y <- $r9d
	#DEBUG_VALUE: max:x <- $r10d
	.loc	15 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r9d, %ecx
.Ltmp2838:
	cmovgel	%r10d, %ecx
.Ltmp2839:
	#DEBUG_VALUE: min:y <- $r11d
	#DEBUG_VALUE: min:x <- $eax
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%r11d, %eax
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%r11d, %eax
.Ltmp2840:
	#DEBUG_VALUE: max:y <- $r11d
	#DEBUG_VALUE: median_of_three:smallest <- $eax
	#DEBUG_VALUE: max:x <- $ecx
	.loc	15 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%r11d, %ecx
	.loc	15 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%r11d, %ecx
.Ltmp2841:
	#DEBUG_VALUE: median_of_three:largest <- $ecx
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%r10d, %r9d
.Ltmp2842:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%r11d, %r9d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%eax, %r9d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ecx, %r9d
.Ltmp2843:
	#DEBUG_VALUE: median_of_three:median <- $r9d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%eax, (%rdi,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r9d, (%rdi,%rdx,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ecx, (%rdi,%r8,4)
.Ltmp2844:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	32 14 21                # ./quicku.h:14:21
	movslq	%esi, %rcx
.Ltmp2845:
	.loc	32 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %eax
.Ltmp2846:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 14 23                # ./quicku.h:14:23
	cmpq	%rdx, %rcx
.Ltmp2847:
	.loc	32 14 3 is_stmt 0       # ./quicku.h:14:3
	jge	.LBB53_18
.Ltmp2848:
.LBB53_4:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	movslq	%esi, %rsi
.Ltmp2849:
	movl	%edx, %ecx
	subl	%esi, %ecx
	movq	%rsi, %r8
	notq	%r8
	addq	%rdx, %r8
	andq	$3, %rcx
	jne	.LBB53_5
.Ltmp2850:
.LBB53_8:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	cmpq	$3, %r8
	jae	.LBB53_9
.Ltmp2851:
.LBB53_18:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 20 9 is_stmt 1       # ./quicku.h:20:9
	movslq	%eax, %rcx
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 20 17 is_stmt 0      # ./quicku.h:20:17
	incl	%eax
.Ltmp2852:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: swap:b <- undef
	.loc	16 2 11 is_stmt 1       # ./swap.h:2:11
	movl	4(%rdi,%rcx,4), %esi
.Ltmp2853:
	#DEBUG_VALUE: swap:t <- $esi
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rdi,%rdx,4), %ebx
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ebx, 4(%rdi,%rcx,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%esi, (%rdi,%rdx,4)
.Ltmp2854:
	.loc	32 21 3                 # ./quicku.h:21:3
	popq	%rbx
	.cfi_def_cfa_offset 8
	retq
.Ltmp2855:
	.p2align	4, 0x90
.LBB53_7:                               #   in Loop: Header=BB53_5 Depth=1
	.cfi_def_cfa_offset 16
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 14 32                # ./quicku.h:14:32
	incq	%rsi
.Ltmp2856:
	#DEBUG_VALUE: j <- $rsi
	.loc	32 14 3 is_stmt 0       # ./quicku.h:14:3
	decq	%rcx
	je	.LBB53_8
.Ltmp2857:
.LBB53_5:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: j <- $rsi
	.loc	32 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rdi,%rsi,4), %r10d
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %r10d
.Ltmp2858:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB53_7
.Ltmp2859:
# %bb.6:                                #   in Loop: Header=BB53_5 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %r11
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp2860:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%r11,4), %ebx
.Ltmp2861:
	#DEBUG_VALUE: swap:t <- $ebx
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%r10d, 4(%rdi,%r11,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%ebx, (%rdi,%rsi,4)
	jmp	.LBB53_7
.Ltmp2862:
	.p2align	4, 0x90
.LBB53_17:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 14 32                # ./quicku.h:14:32
	addq	$4, %rsi
.Ltmp2863:
	#DEBUG_VALUE: j <- $rsi
	.loc	32 14 23 is_stmt 0      # ./quicku.h:14:23
	cmpq	%rdx, %rsi
.Ltmp2864:
	.loc	32 14 3                 # ./quicku.h:14:3
	jge	.LBB53_18
.Ltmp2865:
.LBB53_9:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: j <- $rsi
	.loc	32 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rdi,%rsi,4), %ecx
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2866:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB53_10
.Ltmp2867:
# %bb.11:                               #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	4(%rdi,%rsi,4), %ecx
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2868:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB53_12
.Ltmp2869:
.LBB53_13:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	8(%rdi,%rsi,4), %ecx
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2870:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB53_14
.Ltmp2871:
.LBB53_15:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	12(%rdi,%rsi,4), %ecx
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2872:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB53_17
	jmp	.LBB53_16
.Ltmp2873:
	.p2align	4, 0x90
.LBB53_10:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp2874:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp2875:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%r8d, (%rdi,%rsi,4)
.Ltmp2876:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	4(%rdi,%rsi,4), %ecx
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2877:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB53_13
.Ltmp2878:
.LBB53_12:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp2879:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp2880:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%r8d, 4(%rdi,%rsi,4)
.Ltmp2881:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	8(%rdi,%rsi,4), %ecx
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2882:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB53_15
.Ltmp2883:
.LBB53_14:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp2884:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp2885:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%r8d, 8(%rdi,%rsi,4)
.Ltmp2886:
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	12(%rdi,%rsi,4), %ecx
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %ecx
.Ltmp2887:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB53_17
.Ltmp2888:
.LBB53_16:                              #   in Loop: Header=BB53_9 Depth=1
	#DEBUG_VALUE: j <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $rdx
	#DEBUG_VALUE: partition_quick_standard:array <- $rdi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%eax, %rbx
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%eax
.Ltmp2889:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $eax
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rdi,%rbx,4), %r8d
.Ltmp2890:
	#DEBUG_VALUE: swap:t <- $r8d
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%ecx, 4(%rdi,%rbx,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%r8d, 12(%rdi,%rsi,4)
	jmp	.LBB53_17
.Ltmp2891:
.Lfunc_end53:
	.size	partition_quick_standard, .Lfunc_end53-partition_quick_standard
	.cfi_endproc
                                        # -- End function
	.globl	sort_quick_standard     # -- Begin function sort_quick_standard
	.p2align	4, 0x90
	.type	sort_quick_standard,@function
sort_quick_standard:                    # @sort_quick_standard
.Lfunc_begin54:
	.loc	32 24 0                 # ./quicku.h:24:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	.loc	32 25 11 prologue_end   # ./quicku.h:25:11
	cmpq	%rsi, %rdx
.Ltmp2892:
	.loc	32 25 7 is_stmt 0       # ./quicku.h:25:7
	jle	.LBB54_37
.Ltmp2893:
# %bb.1:
	#DEBUG_VALUE: sort_quick_standard:high <- $rdx
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- $rdi
	.loc	32 0 7                  # ./quicku.h:0:7
	movq	%rdx, %r14
.Ltmp2894:
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	movq	%rdi, %rbx
.Ltmp2895:
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	jmp	.LBB54_2
.Ltmp2896:
	.p2align	4, 0x90
.LBB54_18:                              #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 20 9 is_stmt 1       # ./quicku.h:20:9
	movslq	%ecx, %r15
.Ltmp2897:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%r15,4), %eax
.Ltmp2898:
	#DEBUG_VALUE: swap:t <- $eax
	.loc	16 3 8                  # ./swap.h:3:8
	movl	(%rbx,%r14,4), %ecx
.Ltmp2899:
	.loc	16 3 6 is_stmt 0        # ./swap.h:3:6
	movl	%ecx, 4(%rbx,%r15,4)
	.loc	16 4 6 is_stmt 1        # ./swap.h:4:6
	movl	%eax, (%rbx,%r14,4)
.Ltmp2900:
	#DEBUG_VALUE: pi <- undef
	.loc	32 28 7                 # ./quicku.h:28:7
	movq	%rbx, %rdi
	movq	%r15, %rdx
	callq	sort_quick_standard
.Ltmp2901:
	.loc	32 29 37                # ./quicku.h:29:37
	addq	$2, %r15
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
.Ltmp2902:
	#DEBUG_VALUE: sort_quick_standard:low <- $r15
	.loc	32 0 37 is_stmt 0       # ./quicku.h:0:37
	movq	%r15, %rsi
.Ltmp2903:
	.loc	32 25 11 is_stmt 1      # ./quicku.h:25:11
	cmpq	%r14, %r15
.Ltmp2904:
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:array <- undef
	.loc	32 25 7 is_stmt 0       # ./quicku.h:25:7
	jge	.LBB54_37
.Ltmp2905:
.LBB54_2:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_5 Depth 2
                                        #     Child Loop BB54_9 Depth 2
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 26 14 is_stmt 1      # ./quicku.h:26:14
	movq	%r14, %rdi
	subq	%rsi, %rdi
	.loc	32 26 20 is_stmt 0      # ./quicku.h:26:20
	cmpq	$31, %rdi
.Ltmp2906:
	.loc	32 26 9                 # ./quicku.h:26:9
	jl	.LBB54_19
.Ltmp2907:
# %bb.3:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: median_of_three:array <- $rbx
	#DEBUG_VALUE: median_of_three:low <- $rsi
	#DEBUG_VALUE: median_of_three:high <- $r14
	.loc	4 9 18 is_stmt 1        # ./median.h:9:18
	leaq	(%rsi,%r14), %rax
	.loc	4 9 26 is_stmt 0        # ./median.h:9:26
	movq	%rax, %rcx
	shrq	$63, %rcx
	addq	%rax, %rcx
	shrq	%rcx
.Ltmp2908:
	#DEBUG_VALUE: median_of_three:mid <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_stack_value] $rcx
	.loc	4 10 11 is_stmt 1       # ./median.h:10:11
	movl	(%rbx,%rsi,4), %eax
.Ltmp2909:
	#DEBUG_VALUE: median_of_three:x <- $eax
	.loc	4 11 11                 # ./median.h:11:11
	movslq	%ecx, %rcx
.Ltmp2910:
	movl	(%rbx,%rcx,4), %r9d
.Ltmp2911:
	#DEBUG_VALUE: median_of_three:y <- $r9d
	.loc	4 12 11                 # ./median.h:12:11
	movl	(%rbx,%r14,4), %edx
.Ltmp2912:
	#DEBUG_VALUE: median_of_three:z <- $edx
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%r9d, %eax
.Ltmp2913:
	#DEBUG_VALUE: min:y <- $r9d
	#DEBUG_VALUE: min:x <- $eax
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	movl	%r9d, %edi
	cmovlel	%eax, %edi
.Ltmp2914:
	#DEBUG_VALUE: max:y <- $r9d
	#DEBUG_VALUE: max:x <- $eax
	.loc	15 4 39 is_stmt 1       # ./minmax.h:4:39
	movl	%r9d, %ebp
	cmovgel	%eax, %ebp
.Ltmp2915:
	#DEBUG_VALUE: min:y <- $edx
	#DEBUG_VALUE: min:x <- $edi
	.loc	15 3 42                 # ./minmax.h:3:42
	cmpl	%edx, %edi
	.loc	15 3 39 is_stmt 0       # ./minmax.h:3:39
	cmovgl	%edx, %edi
.Ltmp2916:
	#DEBUG_VALUE: max:y <- $edx
	#DEBUG_VALUE: median_of_three:smallest <- $edi
	#DEBUG_VALUE: max:x <- $ebp
	.loc	15 4 42 is_stmt 1       # ./minmax.h:4:42
	cmpl	%edx, %ebp
	.loc	15 4 39 is_stmt 0       # ./minmax.h:4:39
	cmovll	%edx, %ebp
.Ltmp2917:
	#DEBUG_VALUE: median_of_three:largest <- $ebp
	.loc	4 16 18 is_stmt 1       # ./median.h:16:18
	addl	%eax, %r9d
.Ltmp2918:
	.loc	4 16 22 is_stmt 0       # ./median.h:16:22
	addl	%edx, %r9d
	.loc	4 16 26                 # ./median.h:16:26
	subl	%edi, %r9d
	.loc	4 16 37                 # ./median.h:16:37
	subl	%ebp, %r9d
.Ltmp2919:
	#DEBUG_VALUE: median_of_three:median <- $r9d
	.loc	4 18 14 is_stmt 1       # ./median.h:18:14
	movl	%edi, (%rbx,%rsi,4)
	.loc	4 19 15                 # ./median.h:19:15
	movl	%r9d, (%rbx,%r14,4)
	.loc	4 20 14                 # ./median.h:20:14
	movl	%ebp, (%rbx,%rcx,4)
.Ltmp2920:
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	.loc	32 14 21                # ./quicku.h:14:21
	movslq	%esi, %rdx
.Ltmp2921:
	.loc	32 13 11                # ./quicku.h:13:11
	leal	-1(%rsi), %ecx
.Ltmp2922:
	#DEBUG_VALUE: j <- undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 14 23                # ./quicku.h:14:23
	cmpq	%r14, %rdx
.Ltmp2923:
	.loc	32 14 3 is_stmt 0       # ./quicku.h:14:3
	jge	.LBB54_18
.Ltmp2924:
# %bb.4:                                #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	movslq	%esi, %r8
	movl	%r14d, %edi
	subl	%r8d, %edi
	notq	%r8
	addq	%r14, %r8
	andq	$3, %rdi
	jne	.LBB54_5
.Ltmp2925:
.LBB54_8:                               #   in Loop: Header=BB54_2 Depth=1
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	cmpq	$3, %r8
	jae	.LBB54_9
	jmp	.LBB54_18
.Ltmp2926:
	.p2align	4, 0x90
.LBB54_7:                               #   in Loop: Header=BB54_5 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 14 32                # ./quicku.h:14:32
	incq	%rdx
.Ltmp2927:
	#DEBUG_VALUE: j <- $rdx
	.loc	32 14 3                 # ./quicku.h:14:3
	decq	%rdi
	je	.LBB54_8
.Ltmp2928:
.LBB54_5:                               #   Parent Loop BB54_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: j <- $rdx
	.loc	32 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rbx,%rdx,4), %eax
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2929:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB54_7
.Ltmp2930:
# %bb.6:                                #   in Loop: Header=BB54_5 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rbp
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp2931:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rbp,4), %r10d
.Ltmp2932:
	#DEBUG_VALUE: swap:t <- $r10d
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rbp,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%r10d, (%rbx,%rdx,4)
	jmp	.LBB54_7
.Ltmp2933:
	.p2align	4, 0x90
.LBB54_17:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 14 32                # ./quicku.h:14:32
	addq	$4, %rdx
.Ltmp2934:
	#DEBUG_VALUE: j <- $rdx
	.loc	32 14 23 is_stmt 0      # ./quicku.h:14:23
	cmpq	%rdx, %r14
.Ltmp2935:
	.loc	32 14 3                 # ./quicku.h:14:3
	je	.LBB54_18
.Ltmp2936:
.LBB54_9:                               #   Parent Loop BB54_2 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: j <- $rdx
	.loc	32 15 9 is_stmt 1       # ./quicku.h:15:9
	movl	(%rbx,%rdx,4), %eax
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2937:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB54_10
.Ltmp2938:
# %bb.11:                               #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	4(%rbx,%rdx,4), %eax
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2939:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB54_12
.Ltmp2940:
.LBB54_13:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	8(%rbx,%rdx,4), %eax
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2941:
	.loc	32 15 9                 # ./quicku.h:15:9
	jle	.LBB54_14
.Ltmp2942:
.LBB54_15:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	12(%rbx,%rdx,4), %eax
	.loc	32 15 18                # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2943:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB54_17
	jmp	.LBB54_16
.Ltmp2944:
	.p2align	4, 0x90
.LBB54_10:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp2945:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp2946:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%ebp, (%rbx,%rdx,4)
.Ltmp2947:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	4(%rbx,%rdx,4), %eax
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2948:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB54_13
.Ltmp2949:
.LBB54_12:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp2950:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp2951:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%ebp, 4(%rbx,%rdx,4)
.Ltmp2952:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	8(%rbx,%rdx,4), %eax
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2953:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB54_15
.Ltmp2954:
.LBB54_14:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp2955:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp2956:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%ebp, 8(%rbx,%rdx,4)
.Ltmp2957:
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	32 15 9                 # ./quicku.h:15:9
	movl	12(%rbx,%rdx,4), %eax
	.loc	32 15 18 is_stmt 0      # ./quicku.h:15:18
	cmpl	%r9d, %eax
.Ltmp2958:
	.loc	32 15 9                 # ./quicku.h:15:9
	jg	.LBB54_17
.Ltmp2959:
.LBB54_16:                              #   in Loop: Header=BB54_9 Depth=2
	#DEBUG_VALUE: j <- $rdx
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	#DEBUG_VALUE: partition_quick_standard:pivot <- $r9d
	#DEBUG_VALUE: partition_quick_standard:high <- $r14
	#DEBUG_VALUE: partition_quick_standard:low <- $rsi
	#DEBUG_VALUE: partition_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 17 13 is_stmt 1      # ./quicku.h:17:13
	movslq	%ecx, %rdi
	.loc	32 16 8                 # ./quicku.h:16:8
	incl	%ecx
.Ltmp2960:
	#DEBUG_VALUE: swap:a <- [DW_OP_plus_uconst 4, DW_OP_stack_value] undef
	#DEBUG_VALUE: partition_quick_standard:i <- $ecx
	.loc	16 2 11                 # ./swap.h:2:11
	movl	4(%rbx,%rdi,4), %ebp
.Ltmp2961:
	#DEBUG_VALUE: swap:t <- $ebp
	.loc	16 3 6                  # ./swap.h:3:6
	movl	%eax, 4(%rbx,%rdi,4)
	.loc	16 4 6                  # ./swap.h:4:6
	movl	%ebp, 12(%rbx,%rdx,4)
	jmp	.LBB54_17
.Ltmp2962:
.LBB54_19:
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 31 34                # ./quicku.h:31:34
	incl	%edi
.Ltmp2963:
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: insertionSort:array <- undef
	#DEBUG_VALUE: insertionSort:n <- $edi
	.loc	18 3 17                 # ./insertionssort.h:3:17
	cmpl	$2, %edi
.Ltmp2964:
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	jl	.LBB54_37
.Ltmp2965:
# %bb.20:
	#DEBUG_VALUE: insertionSort:n <- $edi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	18 0 3                  # ./insertionssort.h:0:3
	leaq	(%rbx,%rsi,4), %rax
.Ltmp2966:
	#DEBUG_VALUE: insertionSort:array <- $rax
	movabsq	$-4294967296, %rcx      # imm = 0xFFFFFFFF00000000
.Ltmp2967:
	.loc	18 3 17                 # ./insertionssort.h:3:17
	movl	%edi, %r10d
.Ltmp2968:
	.loc	18 3 3                  # ./insertionssort.h:3:3
	decq	%r10
	movl	%r10d, %r8d
	andl	$1, %r8d
	movl	$1, %r15d
	cmpl	$2, %edi
	jne	.LBB54_21
.Ltmp2969:
.LBB54_31:
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	testq	%r8, %r8
	je	.LBB54_37
.Ltmp2970:
# %bb.32:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp2971:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 7 19                 # ./insertionssort.h:7:19
	movq	%r15, %rdi
	shlq	$32, %rdi
	addq	%rcx, %rdi
.Ltmp2972:
	.p2align	4, 0x90
.LBB54_33:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 7 22 is_stmt 0       # ./insertionssort.h:7:22
	movq	%rdi, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 7 31                 # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB54_36
.Ltmp2973:
# %bb.34:                               #   in Loop: Header=BB54_33 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%r15,4)
.Ltmp2974:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdi
	cmpq	$1, %r15
.Ltmp2975:
	leaq	-1(%r15), %r15
.Ltmp2976:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB54_33
.Ltmp2977:
# %bb.35:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%r15d, %r15d
.Ltmp2978:
.LBB54_36:
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%r15d, %rcx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rcx,4)
.Ltmp2979:
	#DEBUG_VALUE: insertionSort:i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
.LBB54_37:
	.loc	32 34 1 is_stmt 1       # ./quicku.h:34:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.LBB54_21:
	.cfi_def_cfa_offset 48
.Ltmp2980:
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:n <- $edi
	#DEBUG_VALUE: insertionSort:i <- 1
	#DEBUG_VALUE: sort_quick_standard:array <- $rbx
	#DEBUG_VALUE: sort_quick_standard:high <- $r14
	#DEBUG_VALUE: sort_quick_standard:low <- $rsi
	.loc	32 0 1 is_stmt 0        # ./quicku.h:0:1
	movabsq	$8589934592, %r9        # imm = 0x200000000
.Ltmp2981:
	.loc	18 3 3 is_stmt 1        # ./insertionssort.h:3:3
	subq	%r8, %r10
	movl	$1, %r15d
	movabsq	$4294967296, %r11       # imm = 0x100000000
	xorl	%r14d, %r14d
.Ltmp2982:
	.loc	18 0 3 is_stmt 0        # ./insertionssort.h:0:3
	jmp	.LBB54_22
.Ltmp2983:
	.p2align	4, 0x90
.LBB54_30:                              #   in Loop: Header=BB54_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2984:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	addq	$2, %r15
.Ltmp2985:
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 3 3 is_stmt 0        # ./insertionssort.h:3:3
	addq	%r9, %r14
	addq	%r9, %r11
	addq	$-2, %r10
	je	.LBB54_31
.Ltmp2986:
.LBB54_22:                              # =>This Loop Header: Depth=1
                                        #     Child Loop BB54_23 Depth 2
                                        #     Child Loop BB54_27 Depth 2
	#DEBUG_VALUE: insertionSort:array <- $rax
	#DEBUG_VALUE: insertionSort:i <- $r15
	.loc	18 4 15 is_stmt 1       # ./insertionssort.h:4:15
	movl	(%rax,%r15,4), %esi
.Ltmp2987:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $r15
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r14, %rdx
	movq	%r15, %rdi
.Ltmp2988:
	.p2align	4, 0x90
.LBB54_23:                              #   Parent Loop BB54_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rdx, %rbx
	sarq	$30, %rbx
	movl	(%rax,%rbx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB54_26
.Ltmp2989:
# %bb.24:                               #   in Loop: Header=BB54_23 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp2990:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rdx
	cmpq	$1, %rdi
.Ltmp2991:
	leaq	-1(%rdi), %rdi
.Ltmp2992:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB54_23
.Ltmp2993:
# %bb.25:                               #   in Loop: Header=BB54_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
.Ltmp2994:
.LBB54_26:                              #   in Loop: Header=BB54_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:i <- $r15
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 11 5 is_stmt 1       # ./insertionssort.h:11:5
	movslq	%edi, %rdx
	.loc	18 11 18 is_stmt 0      # ./insertionssort.h:11:18
	movl	%esi, (%rax,%rdx,4)
.Ltmp2995:
	.loc	18 3 23 is_stmt 1       # ./insertionssort.h:3:23
	leaq	1(%r15), %rdi
.Ltmp2996:
	#DEBUG_VALUE: insertionSort:i <- $rdi
	.loc	18 4 15                 # ./insertionssort.h:4:15
	movl	4(%rax,%r15,4), %esi
.Ltmp2997:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	#DEBUG_VALUE: insertionSort:element <- $esi
	.loc	18 0 15 is_stmt 0       # ./insertionssort.h:0:15
	movq	%r11, %rbx
.Ltmp2998:
	.p2align	4, 0x90
.LBB54_27:                              #   Parent Loop BB54_22 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 7 22 is_stmt 1       # ./insertionssort.h:7:22
	movq	%rbx, %rdx
	sarq	$30, %rdx
	movl	(%rax,%rdx), %ebp
	.loc	18 7 31 is_stmt 0       # ./insertionssort.h:7:31
	cmpl	%esi, %ebp
	.loc	18 7 5                  # ./insertionssort.h:7:5
	jle	.LBB54_30
.Ltmp2999:
# %bb.28:                               #   in Loop: Header=BB54_27 Depth=2
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 8 20 is_stmt 1       # ./insertionssort.h:8:20
	movl	%ebp, (%rax,%rdi,4)
.Ltmp3000:
	#DEBUG_VALUE: insertionSort:j <- [DW_OP_LLVM_convert 64 7, DW_OP_LLVM_convert 32 7, DW_OP_constu 1, DW_OP_minus, DW_OP_constu 1, DW_OP_minus, DW_OP_stack_value] $rdi
	.loc	18 0 20 is_stmt 0       # ./insertionssort.h:0:20
	addq	%rcx, %rbx
	cmpq	$1, %rdi
.Ltmp3001:
	leaq	-1(%rdi), %rdi
.Ltmp3002:
	.loc	18 7 19 is_stmt 1       # ./insertionssort.h:7:19
	jg	.LBB54_27
.Ltmp3003:
# %bb.29:                               #   in Loop: Header=BB54_22 Depth=1
	#DEBUG_VALUE: insertionSort:element <- $esi
	#DEBUG_VALUE: insertionSort:array <- $rax
	.loc	18 0 19 is_stmt 0       # ./insertionssort.h:0:19
	xorl	%edi, %edi
	jmp	.LBB54_30
.Lfunc_end54:
	.size	sort_quick_standard, .Lfunc_end54-sort_quick_standard
	.cfi_endproc
                                        # -- End function
	.globl	shuffle_data            # -- Begin function shuffle_data
	.p2align	4, 0x90
	.type	shuffle_data,@function
shuffle_data:                           # @shuffle_data
.Lfunc_begin55:
	.loc	8 39 0 is_stmt 1        # benchy.c:39:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%rbx
	.cfi_def_cfa_offset 40
	pushq	%rax
	.cfi_def_cfa_offset 48
	.cfi_offset %rbx, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
.Ltmp3004:
	#DEBUG_VALUE: shuffle_data:i <- 0
	.loc	8 41 17 prologue_end    # benchy.c:41:17
	testl	%esi, %esi
.Ltmp3005:
	.loc	8 41 3 is_stmt 0        # benchy.c:41:3
	je	.LBB55_6
.Ltmp3006:
# %bb.1:
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- $esi
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rdi
	.loc	8 0 3                   # benchy.c:0:3
	movl	%esi, %r14d
.Ltmp3007:
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	movq	%rdi, %rbx
.Ltmp3008:
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	movslq	%esi, %r15
	xorl	%ebp, %ebp
	jmp	.LBB55_2
.Ltmp3009:
	.p2align	4, 0x90
.LBB55_4:                               #   in Loop: Header=BB55_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	xorl	%edx, %edx
	divq	%r15
.Ltmp3010:
.LBB55_5:                               #   in Loop: Header=BB55_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	#DEBUG_VALUE: j <- $rdx
	.loc	8 43 13 is_stmt 1       # benchy.c:43:13
	movl	(%rbx,%rdx,4), %eax
.Ltmp3011:
	#DEBUG_VALUE: t <- $eax
	.loc	8 44 23                 # benchy.c:44:23
	movl	(%rbx,%rbp,4), %ecx
	.loc	8 44 21 is_stmt 0       # benchy.c:44:21
	movl	%ecx, (%rbx,%rdx,4)
	.loc	8 45 21 is_stmt 1       # benchy.c:45:21
	movl	%eax, (%rbx,%rbp,4)
.Ltmp3012:
	.loc	8 41 26                 # benchy.c:41:26
	incq	%rbp
.Ltmp3013:
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	8 41 17 is_stmt 0       # benchy.c:41:17
	cmpq	%r15, %rbp
.Ltmp3014:
	.loc	8 41 3                  # benchy.c:41:3
	jae	.LBB55_6
.Ltmp3015:
.LBB55_2:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	8 42 21 is_stmt 1       # benchy.c:42:21
	callq	rand
.Ltmp3016:
	cltq
	.loc	8 42 19 is_stmt 0       # benchy.c:42:19
	addq	%rbp, %rax
	movq	%rax, %rcx
	orq	%r15, %rcx
	shrq	$32, %rcx
	jne	.LBB55_4
.Ltmp3017:
# %bb.3:                                #   in Loop: Header=BB55_2 Depth=1
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- $r14d
                                        # kill: def $eax killed $eax killed $rax
	.loc	8 0 19                  # benchy.c:0:19
	xorl	%edx, %edx
	divl	%r14d
                                        # kill: def $edx killed $edx def $rdx
	jmp	.LBB55_5
.Ltmp3018:
.LBB55_6:
	.loc	8 47 1 is_stmt 1        # benchy.c:47:1
	addq	$8, %rsp
	.cfi_def_cfa_offset 40
	popq	%rbx
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3019:
.Lfunc_end55:
	.size	shuffle_data, .Lfunc_end55-shuffle_data
	.cfi_endproc
                                        # -- End function
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2               # -- Begin function bench
.LCPI56_0:
	.long	1232348160              # float 1.0E+6
.LCPI56_1:
	.long	1148846080              # float 1000
.LCPI56_2:
	.long	1065353216              # float 1
.LCPI56_3:
	.long	1092616192              # float 10
.LCPI56_4:
	.long	1120403456              # float 100
	.text
	.globl	bench
	.p2align	4, 0x90
	.type	bench,@function
bench:                                  # @bench
.Lfunc_begin56:
	.loc	8 53 0                  # benchy.c:53:0
	.cfi_startproc
# %bb.0:
	#DEBUG_VALUE: bench:name <- $rdi
	#DEBUG_VALUE: bench:fun <- $rsi
	#DEBUG_VALUE: bench:array_size <- $edx
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r15
	.cfi_def_cfa_offset 24
	pushq	%r14
	.cfi_def_cfa_offset 32
	pushq	%r13
	.cfi_def_cfa_offset 40
	pushq	%r12
	.cfi_def_cfa_offset 48
	pushq	%rbx
	.cfi_def_cfa_offset 56
	subq	$24, %rsp
	.cfi_def_cfa_offset 80
	.cfi_offset %rbx, -56
	.cfi_offset %r12, -48
	.cfi_offset %r13, -40
	.cfi_offset %r14, -32
	.cfi_offset %r15, -24
	.cfi_offset %rbp, -16
	movq	%rsi, 8(%rsp)           # 8-byte Spill
	movq	%rdi, %rsi
.Ltmp3020:
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:name <- $rsi
	.loc	8 55 18 prologue_end    # benchy.c:55:18
	cmpl	$-1, %edx
.Ltmp3021:
	.loc	8 55 7 is_stmt 0        # benchy.c:55:7
	je	.LBB56_16
.Ltmp3022:
# %bb.1:
	#DEBUG_VALUE: bench:name <- $rsi
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	.loc	8 0 7                   # benchy.c:0:7
	movq	%rcx, %rbx
.Ltmp3023:
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:runs <- 0
	movq	%rsi, 16(%rsp)          # 8-byte Spill
.Ltmp3024:
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	movslq	%edx, %r15
	movl	%edx, 4(%rsp)           # 4-byte Spill
.Ltmp3025:
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	movl	%edx, %eax
	subl	$1, %eax
.Ltmp3026:
	movslq	%eax, %r13
.Ltmp3027:
	.loc	8 64 29 is_stmt 1       # benchy.c:64:29
	jae	.LBB56_2
.Ltmp3028:
# %bb.6:
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- 0
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 29 is_stmt 0        # benchy.c:0:29
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp3029:
	.p2align	4, 0x90
.LBB56_7:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB56_12 Depth 2
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- undef
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- 0
	.loc	8 69 22 is_stmt 1       # benchy.c:69:22
	rdtsc
	movq	%rdx, %rbp
	shlq	$32, %rbp
	orq	%rax, %rbp
.Ltmp3030:
	#DEBUG_VALUE: start <- $rbp
	.loc	8 70 5                  # benchy.c:70:5
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	callq	*8(%rsp)                # 8-byte Folded Reload
.Ltmp3031:
	.loc	8 71 21                 # benchy.c:71:21
	rdtsc
	shlq	$32, %rdx
	orq	%rax, %rdx
.Ltmp3032:
	#DEBUG_VALUE: stop <- $rdx
	.loc	8 72 20                 # benchy.c:72:20
	subq	%rbp, %rdx
.Ltmp3033:
	#DEBUG_VALUE: bench:total <- undef
	.loc	8 73 34                 # benchy.c:73:34
	js	.LBB56_8
.Ltmp3034:
# %bb.9:                                #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 34 is_stmt 0        # benchy.c:0:34
	vcvtsi2ss	%rdx, %xmm1, %xmm0
	jmp	.LBB56_10
.Ltmp3035:
	.p2align	4, 0x90
.LBB56_8:                               #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rdx, %rax
	shrq	%rax
	movl	%edx, %ecx
	andl	$1, %ecx
	orq	%rax, %rcx
	vcvtsi2ss	%rcx, %xmm1, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
.Ltmp3036:
.LBB56_10:                              #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- undef
	#DEBUG_VALUE: bench:runs <- undef
	.loc	8 73 56                 # benchy.c:73:56
	vdivss	.LCPI56_0(%rip), %xmm0, %xmm0
	.loc	8 73 73                 # benchy.c:73:73
	vmulss	.LCPI56_1(%rip), %xmm0, %xmm0
	.loc	8 73 32                 # benchy.c:73:32
	vmovss	%xmm0, individual_times(,%r14,4)
.Ltmp3037:
	.loc	8 83 14 is_stmt 1       # benchy.c:83:14
	testq	%r14, %r14
.Ltmp3038:
	.loc	8 83 9 is_stmt 0        # benchy.c:83:9
	je	.LBB56_11
.Ltmp3039:
.LBB56_13:                              #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- $r14
	.loc	8 0 0                   # benchy.c:0:0
	addq	%rdx, %r12
.Ltmp3040:
	#DEBUG_VALUE: bench:total <- $r12
	.loc	8 64 17 is_stmt 1       # benchy.c:64:17
	cmpq	$400000000, %r12        # imm = 0x17D78400
	setl	%al
	.loc	8 64 37 is_stmt 0       # benchy.c:64:37
	cmpq	$9, %r14
	setb	%cl
	.loc	8 65 15 is_stmt 1       # benchy.c:65:15
	cmpq	$9998, %r14             # imm = 0x270E
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	leaq	1(%r14), %r14
.Ltmp3041:
	.loc	8 64 29 is_stmt 1       # benchy.c:64:29
	ja	.LBB56_32
.Ltmp3042:
# %bb.14:                               #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	orb	%al, %cl
	jne	.LBB56_7
	jmp	.LBB56_32
.Ltmp3043:
	.p2align	4, 0x90
.LBB56_11:                              #   in Loop: Header=BB56_7 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	xorl	%ebp, %ebp
.Ltmp3044:
	.p2align	4, 0x90
.LBB56_12:                              #   Parent Loop BB56_7 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- $rbp
	.loc	8 84 33 is_stmt 1       # benchy.c:84:33
	cmpq	%r13, %rbp
.Ltmp3045:
	.loc	8 84 7 is_stmt 0        # benchy.c:84:7
	jge	.LBB56_13
.Ltmp3046:
# %bb.15:                               #   in Loop: Header=BB56_12 Depth=2
	#DEBUG_VALUE: index <- $rbp
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 85 13 is_stmt 1       # benchy.c:85:13
	movl	(%rbx,%rbp,4), %eax
	.loc	8 85 33 is_stmt 0       # benchy.c:85:33
	cmpl	4(%rbx,%rbp,4), %eax
	.loc	8 85 54                 # benchy.c:85:54
	leaq	1(%rbp), %rbp
.Ltmp3047:
	.loc	8 85 13                 # benchy.c:85:13
	jle	.LBB56_12
	jmp	.LBB56_26
.Ltmp3048:
.LBB56_16:
	#DEBUG_VALUE: bench:name <- $rsi
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rcx
	#DEBUG_VALUE: bench:array_size <- $edx
	.loc	8 56 5 is_stmt 1        # benchy.c:56:5
	movl	$.L.str, %edi
	xorl	%eax, %eax
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
	.cfi_def_cfa_offset 48
	popq	%r12
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	printf                  # TAILCALL
.Ltmp3049:
.LBB56_2:
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:runs <- 0
	#DEBUG_VALUE: bench:total <- 0
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 5 is_stmt 0         # benchy.c:0:5
	xorl	%r14d, %r14d
	xorl	%r12d, %r12d
.Ltmp3050:
	.p2align	4, 0x90
.LBB56_3:                               # =>This Loop Header: Depth=1
                                        #     Child Loop BB56_4 Depth 2
                                        #     Child Loop BB56_24 Depth 2
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- $r14
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- 0
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	xorl	%ebp, %ebp
	jmp	.LBB56_4
.Ltmp3051:
	.p2align	4, 0x90
.LBB56_17:                              #   in Loop: Header=BB56_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	xorl	%edx, %edx
	divq	%r15
.Ltmp3052:
.LBB56_18:                              #   in Loop: Header=BB56_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: j <- $rdx
	.loc	8 43 13 is_stmt 1       # benchy.c:43:13
	movl	(%rbx,%rdx,4), %eax
.Ltmp3053:
	#DEBUG_VALUE: t <- $eax
	.loc	8 44 23                 # benchy.c:44:23
	movl	(%rbx,%rbp,4), %ecx
	.loc	8 44 21 is_stmt 0       # benchy.c:44:21
	movl	%ecx, (%rbx,%rdx,4)
	.loc	8 45 21 is_stmt 1       # benchy.c:45:21
	movl	%eax, (%rbx,%rbp,4)
.Ltmp3054:
	.loc	8 41 26                 # benchy.c:41:26
	incq	%rbp
.Ltmp3055:
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	8 41 17 is_stmt 0       # benchy.c:41:17
	cmpq	%r15, %rbp
.Ltmp3056:
	.loc	8 41 3                  # benchy.c:41:3
	jae	.LBB56_19
.Ltmp3057:
.LBB56_4:                               #   Parent Loop BB56_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	.loc	8 42 21 is_stmt 1       # benchy.c:42:21
	callq	rand
.Ltmp3058:
	cltq
	.loc	8 42 19 is_stmt 0       # benchy.c:42:19
	addq	%rbp, %rax
	movq	%rax, %rcx
	orq	%r15, %rcx
	shrq	$32, %rcx
	jne	.LBB56_17
.Ltmp3059:
# %bb.5:                                #   in Loop: Header=BB56_4 Depth=2
	#DEBUG_VALUE: shuffle_data:i <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: shuffle_data:size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: shuffle_data:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
                                        # kill: def $eax killed $eax killed $rax
	.loc	8 0 19                  # benchy.c:0:19
	xorl	%edx, %edx
	divl	4(%rsp)                 # 4-byte Folded Reload
                                        # kill: def $edx killed $edx def $rdx
	jmp	.LBB56_18
.Ltmp3060:
	.p2align	4, 0x90
.LBB56_19:                              #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 69 22 is_stmt 1       # benchy.c:69:22
	rdtsc
	movq	%rdx, %rbp
	shlq	$32, %rbp
	orq	%rax, %rbp
.Ltmp3061:
	#DEBUG_VALUE: start <- $rbp
	.loc	8 70 5                  # benchy.c:70:5
	movq	%rbx, %rdi
	xorl	%esi, %esi
	movq	%r13, %rdx
	callq	*8(%rsp)                # 8-byte Folded Reload
.Ltmp3062:
	.loc	8 71 21                 # benchy.c:71:21
	rdtsc
	shlq	$32, %rdx
	orq	%rax, %rdx
.Ltmp3063:
	#DEBUG_VALUE: stop <- $rdx
	.loc	8 72 20                 # benchy.c:72:20
	subq	%rbp, %rdx
.Ltmp3064:
	#DEBUG_VALUE: bench:total <- undef
	.loc	8 73 34                 # benchy.c:73:34
	js	.LBB56_20
.Ltmp3065:
# %bb.21:                               #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 34 is_stmt 0        # benchy.c:0:34
	vcvtsi2ss	%rdx, %xmm1, %xmm0
	jmp	.LBB56_22
.Ltmp3066:
	.p2align	4, 0x90
.LBB56_20:                              #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	movq	%rdx, %rax
	shrq	%rax
	movl	%edx, %ecx
	andl	$1, %ecx
	orq	%rax, %rcx
	vcvtsi2ss	%rcx, %xmm1, %xmm0
	vaddss	%xmm0, %xmm0, %xmm0
.Ltmp3067:
.LBB56_22:                              #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- undef
	.loc	8 73 56                 # benchy.c:73:56
	vdivss	.LCPI56_0(%rip), %xmm0, %xmm0
	.loc	8 73 73                 # benchy.c:73:73
	vmulss	.LCPI56_1(%rip), %xmm0, %xmm0
	.loc	8 73 32                 # benchy.c:73:32
	vmovss	%xmm0, individual_times(,%r14,4)
.Ltmp3068:
	.loc	8 83 14 is_stmt 1       # benchy.c:83:14
	testq	%r14, %r14
.Ltmp3069:
	.loc	8 83 9 is_stmt 0        # benchy.c:83:9
	je	.LBB56_23
.Ltmp3070:
.LBB56_30:                              #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 0                   # benchy.c:0:0
	addq	%rdx, %r12
.Ltmp3071:
	#DEBUG_VALUE: bench:runs <- $r14
	#DEBUG_VALUE: bench:total <- $r12
	.loc	8 64 17 is_stmt 1       # benchy.c:64:17
	cmpq	$400000000, %r12        # imm = 0x17D78400
	setl	%al
	.loc	8 64 37 is_stmt 0       # benchy.c:64:37
	cmpq	$9, %r14
	setb	%cl
	.loc	8 65 15 is_stmt 1       # benchy.c:65:15
	cmpq	$9998, %r14             # imm = 0x270E
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	leaq	1(%r14), %r14
.Ltmp3072:
	.loc	8 64 29 is_stmt 1       # benchy.c:64:29
	ja	.LBB56_32
.Ltmp3073:
# %bb.31:                               #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	orb	%al, %cl
	jne	.LBB56_3
	jmp	.LBB56_32
.Ltmp3074:
	.p2align	4, 0x90
.LBB56_23:                              #   in Loop: Header=BB56_3 Depth=1
	#DEBUG_VALUE: start <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	xorl	%ebp, %ebp
.Ltmp3075:
	.p2align	4, 0x90
.LBB56_24:                              #   Parent Loop BB56_3 Depth=1
                                        # =>  This Inner Loop Header: Depth=2
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- $rbp
	.loc	8 84 33 is_stmt 1       # benchy.c:84:33
	cmpq	%r13, %rbp
.Ltmp3076:
	.loc	8 84 7 is_stmt 0        # benchy.c:84:7
	jge	.LBB56_30
.Ltmp3077:
# %bb.25:                               #   in Loop: Header=BB56_24 Depth=2
	#DEBUG_VALUE: index <- $rbp
	#DEBUG_VALUE: bench:runs <- [DW_OP_plus_uconst 1, DW_OP_stack_value] $r14
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 85 13 is_stmt 1       # benchy.c:85:13
	movl	(%rbx,%rbp,4), %eax
	.loc	8 85 33 is_stmt 0       # benchy.c:85:33
	cmpl	4(%rbx,%rbp,4), %eax
	.loc	8 85 54                 # benchy.c:85:54
	leaq	1(%rbp), %rbp
.Ltmp3078:
	.loc	8 85 13                 # benchy.c:85:13
	jle	.LBB56_24
.Ltmp3079:
.LBB56_26:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 86 11 is_stmt 1       # benchy.c:86:11
	movl	$.L.str.1, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp3080:
	#DEBUG_VALUE: pindex <- 0
	.loc	8 87 43                 # benchy.c:87:43
	cmpl	$0, 4(%rsp)             # 4-byte Folded Reload
.Ltmp3081:
	.loc	8 87 11 is_stmt 0       # benchy.c:87:11
	js	.LBB56_29
.Ltmp3082:
# %bb.27:
	#DEBUG_VALUE: pindex <- 0
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	incq	%r15
	xorl	%r14d, %r14d
.Ltmp3083:
.LBB56_28:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: pindex <- $r14
	.loc	8 88 27 is_stmt 1       # benchy.c:88:27
	movl	(%rbx,%r14,4), %esi
	.loc	8 88 13 is_stmt 0       # benchy.c:88:13
	movl	$.L.str.2, %edi
	xorl	%eax, %eax
	callq	printf
.Ltmp3084:
	.loc	8 87 64 is_stmt 1       # benchy.c:87:64
	incq	%r14
.Ltmp3085:
	#DEBUG_VALUE: pindex <- $r14
	.loc	8 87 43 is_stmt 0       # benchy.c:87:43
	cmpq	%r14, %r15
.Ltmp3086:
	.loc	8 87 11                 # benchy.c:87:11
	jne	.LBB56_28
.Ltmp3087:
.LBB56_29:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 92 11 is_stmt 1       # benchy.c:92:11
	movl	$.L.str.3, %edi
	movq	16(%rsp), %rsi          # 8-byte Reload
.Ltmp3088:
	#DEBUG_VALUE: bench:name <- $rsi
	movl	%ebp, %edx
	xorl	%eax, %eax
	callq	printf
.Ltmp3089:
	.loc	8 94 11                 # benchy.c:94:11
	movl	$1, %edi
	callq	exit
.Ltmp3090:
.LBB56_32:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:runs <- $r14d
	.loc	8 100 16                # benchy.c:100:16
	vcvtsi2ss	%r12, %xmm1, %xmm0
	.loc	8 100 30 is_stmt 0      # benchy.c:100:30
	vmulss	.LCPI56_1(%rip), %xmm0, %xmm0
	.loc	8 100 36                # benchy.c:100:36
	vdivss	.LCPI56_0(%rip), %xmm0, %xmm1
	.loc	8 100 55                # benchy.c:100:55
	vcvtsi2ss	%r14d, %xmm2, %xmm0
	.loc	8 100 53                # benchy.c:100:53
	vdivss	%xmm0, %xmm1, %xmm3
.Ltmp3091:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: bench:mean <- $xmm3
	.loc	8 102 3 is_stmt 1       # benchy.c:102:3
	leaq	-1(%r14), %rcx
	movl	%r14d, %eax
	andl	$7, %eax
	cmpq	$7, %rcx
	jae	.LBB56_44
.Ltmp3092:
# %bb.33:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:runs <- $r14d
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 3 is_stmt 0         # benchy.c:0:3
	vxorps	%xmm1, %xmm1, %xmm1
	xorl	%ecx, %ecx
	jmp	.LBB56_34
.Ltmp3093:
.LBB56_44:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:sum <- 0.000000e+00
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:runs <- $r14d
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 102 3                 # benchy.c:102:3
	subq	%rax, %r14
.Ltmp3094:
	.loc	8 0 3                   # benchy.c:0:3
	vxorps	%xmm1, %xmm1, %xmm1
	xorl	%ecx, %ecx
.Ltmp3095:
	.p2align	4, 0x90
.LBB56_45:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	#DEBUG_VALUE: index <- $rcx
	.loc	8 103 23 is_stmt 1      # benchy.c:103:23
	vsubss	individual_times(,%rcx,4), %xmm3, %xmm2
.Ltmp3096:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3097:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3098:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+4(,%rcx,4), %xmm3, %xmm2
.Ltmp3099:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3100:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3101:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+8(,%rcx,4), %xmm3, %xmm2
.Ltmp3102:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3103:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3104:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+12(,%rcx,4), %xmm3, %xmm2
.Ltmp3105:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3106:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3107:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+16(,%rcx,4), %xmm3, %xmm2
.Ltmp3108:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3109:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3110:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+20(,%rcx,4), %xmm3, %xmm2
.Ltmp3111:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3112:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3113:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+24(,%rcx,4), %xmm3, %xmm2
.Ltmp3114:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3115:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3116:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 103 23                # benchy.c:103:23
	vsubss	individual_times+28(,%rcx,4), %xmm3, %xmm2
.Ltmp3117:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3118:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3119:
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 102 42                # benchy.c:102:42
	addq	$8, %rcx
.Ltmp3120:
	#DEBUG_VALUE: index <- $rcx
	.loc	8 102 3 is_stmt 0       # benchy.c:102:3
	cmpq	%rcx, %r14
	jne	.LBB56_45
.Ltmp3121:
.LBB56_34:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	testq	%rax, %rax
	je	.LBB56_37
.Ltmp3122:
# %bb.35:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	leaq	individual_times(,%rcx,4), %rcx
	xorl	%edx, %edx
.Ltmp3123:
	.p2align	4, 0x90
.LBB56_36:                              # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	#DEBUG_VALUE: index <- undef
	.loc	8 103 23 is_stmt 1      # benchy.c:103:23
	vsubss	(%rcx,%rdx,4), %xmm3, %xmm2
.Ltmp3124:
	#DEBUG_VALUE: diff <- $xmm2
	.loc	8 104 20                # benchy.c:104:20
	vmulss	%xmm2, %xmm2, %xmm2
.Ltmp3125:
	#DEBUG_VALUE: square <- $xmm2
	.loc	8 105 9                 # benchy.c:105:9
	vaddss	%xmm2, %xmm1, %xmm1
.Ltmp3126:
	#DEBUG_VALUE: index <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 102 3                 # benchy.c:102:3
	incq	%rdx
	cmpq	%rdx, %rax
	jne	.LBB56_36
.Ltmp3127:
.LBB56_37:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:array_size <- [DW_OP_plus_uconst 4] [$rsp+0]
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:sum <- $xmm1
	.loc	8 107 29                # benchy.c:107:29
	vdivss	%xmm0, %xmm1, %xmm0
	vxorps	%xmm1, %xmm1, %xmm1
.Ltmp3128:
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	vucomiss	%xmm1, %xmm0
	vmovss	%xmm3, 4(%rsp)          # 4-byte Spill
.Ltmp3129:
	#DEBUG_VALUE: bench:array_size <- undef
	jb	.LBB56_39
.Ltmp3130:
# %bb.38:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	vsqrtss	%xmm0, %xmm0, %xmm0
	jmp	.LBB56_40
.Ltmp3131:
.LBB56_39:
	#DEBUG_VALUE: bench:mean <- $xmm3
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	callq	sqrtf
.Ltmp3132:
	vxorps	%xmm1, %xmm1, %xmm1
	vmovss	4(%rsp), %xmm3          # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
.Ltmp3133:
.LBB56_40:
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	vmovss	%xmm0, 8(%rsp)          # 4-byte Spill
.Ltmp3134:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 109 7 is_stmt 1       # benchy.c:109:7
	vmovss	reference_value(%rip), %xmm0 # xmm0 = mem[0],zero,zero,zero
.Ltmp3135:
	.loc	8 109 7 is_stmt 0       # benchy.c:109:7
	vucomiss	%xmm1, %xmm0
	jne	.LBB56_42
	jp	.LBB56_42
.Ltmp3136:
# %bb.41:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 110 21 is_stmt 1      # benchy.c:110:21
	vmovss	%xmm3, reference_value(%rip)
	vmovaps	%xmm3, %xmm0
.Ltmp3137:
.LBB56_42:
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:name <- [DW_OP_plus_uconst 16] [$rsp+0]
	#DEBUG_VALUE: bench:data_to_sort <- $rbx
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 21 is_stmt 0        # benchy.c:0:21
	vmovss	%xmm0, 16(%rsp)         # 4-byte Spill
.Ltmp3138:
	#DEBUG_VALUE: bench:name <- undef
	.loc	8 113 26 is_stmt 1      # benchy.c:113:26
	movl	$20, %edi
	callq	malloc
.Ltmp3139:
	.loc	8 0 26 is_stmt 0        # benchy.c:0:26
	vmovss	4(%rsp), %xmm3          # 4-byte Reload
                                        # xmm3 = mem[0],zero,zero,zero
	.loc	8 113 26                # benchy.c:113:26
	movq	%rax, %rbx
.Ltmp3140:
	#DEBUG_VALUE: bench:output <- $rbx
	.loc	8 0 26                  # benchy.c:0:26
	vmovss	.LCPI56_2(%rip), %xmm0  # xmm0 = mem[0],zero,zero,zero
.Ltmp3141:
	.loc	8 115 12 is_stmt 1      # benchy.c:115:12
	vucomiss	%xmm3, %xmm0
.Ltmp3142:
	.loc	8 115 7 is_stmt 0       # benchy.c:115:7
	jbe	.LBB56_46
.Ltmp3143:
# %bb.43:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 116 42 is_stmt 1      # benchy.c:116:42
	vcvtss2sd	%xmm3, %xmm3, %xmm0
	vmovss	8(%rsp), %xmm1          # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	.loc	8 116 48 is_stmt 0      # benchy.c:116:48
	vcvtss2sd	%xmm1, %xmm1, %xmm1
	.loc	8 116 62                # benchy.c:116:62
	vdivss	16(%rsp), %xmm3, %xmm2  # 4-byte Folded Reload
	.loc	8 116 80                # benchy.c:116:80
	vmulss	.LCPI56_4(%rip), %xmm2, %xmm2
	.loc	8 116 57                # benchy.c:116:57
	vcvtss2sd	%xmm2, %xmm2, %xmm2
	.loc	8 116 5                 # benchy.c:116:5
	movl	$.L.str.4, %esi
	jmp	.LBB56_49
.Ltmp3144:
.LBB56_46:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 5                   # benchy.c:0:5
	vmovss	.LCPI56_3(%rip), %xmm2  # xmm2 = mem[0],zero,zero,zero
.Ltmp3145:
	vcvtss2sd	%xmm3, %xmm3, %xmm0
	vmovss	8(%rsp), %xmm1          # 4-byte Reload
                                        # xmm1 = mem[0],zero,zero,zero
	vcvtss2sd	%xmm1, %xmm1, %xmm1
	.loc	8 117 19 is_stmt 1      # benchy.c:117:19
	vucomiss	%xmm3, %xmm2
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	vdivss	16(%rsp), %xmm3, %xmm2  # 4-byte Folded Reload
	vmulss	.LCPI56_4(%rip), %xmm2, %xmm2
	vcvtss2sd	%xmm2, %xmm2, %xmm2
.Ltmp3146:
	.loc	8 117 14                # benchy.c:117:14
	jbe	.LBB56_48
.Ltmp3147:
# %bb.47:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 118 5 is_stmt 1       # benchy.c:118:5
	movl	$.L.str.5, %esi
	jmp	.LBB56_49
.Ltmp3148:
.LBB56_48:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 120 5                 # benchy.c:120:5
	movl	$.L.str.6, %esi
.Ltmp3149:
.LBB56_49:
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 0 0 is_stmt 0         # benchy.c:0:0
	movq	%rbx, %rdi
	movb	$3, %al
	callq	sprintf
.Ltmp3150:
	#DEBUG_VALUE: index <- 0
	.loc	8 124 23 is_stmt 1      # benchy.c:124:23
	cmpb	$0, (%rbx)
.Ltmp3151:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	je	.LBB56_50
.Ltmp3152:
# %bb.51:
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 1
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 1(%rbx)
.Ltmp3153:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_52
.Ltmp3154:
.LBB56_53:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 2
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 2(%rbx)
.Ltmp3155:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_54
.Ltmp3156:
.LBB56_55:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 3
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 3(%rbx)
.Ltmp3157:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_56
.Ltmp3158:
.LBB56_57:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 4
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 4(%rbx)
.Ltmp3159:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_58
.Ltmp3160:
.LBB56_59:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 5
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 5(%rbx)
.Ltmp3161:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_60
.Ltmp3162:
.LBB56_61:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 6
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 6(%rbx)
.Ltmp3163:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_62
.Ltmp3164:
.LBB56_63:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 7
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 7(%rbx)
.Ltmp3165:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_64
.Ltmp3166:
.LBB56_65:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 8
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 8(%rbx)
.Ltmp3167:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_66
.Ltmp3168:
.LBB56_67:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 9
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 9(%rbx)
.Ltmp3169:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_68
.Ltmp3170:
.LBB56_69:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 10
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 10(%rbx)
.Ltmp3171:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_70
.Ltmp3172:
.LBB56_71:
	#DEBUG_VALUE: index <- 10
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 11
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 11(%rbx)
.Ltmp3173:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_72
.Ltmp3174:
.LBB56_73:
	#DEBUG_VALUE: index <- 11
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 12
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 12(%rbx)
.Ltmp3175:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_74
.Ltmp3176:
.LBB56_75:
	#DEBUG_VALUE: index <- 12
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 13
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 13(%rbx)
.Ltmp3177:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_76
.Ltmp3178:
.LBB56_77:
	#DEBUG_VALUE: index <- 13
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 14
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 14(%rbx)
.Ltmp3179:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_78
.Ltmp3180:
.LBB56_79:
	#DEBUG_VALUE: index <- 14
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 15
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 15(%rbx)
.Ltmp3181:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_80
.Ltmp3182:
.LBB56_81:
	#DEBUG_VALUE: index <- 15
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 16
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 16(%rbx)
.Ltmp3183:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_82
.Ltmp3184:
.LBB56_83:
	#DEBUG_VALUE: index <- 16
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 17
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 17(%rbx)
.Ltmp3185:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_84
.Ltmp3186:
.LBB56_85:
	#DEBUG_VALUE: index <- 17
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 18
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 18(%rbx)
.Ltmp3187:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_86
.Ltmp3188:
.LBB56_87:
	#DEBUG_VALUE: index <- 18
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 19
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 19(%rbx)
.Ltmp3189:
	.loc	8 124 9                 # benchy.c:124:9
	je	.LBB56_88
.Ltmp3190:
.LBB56_89:
	#DEBUG_VALUE: index <- 19
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: index <- 20
	.loc	8 128 3 is_stmt 1       # benchy.c:128:3
	movl	$.L.str, %edi
	movq	%rbx, %rsi
	xorl	%eax, %eax
	callq	printf
.Ltmp3191:
	.loc	8 130 3                 # benchy.c:130:3
	movq	%rbx, %rdi
	addq	$24, %rsp
	.cfi_def_cfa_offset 56
	popq	%rbx
.Ltmp3192:
	.cfi_def_cfa_offset 48
	popq	%r12
.Ltmp3193:
	.cfi_def_cfa_offset 40
	popq	%r13
	.cfi_def_cfa_offset 32
	popq	%r14
	.cfi_def_cfa_offset 24
	popq	%r15
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	jmp	free                    # TAILCALL
.Ltmp3194:
.LBB56_50:
	.cfi_def_cfa_offset 80
	#DEBUG_VALUE: index <- 0
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21                # benchy.c:125:21
	movb	$32, (%rbx)
.Ltmp3195:
	#DEBUG_VALUE: index <- 1
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 1(%rbx)
.Ltmp3196:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_53
.Ltmp3197:
.LBB56_52:
	#DEBUG_VALUE: index <- 1
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 1(%rbx)
.Ltmp3198:
	#DEBUG_VALUE: index <- 2
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 2(%rbx)
.Ltmp3199:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_55
.Ltmp3200:
.LBB56_54:
	#DEBUG_VALUE: index <- 2
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 2(%rbx)
.Ltmp3201:
	#DEBUG_VALUE: index <- 3
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 3(%rbx)
.Ltmp3202:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_57
.Ltmp3203:
.LBB56_56:
	#DEBUG_VALUE: index <- 3
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 3(%rbx)
.Ltmp3204:
	#DEBUG_VALUE: index <- 4
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 4(%rbx)
.Ltmp3205:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_59
.Ltmp3206:
.LBB56_58:
	#DEBUG_VALUE: index <- 4
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 4(%rbx)
.Ltmp3207:
	#DEBUG_VALUE: index <- 5
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 5(%rbx)
.Ltmp3208:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_61
.Ltmp3209:
.LBB56_60:
	#DEBUG_VALUE: index <- 5
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 5(%rbx)
.Ltmp3210:
	#DEBUG_VALUE: index <- 6
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 6(%rbx)
.Ltmp3211:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_63
.Ltmp3212:
.LBB56_62:
	#DEBUG_VALUE: index <- 6
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 6(%rbx)
.Ltmp3213:
	#DEBUG_VALUE: index <- 7
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 7(%rbx)
.Ltmp3214:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_65
.Ltmp3215:
.LBB56_64:
	#DEBUG_VALUE: index <- 7
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 7(%rbx)
.Ltmp3216:
	#DEBUG_VALUE: index <- 8
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 8(%rbx)
.Ltmp3217:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_67
.Ltmp3218:
.LBB56_66:
	#DEBUG_VALUE: index <- 8
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 8(%rbx)
.Ltmp3219:
	#DEBUG_VALUE: index <- 9
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 9(%rbx)
.Ltmp3220:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_69
.Ltmp3221:
.LBB56_68:
	#DEBUG_VALUE: index <- 9
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 9(%rbx)
.Ltmp3222:
	#DEBUG_VALUE: index <- 10
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 10(%rbx)
.Ltmp3223:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_71
.Ltmp3224:
.LBB56_70:
	#DEBUG_VALUE: index <- 10
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 10(%rbx)
.Ltmp3225:
	#DEBUG_VALUE: index <- 11
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 11(%rbx)
.Ltmp3226:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_73
.Ltmp3227:
.LBB56_72:
	#DEBUG_VALUE: index <- 11
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 11(%rbx)
.Ltmp3228:
	#DEBUG_VALUE: index <- 12
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 12(%rbx)
.Ltmp3229:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_75
.Ltmp3230:
.LBB56_74:
	#DEBUG_VALUE: index <- 12
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 12(%rbx)
.Ltmp3231:
	#DEBUG_VALUE: index <- 13
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 13(%rbx)
.Ltmp3232:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_77
.Ltmp3233:
.LBB56_76:
	#DEBUG_VALUE: index <- 13
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 13(%rbx)
.Ltmp3234:
	#DEBUG_VALUE: index <- 14
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 14(%rbx)
.Ltmp3235:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_79
.Ltmp3236:
.LBB56_78:
	#DEBUG_VALUE: index <- 14
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 14(%rbx)
.Ltmp3237:
	#DEBUG_VALUE: index <- 15
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 15(%rbx)
.Ltmp3238:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_81
.Ltmp3239:
.LBB56_80:
	#DEBUG_VALUE: index <- 15
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 15(%rbx)
.Ltmp3240:
	#DEBUG_VALUE: index <- 16
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 16(%rbx)
.Ltmp3241:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_83
.Ltmp3242:
.LBB56_82:
	#DEBUG_VALUE: index <- 16
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 16(%rbx)
.Ltmp3243:
	#DEBUG_VALUE: index <- 17
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 17(%rbx)
.Ltmp3244:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_85
.Ltmp3245:
.LBB56_84:
	#DEBUG_VALUE: index <- 17
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 17(%rbx)
.Ltmp3246:
	#DEBUG_VALUE: index <- 18
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 18(%rbx)
.Ltmp3247:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_87
.Ltmp3248:
.LBB56_86:
	#DEBUG_VALUE: index <- 18
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 18(%rbx)
.Ltmp3249:
	#DEBUG_VALUE: index <- 19
	.loc	8 124 23                # benchy.c:124:23
	cmpb	$0, 19(%rbx)
.Ltmp3250:
	.loc	8 124 9 is_stmt 0       # benchy.c:124:9
	jne	.LBB56_89
.Ltmp3251:
.LBB56_88:
	#DEBUG_VALUE: index <- 19
	#DEBUG_VALUE: bench:output <- $rbx
	#DEBUG_VALUE: bench:std_dev <- [DW_OP_plus_uconst 8] [$rsp+0]
	#DEBUG_VALUE: bench:total <- $r12
	#DEBUG_VALUE: bench:fun <- [DW_OP_plus_uconst 8] [$rsp+0]
	.loc	8 125 21 is_stmt 1      # benchy.c:125:21
	movb	$32, 19(%rbx)
	jmp	.LBB56_89
.Ltmp3252:
.Lfunc_end56:
	.size	bench, .Lfunc_end56-bench
	.cfi_endproc
	.file	33 "/usr/lib/llvm-10/lib/clang/10.0.0/include" "stddef.h"
                                        # -- End function
	.section	.rodata.cst32,"aM",@progbits,32
	.p2align	5               # -- Begin function main
.LCPI57_0:
	.quad	4                       # 0x4
	.quad	5                       # 0x5
	.quad	6                       # 0x6
	.quad	7                       # 0x7
.LCPI57_1:
	.quad	0                       # 0x0
	.quad	1                       # 0x1
	.quad	2                       # 0x2
	.quad	3                       # 0x3
.LCPI57_2:
	.long	0                       # 0x0
	.long	2                       # 0x2
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	4                       # 0x4
	.long	6                       # 0x6
	.long	6                       # 0x6
	.long	7                       # 0x7
	.section	.rodata.cst4,"aM",@progbits,4
	.p2align	2
.LCPI57_3:
	.long	9                       # 0x9
.LCPI57_4:
	.long	17                      # 0x11
.LCPI57_5:
	.long	25                      # 0x19
.LCPI57_6:
	.long	33                      # 0x21
.LCPI57_7:
	.long	41                      # 0x29
.LCPI57_8:
	.long	49                      # 0x31
.LCPI57_9:
	.long	57                      # 0x39
	.section	.rodata.cst8,"aM",@progbits,8
	.p2align	3
.LCPI57_10:
	.quad	64                      # 0x40
	.text
	.globl	main
	.p2align	4, 0x90
	.type	main,@function
main:                                   # @main
.Lfunc_begin57:
	.loc	8 152 0                 # benchy.c:152:0
	.cfi_startproc
# %bb.0:
	pushq	%rbp
	.cfi_def_cfa_offset 16
	pushq	%r14
	.cfi_def_cfa_offset 24
	pushq	%rbx
	.cfi_def_cfa_offset 32
	subq	$8000000, %rsp          # imm = 0x7A1200
	.cfi_def_cfa_offset 8000032
	.cfi_offset %rbx, -32
	.cfi_offset %r14, -24
	.cfi_offset %rbp, -16
	.loc	8 153 3 prologue_end    # benchy.c:153:3
	movl	$.Lstr, %edi
	callq	puts
.Ltmp3253:
	.loc	8 162 3                 # benchy.c:162:3
	movl	$.Lstr.23, %edi
	callq	puts
.Ltmp3254:
	#DEBUG_VALUE: random_data:amount <- 2000000
	#DEBUG_VALUE: random_data:array <- $rsp
	.loc	19 5 9                  # ./data-random.h:5:9
	callq	clock
.Ltmp3255:
	.loc	19 5 3 is_stmt 0        # ./data-random.h:5:3
	movl	%eax, %edi
	callq	srand
.Ltmp3256:
	.loc	19 0 3                  # ./data-random.h:0:3
	vmovdqa	.LCPI57_0(%rip), %ymm0  # ymm0 = [4,5,6,7]
	vmovdqa	.LCPI57_1(%rip), %ymm1  # ymm1 = [0,1,2,3]
	movl	$56, %eax
.Ltmp3257:
	#DEBUG_VALUE: i <- 0
	vmovdqa	.LCPI57_2(%rip), %ymm2  # ymm2 = [0,2,4,6,4,6,6,7]
	vpcmpeqd	%ymm3, %ymm3, %ymm3
	vpbroadcastd	.LCPI57_3(%rip), %ymm4 # ymm4 = [9,9,9,9,9,9,9,9]
	vpbroadcastd	.LCPI57_4(%rip), %ymm5 # ymm5 = [17,17,17,17,17,17,17,17]
	vpbroadcastd	.LCPI57_5(%rip), %ymm6 # ymm6 = [25,25,25,25,25,25,25,25]
	vpbroadcastd	.LCPI57_6(%rip), %ymm7 # ymm7 = [33,33,33,33,33,33,33,33]
	vpbroadcastd	.LCPI57_7(%rip), %ymm8 # ymm8 = [41,41,41,41,41,41,41,41]
	vpbroadcastd	.LCPI57_8(%rip), %ymm9 # ymm9 = [49,49,49,49,49,49,49,49]
	vpbroadcastd	.LCPI57_9(%rip), %ymm10 # ymm10 = [57,57,57,57,57,57,57,57]
	vpbroadcastq	.LCPI57_10(%rip), %ymm11 # ymm11 = [64,64,64,64]
.Ltmp3258:
	.p2align	4, 0x90
.LBB57_1:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rsp
	#DEBUG_VALUE: random_data:amount <- 2000000
	.loc	19 7 14 is_stmt 1       # ./data-random.h:7:14
	vpermd	%ymm1, %ymm2, %ymm12
	vpermd	%ymm0, %ymm2, %ymm13
	vinserti128	$1, %xmm13, %ymm12, %ymm12
	vpsubd	%ymm3, %ymm12, %ymm13
	vmovdqu	%ymm13, -224(%rsp,%rax,4)
	vpaddd	%ymm4, %ymm12, %ymm13
	vmovdqu	%ymm13, -192(%rsp,%rax,4)
	vpaddd	%ymm5, %ymm12, %ymm13
	vmovdqu	%ymm13, -160(%rsp,%rax,4)
	vpaddd	%ymm6, %ymm12, %ymm13
	vmovdqu	%ymm13, -128(%rsp,%rax,4)
	vpaddd	%ymm7, %ymm12, %ymm13
	vmovdqu	%ymm13, -96(%rsp,%rax,4)
	vpaddd	%ymm8, %ymm12, %ymm13
	vmovdqu	%ymm13, -64(%rsp,%rax,4)
	vpaddd	%ymm9, %ymm12, %ymm13
	vmovdqu	%ymm13, -32(%rsp,%rax,4)
	vpaddd	%ymm10, %ymm12, %ymm12
	vmovdqu	%ymm12, (%rsp,%rax,4)
	vpaddq	%ymm1, %ymm11, %ymm1
	vpaddq	%ymm0, %ymm11, %ymm0
	.loc	19 7 18 is_stmt 0       # ./data-random.h:7:18
	addq	$64, %rax
	cmpq	$2000056, %rax          # imm = 0x1E84B8
	jne	.LBB57_1
.Ltmp3259:
# %bb.2:
	#DEBUG_VALUE: i <- 0
	#DEBUG_VALUE: random_data:array <- $rsp
	#DEBUG_VALUE: random_data:amount <- 2000000
	.loc	19 0 18                 # ./data-random.h:0:18
	movq	$-9, %rbx
	movq	%rsp, %r14
	jmp	.LBB57_3
.Ltmp3260:
	.p2align	4, 0x90
.LBB57_5:                               #   in Loop: Header=BB57_3 Depth=1
	.loc	8 201 5 is_stmt 1       # benchy.c:201:5
	movl	$10, %edi
	callq	putchar
.Ltmp3261:
	#DEBUG_VALUE: i <- [DW_OP_plus_uconst 1, DW_OP_stack_value] undef
	.loc	8 165 21                # benchy.c:165:21
	incq	%rbx
.Ltmp3262:
	.loc	8 165 3 is_stmt 0       # benchy.c:165:3
	je	.LBB57_6
.Ltmp3263:
.LBB57_3:                               # =>This Inner Loop Header: Depth=1
	#DEBUG_VALUE: i <- undef
	.loc	8 166 21 is_stmt 1      # benchy.c:166:21
	movl	$0, reference_value(%rip)
	.loc	8 167 55                # benchy.c:167:55
	movl	.L__const.main.array_sizes+36(,%rbx,4), %ebp
	.loc	8 167 5 is_stmt 0       # benchy.c:167:5
	movl	$.L.str.9, %edi
	movl	$sort_quick_standard, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	vzeroupper
	callq	bench
.Ltmp3264:
	.loc	8 169 5 is_stmt 1       # benchy.c:169:5
	movl	$.L.str.10, %edi
	movl	$sort_quick_optimized, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3265:
	.loc	8 170 5                 # benchy.c:170:5
	movl	$.L.str.11, %edi
	movl	$sort_quick_simd, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3266:
	.loc	8 171 5                 # benchy.c:171:5
	movl	$.L.str.12, %edi
	movl	$sort_quick_optimized_swap_arith, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3267:
	.loc	8 173 5                 # benchy.c:173:5
	movl	$.L.str.13, %edi
	movl	$sort_quick_optimized_swap_cmov, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3268:
	.loc	8 175 5                 # benchy.c:175:5
	movl	$.L.str.14, %edi
	movl	$sort_quick_optimized_swap_array, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3269:
	.loc	8 177 5                 # benchy.c:177:5
	movl	$.L.str.15, %edi
	movl	$sort_quick_optimized_swap_asm, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3270:
	.loc	8 189 5                 # benchy.c:189:5
	movl	$.L.str.16, %edi
	movl	$sort_quick_block, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3271:
	.loc	8 191 5                 # benchy.c:191:5
	movl	$.L.str.17, %edi
	movl	$sort_merge_standard, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3272:
	.loc	8 193 5                 # benchy.c:193:5
	movl	$.L.str.18, %edi
	movl	$sort_merge_optimized, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3273:
	.loc	8 195 5                 # benchy.c:195:5
	movl	$.L.str.19, %edi
	movl	$heapsort, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3274:
	.loc	8 196 5                 # benchy.c:196:5
	movl	$.L.str.20, %edi
	movl	$heapsorto, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3275:
	.loc	8 197 24                # benchy.c:197:24
	leaq	2(%rbx), %rax
	cmpq	$2, %rax
.Ltmp3276:
	.loc	8 197 9 is_stmt 0       # benchy.c:197:9
	jb	.LBB57_5
.Ltmp3277:
# %bb.4:                                #   in Loop: Header=BB57_3 Depth=1
	.loc	8 198 7 is_stmt 1       # benchy.c:198:7
	movl	$.L.str.21, %edi
	movl	$insertionSortStd, %esi
	movl	%ebp, %edx
	movq	%r14, %rcx
	callq	bench
.Ltmp3278:
	.loc	8 0 7 is_stmt 0         # benchy.c:0:7
	jmp	.LBB57_5
.Ltmp3279:
.LBB57_6:
	.loc	8 220 1 is_stmt 1       # benchy.c:220:1
	xorl	%eax, %eax
	addq	$8000000, %rsp          # imm = 0x7A1200
	.cfi_def_cfa_offset 32
	popq	%rbx
	.cfi_def_cfa_offset 24
	popq	%r14
	.cfi_def_cfa_offset 16
	popq	%rbp
	.cfi_def_cfa_offset 8
	retq
.Ltmp3280:
.Lfunc_end57:
	.size	main, .Lfunc_end57-main
	.cfi_endproc
                                        # -- End function
	.type	INSERTION_SORT_THRESH_BLOCK,@object # @INSERTION_SORT_THRESH_BLOCK
	.section	.rodata,"a",@progbits
	.globl	INSERTION_SORT_THRESH_BLOCK
	.p2align	2
INSERTION_SORT_THRESH_BLOCK:
	.long	20                      # 0x14
	.size	INSERTION_SORT_THRESH_BLOCK, 4

	.type	blocksize,@object       # @blocksize
	.globl	blocksize
	.p2align	2
blocksize:
	.long	128                     # 0x80
	.size	blocksize, 4

	.type	count,@object           # @count
	.bss
	.globl	count
	.p2align	2
count:
	.long	0                       # 0x0
	.size	count, 4

	.type	b,@object               # @b
	.comm	b,4000000,16
	.type	x,@object               # @x
	.comm	x,8,4
	.type	DATA_AMOUNT,@object     # @DATA_AMOUNT
	.section	.rodata,"a",@progbits
	.globl	DATA_AMOUNT
	.p2align	2
DATA_AMOUNT:
	.long	2000000                 # 0x1e8480
	.size	DATA_AMOUNT, 4

	.type	reference_value,@object # @reference_value
	.bss
	.globl	reference_value
	.p2align	2
reference_value:
	.long	0                       # float 0
	.size	reference_value, 4

	.type	.L.str,@object          # @.str
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str:
	.asciz	"%s"
	.size	.L.str, 3

	.type	individual_times,@object # @individual_times
	.comm	individual_times,40000,16
	.type	.L.str.1,@object        # @.str.1
.L.str.1:
	.asciz	"\nArray "
	.size	.L.str.1, 8

	.type	.L.str.2,@object        # @.str.2
.L.str.2:
	.asciz	"%d "
	.size	.L.str.2, 4

	.type	.L.str.3,@object        # @.str.3
.L.str.3:
	.asciz	"Integrity check failed for %s at index %d\n"
	.size	.L.str.3, 43

	.type	.L.str.4,@object        # @.str.4
.L.str.4:
	.asciz	"%.2f\302\261%.2f %.0f%%"
	.size	.L.str.4, 18

	.type	.L.str.5,@object        # @.str.5
.L.str.5:
	.asciz	"%.1f\302\261%.1f %.0f%%"
	.size	.L.str.5, 18

	.type	.L.str.6,@object        # @.str.6
.L.str.6:
	.asciz	"%.0f\302\261%.0f %.0f%%"
	.size	.L.str.6, 18

	.type	.L__const.main.array_sizes,@object # @__const.main.array_sizes
	.section	.rodata,"a",@progbits
	.p2align	4
.L__const.main.array_sizes:
	.long	4294967295              # 0xffffffff
	.long	10                      # 0xa
	.long	20                      # 0x14
	.long	30                      # 0x1e
	.long	100                     # 0x64
	.long	1000                    # 0x3e8
	.long	10000                   # 0x2710
	.long	100000                  # 0x186a0
	.long	1000000                 # 0xf4240
	.size	.L__const.main.array_sizes, 36

	.type	.L.str.9,@object        # @.str.9
	.section	.rodata.str1.1,"aMS",@progbits,1
.L.str.9:
	.asciz	"QStd               "
	.size	.L.str.9, 20

	.type	.L.str.10,@object       # @.str.10
.L.str.10:
	.asciz	"QOpt               "
	.size	.L.str.10, 20

	.type	.L.str.11,@object       # @.str.11
.L.str.11:
	.asciz	"QSIMD              "
	.size	.L.str.11, 20

	.type	.L.str.12,@object       # @.str.12
.L.str.12:
	.asciz	"QArith             "
	.size	.L.str.12, 20

	.type	.L.str.13,@object       # @.str.13
.L.str.13:
	.asciz	"QCMov              "
	.size	.L.str.13, 20

	.type	.L.str.14,@object       # @.str.14
.L.str.14:
	.asciz	"QArray             "
	.size	.L.str.14, 20

	.type	.L.str.15,@object       # @.str.15
.L.str.15:
	.asciz	"QAsm               "
	.size	.L.str.15, 20

	.type	.L.str.16,@object       # @.str.16
.L.str.16:
	.asciz	"QBlock             "
	.size	.L.str.16, 20

	.type	.L.str.17,@object       # @.str.17
.L.str.17:
	.asciz	"MSStd              "
	.size	.L.str.17, 20

	.type	.L.str.18,@object       # @.str.18
.L.str.18:
	.asciz	"MSOpt              "
	.size	.L.str.18, 20

	.type	.L.str.19,@object       # @.str.19
.L.str.19:
	.asciz	"Heap               "
	.size	.L.str.19, 20

	.type	.L.str.20,@object       # @.str.20
.L.str.20:
	.asciz	"HeapO              "
	.size	.L.str.20, 20

	.type	.L.str.21,@object       # @.str.21
.L.str.21:
	.asciz	"Insertion          "
	.size	.L.str.21, 20

	.type	.Lstr,@object           # @str
.Lstr:
	.asciz	"Starting"
	.size	.Lstr, 9

	.type	.Lstr.23,@object        # @str.23
.Lstr.23:
	.asciz	"Generating random data"
	.size	.Lstr.23, 23

	.file	34 "/usr/include/x86_64-linux-gnu/bits/types" "clock_t.h"
	.section	.debug_str,"MS",@progbits,1
.Linfo_string0:
	.asciz	"clang version 10.0.0-4ubuntu1 " # string offset=0
.Linfo_string1:
	.asciz	"benchy.c"              # string offset=31
.Linfo_string2:
	.asciz	"/home/peeters/bachelor" # string offset=40
.Linfo_string3:
	.asciz	"median_of_three"       # string offset=63
.Linfo_string4:
	.asciz	"int"                   # string offset=79
.Linfo_string5:
	.asciz	"long int"              # string offset=83
.Linfo_string6:
	.asciz	"min"                   # string offset=92
.Linfo_string7:
	.asciz	"swap"                  # string offset=96
.Linfo_string8:
	.asciz	"insertionSort"         # string offset=101
.Linfo_string9:
	.asciz	"clock"                 # string offset=115
.Linfo_string10:
	.asciz	"srand"                 # string offset=121
.Linfo_string11:
	.asciz	"unsigned int"          # string offset=127
.Linfo_string12:
	.asciz	"max"                   # string offset=140
.Linfo_string13:
	.asciz	"free"                  # string offset=144
.Linfo_string14:
	.asciz	"hsum_8x32"             # string offset=149
.Linfo_string15:
	.asciz	"long long int"         # string offset=159
.Linfo_string16:
	.asciz	"__ARRAY_SIZE_TYPE__"   # string offset=173
.Linfo_string17:
	.asciz	"hsum_epi32_avx"        # string offset=193
.Linfo_string18:
	.asciz	"rand"                  # string offset=208
.Linfo_string19:
	.asciz	"INSERTION_SORT_THRESH_BLOCK" # string offset=213
.Linfo_string20:
	.asciz	"blocksize"             # string offset=241
.Linfo_string21:
	.asciz	"count"                 # string offset=251
.Linfo_string22:
	.asciz	"DATA_AMOUNT"           # string offset=257
.Linfo_string23:
	.asciz	"reference_value"       # string offset=269
.Linfo_string24:
	.asciz	"float"                 # string offset=285
.Linfo_string25:
	.asciz	"x"                     # string offset=291
.Linfo_string26:
	.asciz	"b"                     # string offset=293
.Linfo_string27:
	.asciz	"individual_times"      # string offset=295
.Linfo_string28:
	.asciz	"__m256i"               # string offset=312
.Linfo_string29:
	.asciz	"__m128i"               # string offset=320
.Linfo_string30:
	.asciz	"__m256i_u"             # string offset=328
.Linfo_string31:
	.asciz	"__v4si"                # string offset=338
.Linfo_string32:
	.asciz	"__v4di"                # string offset=345
.Linfo_string33:
	.asciz	"__clock_t"             # string offset=352
.Linfo_string34:
	.asciz	"char"                  # string offset=362
.Linfo_string35:
	.asciz	"__v"                   # string offset=367
.Linfo_string36:
	.asciz	"__storeu_si256"        # string offset=371
.Linfo_string37:
	.asciz	"__loadu_si256"         # string offset=386
.Linfo_string38:
	.asciz	"__v8si"                # string offset=400
.Linfo_string39:
	.asciz	"__m128i_u"             # string offset=407
.Linfo_string40:
	.asciz	"__loadu_si128"         # string offset=417
.Linfo_string41:
	.asciz	"__v8su"                # string offset=431
.Linfo_string42:
	.asciz	"__v2di"                # string offset=438
.Linfo_string43:
	.asciz	"__v4su"                # string offset=445
.Linfo_string44:
	.asciz	"array"                 # string offset=452
.Linfo_string45:
	.asciz	"low"                   # string offset=458
.Linfo_string46:
	.asciz	"__int64_t"             # string offset=462
.Linfo_string47:
	.asciz	"int64_t"               # string offset=472
.Linfo_string48:
	.asciz	"high"                  # string offset=480
.Linfo_string49:
	.asciz	"mid"                   # string offset=485
.Linfo_string50:
	.asciz	"y"                     # string offset=489
.Linfo_string51:
	.asciz	"z"                     # string offset=491
.Linfo_string52:
	.asciz	"smallest"              # string offset=493
.Linfo_string53:
	.asciz	"largest"               # string offset=502
.Linfo_string54:
	.asciz	"median"                # string offset=510
.Linfo_string55:
	.asciz	"a"                     # string offset=517
.Linfo_string56:
	.asciz	"t"                     # string offset=519
.Linfo_string57:
	.asciz	"n"                     # string offset=521
.Linfo_string58:
	.asciz	"i"                     # string offset=523
.Linfo_string59:
	.asciz	"j"                     # string offset=525
.Linfo_string60:
	.asciz	"element"               # string offset=527
.Linfo_string61:
	.asciz	"heapify"               # string offset=535
.Linfo_string62:
	.asciz	"arr"                   # string offset=543
.Linfo_string63:
	.asciz	"l"                     # string offset=547
.Linfo_string64:
	.asciz	"r"                     # string offset=549
.Linfo_string65:
	.asciz	"heapifyo"              # string offset=551
.Linfo_string66:
	.asciz	"c"                     # string offset=560
.Linfo_string67:
	.asciz	"sort_pair"             # string offset=562
.Linfo_string68:
	.asciz	"i1"                    # string offset=572
.Linfo_string69:
	.asciz	"i2"                    # string offset=575
.Linfo_string70:
	.asciz	"median_of_three_auto_finish" # string offset=578
.Linfo_string71:
	.asciz	"done"                  # string offset=606
.Linfo_string72:
	.asciz	"merging_optimzed"      # string offset=611
.Linfo_string73:
	.asciz	"l2"                    # string offset=628
.Linfo_string74:
	.asciz	"l1"                    # string offset=631
.Linfo_string75:
	.asciz	"merging_standard"      # string offset=634
.Linfo_string76:
	.asciz	"partition_quick_optimized" # string offset=651
.Linfo_string77:
	.asciz	"pivot"                 # string offset=677
.Linfo_string78:
	.asciz	"insertionSortOptimized" # string offset=683
.Linfo_string79:
	.asciz	"partition_quick_optimized_dual" # string offset=706
.Linfo_string80:
	.asciz	"plow"                  # string offset=737
.Linfo_string81:
	.asciz	"phigh"                 # string offset=742
.Linfo_string82:
	.asciz	"k"                     # string offset=748
.Linfo_string83:
	.asciz	"pivot_high"            # string offset=750
.Linfo_string84:
	.asciz	"pivot_low"             # string offset=761
.Linfo_string85:
	.asciz	"g"                     # string offset=771
.Linfo_string86:
	.asciz	"__uint32_t"            # string offset=773
.Linfo_string87:
	.asciz	"uint32_t"              # string offset=784
.Linfo_string88:
	.asciz	"v"                     # string offset=793
.Linfo_string89:
	.asciz	"sum128"                # string offset=795
.Linfo_string90:
	.asciz	"hi64"                  # string offset=802
.Linfo_string91:
	.asciz	"sum64"                 # string offset=807
.Linfo_string92:
	.asciz	"hi32"                  # string offset=813
.Linfo_string93:
	.asciz	"sum32"                 # string offset=818
.Linfo_string94:
	.asciz	"partition_quick_multi" # string offset=824
.Linfo_string95:
	.asciz	"targets"               # string offset=846
.Linfo_string96:
	.asciz	"tmp"                   # string offset=854
.Linfo_string97:
	.asciz	"size"                  # string offset=858
.Linfo_string98:
	.asciz	"pivots"                # string offset=863
.Linfo_string99:
	.asciz	"arrayIndex"            # string offset=870
.Linfo_string100:
	.asciz	"currentValue"          # string offset=881
.Linfo_string101:
	.asciz	"compares"              # string offset=894
.Linfo_string102:
	.asciz	"index"                 # string offset=903
.Linfo_string103:
	.asciz	"partition_quick_multi_x4_inplace" # string offset=909
.Linfo_string104:
	.asciz	"t0"                    # string offset=942
.Linfo_string105:
	.asciz	"t1"                    # string offset=945
.Linfo_string106:
	.asciz	"p2"                    # string offset=948
.Linfo_string107:
	.asciz	"p1"                    # string offset=951
.Linfo_string108:
	.asciz	"partition_quick_optimized_swap_arith" # string offset=954
.Linfo_string109:
	.asciz	"f"                     # string offset=991
.Linfo_string110:
	.asciz	"d"                     # string offset=993
.Linfo_string111:
	.asciz	"partition_quick_optimized_swap_array" # string offset=995
.Linfo_string112:
	.asciz	"partition_quick_optimized_swap_asm" # string offset=1032
.Linfo_string113:
	.asciz	"partition_quick_optimized_swap_cmov" # string offset=1067
.Linfo_string114:
	.asciz	"partition_quick_standard" # string offset=1103
.Linfo_string115:
	.asciz	"shuffle_data"          # string offset=1128
.Linfo_string116:
	.asciz	"data_to_sort"          # string offset=1141
.Linfo_string117:
	.asciz	"long unsigned int"     # string offset=1154
.Linfo_string118:
	.asciz	"size_t"                # string offset=1172
.Linfo_string119:
	.asciz	"random_data"           # string offset=1179
.Linfo_string120:
	.asciz	"amount"                # string offset=1191
.Linfo_string121:
	.asciz	"partition_quick_block" # string offset=1198
.Linfo_string122:
	.asciz	"sort_quick_block"      # string offset=1220
.Linfo_string123:
	.asciz	"insertionSortStd"      # string offset=1237
.Linfo_string124:
	.asciz	"heapsort_h"            # string offset=1254
.Linfo_string125:
	.asciz	"heapsort"              # string offset=1265
.Linfo_string126:
	.asciz	"heapsorto_h"           # string offset=1274
.Linfo_string127:
	.asciz	"heapsorto"             # string offset=1286
.Linfo_string128:
	.asciz	"median_of_three_of_median_of_three_auto_finish" # string offset=1296
.Linfo_string129:
	.asciz	"sign"                  # string offset=1343
.Linfo_string130:
	.asciz	"sort_merge_o"          # string offset=1348
.Linfo_string131:
	.asciz	"sort_merge_optimized"  # string offset=1361
.Linfo_string132:
	.asciz	"sort_merge_standard"   # string offset=1382
.Linfo_string133:
	.asciz	"sort_quick_optimized"  # string offset=1402
.Linfo_string134:
	.asciz	"sort_quick_optimized_dual" # string offset=1423
.Linfo_string135:
	.asciz	"sort_quick_multi_h"    # string offset=1449
.Linfo_string136:
	.asciz	"sort_quick_multi"      # string offset=1468
.Linfo_string137:
	.asciz	"partition_quick_multi_inplace" # string offset=1485
.Linfo_string138:
	.asciz	"sort_quick_multi_inplace_h" # string offset=1515
.Linfo_string139:
	.asciz	"sort_quick_multi_inplace" # string offset=1542
.Linfo_string140:
	.asciz	"partition_quick_multix4" # string offset=1567
.Linfo_string141:
	.asciz	"sort_quick_multix4_h"  # string offset=1591
.Linfo_string142:
	.asciz	"sort_quick_multix4"    # string offset=1612
.Linfo_string143:
	.asciz	"sort_quick_multi_x4_inplace_h" # string offset=1631
.Linfo_string144:
	.asciz	"sort_quick_multi_x4_inplace" # string offset=1661
.Linfo_string145:
	.asciz	"partition_quick_simd"  # string offset=1689
.Linfo_string146:
	.asciz	"sort_quick_simd"       # string offset=1710
.Linfo_string147:
	.asciz	"sort_quick_optimized_swap_arith" # string offset=1726
.Linfo_string148:
	.asciz	"sort_quick_optimized_swap_array" # string offset=1758
.Linfo_string149:
	.asciz	"sort_quick_optimized_swap_asm" # string offset=1790
.Linfo_string150:
	.asciz	"sort_quick_optimized_swap_cmov" # string offset=1820
.Linfo_string151:
	.asciz	"sort_quick_standard"   # string offset=1851
.Linfo_string152:
	.asciz	"bench"                 # string offset=1871
.Linfo_string153:
	.asciz	"main"                  # string offset=1877
.Linfo_string154:
	.asciz	"offsetsL"              # string offset=1882
.Linfo_string155:
	.asciz	"offsetsR"              # string offset=1891
.Linfo_string156:
	.asciz	"pivot_position"        # string offset=1900
.Linfo_string157:
	.asciz	"numR"                  # string offset=1915
.Linfo_string158:
	.asciz	"numL"                  # string offset=1920
.Linfo_string159:
	.asciz	"startR"                # string offset=1925
.Linfo_string160:
	.asciz	"startL"                # string offset=1932
.Linfo_string161:
	.asciz	"num"                   # string offset=1939
.Linfo_string162:
	.asciz	"shiftR"                # string offset=1943
.Linfo_string163:
	.asciz	"shiftL"                # string offset=1950
.Linfo_string164:
	.asciz	"lower"                 # string offset=1957
.Linfo_string165:
	.asciz	"upper"                 # string offset=1963
.Linfo_string166:
	.asciz	"pi"                    # string offset=1969
.Linfo_string167:
	.asciz	"offset"                # string offset=1972
.Linfo_string168:
	.asciz	"start"                 # string offset=1979
.Linfo_string169:
	.asciz	"end"                   # string offset=1985
.Linfo_string170:
	.asciz	"carray"                # string offset=1989
.Linfo_string171:
	.asciz	"zeros"                 # string offset=1996
.Linfo_string172:
	.asciz	"p"                     # string offset=2002
.Linfo_string173:
	.asciz	"values"                # string offset=2004
.Linfo_string174:
	.asciz	"cs"                    # string offset=2011
.Linfo_string175:
	.asciz	"name"                  # string offset=2014
.Linfo_string176:
	.asciz	"fun"                   # string offset=2019
.Linfo_string177:
	.asciz	"array_size"            # string offset=2023
.Linfo_string178:
	.asciz	"total"                 # string offset=2034
.Linfo_string179:
	.asciz	"clock_t"               # string offset=2040
.Linfo_string180:
	.asciz	"runs"                  # string offset=2048
.Linfo_string181:
	.asciz	"__uint64_t"            # string offset=2053
.Linfo_string182:
	.asciz	"uint64_t"              # string offset=2064
.Linfo_string183:
	.asciz	"stop"                  # string offset=2073
.Linfo_string184:
	.asciz	"pindex"                # string offset=2078
.Linfo_string185:
	.asciz	"sum"                   # string offset=2085
.Linfo_string186:
	.asciz	"mean"                  # string offset=2089
.Linfo_string187:
	.asciz	"diff"                  # string offset=2094
.Linfo_string188:
	.asciz	"square"                # string offset=2099
.Linfo_string189:
	.asciz	"std_dev"               # string offset=2106
.Linfo_string190:
	.asciz	"output"                # string offset=2114
.Linfo_string191:
	.asciz	"array_sizes"           # string offset=2121
	.section	.debug_loc,"",@progbits
.Ldebug_loc0:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc1:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp24-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp190-.Lfunc_begin0
	.quad	.Ltmp196-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp196-.Lfunc_begin0
	.quad	.Ltmp197-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp197-.Lfunc_begin0
	.quad	.Ltmp230-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp230-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp247-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc2:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp257-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc3:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc4:
	.quad	.Lfunc_begin0-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc5:
	.quad	.Ltmp3-.Lfunc_begin0
	.quad	.Ltmp9-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc6:
	.quad	.Ltmp4-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc7:
	.quad	.Ltmp5-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc8:
	.quad	.Ltmp6-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc9:
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc10:
	.quad	.Ltmp7-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc11:
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp13-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc12:
	.quad	.Ltmp8-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc13:
	.quad	.Ltmp10-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc14:
	.quad	.Ltmp10-.Lfunc_begin0
	.quad	.Ltmp11-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc15:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc16:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc17:
	.quad	.Ltmp11-.Lfunc_begin0
	.quad	.Ltmp12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc18:
	.quad	.Ltmp12-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc19:
	.quad	.Ltmp14-.Lfunc_begin0
	.quad	.Ltmp15-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc20:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp165-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc21:
	.quad	.Ltmp15-.Lfunc_begin0
	.quad	.Ltmp17-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp17-.Lfunc_begin0
	.quad	.Ltmp204-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp204-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp227-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp232-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp232-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.short	4                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	152                     # -104
	.byte	127                     # 
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp245-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	122                     # DW_OP_breg10
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc22:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp45-.Lfunc_begin0
	.quad	.Ltmp47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp47-.Lfunc_begin0
	.quad	.Ltmp49-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp49-.Lfunc_begin0
	.quad	.Ltmp51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp51-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp103-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp129-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp129-.Lfunc_begin0
	.quad	.Ltmp131-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp131-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp137-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp140-.Lfunc_begin0
	.quad	.Ltmp143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp143-.Lfunc_begin0
	.quad	.Ltmp144-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp144-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp148-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp148-.Lfunc_begin0
	.quad	.Ltmp149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp149-.Lfunc_begin0
	.quad	.Ltmp150-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp150-.Lfunc_begin0
	.quad	.Ltmp151-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp151-.Lfunc_begin0
	.quad	.Ltmp152-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp152-.Lfunc_begin0
	.quad	.Ltmp154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp157-.Lfunc_begin0
	.quad	.Ltmp158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp158-.Lfunc_begin0
	.quad	.Ltmp159-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp194-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp197-.Lfunc_begin0
	.quad	.Ltmp199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp219-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp243-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc23:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp34-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp34-.Lfunc_begin0
	.quad	.Ltmp35-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp35-.Lfunc_begin0
	.quad	.Ltmp36-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp36-.Lfunc_begin0
	.quad	.Ltmp37-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp37-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp112-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp112-.Lfunc_begin0
	.quad	.Ltmp113-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp114-.Lfunc_begin0
	.quad	.Ltmp115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp116-.Lfunc_begin0
	.quad	.Ltmp117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp118-.Lfunc_begin0
	.quad	.Ltmp123-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp124-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp128-.Lfunc_begin0
	.quad	.Ltmp130-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp130-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp135-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	.Ltmp139-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp139-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp204-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp217-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp232-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc24:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp21-.Lfunc_begin0
	.quad	.Ltmp43-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp58-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp88-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp91-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp106-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp110-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp147-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp193-.Lfunc_begin0
	.quad	.Ltmp212-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	136                     # -120
	.byte	127                     # 
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp249-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc25:
	.quad	.Ltmp16-.Lfunc_begin0
	.quad	.Ltmp19-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp20-.Lfunc_begin0
	.quad	.Ltmp32-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp40-.Lfunc_begin0
	.quad	.Ltmp62-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	.Ltmp80-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp89-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp91-.Lfunc_begin0
	.quad	.Ltmp95-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp95-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp109-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp161-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp191-.Lfunc_begin0
	.quad	.Ltmp198-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp198-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	168                     # -88
	.byte	127                     # 
	.quad	0
	.quad	0
.Ldebug_loc26:
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp28-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp59-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp59-.Lfunc_begin0
	.quad	.Ltmp73-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	160                     # -96
	.byte	127                     # 
	.quad	.Ltmp73-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc27:
	.quad	.Ltmp33-.Lfunc_begin0
	.quad	.Ltmp38-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc28:
	.quad	.Ltmp44-.Lfunc_begin0
	.quad	.Ltmp46-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp52-.Lfunc_begin0
	.quad	.Ltmp54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc29:
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc30:
	.quad	.Ltmp54-.Lfunc_begin0
	.quad	.Ltmp57-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc31:
	.quad	.Ltmp55-.Lfunc_begin0
	.quad	.Ltmp63-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp63-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp74-.Lfunc_begin0
	.quad	.Ltmp78-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc32:
	.quad	.Ltmp65-.Lfunc_begin0
	.quad	.Ltmp67-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp69-.Lfunc_begin0
	.quad	.Ltmp72-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp77-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc33:
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp94-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp94-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp262-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # super-register DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc34:
	.quad	.Ltmp80-.Lfunc_begin0
	.quad	.Ltmp93-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp93-.Lfunc_begin0
	.quad	.Ltmp100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp102-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp160-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp167-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp168-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc35:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp91-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp108-.Lfunc_begin0
	.quad	.Ltmp111-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp111-.Lfunc_begin0
	.quad	.Ltmp120-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp122-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc36:
	.quad	.Ltmp96-.Lfunc_begin0
	.quad	.Ltmp102-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp127-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp127-.Lfunc_begin0
	.quad	.Ltmp133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp134-.Lfunc_begin0
	.quad	.Ltmp136-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp136-.Lfunc_begin0
	.quad	.Ltmp140-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc37:
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp108-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp146-.Lfunc_begin0
	.quad	.Ltmp148-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp148-.Lfunc_begin0
	.quad	.Ltmp154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc38:
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc39:
	.quad	.Ltmp160-.Lfunc_begin0
	.quad	.Ltmp164-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc40:
	.quad	.Ltmp162-.Lfunc_begin0
	.quad	.Ltmp169-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp169-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp180-.Lfunc_begin0
	.quad	.Ltmp182-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc41:
	.quad	.Ltmp162-.Lfunc_begin0
	.quad	.Ltmp203-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp246-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc42:
	.quad	.Ltmp171-.Lfunc_begin0
	.quad	.Ltmp173-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp175-.Lfunc_begin0
	.quad	.Ltmp178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp184-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc43:
	.quad	.Ltmp199-.Lfunc_begin0
	.quad	.Ltmp200-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp201-.Lfunc_begin0
	.quad	.Ltmp202-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp208-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp231-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp231-.Lfunc_begin0
	.quad	.Ltmp235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc44:
	.quad	.Ltmp200-.Lfunc_begin0
	.quad	.Ltmp210-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp229-.Lfunc_begin0
	.quad	.Ltmp235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp239-.Lfunc_begin0
	.quad	.Ltmp242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc45:
	.quad	.Ltmp213-.Lfunc_begin0
	.quad	.Ltmp214-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp215-.Lfunc_begin0
	.quad	.Ltmp216-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp223-.Lfunc_begin0
	.quad	.Ltmp226-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp244-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	113                     # DW_OP_breg1
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp244-.Lfunc_begin0
	.quad	.Ltmp248-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc46:
	.quad	.Ltmp214-.Lfunc_begin0
	.quad	.Ltmp225-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp227-.Lfunc_begin0
	.quad	.Ltmp229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp242-.Lfunc_begin0
	.quad	.Ltmp250-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp254-.Lfunc_begin0
	.quad	.Ltmp259-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc47:
	.quad	.Ltmp237-.Lfunc_begin0
	.quad	.Ltmp239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc48:
	.quad	.Ltmp252-.Lfunc_begin0
	.quad	.Ltmp254-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc49:
	.quad	.Ltmp268-.Lfunc_begin0
	.quad	.Ltmp273-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc50:
	.quad	.Ltmp269-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc51:
	.quad	.Ltmp270-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc52:
	.quad	.Ltmp271-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc53:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc54:
	.quad	.Ltmp272-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc55:
	.quad	.Ltmp274-.Lfunc_begin0
	.quad	.Ltmp278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc56:
	.quad	.Ltmp275-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc57:
	.quad	.Ltmp275-.Lfunc_begin0
	.quad	.Ltmp276-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc58:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc59:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc60:
	.quad	.Ltmp276-.Lfunc_begin0
	.quad	.Ltmp277-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc61:
	.quad	.Ltmp277-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc62:
	.quad	.Ltmp279-.Lfunc_begin0
	.quad	.Lfunc_end1-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc63:
	.quad	.Lfunc_begin2-.Lfunc_begin0
	.quad	.Ltmp281-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp281-.Lfunc_begin0
	.quad	.Ltmp282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc64:
	.quad	.Ltmp284-.Lfunc_begin0
	.quad	.Lfunc_end3-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc65:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp290-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp290-.Lfunc_begin0
	.quad	.Ltmp298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp299-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp320-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc66:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp289-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp289-.Lfunc_begin0
	.quad	.Ltmp296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp296-.Lfunc_begin0
	.quad	.Ltmp298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp298-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc67:
	.quad	.Lfunc_begin4-.Lfunc_begin0
	.quad	.Ltmp288-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp288-.Lfunc_begin0
	.quad	.Ltmp306-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc68:
	.quad	.Ltmp294-.Lfunc_begin0
	.quad	.Ltmp296-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc69:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp308-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp321-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp323-.Lfunc_begin0
	.quad	.Ltmp334-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp334-.Lfunc_begin0
	.quad	.Ltmp336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc70:
	.quad	.Ltmp303-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc71:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp307-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp318-.Lfunc_begin0
	.quad	.Ltmp321-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc72:
	.quad	.Ltmp309-.Lfunc_begin0
	.quad	.Ltmp310-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp312-.Lfunc_begin0
	.quad	.Ltmp314-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp325-.Lfunc_begin0
	.quad	.Ltmp326-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp328-.Lfunc_begin0
	.quad	.Ltmp330-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp335-.Lfunc_begin0
	.quad	.Ltmp336-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp338-.Lfunc_begin0
	.quad	.Ltmp340-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc73:
	.quad	.Ltmp309-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp321-.Lfunc_begin0
	.quad	.Ltmp324-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp325-.Lfunc_begin0
	.quad	.Lfunc_end4-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc74:
	.quad	.Lfunc_begin5-.Lfunc_begin0
	.quad	.Ltmp347-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp358-.Lfunc_begin0
	.quad	.Ltmp360-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc75:
	.quad	.Ltmp342-.Lfunc_begin0
	.quad	.Ltmp347-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp348-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp358-.Lfunc_begin0
	.quad	.Ltmp360-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp362-.Lfunc_begin0
	.quad	.Ltmp373-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp373-.Lfunc_begin0
	.quad	.Ltmp375-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc76:
	.quad	.Ltmp349-.Lfunc_begin0
	.quad	.Ltmp350-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp352-.Lfunc_begin0
	.quad	.Ltmp354-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp364-.Lfunc_begin0
	.quad	.Ltmp365-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp367-.Lfunc_begin0
	.quad	.Ltmp369-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp374-.Lfunc_begin0
	.quad	.Ltmp375-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp377-.Lfunc_begin0
	.quad	.Ltmp379-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc77:
	.quad	.Ltmp349-.Lfunc_begin0
	.quad	.Ltmp357-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp360-.Lfunc_begin0
	.quad	.Ltmp363-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp364-.Lfunc_begin0
	.quad	.Lfunc_end5-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc78:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp381-.Lfunc_begin0
	.quad	.Ltmp399-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc79:
	.quad	.Lfunc_begin6-.Lfunc_begin0
	.quad	.Ltmp381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp381-.Lfunc_begin0
	.quad	.Ltmp400-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc80:
	.quad	.Ltmp383-.Lfunc_begin0
	.quad	.Ltmp394-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp394-.Lfunc_begin0
	.quad	.Ltmp395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp395-.Lfunc_begin0
	.quad	.Ltmp397-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp397-.Lfunc_begin0
	.quad	.Ltmp398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp401-.Lfunc_begin0
	.quad	.Lfunc_end6-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc81:
	.quad	.Lfunc_begin7-.Lfunc_begin0
	.quad	.Ltmp409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp422-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc82:
	.quad	.Ltmp404-.Lfunc_begin0
	.quad	.Ltmp409-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp410-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp420-.Lfunc_begin0
	.quad	.Ltmp422-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp424-.Lfunc_begin0
	.quad	.Ltmp435-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp435-.Lfunc_begin0
	.quad	.Ltmp437-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc83:
	.quad	.Ltmp411-.Lfunc_begin0
	.quad	.Ltmp412-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp414-.Lfunc_begin0
	.quad	.Ltmp416-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp426-.Lfunc_begin0
	.quad	.Ltmp427-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp429-.Lfunc_begin0
	.quad	.Ltmp431-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp436-.Lfunc_begin0
	.quad	.Ltmp437-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp439-.Lfunc_begin0
	.quad	.Ltmp441-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc84:
	.quad	.Ltmp411-.Lfunc_begin0
	.quad	.Ltmp419-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp422-.Lfunc_begin0
	.quad	.Ltmp425-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp426-.Lfunc_begin0
	.quad	.Lfunc_end7-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc85:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc86:
	.quad	.Lfunc_begin8-.Lfunc_begin0
	.quad	.Ltmp449-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp456-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp461-.Lfunc_begin0
	.quad	.Ltmp464-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc87:
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	.Ltmp453-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp465-.Lfunc_begin0
	.quad	.Ltmp467-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp467-.Lfunc_begin0
	.quad	.Ltmp471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp473-.Lfunc_begin0
	.quad	.Ltmp474-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc88:
	.quad	.Ltmp448-.Lfunc_begin0
	.quad	.Ltmp457-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp459-.Lfunc_begin0
	.quad	.Ltmp464-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp465-.Lfunc_begin0
	.quad	.Lfunc_end8-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc89:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp503-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp504-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc90:
	.quad	.Lfunc_begin9-.Lfunc_begin0
	.quad	.Ltmp487-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp487-.Lfunc_begin0
	.quad	.Ltmp489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp489-.Lfunc_begin0
	.quad	.Ltmp493-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp493-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc91:
	.quad	.Ltmp483-.Lfunc_begin0
	.quad	.Ltmp488-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp489-.Lfunc_begin0
	.quad	.Ltmp492-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc92:
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Lfunc_end9-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc93:
	.quad	.Ltmp484-.Lfunc_begin0
	.quad	.Ltmp497-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc94:
	.quad	.Ltmp502-.Lfunc_begin0
	.quad	.Ltmp504-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc95:
	.quad	.Lfunc_begin10-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc96:
	.quad	.Ltmp506-.Lfunc_begin0
	.quad	.Ltmp509-.Lfunc_begin0
	.short	14                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	50                      # DW_OP_lit2
	.byte	27                      # DW_OP_div
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp509-.Lfunc_begin0
	.quad	.Ltmp513-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc97:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc98:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc99:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc100:
	.quad	.Ltmp514-.Lfunc_begin0
	.quad	.Ltmp519-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp519-.Lfunc_begin0
	.quad	.Ltmp521-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp521-.Lfunc_begin0
	.quad	.Ltmp525-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp525-.Lfunc_begin0
	.quad	.Ltmp536-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc101:
	.quad	.Ltmp515-.Lfunc_begin0
	.quad	.Ltmp520-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp521-.Lfunc_begin0
	.quad	.Ltmp524-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc102:
	.quad	.Ltmp516-.Lfunc_begin0
	.quad	.Ltmp529-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc103:
	.quad	.Ltmp534-.Lfunc_begin0
	.quad	.Ltmp535-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc104:
	.quad	.Ltmp536-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp541-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc105:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp549-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp549-.Lfunc_begin0
	.quad	.Ltmp551-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp551-.Lfunc_begin0
	.quad	.Ltmp555-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp555-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc106:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp564-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc107:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc108:
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc109:
	.quad	.Ltmp545-.Lfunc_begin0
	.quad	.Ltmp548-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc110:
	.quad	.Ltmp546-.Lfunc_begin0
	.quad	.Ltmp559-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc111:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp567-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc112:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp569-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc113:
	.quad	.Lfunc_begin11-.Lfunc_begin0
	.quad	.Ltmp568-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc114:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp587-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp588-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc115:
	.quad	.Lfunc_begin12-.Lfunc_begin0
	.quad	.Ltmp573-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp573-.Lfunc_begin0
	.quad	.Ltmp575-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp575-.Lfunc_begin0
	.quad	.Ltmp578-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp578-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc116:
	.quad	.Ltmp571-.Lfunc_begin0
	.quad	.Ltmp574-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp575-.Lfunc_begin0
	.quad	.Ltmp577-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc117:
	.quad	.Ltmp572-.Lfunc_begin0
	.quad	.Lfunc_end12-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc118:
	.quad	.Ltmp572-.Lfunc_begin0
	.quad	.Ltmp581-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc119:
	.quad	.Ltmp586-.Lfunc_begin0
	.quad	.Ltmp588-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc120:
	.quad	.Lfunc_begin13-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc121:
	.quad	.Ltmp590-.Lfunc_begin0
	.quad	.Ltmp593-.Lfunc_begin0
	.short	14                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	50                      # DW_OP_lit2
	.byte	27                      # DW_OP_div
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp593-.Lfunc_begin0
	.quad	.Ltmp597-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	120                     # DW_OP_breg8
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc122:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc123:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc124:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp614-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc125:
	.quad	.Ltmp598-.Lfunc_begin0
	.quad	.Ltmp601-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp601-.Lfunc_begin0
	.quad	.Ltmp603-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp603-.Lfunc_begin0
	.quad	.Ltmp606-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp606-.Lfunc_begin0
	.quad	.Ltmp616-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc126:
	.quad	.Ltmp599-.Lfunc_begin0
	.quad	.Ltmp602-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp603-.Lfunc_begin0
	.quad	.Ltmp605-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc127:
	.quad	.Ltmp600-.Lfunc_begin0
	.quad	.Ltmp609-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc128:
	.quad	.Ltmp614-.Lfunc_begin0
	.quad	.Ltmp615-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc129:
	.quad	.Ltmp617-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.short	12                      # Loc expr size
	.byte	116                     # DW_OP_breg4
	.byte	0                       # 0
	.byte	16                      # DW_OP_constu
	.byte	255                     # 4294967295
	.byte	255                     # 
	.byte	255                     # 
	.byte	255                     # 
	.byte	15                      # 
	.byte	26                      # DW_OP_and
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp620-.Lfunc_begin0
	.quad	.Ltmp622-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	121                     # DW_OP_breg9
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc130:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp629-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp629-.Lfunc_begin0
	.quad	.Ltmp631-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp631-.Lfunc_begin0
	.quad	.Ltmp634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp634-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc131:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp642-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc132:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc133:
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc134:
	.quad	.Ltmp626-.Lfunc_begin0
	.quad	.Ltmp628-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc135:
	.quad	.Ltmp627-.Lfunc_begin0
	.quad	.Ltmp637-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc136:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp645-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc137:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp647-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc138:
	.quad	.Lfunc_begin14-.Lfunc_begin0
	.quad	.Ltmp646-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc139:
	.quad	.Lfunc_begin15-.Lfunc_begin0
	.quad	.Ltmp649-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp649-.Lfunc_begin0
	.quad	.Ltmp650-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc140:
	.quad	.Lfunc_begin16-.Lfunc_begin0
	.quad	.Ltmp697-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc141:
	.quad	.Lfunc_begin16-.Lfunc_begin0
	.quad	.Ltmp652-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp652-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc142:
	.quad	.Lfunc_begin16-.Lfunc_begin0
	.quad	.Ltmp655-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp730-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc143:
	.quad	.Ltmp656-.Lfunc_begin0
	.quad	.Ltmp694-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc144:
	.quad	.Ltmp658-.Lfunc_begin0
	.quad	.Ltmp663-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc145:
	.quad	.Ltmp659-.Lfunc_begin0
	.quad	.Ltmp661-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc146:
	.quad	.Ltmp663-.Lfunc_begin0
	.quad	.Ltmp666-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc147:
	.quad	.Ltmp664-.Lfunc_begin0
	.quad	.Ltmp674-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc148:
	.quad	.Ltmp668-.Lfunc_begin0
	.quad	.Ltmp671-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc149:
	.quad	.Ltmp669-.Lfunc_begin0
	.quad	.Ltmp673-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc150:
	.quad	.Ltmp676-.Lfunc_begin0
	.quad	.Ltmp681-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc151:
	.quad	.Ltmp677-.Lfunc_begin0
	.quad	.Ltmp679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc152:
	.quad	.Ltmp682-.Lfunc_begin0
	.quad	.Ltmp685-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc153:
	.quad	.Ltmp683-.Lfunc_begin0
	.quad	.Ltmp688-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc154:
	.quad	.Ltmp687-.Lfunc_begin0
	.quad	.Ltmp690-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc155:
	.quad	.Ltmp688-.Lfunc_begin0
	.quad	.Ltmp692-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc156:
	.quad	.Ltmp694-.Lfunc_begin0
	.quad	.Ltmp698-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc157:
	.quad	.Ltmp695-.Lfunc_begin0
	.quad	.Ltmp700-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc158:
	.quad	.Ltmp699-.Lfunc_begin0
	.quad	.Ltmp702-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc159:
	.quad	.Ltmp700-.Lfunc_begin0
	.quad	.Ltmp705-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc160:
	.quad	.Ltmp704-.Lfunc_begin0
	.quad	.Ltmp707-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc161:
	.quad	.Ltmp705-.Lfunc_begin0
	.quad	.Ltmp725-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc162:
	.quad	.Ltmp709-.Lfunc_begin0
	.quad	.Ltmp712-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc163:
	.quad	.Ltmp710-.Lfunc_begin0
	.quad	.Ltmp714-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc164:
	.quad	.Ltmp713-.Lfunc_begin0
	.quad	.Ltmp716-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc165:
	.quad	.Ltmp714-.Lfunc_begin0
	.quad	.Ltmp721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc166:
	.quad	.Ltmp718-.Lfunc_begin0
	.quad	.Ltmp722-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc167:
	.quad	.Ltmp719-.Lfunc_begin0
	.quad	.Ltmp724-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc168:
	.quad	.Ltmp723-.Lfunc_begin0
	.quad	.Ltmp725-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc169:
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc170:
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc171:
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc172:
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp730-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc173:
	.quad	.Ltmp729-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc174:
	.quad	.Ltmp730-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc175:
	.quad	.Ltmp735-.Lfunc_begin0
	.quad	.Ltmp737-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc176:
	.quad	.Ltmp736-.Lfunc_begin0
	.quad	.Ltmp740-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp748-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc177:
	.quad	.Ltmp737-.Lfunc_begin0
	.quad	.Ltmp742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp749-.Lfunc_begin0
	.quad	.Ltmp752-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp753-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc178:
	.quad	.Ltmp738-.Lfunc_begin0
	.quad	.Ltmp742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc179:
	.quad	.Ltmp738-.Lfunc_begin0
	.quad	.Ltmp740-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc180:
	.quad	.Ltmp738-.Lfunc_begin0
	.quad	.Ltmp750-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp750-.Lfunc_begin0
	.quad	.Ltmp752-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp752-.Lfunc_begin0
	.quad	.Ltmp754-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp754-.Lfunc_begin0
	.quad	.Lfunc_end16-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc181:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp747-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc182:
	.quad	.Ltmp740-.Lfunc_begin0
	.quad	.Ltmp743-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc183:
	.quad	.Ltmp743-.Lfunc_begin0
	.quad	.Ltmp747-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc184:
	.quad	.Ltmp743-.Lfunc_begin0
	.quad	.Ltmp745-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc185:
	.quad	.Ltmp757-.Lfunc_begin0
	.quad	.Ltmp760-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc186:
	.quad	.Ltmp758-.Lfunc_begin0
	.quad	.Lfunc_end17-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc187:
	.quad	.Lfunc_begin18-.Lfunc_begin0
	.quad	.Ltmp768-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp771-.Lfunc_begin0
	.quad	.Lfunc_end18-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc188:
	.quad	.Ltmp765-.Lfunc_begin0
	.quad	.Ltmp769-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc189:
	.quad	.Ltmp766-.Lfunc_begin0
	.quad	.Ltmp771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc190:
	.quad	.Ltmp772-.Lfunc_begin0
	.quad	.Ltmp774-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc191:
	.quad	.Ltmp773-.Lfunc_begin0
	.quad	.Ltmp777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp786-.Lfunc_begin0
	.quad	.Lfunc_end18-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc192:
	.quad	.Ltmp774-.Lfunc_begin0
	.quad	.Ltmp779-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp787-.Lfunc_begin0
	.quad	.Ltmp790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp791-.Lfunc_begin0
	.quad	.Lfunc_end18-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc193:
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Ltmp779-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc194:
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Ltmp777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc195:
	.quad	.Ltmp775-.Lfunc_begin0
	.quad	.Ltmp782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp788-.Lfunc_begin0
	.quad	.Ltmp790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp792-.Lfunc_begin0
	.quad	.Lfunc_end18-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc196:
	.quad	.Ltmp777-.Lfunc_begin0
	.quad	.Ltmp782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc197:
	.quad	.Ltmp777-.Lfunc_begin0
	.quad	.Ltmp780-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc198:
	.quad	.Ltmp780-.Lfunc_begin0
	.quad	.Ltmp785-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc199:
	.quad	.Ltmp780-.Lfunc_begin0
	.quad	.Ltmp783-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc200:
	.quad	.Lfunc_begin20-.Lfunc_begin0
	.quad	.Ltmp851-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc201:
	.quad	.Lfunc_begin20-.Lfunc_begin0
	.quad	.Ltmp833-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc202:
	.quad	.Ltmp795-.Lfunc_begin0
	.quad	.Ltmp796-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp798-.Lfunc_begin0
	.quad	.Ltmp800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp801-.Lfunc_begin0
	.quad	.Ltmp806-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp806-.Lfunc_begin0
	.quad	.Ltmp811-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp811-.Lfunc_begin0
	.quad	.Ltmp813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp813-.Lfunc_begin0
	.quad	.Ltmp827-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc203:
	.quad	.Ltmp801-.Lfunc_begin0
	.quad	.Ltmp811-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp813-.Lfunc_begin0
	.quad	.Ltmp825-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp828-.Lfunc_begin0
	.quad	.Ltmp845-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp849-.Lfunc_begin0
	.quad	.Ltmp869-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc204:
	.quad	.Ltmp796-.Lfunc_begin0
	.quad	.Ltmp801-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp801-.Lfunc_begin0
	.quad	.Ltmp807-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp807-.Lfunc_begin0
	.quad	.Ltmp844-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc205:
	.quad	.Ltmp802-.Lfunc_begin0
	.quad	.Ltmp805-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc206:
	.quad	.Ltmp803-.Lfunc_begin0
	.quad	.Ltmp810-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc207:
	.quad	.Ltmp804-.Lfunc_begin0
	.quad	.Ltmp807-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc208:
	.quad	.Lfunc_begin21-.Lfunc_begin0
	.quad	.Ltmp880-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp880-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc209:
	.quad	.Lfunc_begin21-.Lfunc_begin0
	.quad	.Ltmp879-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp879-.Lfunc_begin0
	.quad	.Ltmp941-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc210:
	.quad	.Lfunc_begin21-.Lfunc_begin0
	.quad	.Ltmp878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp878-.Lfunc_begin0
	.quad	.Ltmp882-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp882-.Lfunc_begin0
	.quad	.Ltmp884-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	.Ltmp884-.Lfunc_begin0
	.quad	.Ltmp885-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc211:
	.quad	.Lfunc_begin21-.Lfunc_begin0
	.quad	.Ltmp877-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp877-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc212:
	.quad	.Ltmp881-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc213:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp890-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp891-.Lfunc_begin0
	.quad	.Ltmp901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp901-.Lfunc_begin0
	.quad	.Ltmp903-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp903-.Lfunc_begin0
	.quad	.Ltmp915-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp918-.Lfunc_begin0
	.quad	.Ltmp935-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp939-.Lfunc_begin0
	.quad	.Ltmp959-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc214:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp891-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp891-.Lfunc_begin0
	.quad	.Ltmp897-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp897-.Lfunc_begin0
	.quad	.Ltmp934-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc215:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp890-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp891-.Lfunc_begin0
	.quad	.Ltmp896-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp896-.Lfunc_begin0
	.quad	.Ltmp901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp901-.Lfunc_begin0
	.quad	.Ltmp903-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp903-.Lfunc_begin0
	.quad	.Ltmp917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc216:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc217:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	0                       # 0
	.quad	0
	.quad	0
.Ldebug_loc218:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp941-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc219:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc220:
	.quad	.Ltmp886-.Lfunc_begin0
	.quad	.Ltmp963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc221:
	.quad	.Ltmp892-.Lfunc_begin0
	.quad	.Ltmp895-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc222:
	.quad	.Ltmp893-.Lfunc_begin0
	.quad	.Ltmp900-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc223:
	.quad	.Ltmp894-.Lfunc_begin0
	.quad	.Ltmp897-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc224:
	.quad	.Lfunc_begin22-.Lfunc_begin0
	.quad	.Ltmp965-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp965-.Lfunc_begin0
	.quad	.Ltmp968-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp968-.Lfunc_begin0
	.quad	.Ltmp969-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc225:
	.quad	.Lfunc_begin22-.Lfunc_begin0
	.quad	.Ltmp965-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp965-.Lfunc_begin0
	.quad	.Ltmp971-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc226:
	.quad	.Lfunc_begin22-.Lfunc_begin0
	.quad	.Ltmp965-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp965-.Lfunc_begin0
	.quad	.Ltmp972-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc227:
	.quad	.Ltmp967-.Lfunc_begin0
	.quad	.Ltmp970-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc228:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp1037-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc229:
	.quad	.Lfunc_begin23-.Lfunc_begin0
	.quad	.Ltmp1008-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc230:
	.quad	.Ltmp974-.Lfunc_begin0
	.quad	.Ltmp979-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp980-.Lfunc_begin0
	.quad	.Ltmp983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp983-.Lfunc_begin0
	.quad	.Ltmp987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp987-.Lfunc_begin0
	.quad	.Ltmp988-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp988-.Lfunc_begin0
	.quad	.Ltmp1002-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc231:
	.quad	.Ltmp975-.Lfunc_begin0
	.quad	.Ltmp979-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp980-.Lfunc_begin0
	.quad	.Ltmp987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp987-.Lfunc_begin0
	.quad	.Ltmp988-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp988-.Lfunc_begin0
	.quad	.Ltmp1000-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1003-.Lfunc_begin0
	.quad	.Ltmp1019-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1023-.Lfunc_begin0
	.quad	.Ltmp1037-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc232:
	.quad	.Ltmp975-.Lfunc_begin0
	.quad	.Ltmp980-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp980-.Lfunc_begin0
	.quad	.Ltmp983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp983-.Lfunc_begin0
	.quad	.Ltmp1020-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc233:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp1047-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1047-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc234:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp1046-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1046-.Lfunc_begin0
	.quad	.Ltmp1111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc235:
	.quad	.Lfunc_begin24-.Lfunc_begin0
	.quad	.Ltmp1045-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1045-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc236:
	.quad	.Ltmp1048-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc237:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1054-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1055-.Lfunc_begin0
	.quad	.Ltmp1062-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1062-.Lfunc_begin0
	.quad	.Ltmp1063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1063-.Lfunc_begin0
	.quad	.Ltmp1075-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1078-.Lfunc_begin0
	.quad	.Ltmp1093-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1097-.Lfunc_begin0
	.quad	.Ltmp1111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc238:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1055-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1055-.Lfunc_begin0
	.quad	.Ltmp1058-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1058-.Lfunc_begin0
	.quad	.Ltmp1094-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc239:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1054-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1055-.Lfunc_begin0
	.quad	.Ltmp1058-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1058-.Lfunc_begin0
	.quad	.Ltmp1062-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1062-.Lfunc_begin0
	.quad	.Ltmp1063-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1063-.Lfunc_begin0
	.quad	.Ltmp1077-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc240:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc241:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc242:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc243:
	.quad	.Ltmp1050-.Lfunc_begin0
	.quad	.Ltmp1115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc244:
	.quad	.Lfunc_begin25-.Lfunc_begin0
	.quad	.Ltmp1117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1117-.Lfunc_begin0
	.quad	.Ltmp1156-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc245:
	.quad	.Lfunc_begin25-.Lfunc_begin0
	.quad	.Ltmp1117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1117-.Lfunc_begin0
	.quad	.Ltmp1123-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1124-.Lfunc_begin0
	.quad	.Ltmp1127-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc246:
	.quad	.Lfunc_begin25-.Lfunc_begin0
	.quad	.Ltmp1117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1117-.Lfunc_begin0
	.quad	.Ltmp1122-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1124-.Lfunc_begin0
	.quad	.Ltmp1155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc247:
	.quad	.Ltmp1117-.Lfunc_begin0
	.quad	.Ltmp1118-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1118-.Lfunc_begin0
	.quad	.Ltmp1119-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1121-.Lfunc_begin0
	.quad	.Lfunc_end25-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	0
	.quad	0
.Ldebug_loc248:
	.quad	.Ltmp1119-.Lfunc_begin0
	.quad	.Ltmp1154-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc249:
	.quad	.Ltmp1124-.Lfunc_begin0
	.quad	.Ltmp1138-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1138-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1142-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1146-.Lfunc_begin0
	.quad	.Ltmp1150-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1150-.Lfunc_begin0
	.quad	.Ltmp1155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc250:
	.quad	.Ltmp1124-.Lfunc_begin0
	.quad	.Ltmp1127-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1127-.Lfunc_begin0
	.quad	.Ltmp1133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1134-.Lfunc_begin0
	.quad	.Ltmp1153-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc251:
	.quad	.Ltmp1128-.Lfunc_begin0
	.quad	.Ltmp1131-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1135-.Lfunc_begin0
	.quad	.Ltmp1138-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1139-.Lfunc_begin0
	.quad	.Ltmp1142-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1143-.Lfunc_begin0
	.quad	.Ltmp1146-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1147-.Lfunc_begin0
	.quad	.Ltmp1150-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc252:
	.quad	.Ltmp1129-.Lfunc_begin0
	.quad	.Ltmp1130-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1136-.Lfunc_begin0
	.quad	.Ltmp1137-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1140-.Lfunc_begin0
	.quad	.Ltmp1141-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1144-.Lfunc_begin0
	.quad	.Ltmp1145-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1148-.Lfunc_begin0
	.quad	.Ltmp1149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc253:
	.quad	.Ltmp1129-.Lfunc_begin0
	.quad	.Ltmp1133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1136-.Lfunc_begin0
	.quad	.Ltmp1153-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc254:
	.quad	.Ltmp1154-.Lfunc_begin0
	.quad	.Ltmp1155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc255:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1161-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1161-.Lfunc_begin0
	.quad	.Ltmp1187-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1221-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Lfunc_end26-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc256:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1158-.Lfunc_begin0
	.quad	.Ltmp1176-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1223-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc257:
	.quad	.Lfunc_begin26-.Lfunc_begin0
	.quad	.Ltmp1163-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1169-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1222-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc258:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc259:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc260:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc261:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1164-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1164-.Lfunc_begin0
	.quad	.Ltmp1165-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1167-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	12                      # 12
	.quad	0
	.quad	0
.Ldebug_loc262:
	.quad	.Ltmp1165-.Lfunc_begin0
	.quad	.Ltmp1168-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1217-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc263:
	.quad	.Ltmp1170-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1178-.Lfunc_begin0
	.quad	.Ltmp1180-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1228-.Lfunc_begin0
	.quad	.Ltmp1239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1239-.Lfunc_begin0
	.quad	.Ltmp1241-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc264:
	.quad	.Ltmp1173-.Lfunc_begin0
	.quad	.Ltmp1187-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Lfunc_end26-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc265:
	.quad	.Ltmp1170-.Lfunc_begin0
	.quad	.Ltmp1177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	.Ltmp1226-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc266:
	.quad	.Ltmp1179-.Lfunc_begin0
	.quad	.Ltmp1180-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1182-.Lfunc_begin0
	.quad	.Ltmp1184-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1230-.Lfunc_begin0
	.quad	.Ltmp1231-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1233-.Lfunc_begin0
	.quad	.Ltmp1235-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1240-.Lfunc_begin0
	.quad	.Ltmp1241-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1243-.Lfunc_begin0
	.quad	.Ltmp1245-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc267:
	.quad	.Ltmp1179-.Lfunc_begin0
	.quad	.Ltmp1187-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1226-.Lfunc_begin0
	.quad	.Ltmp1229-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1230-.Lfunc_begin0
	.quad	.Lfunc_end26-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc268:
	.quad	.Ltmp1189-.Lfunc_begin0
	.quad	.Ltmp1195-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1196-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1200-.Lfunc_begin0
	.quad	.Ltmp1204-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1204-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1208-.Lfunc_begin0
	.quad	.Ltmp1213-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1213-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc269:
	.quad	.Ltmp1189-.Lfunc_begin0
	.quad	.Ltmp1195-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1196-.Lfunc_begin0
	.quad	.Ltmp1216-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc270:
	.quad	.Ltmp1190-.Lfunc_begin0
	.quad	.Ltmp1193-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1197-.Lfunc_begin0
	.quad	.Ltmp1200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1201-.Lfunc_begin0
	.quad	.Ltmp1204-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1205-.Lfunc_begin0
	.quad	.Ltmp1208-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1210-.Lfunc_begin0
	.quad	.Ltmp1213-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc271:
	.quad	.Ltmp1191-.Lfunc_begin0
	.quad	.Ltmp1192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1198-.Lfunc_begin0
	.quad	.Ltmp1199-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1202-.Lfunc_begin0
	.quad	.Ltmp1203-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1206-.Lfunc_begin0
	.quad	.Ltmp1207-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1211-.Lfunc_begin0
	.quad	.Ltmp1212-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc272:
	.quad	.Ltmp1191-.Lfunc_begin0
	.quad	.Ltmp1195-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1198-.Lfunc_begin0
	.quad	.Ltmp1202-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1202-.Lfunc_begin0
	.quad	.Ltmp1209-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp1211-.Lfunc_begin0
	.quad	.Ltmp1216-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc273:
	.quad	.Ltmp1217-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc274:
	.quad	.Ltmp1218-.Lfunc_begin0
	.quad	.Ltmp1220-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc275:
	.quad	.Lfunc_begin27-.Lfunc_begin0
	.quad	.Ltmp1272-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc276:
	.quad	.Ltmp1247-.Lfunc_begin0
	.quad	.Ltmp1251-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp1257-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # super-register DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc277:
	.quad	.Ltmp1248-.Lfunc_begin0
	.quad	.Ltmp1255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp1257-.Lfunc_begin0
	.quad	.Ltmp1258-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp1261-.Lfunc_begin0
	.quad	.Ltmp1262-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc278:
	.quad	.Ltmp1256-.Lfunc_begin0
	.quad	.Ltmp1259-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1260-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc279:
	.quad	.Ltmp1250-.Lfunc_begin0
	.quad	.Lfunc_end27-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc280:
	.quad	.Ltmp1251-.Lfunc_begin0
	.quad	.Lfunc_end27-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc281:
	.quad	.Ltmp1252-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc282:
	.quad	.Ltmp1252-.Lfunc_begin0
	.quad	.Ltmp1255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1255-.Lfunc_begin0
	.quad	.Ltmp1263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1265-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc283:
	.quad	.Ltmp1253-.Lfunc_begin0
	.quad	.Ltmp1266-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc284:
	.quad	.Ltmp1267-.Lfunc_begin0
	.quad	.Ltmp1271-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc285:
	.quad	.Ltmp1271-.Lfunc_begin0
	.quad	.Lfunc_end27-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc286:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1281-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1281-.Lfunc_begin0
	.quad	.Ltmp1291-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1292-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1314-.Lfunc_begin0
	.quad	.Ltmp1316-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc287:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1289-.Lfunc_begin0
	.quad	.Ltmp1291-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1291-.Lfunc_begin0
	.quad	.Ltmp1317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc288:
	.quad	.Lfunc_begin28-.Lfunc_begin0
	.quad	.Ltmp1280-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1280-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1314-.Lfunc_begin0
	.quad	.Ltmp1315-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc289:
	.quad	.Ltmp1300-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc290:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1299-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc291:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp1298-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc292:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1294-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc293:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1294-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc294:
	.quad	.Ltmp1282-.Lfunc_begin0
	.quad	.Ltmp1292-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1294-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc295:
	.quad	.Ltmp1300-.Lfunc_begin0
	.quad	.Ltmp1302-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	.Ltmp1302-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc296:
	.quad	.Ltmp1283-.Lfunc_begin0
	.quad	.Ltmp1285-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc297:
	.quad	.Ltmp1285-.Lfunc_begin0
	.quad	.Ltmp1287-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc298:
	.quad	.Ltmp1295-.Lfunc_begin0
	.quad	.Ltmp1299-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp1304-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc299:
	.quad	.Ltmp1296-.Lfunc_begin0
	.quad	.Ltmp1302-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1304-.Lfunc_begin0
	.quad	.Ltmp1305-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1308-.Lfunc_begin0
	.quad	.Ltmp1309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc300:
	.quad	.Ltmp1303-.Lfunc_begin0
	.quad	.Ltmp1306-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp1307-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc301:
	.quad	.Ltmp1300-.Lfunc_begin0
	.quad	.Ltmp1302-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1302-.Lfunc_begin0
	.quad	.Ltmp1310-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1312-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc302:
	.quad	.Lfunc_begin29-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc303:
	.quad	.Lfunc_begin29-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc304:
	.quad	.Ltmp1318-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc305:
	.quad	.Ltmp1318-.Lfunc_begin0
	.quad	.Ltmp1322-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1333-.Lfunc_begin0
	.quad	.Ltmp1336-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc306:
	.quad	.Ltmp1319-.Lfunc_begin0
	.quad	.Lfunc_end29-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc307:
	.quad	.Ltmp1323-.Lfunc_begin0
	.quad	.Ltmp1324-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc308:
	.quad	.Ltmp1326-.Lfunc_begin0
	.quad	.Ltmp1328-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc309:
	.quad	.Ltmp1327-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc310:
	.quad	.Ltmp1328-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc311:
	.quad	.Ltmp1330-.Lfunc_begin0
	.quad	.Ltmp1335-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc312:
	.quad	.Ltmp1336-.Lfunc_begin0
	.quad	.Ltmp1340-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1341-.Lfunc_begin0
	.quad	.Ltmp1345-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1345-.Lfunc_begin0
	.quad	.Ltmp1355-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc313:
	.quad	.Ltmp1336-.Lfunc_begin0
	.quad	.Lfunc_end29-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc314:
	.quad	.Ltmp1336-.Lfunc_begin0
	.quad	.Ltmp1355-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc315:
	.quad	.Lfunc_begin30-.Lfunc_begin0
	.quad	.Ltmp1357-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc316:
	.quad	.Ltmp1358-.Lfunc_begin0
	.quad	.Ltmp1360-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc317:
	.quad	.Ltmp1359-.Lfunc_begin0
	.quad	.Ltmp1362-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc318:
	.quad	.Ltmp1360-.Lfunc_begin0
	.quad	.Ltmp1362-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc319:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1366-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1366-.Lfunc_begin0
	.quad	.Ltmp1389-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc320:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc321:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1704-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1710-.Lfunc_begin0
	.quad	.Ltmp1711-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1718-.Lfunc_begin0
	.quad	.Ltmp1720-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc322:
	.quad	.Lfunc_begin31-.Lfunc_begin0
	.quad	.Ltmp1369-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1369-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1388-.Lfunc_begin0
	.quad	.Ltmp1390-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc323:
	.quad	.Ltmp1370-.Lfunc_begin0
	.quad	.Ltmp1374-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc324:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc325:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc326:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc327:
	.quad	.Ltmp1372-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1678-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1689-.Lfunc_begin0
	.quad	.Ltmp1691-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc328:
	.quad	.Ltmp1373-.Lfunc_begin0
	.quad	.Ltmp1374-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1374-.Lfunc_begin0
	.quad	.Ltmp1383-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1385-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc329:
	.quad	.Ltmp1373-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc330:
	.quad	.Ltmp1375-.Lfunc_begin0
	.quad	.Ltmp1376-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc331:
	.quad	.Ltmp1378-.Lfunc_begin0
	.quad	.Ltmp1380-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc332:
	.quad	.Ltmp1379-.Lfunc_begin0
	.quad	.Ltmp1385-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc333:
	.quad	.Ltmp1380-.Lfunc_begin0
	.quad	.Ltmp1385-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc334:
	.quad	.Ltmp1382-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc335:
	.quad	.Ltmp1391-.Lfunc_begin0
	.quad	.Ltmp1394-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1398-.Lfunc_begin0
	.quad	.Ltmp1399-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1399-.Lfunc_begin0
	.quad	.Ltmp1401-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1402-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1416-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1430-.Lfunc_begin0
	.quad	.Ltmp1458-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1471-.Lfunc_begin0
	.quad	.Ltmp1495-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1509-.Lfunc_begin0
	.quad	.Ltmp1533-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1546-.Lfunc_begin0
	.quad	.Ltmp1571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1585-.Lfunc_begin0
	.quad	.Ltmp1609-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1624-.Lfunc_begin0
	.quad	.Ltmp1648-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1661-.Lfunc_begin0
	.quad	.Ltmp1678-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1689-.Lfunc_begin0
	.quad	.Ltmp1699-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1700-.Lfunc_begin0
	.quad	.Ltmp1718-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1728-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc336:
	.quad	.Ltmp1391-.Lfunc_begin0
	.quad	.Ltmp1394-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1394-.Lfunc_begin0
	.quad	.Ltmp1401-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1402-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1418-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1430-.Lfunc_begin0
	.quad	.Ltmp1434-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1434-.Lfunc_begin0
	.quad	.Ltmp1438-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1438-.Lfunc_begin0
	.quad	.Ltmp1441-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # DW_OP_reg8
	.quad	.Ltmp1441-.Lfunc_begin0
	.quad	.Ltmp1460-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1473-.Lfunc_begin0
	.quad	.Ltmp1476-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1479-.Lfunc_begin0
	.quad	.Ltmp1481-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1481-.Lfunc_begin0
	.quad	.Ltmp1482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1482-.Lfunc_begin0
	.quad	.Ltmp1497-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1511-.Lfunc_begin0
	.quad	.Ltmp1514-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1517-.Lfunc_begin0
	.quad	.Ltmp1519-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1519-.Lfunc_begin0
	.quad	.Ltmp1520-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1520-.Lfunc_begin0
	.quad	.Ltmp1535-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1548-.Lfunc_begin0
	.quad	.Ltmp1551-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1554-.Lfunc_begin0
	.quad	.Ltmp1556-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1556-.Lfunc_begin0
	.quad	.Ltmp1557-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1557-.Lfunc_begin0
	.quad	.Ltmp1574-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1587-.Lfunc_begin0
	.quad	.Ltmp1590-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1593-.Lfunc_begin0
	.quad	.Ltmp1595-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1595-.Lfunc_begin0
	.quad	.Ltmp1596-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1596-.Lfunc_begin0
	.quad	.Ltmp1611-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1626-.Lfunc_begin0
	.quad	.Ltmp1629-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1632-.Lfunc_begin0
	.quad	.Ltmp1634-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1634-.Lfunc_begin0
	.quad	.Ltmp1635-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1635-.Lfunc_begin0
	.quad	.Ltmp1650-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1663-.Lfunc_begin0
	.quad	.Ltmp1666-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp1669-.Lfunc_begin0
	.quad	.Ltmp1671-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1671-.Lfunc_begin0
	.quad	.Ltmp1672-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # DW_OP_reg11
	.quad	.Ltmp1672-.Lfunc_begin0
	.quad	.Ltmp1678-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1689-.Lfunc_begin0
	.quad	.Ltmp1700-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1701-.Lfunc_begin0
	.quad	.Ltmp1705-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1708-.Lfunc_begin0
	.quad	.Ltmp1710-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1710-.Lfunc_begin0
	.quad	.Ltmp1711-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1711-.Lfunc_begin0
	.quad	.Ltmp1718-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1718-.Lfunc_begin0
	.quad	.Ltmp1719-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1727-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc337:
	.quad	.Ltmp1391-.Lfunc_begin0
	.quad	.Ltmp1430-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1430-.Lfunc_begin0
	.quad	.Ltmp1472-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1472-.Lfunc_begin0
	.quad	.Ltmp1510-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1510-.Lfunc_begin0
	.quad	.Ltmp1547-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1547-.Lfunc_begin0
	.quad	.Ltmp1586-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1586-.Lfunc_begin0
	.quad	.Ltmp1625-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1625-.Lfunc_begin0
	.quad	.Ltmp1662-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1662-.Lfunc_begin0
	.quad	.Ltmp1701-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1701-.Lfunc_begin0
	.quad	.Ltmp1718-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1718-.Lfunc_begin0
	.quad	.Ltmp1720-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1720-.Lfunc_begin0
	.quad	.Ltmp1740-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	57                      # DW_OP_lit9
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc338:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1742-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1742-.Lfunc_begin0
	.quad	.Ltmp1744-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1744-.Lfunc_begin0
	.quad	.Ltmp1746-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1746-.Lfunc_begin0
	.quad	.Ltmp1748-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1748-.Lfunc_begin0
	.quad	.Ltmp1750-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1750-.Lfunc_begin0
	.quad	.Ltmp1752-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1752-.Lfunc_begin0
	.quad	.Ltmp1754-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1754-.Lfunc_begin0
	.quad	.Ltmp1756-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1756-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc339:
	.quad	.Ltmp1740-.Lfunc_begin0
	.quad	.Ltmp1742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1742-.Lfunc_begin0
	.quad	.Ltmp1744-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1744-.Lfunc_begin0
	.quad	.Ltmp1746-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1746-.Lfunc_begin0
	.quad	.Ltmp1748-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1748-.Lfunc_begin0
	.quad	.Ltmp1750-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1750-.Lfunc_begin0
	.quad	.Ltmp1752-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1752-.Lfunc_begin0
	.quad	.Ltmp1754-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1754-.Lfunc_begin0
	.quad	.Ltmp1756-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1756-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc340:
	.quad	.Ltmp1741-.Lfunc_begin0
	.quad	.Ltmp1743-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp1743-.Lfunc_begin0
	.quad	.Ltmp1745-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1745-.Lfunc_begin0
	.quad	.Ltmp1747-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1747-.Lfunc_begin0
	.quad	.Ltmp1749-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1749-.Lfunc_begin0
	.quad	.Ltmp1751-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1751-.Lfunc_begin0
	.quad	.Ltmp1753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1753-.Lfunc_begin0
	.quad	.Ltmp1755-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1755-.Lfunc_begin0
	.quad	.Ltmp1757-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc341:
	.quad	.Lfunc_begin32-.Lfunc_begin0
	.quad	.Ltmp1760-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1760-.Lfunc_begin0
	.quad	.Ltmp1763-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1763-.Lfunc_begin0
	.quad	.Ltmp1764-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc342:
	.quad	.Lfunc_begin32-.Lfunc_begin0
	.quad	.Ltmp1760-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1760-.Lfunc_begin0
	.quad	.Ltmp1766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc343:
	.quad	.Lfunc_begin32-.Lfunc_begin0
	.quad	.Ltmp1760-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1760-.Lfunc_begin0
	.quad	.Ltmp1767-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc344:
	.quad	.Ltmp1762-.Lfunc_begin0
	.quad	.Ltmp1765-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc345:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1769-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1769-.Lfunc_begin0
	.quad	.Ltmp1835-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc346:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1769-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1769-.Lfunc_begin0
	.quad	.Ltmp1773-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc347:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1769-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1769-.Lfunc_begin0
	.quad	.Ltmp1836-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc348:
	.quad	.Lfunc_begin33-.Lfunc_begin0
	.quad	.Ltmp1769-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1769-.Lfunc_begin0
	.quad	.Ltmp1837-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc349:
	.quad	.Ltmp1773-.Lfunc_begin0
	.quad	.Ltmp1775-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	93                      # DW_OP_reg13
	.quad	0
	.quad	0
.Ldebug_loc350:
	.quad	.Ltmp1776-.Lfunc_begin0
	.quad	.Ltmp1777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc351:
	.quad	.Ltmp1779-.Lfunc_begin0
	.quad	.Ltmp1781-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc352:
	.quad	.Ltmp1780-.Lfunc_begin0
	.quad	.Ltmp1834-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc353:
	.quad	.Ltmp1781-.Lfunc_begin0
	.quad	.Ltmp1834-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc354:
	.quad	.Ltmp1784-.Lfunc_begin0
	.quad	.Ltmp1789-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1789-.Lfunc_begin0
	.quad	.Ltmp1795-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1795-.Lfunc_begin0
	.quad	.Ltmp1800-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1800-.Lfunc_begin0
	.quad	.Ltmp1805-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1805-.Lfunc_begin0
	.quad	.Ltmp1810-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1810-.Lfunc_begin0
	.quad	.Ltmp1815-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1815-.Lfunc_begin0
	.quad	.Ltmp1820-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1820-.Lfunc_begin0
	.quad	.Ltmp1826-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1826-.Lfunc_begin0
	.quad	.Ltmp1832-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1832-.Lfunc_begin0
	.quad	.Ltmp1834-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc355:
	.quad	.Ltmp1784-.Lfunc_begin0
	.quad	.Ltmp1828-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc356:
	.quad	.Ltmp1785-.Lfunc_begin0
	.quad	.Ltmp1788-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1791-.Lfunc_begin0
	.quad	.Ltmp1794-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1796-.Lfunc_begin0
	.quad	.Ltmp1799-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1801-.Lfunc_begin0
	.quad	.Ltmp1804-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1806-.Lfunc_begin0
	.quad	.Ltmp1809-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1811-.Lfunc_begin0
	.quad	.Ltmp1814-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1816-.Lfunc_begin0
	.quad	.Ltmp1819-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp1822-.Lfunc_begin0
	.quad	.Ltmp1825-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1828-.Lfunc_begin0
	.quad	.Ltmp1831-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc357:
	.quad	.Ltmp1785-.Lfunc_begin0
	.quad	.Ltmp1790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1821-.Lfunc_begin0
	.quad	.Ltmp1827-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc358:
	.quad	.Ltmp1786-.Lfunc_begin0
	.quad	.Ltmp1787-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp1792-.Lfunc_begin0
	.quad	.Ltmp1793-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1797-.Lfunc_begin0
	.quad	.Ltmp1798-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1802-.Lfunc_begin0
	.quad	.Ltmp1803-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1807-.Lfunc_begin0
	.quad	.Ltmp1808-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1812-.Lfunc_begin0
	.quad	.Ltmp1813-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1817-.Lfunc_begin0
	.quad	.Ltmp1818-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp1823-.Lfunc_begin0
	.quad	.Ltmp1824-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp1829-.Lfunc_begin0
	.quad	.Ltmp1830-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc359:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1842-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1842-.Lfunc_begin0
	.quad	.Ltmp1855-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1856-.Lfunc_begin0
	.quad	.Ltmp1858-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc360:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1841-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1841-.Lfunc_begin0
	.quad	.Ltmp1847-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1856-.Lfunc_begin0
	.quad	.Ltmp1857-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc361:
	.quad	.Lfunc_begin34-.Lfunc_begin0
	.quad	.Ltmp1845-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1856-.Lfunc_begin0
	.quad	.Ltmp1859-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc362:
	.quad	.Ltmp1846-.Lfunc_begin0
	.quad	.Ltmp1848-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1848-.Lfunc_begin0
	.quad	.Ltmp1849-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1849-.Lfunc_begin0
	.quad	.Ltmp1850-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1850-.Lfunc_begin0
	.quad	.Ltmp1851-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1851-.Lfunc_begin0
	.quad	.Ltmp1852-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1852-.Lfunc_begin0
	.quad	.Ltmp1853-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1853-.Lfunc_begin0
	.quad	.Ltmp1854-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1854-.Lfunc_begin0
	.quad	.Ltmp1855-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc363:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1861-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc364:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1861-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc365:
	.quad	.Lfunc_begin35-.Lfunc_begin0
	.quad	.Ltmp1860-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc366:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1886-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1888-.Lfunc_begin0
	.quad	.Ltmp1891-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc367:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1881-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1888-.Lfunc_begin0
	.quad	.Ltmp1889-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc368:
	.quad	.Ltmp1862-.Lfunc_begin0
	.quad	.Ltmp1886-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1888-.Lfunc_begin0
	.quad	.Ltmp1891-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc369:
	.quad	.Ltmp1862-.Lfunc_begin0
	.quad	.Ltmp1866-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1876-.Lfunc_begin0
	.quad	.Ltmp1878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc370:
	.quad	.Ltmp1863-.Lfunc_begin0
	.quad	.Ltmp1941-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1950-.Lfunc_begin0
	.quad	.Ltmp1959-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc371:
	.quad	.Ltmp1867-.Lfunc_begin0
	.quad	.Ltmp1868-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc372:
	.quad	.Ltmp1869-.Lfunc_begin0
	.quad	.Ltmp1871-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc373:
	.quad	.Ltmp1870-.Lfunc_begin0
	.quad	.Ltmp1876-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc374:
	.quad	.Ltmp1871-.Lfunc_begin0
	.quad	.Ltmp1876-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc375:
	.quad	.Ltmp1873-.Lfunc_begin0
	.quad	.Ltmp1878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc376:
	.quad	.Ltmp1878-.Lfunc_begin0
	.quad	.Ltmp1896-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1896-.Lfunc_begin0
	.quad	.Ltmp1910-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1910-.Lfunc_begin0
	.quad	.Ltmp1925-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1925-.Lfunc_begin0
	.quad	.Ltmp1940-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1940-.Lfunc_begin0
	.quad	.Ltmp1950-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1950-.Lfunc_begin0
	.quad	.Ltmp1953-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1953-.Lfunc_begin0
	.quad	.Ltmp1956-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1956-.Lfunc_begin0
	.quad	.Ltmp1959-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1959-.Lfunc_begin0
	.quad	.Ltmp1968-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1968-.Lfunc_begin0
	.quad	.Lfunc_end36-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc377:
	.quad	.Ltmp1878-.Lfunc_begin0
	.quad	.Ltmp1881-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1881-.Lfunc_begin0
	.quad	.Ltmp1888-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1888-.Lfunc_begin0
	.quad	.Ltmp1889-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1889-.Lfunc_begin0
	.quad	.Ltmp1896-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1896-.Lfunc_begin0
	.quad	.Ltmp1899-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1899-.Lfunc_begin0
	.quad	.Ltmp1911-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1911-.Lfunc_begin0
	.quad	.Ltmp1914-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1914-.Lfunc_begin0
	.quad	.Ltmp1926-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1926-.Lfunc_begin0
	.quad	.Ltmp1929-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1929-.Lfunc_begin0
	.quad	.Ltmp1941-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1941-.Lfunc_begin0
	.quad	.Ltmp1944-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1944-.Lfunc_begin0
	.quad	.Ltmp1950-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1950-.Lfunc_begin0
	.quad	.Ltmp1951-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1951-.Lfunc_begin0
	.quad	.Ltmp1953-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp1953-.Lfunc_begin0
	.quad	.Ltmp1954-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1954-.Lfunc_begin0
	.quad	.Ltmp1956-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1956-.Lfunc_begin0
	.quad	.Ltmp1957-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp1957-.Lfunc_begin0
	.quad	.Ltmp1959-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1959-.Lfunc_begin0
	.quad	.Ltmp1960-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # DW_OP_reg9
	.quad	.Ltmp1960-.Lfunc_begin0
	.quad	.Lfunc_end36-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc378:
	.quad	.Ltmp1878-.Lfunc_begin0
	.quad	.Ltmp1881-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1885-.Lfunc_begin0
	.quad	.Ltmp1963-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc379:
	.quad	.Lfunc_begin37-.Lfunc_begin0
	.quad	.Ltmp1971-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc380:
	.quad	.Ltmp1971-.Lfunc_begin0
	.quad	.Ltmp1973-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc381:
	.quad	.Ltmp1972-.Lfunc_begin0
	.quad	.Lfunc_end37-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc382:
	.quad	.Ltmp1973-.Lfunc_begin0
	.quad	.Lfunc_end37-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc383:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1978-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp1978-.Lfunc_begin0
	.quad	.Ltmp1995-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp1996-.Lfunc_begin0
	.quad	.Ltmp1998-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc384:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1977-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp1977-.Lfunc_begin0
	.quad	.Ltmp1988-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1996-.Lfunc_begin0
	.quad	.Ltmp1997-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc385:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1984-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp1996-.Lfunc_begin0
	.quad	.Ltmp1999-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc386:
	.quad	.Lfunc_begin38-.Lfunc_begin0
	.quad	.Ltmp1981-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp1981-.Lfunc_begin0
	.quad	.Ltmp1995-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp1996-.Lfunc_begin0
	.quad	.Ltmp1999-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc387:
	.quad	.Ltmp1982-.Lfunc_begin0
	.quad	.Ltmp1983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc388:
	.quad	.Ltmp1985-.Lfunc_begin0
	.quad	.Ltmp1987-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1987-.Lfunc_begin0
	.quad	.Ltmp1989-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1989-.Lfunc_begin0
	.quad	.Ltmp1991-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1991-.Lfunc_begin0
	.quad	.Ltmp1993-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp1993-.Lfunc_begin0
	.quad	.Ltmp1995-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc389:
	.quad	.Ltmp1985-.Lfunc_begin0
	.quad	.Ltmp1987-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1987-.Lfunc_begin0
	.quad	.Ltmp1989-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1989-.Lfunc_begin0
	.quad	.Ltmp1991-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1991-.Lfunc_begin0
	.quad	.Ltmp1993-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1993-.Lfunc_begin0
	.quad	.Ltmp1995-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc390:
	.quad	.Ltmp1986-.Lfunc_begin0
	.quad	.Ltmp1988-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1988-.Lfunc_begin0
	.quad	.Ltmp1990-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp1990-.Lfunc_begin0
	.quad	.Ltmp1992-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp1992-.Lfunc_begin0
	.quad	.Ltmp1994-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc391:
	.quad	.Lfunc_begin39-.Lfunc_begin0
	.quad	.Ltmp2000-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2000-.Lfunc_begin0
	.quad	.Ltmp2003-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2003-.Lfunc_begin0
	.quad	.Ltmp2004-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc392:
	.quad	.Lfunc_begin39-.Lfunc_begin0
	.quad	.Ltmp2000-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2000-.Lfunc_begin0
	.quad	.Ltmp2006-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc393:
	.quad	.Lfunc_begin39-.Lfunc_begin0
	.quad	.Ltmp2000-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2000-.Lfunc_begin0
	.quad	.Ltmp2007-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc394:
	.quad	.Ltmp2002-.Lfunc_begin0
	.quad	.Ltmp2005-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc395:
	.quad	.Lfunc_begin40-.Lfunc_begin0
	.quad	.Ltmp2017-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc396:
	.quad	.Ltmp2009-.Lfunc_begin0
	.quad	.Ltmp2012-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc397:
	.quad	.Ltmp2010-.Lfunc_begin0
	.quad	.Ltmp2016-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc398:
	.quad	.Ltmp2013-.Lfunc_begin0
	.quad	.Lfunc_end40-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc399:
	.quad	.Ltmp2013-.Lfunc_begin0
	.quad	.Lfunc_end40-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc400:
	.quad	.Ltmp2014-.Lfunc_begin0
	.quad	.Ltmp2017-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc401:
	.quad	.Ltmp2018-.Lfunc_begin0
	.quad	.Ltmp2028-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc402:
	.quad	.Ltmp2019-.Lfunc_begin0
	.quad	.Ltmp2022-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	.Ltmp2023-.Lfunc_begin0
	.quad	.Ltmp2028-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc403:
	.quad	.Ltmp2020-.Lfunc_begin0
	.quad	.Ltmp2024-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2024-.Lfunc_begin0
	.quad	.Ltmp2028-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc404:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2033-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2033-.Lfunc_begin0
	.quad	.Ltmp2040-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2041-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2067-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc405:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2036-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2039-.Lfunc_begin0
	.quad	.Ltmp2068-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc406:
	.quad	.Lfunc_begin41-.Lfunc_begin0
	.quad	.Ltmp2032-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2032-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2065-.Lfunc_begin0
	.quad	.Ltmp2066-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc407:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2050-.Lfunc_begin0
	.quad	.Ltmp2053-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc408:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2049-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc409:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2049-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc410:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2037-.Lfunc_begin0
	.quad	.Ltmp2041-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2054-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # super-register DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc411:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc412:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc413:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc414:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2035-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2035-.Lfunc_begin0
	.quad	.Ltmp2041-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2043-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc415:
	.quad	.Ltmp2045-.Lfunc_begin0
	.quad	.Ltmp2050-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc416:
	.quad	.Ltmp2046-.Lfunc_begin0
	.quad	.Ltmp2048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc417:
	.quad	.Ltmp2055-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc418:
	.quad	.Ltmp2056-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc419:
	.quad	.Ltmp2057-.Lfunc_begin0
	.quad	.Ltmp2060-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2060-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc420:
	.quad	.Lfunc_begin42-.Lfunc_begin0
	.quad	.Ltmp2070-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc421:
	.quad	.Lfunc_begin42-.Lfunc_begin0
	.quad	.Ltmp2070-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc422:
	.quad	.Lfunc_begin42-.Lfunc_begin0
	.quad	.Ltmp2069-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc423:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2155-.Lfunc_begin0
	.quad	.Ltmp2158-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc424:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2080-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2081-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc425:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc426:
	.quad	.Lfunc_begin43-.Lfunc_begin0
	.quad	.Ltmp2080-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2081-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc427:
	.quad	.Ltmp2075-.Lfunc_begin0
	.quad	.Ltmp2078-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc428:
	.quad	.Ltmp2076-.Lfunc_begin0
	.quad	.Ltmp2081-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc429:
	.quad	.Ltmp2082-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc430:
	.quad	.Ltmp2083-.Lfunc_begin0
	.quad	.Ltmp2087-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc431:
	.quad	.Ltmp2084-.Lfunc_begin0
	.quad	.Ltmp2089-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2094-.Lfunc_begin0
	.quad	.Ltmp2098-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2099-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc432:
	.quad	.Ltmp2085-.Lfunc_begin0
	.quad	.Ltmp2089-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc433:
	.quad	.Ltmp2085-.Lfunc_begin0
	.quad	.Ltmp2087-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc434:
	.quad	.Ltmp2085-.Lfunc_begin0
	.quad	.Ltmp2092-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2097-.Lfunc_begin0
	.quad	.Ltmp2099-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2100-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc435:
	.quad	.Ltmp2087-.Lfunc_begin0
	.quad	.Ltmp2092-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc436:
	.quad	.Ltmp2087-.Lfunc_begin0
	.quad	.Ltmp2090-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc437:
	.quad	.Ltmp2090-.Lfunc_begin0
	.quad	.Ltmp2096-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc438:
	.quad	.Ltmp2090-.Lfunc_begin0
	.quad	.Ltmp2093-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc439:
	.quad	.Ltmp2104-.Lfunc_begin0
	.quad	.Ltmp2155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	97                      # DW_OP_reg17
	.quad	0
	.quad	0
.Ldebug_loc440:
	.quad	.Ltmp2101-.Lfunc_begin0
	.quad	.Ltmp2105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2105-.Lfunc_begin0
	.quad	.Ltmp2155-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2155-.Lfunc_begin0
	.quad	.Ltmp2156-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2156-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc441:
	.quad	.Ltmp2101-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Ltmp2119-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2119-.Lfunc_begin0
	.quad	.Ltmp2123-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2123-.Lfunc_begin0
	.quad	.Ltmp2128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2128-.Lfunc_begin0
	.quad	.Ltmp2135-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2135-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2144-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2144-.Lfunc_begin0
	.quad	.Ltmp2170-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2170-.Lfunc_begin0
	.quad	.Ltmp2174-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2174-.Lfunc_begin0
	.quad	.Ltmp2178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2178-.Lfunc_begin0
	.quad	.Ltmp2182-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2182-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc442:
	.quad	.Ltmp2101-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc443:
	.quad	.Ltmp2106-.Lfunc_begin0
	.quad	.Ltmp2129-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc444:
	.quad	.Ltmp2108-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2113-.Lfunc_begin0
	.quad	.Ltmp2119-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	49                      # DW_OP_lit1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2119-.Lfunc_begin0
	.quad	.Ltmp2123-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	50                      # DW_OP_lit2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2123-.Lfunc_begin0
	.quad	.Ltmp2128-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	51                      # DW_OP_lit3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2128-.Lfunc_begin0
	.quad	.Ltmp2135-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	52                      # DW_OP_lit4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2135-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	53                      # DW_OP_lit5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2139-.Lfunc_begin0
	.quad	.Ltmp2144-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	54                      # DW_OP_lit6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2144-.Lfunc_begin0
	.quad	.Ltmp2151-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	55                      # DW_OP_lit7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2151-.Lfunc_begin0
	.quad	.Ltmp2153-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	56                      # DW_OP_lit8
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc445:
	.quad	.Ltmp2109-.Lfunc_begin0
	.quad	.Ltmp2113-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2114-.Lfunc_begin0
	.quad	.Ltmp2118-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2118-.Lfunc_begin0
	.quad	.Ltmp2123-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2124-.Lfunc_begin0
	.quad	.Ltmp2128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2130-.Lfunc_begin0
	.quad	.Ltmp2134-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2134-.Lfunc_begin0
	.quad	.Ltmp2139-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2140-.Lfunc_begin0
	.quad	.Ltmp2144-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc446:
	.quad	.Ltmp2110-.Lfunc_begin0
	.quad	.Ltmp2145-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2147-.Lfunc_begin0
	.quad	.Ltmp2153-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc447:
	.quad	.Ltmp2111-.Lfunc_begin0
	.quad	.Ltmp2112-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2116-.Lfunc_begin0
	.quad	.Ltmp2117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2121-.Lfunc_begin0
	.quad	.Ltmp2122-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2126-.Lfunc_begin0
	.quad	.Ltmp2127-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2132-.Lfunc_begin0
	.quad	.Ltmp2133-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2137-.Lfunc_begin0
	.quad	.Ltmp2138-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2142-.Lfunc_begin0
	.quad	.Ltmp2143-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2148-.Lfunc_begin0
	.quad	.Ltmp2149-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc448:
	.quad	.Ltmp2160-.Lfunc_begin0
	.quad	.Ltmp2163-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2167-.Lfunc_begin0
	.quad	.Ltmp2170-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2171-.Lfunc_begin0
	.quad	.Ltmp2174-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2175-.Lfunc_begin0
	.quad	.Ltmp2178-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2179-.Lfunc_begin0
	.quad	.Ltmp2182-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc449:
	.quad	.Ltmp2161-.Lfunc_begin0
	.quad	.Ltmp2162-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2168-.Lfunc_begin0
	.quad	.Ltmp2169-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2172-.Lfunc_begin0
	.quad	.Ltmp2173-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2176-.Lfunc_begin0
	.quad	.Ltmp2177-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2180-.Lfunc_begin0
	.quad	.Ltmp2181-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc450:
	.quad	.Ltmp2161-.Lfunc_begin0
	.quad	.Ltmp2165-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2168-.Lfunc_begin0
	.quad	.Ltmp2185-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc451:
	.quad	.Ltmp2186-.Lfunc_begin0
	.quad	.Ltmp2188-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc452:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2194-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2194-.Lfunc_begin0
	.quad	.Ltmp2200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc453:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2193-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2193-.Lfunc_begin0
	.quad	.Ltmp2198-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2198-.Lfunc_begin0
	.quad	.Ltmp2200-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2200-.Lfunc_begin0
	.quad	.Ltmp2201-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc454:
	.quad	.Lfunc_begin44-.Lfunc_begin0
	.quad	.Ltmp2192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2192-.Lfunc_begin0
	.quad	.Ltmp2201-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc455:
	.quad	.Ltmp2196-.Lfunc_begin0
	.quad	.Ltmp2198-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc456:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2244-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc457:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2211-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2213-.Lfunc_begin0
	.quad	.Lfunc_end45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc458:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc459:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc460:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2211-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2213-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc461:
	.quad	.Ltmp2206-.Lfunc_begin0
	.quad	.Ltmp2209-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc462:
	.quad	.Ltmp2207-.Lfunc_begin0
	.quad	.Ltmp2213-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc463:
	.quad	.Ltmp2214-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2238-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc464:
	.quad	.Ltmp2215-.Lfunc_begin0
	.quad	.Ltmp2219-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc465:
	.quad	.Ltmp2216-.Lfunc_begin0
	.quad	.Ltmp2221-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2226-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc466:
	.quad	.Ltmp2217-.Lfunc_begin0
	.quad	.Ltmp2221-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc467:
	.quad	.Ltmp2217-.Lfunc_begin0
	.quad	.Ltmp2219-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc468:
	.quad	.Ltmp2217-.Lfunc_begin0
	.quad	.Ltmp2224-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2229-.Lfunc_begin0
	.quad	.Ltmp2231-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2232-.Lfunc_begin0
	.quad	.Ltmp2235-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc469:
	.quad	.Ltmp2219-.Lfunc_begin0
	.quad	.Ltmp2224-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc470:
	.quad	.Ltmp2219-.Lfunc_begin0
	.quad	.Ltmp2222-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc471:
	.quad	.Ltmp2222-.Lfunc_begin0
	.quad	.Ltmp2228-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc472:
	.quad	.Ltmp2222-.Lfunc_begin0
	.quad	.Ltmp2225-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc473:
	.quad	.Ltmp2233-.Lfunc_begin0
	.quad	.Ltmp2242-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2242-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	.Ltmp2246-.Lfunc_begin0
	.quad	.Ltmp2263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc474:
	.quad	.Ltmp2233-.Lfunc_begin0
	.quad	.Ltmp2241-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2241-.Lfunc_begin0
	.quad	.Ltmp2245-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2246-.Lfunc_begin0
	.quad	.Ltmp2252-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2252-.Lfunc_begin0
	.quad	.Ltmp2260-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2260-.Lfunc_begin0
	.quad	.Lfunc_end45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc475:
	.quad	.Ltmp2233-.Lfunc_begin0
	.quad	.Lfunc_end45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc476:
	.quad	.Ltmp2251-.Lfunc_begin0
	.quad	.Ltmp2255-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2259-.Lfunc_begin0
	.quad	.Ltmp2263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc477:
	.quad	.Ltmp2249-.Lfunc_begin0
	.quad	.Ltmp2256-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2257-.Lfunc_begin0
	.quad	.Ltmp2263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc478:
	.quad	.Ltmp2248-.Lfunc_begin0
	.quad	.Ltmp2253-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2263-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc479:
	.quad	.Ltmp2248-.Lfunc_begin0
	.quad	.Ltmp2250-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2255-.Lfunc_begin0
	.quad	.Ltmp2258-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc480:
	.quad	.Ltmp2240-.Lfunc_begin0
	.quad	.Ltmp2241-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2247-.Lfunc_begin0
	.quad	.Ltmp2252-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2254-.Lfunc_begin0
	.quad	.Ltmp2260-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc481:
	.quad	.Ltmp2264-.Lfunc_begin0
	.quad	.Lfunc_end45-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc482:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2271-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2283-.Lfunc_begin0
	.quad	.Ltmp2348-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Lfunc_end46-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc483:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2279-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2280-.Lfunc_begin0
	.quad	.Ltmp2282-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2282-.Lfunc_begin0
	.quad	.Ltmp2338-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Ltmp2352-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc484:
	.quad	.Lfunc_begin46-.Lfunc_begin0
	.quad	.Ltmp2270-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2270-.Lfunc_begin0
	.quad	.Ltmp2338-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Ltmp2351-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc485:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc486:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc487:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc488:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc489:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc490:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc491:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc492:
	.quad	.Ltmp2273-.Lfunc_begin0
	.quad	.Ltmp2276-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc493:
	.quad	.Ltmp2274-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc494:
	.quad	.Ltmp2278-.Lfunc_begin0
	.quad	.Ltmp2280-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc495:
	.quad	.Ltmp2288-.Lfunc_begin0
	.quad	.Ltmp2307-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc496:
	.quad	.Ltmp2289-.Lfunc_begin0
	.quad	.Ltmp2293-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc497:
	.quad	.Ltmp2290-.Lfunc_begin0
	.quad	.Ltmp2299-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2299-.Lfunc_begin0
	.quad	.Ltmp2303-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2304-.Lfunc_begin0
	.quad	.Ltmp2309-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc498:
	.quad	.Ltmp2291-.Lfunc_begin0
	.quad	.Ltmp2301-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc499:
	.quad	.Ltmp2291-.Lfunc_begin0
	.quad	.Ltmp2293-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc500:
	.quad	.Ltmp2291-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2302-.Lfunc_begin0
	.quad	.Ltmp2304-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2305-.Lfunc_begin0
	.quad	.Ltmp2308-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc501:
	.quad	.Ltmp2293-.Lfunc_begin0
	.quad	.Ltmp2297-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc502:
	.quad	.Ltmp2293-.Lfunc_begin0
	.quad	.Ltmp2295-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc503:
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2301-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc504:
	.quad	.Ltmp2295-.Lfunc_begin0
	.quad	.Ltmp2298-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc505:
	.quad	.Ltmp2306-.Lfunc_begin0
	.quad	.Ltmp2312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2313-.Lfunc_begin0
	.quad	.Ltmp2329-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc506:
	.quad	.Ltmp2306-.Lfunc_begin0
	.quad	.Ltmp2311-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2311-.Lfunc_begin0
	.quad	.Ltmp2312-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2313-.Lfunc_begin0
	.quad	.Ltmp2319-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2319-.Lfunc_begin0
	.quad	.Ltmp2326-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2326-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc507:
	.quad	.Ltmp2306-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc508:
	.quad	.Ltmp2318-.Lfunc_begin0
	.quad	.Ltmp2320-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2325-.Lfunc_begin0
	.quad	.Ltmp2329-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc509:
	.quad	.Ltmp2316-.Lfunc_begin0
	.quad	.Ltmp2322-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2323-.Lfunc_begin0
	.quad	.Ltmp2329-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc510:
	.quad	.Ltmp2315-.Lfunc_begin0
	.quad	.Ltmp2322-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2322-.Lfunc_begin0
	.quad	.Ltmp2329-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc511:
	.quad	.Ltmp2315-.Lfunc_begin0
	.quad	.Ltmp2317-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2322-.Lfunc_begin0
	.quad	.Ltmp2324-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc512:
	.quad	.Ltmp2310-.Lfunc_begin0
	.quad	.Ltmp2311-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2314-.Lfunc_begin0
	.quad	.Ltmp2319-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2321-.Lfunc_begin0
	.quad	.Ltmp2326-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc513:
	.quad	.Ltmp2330-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc514:
	.quad	.Ltmp2332-.Lfunc_begin0
	.quad	.Ltmp2338-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2339-.Lfunc_begin0
	.quad	.Ltmp2341-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Ltmp2352-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2354-.Lfunc_begin0
	.quad	.Ltmp2365-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2365-.Lfunc_begin0
	.quad	.Ltmp2367-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc515:
	.quad	.Ltmp2335-.Lfunc_begin0
	.quad	.Ltmp2348-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Lfunc_end46-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc516:
	.quad	.Ltmp2332-.Lfunc_begin0
	.quad	.Ltmp2338-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2349-.Lfunc_begin0
	.quad	.Ltmp2352-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc517:
	.quad	.Ltmp2340-.Lfunc_begin0
	.quad	.Ltmp2341-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2343-.Lfunc_begin0
	.quad	.Ltmp2345-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2356-.Lfunc_begin0
	.quad	.Ltmp2357-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2359-.Lfunc_begin0
	.quad	.Ltmp2361-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2366-.Lfunc_begin0
	.quad	.Ltmp2367-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2369-.Lfunc_begin0
	.quad	.Ltmp2371-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc518:
	.quad	.Ltmp2340-.Lfunc_begin0
	.quad	.Ltmp2348-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2352-.Lfunc_begin0
	.quad	.Ltmp2355-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2356-.Lfunc_begin0
	.quad	.Lfunc_end46-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc519:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2412-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc520:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2383-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc521:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc522:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc523:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2381-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2383-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc524:
	.quad	.Ltmp2376-.Lfunc_begin0
	.quad	.Ltmp2379-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc525:
	.quad	.Ltmp2377-.Lfunc_begin0
	.quad	.Ltmp2383-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc526:
	.quad	.Ltmp2384-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2408-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc527:
	.quad	.Ltmp2385-.Lfunc_begin0
	.quad	.Ltmp2389-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc528:
	.quad	.Ltmp2386-.Lfunc_begin0
	.quad	.Ltmp2391-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2396-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc529:
	.quad	.Ltmp2387-.Lfunc_begin0
	.quad	.Ltmp2391-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc530:
	.quad	.Ltmp2387-.Lfunc_begin0
	.quad	.Ltmp2389-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc531:
	.quad	.Ltmp2387-.Lfunc_begin0
	.quad	.Ltmp2394-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2399-.Lfunc_begin0
	.quad	.Ltmp2401-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2402-.Lfunc_begin0
	.quad	.Ltmp2405-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc532:
	.quad	.Ltmp2389-.Lfunc_begin0
	.quad	.Ltmp2394-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc533:
	.quad	.Ltmp2389-.Lfunc_begin0
	.quad	.Ltmp2392-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc534:
	.quad	.Ltmp2392-.Lfunc_begin0
	.quad	.Ltmp2398-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc535:
	.quad	.Ltmp2392-.Lfunc_begin0
	.quad	.Ltmp2395-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc536:
	.quad	.Ltmp2403-.Lfunc_begin0
	.quad	.Ltmp2411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2411-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc537:
	.quad	.Ltmp2403-.Lfunc_begin0
	.quad	.Ltmp2412-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2413-.Lfunc_begin0
	.quad	.Ltmp2421-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc538:
	.quad	.Ltmp2403-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc539:
	.quad	.Ltmp2410-.Lfunc_begin0
	.quad	.Ltmp2411-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2414-.Lfunc_begin0
	.quad	.Ltmp2416-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2417-.Lfunc_begin0
	.quad	.Ltmp2421-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc540:
	.quad	.Ltmp2422-.Lfunc_begin0
	.quad	.Lfunc_end47-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc541:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2429-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2429-.Lfunc_begin0
	.quad	.Ltmp2440-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2441-.Lfunc_begin0
	.quad	.Ltmp2499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc542:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2437-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2438-.Lfunc_begin0
	.quad	.Ltmp2440-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2440-.Lfunc_begin0
	.quad	.Ltmp2489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Ltmp2503-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc543:
	.quad	.Lfunc_begin48-.Lfunc_begin0
	.quad	.Ltmp2428-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2428-.Lfunc_begin0
	.quad	.Ltmp2489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Ltmp2502-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc544:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2468-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc545:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2468-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc546:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2468-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc547:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc548:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc549:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc550:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc551:
	.quad	.Ltmp2431-.Lfunc_begin0
	.quad	.Ltmp2434-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc552:
	.quad	.Ltmp2432-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc553:
	.quad	.Ltmp2436-.Lfunc_begin0
	.quad	.Ltmp2438-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc554:
	.quad	.Ltmp2446-.Lfunc_begin0
	.quad	.Ltmp2467-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc555:
	.quad	.Ltmp2447-.Lfunc_begin0
	.quad	.Ltmp2451-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc556:
	.quad	.Ltmp2448-.Lfunc_begin0
	.quad	.Ltmp2453-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2458-.Lfunc_begin0
	.quad	.Ltmp2462-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2463-.Lfunc_begin0
	.quad	.Ltmp2468-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc557:
	.quad	.Ltmp2449-.Lfunc_begin0
	.quad	.Ltmp2453-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc558:
	.quad	.Ltmp2449-.Lfunc_begin0
	.quad	.Ltmp2451-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc559:
	.quad	.Ltmp2449-.Lfunc_begin0
	.quad	.Ltmp2456-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2461-.Lfunc_begin0
	.quad	.Ltmp2463-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2464-.Lfunc_begin0
	.quad	.Ltmp2466-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc560:
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2456-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc561:
	.quad	.Ltmp2451-.Lfunc_begin0
	.quad	.Ltmp2454-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc562:
	.quad	.Ltmp2454-.Lfunc_begin0
	.quad	.Ltmp2460-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc563:
	.quad	.Ltmp2454-.Lfunc_begin0
	.quad	.Ltmp2457-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc564:
	.quad	.Ltmp2465-.Lfunc_begin0
	.quad	.Ltmp2470-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2470-.Lfunc_begin0
	.quad	.Ltmp2471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2472-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc565:
	.quad	.Ltmp2465-.Lfunc_begin0
	.quad	.Ltmp2471-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2472-.Lfunc_begin0
	.quad	.Ltmp2480-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc566:
	.quad	.Ltmp2465-.Lfunc_begin0
	.quad	.Ltmp2481-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc567:
	.quad	.Ltmp2469-.Lfunc_begin0
	.quad	.Ltmp2470-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2473-.Lfunc_begin0
	.quad	.Ltmp2475-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2476-.Lfunc_begin0
	.quad	.Ltmp2480-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc568:
	.quad	.Ltmp2481-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc569:
	.quad	.Ltmp2483-.Lfunc_begin0
	.quad	.Ltmp2489-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2490-.Lfunc_begin0
	.quad	.Ltmp2492-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Ltmp2503-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2505-.Lfunc_begin0
	.quad	.Ltmp2516-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2516-.Lfunc_begin0
	.quad	.Ltmp2518-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc570:
	.quad	.Ltmp2486-.Lfunc_begin0
	.quad	.Ltmp2499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc571:
	.quad	.Ltmp2483-.Lfunc_begin0
	.quad	.Ltmp2489-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2500-.Lfunc_begin0
	.quad	.Ltmp2503-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc572:
	.quad	.Ltmp2491-.Lfunc_begin0
	.quad	.Ltmp2492-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2494-.Lfunc_begin0
	.quad	.Ltmp2496-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2507-.Lfunc_begin0
	.quad	.Ltmp2508-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2510-.Lfunc_begin0
	.quad	.Ltmp2512-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2517-.Lfunc_begin0
	.quad	.Ltmp2518-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2520-.Lfunc_begin0
	.quad	.Ltmp2522-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc573:
	.quad	.Ltmp2491-.Lfunc_begin0
	.quad	.Ltmp2499-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2503-.Lfunc_begin0
	.quad	.Ltmp2506-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2507-.Lfunc_begin0
	.quad	.Lfunc_end48-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc574:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2532-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2535-.Lfunc_begin0
	.quad	.Lfunc_end49-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc575:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2557-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc576:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2532-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2535-.Lfunc_begin0
	.quad	.Lfunc_end49-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc577:
	.quad	.Ltmp2527-.Lfunc_begin0
	.quad	.Ltmp2530-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc578:
	.quad	.Ltmp2528-.Lfunc_begin0
	.quad	.Ltmp2534-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc579:
	.quad	.Ltmp2536-.Lfunc_begin0
	.quad	.Ltmp2558-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc580:
	.quad	.Ltmp2537-.Lfunc_begin0
	.quad	.Ltmp2541-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc581:
	.quad	.Ltmp2538-.Lfunc_begin0
	.quad	.Ltmp2543-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2548-.Lfunc_begin0
	.quad	.Ltmp2552-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2553-.Lfunc_begin0
	.quad	.Ltmp2559-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc582:
	.quad	.Ltmp2539-.Lfunc_begin0
	.quad	.Ltmp2543-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc583:
	.quad	.Ltmp2539-.Lfunc_begin0
	.quad	.Ltmp2541-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc584:
	.quad	.Ltmp2539-.Lfunc_begin0
	.quad	.Ltmp2546-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2551-.Lfunc_begin0
	.quad	.Ltmp2553-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2554-.Lfunc_begin0
	.quad	.Lfunc_end49-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc585:
	.quad	.Ltmp2541-.Lfunc_begin0
	.quad	.Ltmp2546-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc586:
	.quad	.Ltmp2541-.Lfunc_begin0
	.quad	.Ltmp2544-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc587:
	.quad	.Ltmp2544-.Lfunc_begin0
	.quad	.Ltmp2550-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc588:
	.quad	.Ltmp2544-.Lfunc_begin0
	.quad	.Ltmp2547-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc589:
	.quad	.Ltmp2555-.Lfunc_begin0
	.quad	.Ltmp2559-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc590:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2564-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2564-.Lfunc_begin0
	.quad	.Ltmp2575-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2576-.Lfunc_begin0
	.quad	.Ltmp2611-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc591:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2572-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2573-.Lfunc_begin0
	.quad	.Ltmp2575-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2575-.Lfunc_begin0
	.quad	.Ltmp2612-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2623-.Lfunc_begin0
	.quad	.Ltmp2626-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc592:
	.quad	.Lfunc_begin50-.Lfunc_begin0
	.quad	.Ltmp2563-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2563-.Lfunc_begin0
	.quad	.Ltmp2612-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2623-.Lfunc_begin0
	.quad	.Ltmp2625-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc593:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc594:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc595:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc596:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc597:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc598:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2603-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2603-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc599:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc600:
	.quad	.Ltmp2566-.Lfunc_begin0
	.quad	.Ltmp2569-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc601:
	.quad	.Ltmp2567-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc602:
	.quad	.Ltmp2571-.Lfunc_begin0
	.quad	.Ltmp2573-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc603:
	.quad	.Ltmp2581-.Lfunc_begin0
	.quad	.Ltmp2601-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc604:
	.quad	.Ltmp2582-.Lfunc_begin0
	.quad	.Ltmp2586-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc605:
	.quad	.Ltmp2583-.Lfunc_begin0
	.quad	.Ltmp2588-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2593-.Lfunc_begin0
	.quad	.Ltmp2597-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2598-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc606:
	.quad	.Ltmp2584-.Lfunc_begin0
	.quad	.Ltmp2588-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc607:
	.quad	.Ltmp2584-.Lfunc_begin0
	.quad	.Ltmp2586-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc608:
	.quad	.Ltmp2584-.Lfunc_begin0
	.quad	.Ltmp2591-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2596-.Lfunc_begin0
	.quad	.Ltmp2598-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2599-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc609:
	.quad	.Ltmp2586-.Lfunc_begin0
	.quad	.Ltmp2591-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc610:
	.quad	.Ltmp2586-.Lfunc_begin0
	.quad	.Ltmp2589-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc611:
	.quad	.Ltmp2589-.Lfunc_begin0
	.quad	.Ltmp2595-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc612:
	.quad	.Ltmp2589-.Lfunc_begin0
	.quad	.Ltmp2592-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc613:
	.quad	.Ltmp2600-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc614:
	.quad	.Ltmp2605-.Lfunc_begin0
	.quad	.Ltmp2612-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2613-.Lfunc_begin0
	.quad	.Ltmp2615-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2623-.Lfunc_begin0
	.quad	.Ltmp2626-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2628-.Lfunc_begin0
	.quad	.Ltmp2639-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2639-.Lfunc_begin0
	.quad	.Ltmp2641-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc615:
	.quad	.Ltmp2608-.Lfunc_begin0
	.quad	.Ltmp2622-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2623-.Lfunc_begin0
	.quad	.Lfunc_end50-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc616:
	.quad	.Ltmp2605-.Lfunc_begin0
	.quad	.Ltmp2612-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2623-.Lfunc_begin0
	.quad	.Ltmp2626-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc617:
	.quad	.Ltmp2614-.Lfunc_begin0
	.quad	.Ltmp2615-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2617-.Lfunc_begin0
	.quad	.Ltmp2619-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2630-.Lfunc_begin0
	.quad	.Ltmp2631-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2633-.Lfunc_begin0
	.quad	.Ltmp2635-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2640-.Lfunc_begin0
	.quad	.Ltmp2641-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2643-.Lfunc_begin0
	.quad	.Ltmp2645-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc618:
	.quad	.Ltmp2614-.Lfunc_begin0
	.quad	.Ltmp2622-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2626-.Lfunc_begin0
	.quad	.Ltmp2629-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2630-.Lfunc_begin0
	.quad	.Lfunc_end50-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc619:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2680-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc620:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2655-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2657-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc621:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc622:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc623:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2655-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2657-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc624:
	.quad	.Ltmp2650-.Lfunc_begin0
	.quad	.Ltmp2653-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc625:
	.quad	.Ltmp2651-.Lfunc_begin0
	.quad	.Ltmp2657-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc626:
	.quad	.Ltmp2658-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	112                     # DW_OP_breg0
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc627:
	.quad	.Ltmp2659-.Lfunc_begin0
	.quad	.Ltmp2663-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc628:
	.quad	.Ltmp2660-.Lfunc_begin0
	.quad	.Ltmp2665-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2670-.Lfunc_begin0
	.quad	.Ltmp2674-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2675-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc629:
	.quad	.Ltmp2661-.Lfunc_begin0
	.quad	.Ltmp2665-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc630:
	.quad	.Ltmp2661-.Lfunc_begin0
	.quad	.Ltmp2663-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc631:
	.quad	.Ltmp2661-.Lfunc_begin0
	.quad	.Ltmp2668-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2673-.Lfunc_begin0
	.quad	.Ltmp2675-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2676-.Lfunc_begin0
	.quad	.Ltmp2679-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc632:
	.quad	.Ltmp2663-.Lfunc_begin0
	.quad	.Ltmp2668-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc633:
	.quad	.Ltmp2663-.Lfunc_begin0
	.quad	.Ltmp2666-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc634:
	.quad	.Ltmp2666-.Lfunc_begin0
	.quad	.Ltmp2672-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc635:
	.quad	.Ltmp2666-.Lfunc_begin0
	.quad	.Ltmp2669-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc636:
	.quad	.Ltmp2677-.Lfunc_begin0
	.quad	.Ltmp2680-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2680-.Lfunc_begin0
	.quad	.Ltmp2686-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2687-.Lfunc_begin0
	.quad	.Ltmp2706-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc637:
	.quad	.Ltmp2677-.Lfunc_begin0
	.quad	.Ltmp2691-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2691-.Lfunc_begin0
	.quad	.Ltmp2695-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2695-.Lfunc_begin0
	.quad	.Ltmp2699-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2699-.Lfunc_begin0
	.quad	.Ltmp2703-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp2703-.Lfunc_begin0
	.quad	.Ltmp2709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2709-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc638:
	.quad	.Ltmp2677-.Lfunc_begin0
	.quad	.Lfunc_end51-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc639:
	.quad	.Ltmp2681-.Lfunc_begin0
	.quad	.Ltmp2684-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2688-.Lfunc_begin0
	.quad	.Ltmp2691-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2692-.Lfunc_begin0
	.quad	.Ltmp2695-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2696-.Lfunc_begin0
	.quad	.Ltmp2699-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2700-.Lfunc_begin0
	.quad	.Ltmp2703-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc640:
	.quad	.Ltmp2682-.Lfunc_begin0
	.quad	.Ltmp2683-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2689-.Lfunc_begin0
	.quad	.Ltmp2690-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2693-.Lfunc_begin0
	.quad	.Ltmp2694-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2697-.Lfunc_begin0
	.quad	.Ltmp2698-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2701-.Lfunc_begin0
	.quad	.Ltmp2702-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc641:
	.quad	.Ltmp2682-.Lfunc_begin0
	.quad	.Ltmp2686-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	.Ltmp2689-.Lfunc_begin0
	.quad	.Ltmp2706-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc642:
	.quad	.Ltmp2707-.Lfunc_begin0
	.quad	.Ltmp2709-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc643:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2714-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2714-.Lfunc_begin0
	.quad	.Ltmp2725-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2726-.Lfunc_begin0
	.quad	.Ltmp2789-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc644:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2722-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2723-.Lfunc_begin0
	.quad	.Ltmp2725-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2725-.Lfunc_begin0
	.quad	.Ltmp2790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2801-.Lfunc_begin0
	.quad	.Ltmp2804-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc645:
	.quad	.Lfunc_begin52-.Lfunc_begin0
	.quad	.Ltmp2713-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2713-.Lfunc_begin0
	.quad	.Ltmp2790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2801-.Lfunc_begin0
	.quad	.Ltmp2803-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc646:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc647:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc648:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc649:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc650:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc651:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc652:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	0
	.quad	0
.Ldebug_loc653:
	.quad	.Ltmp2716-.Lfunc_begin0
	.quad	.Ltmp2719-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc654:
	.quad	.Ltmp2717-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc655:
	.quad	.Ltmp2721-.Lfunc_begin0
	.quad	.Ltmp2723-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc656:
	.quad	.Ltmp2731-.Lfunc_begin0
	.quad	.Ltmp2750-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	115                     # DW_OP_breg3
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc657:
	.quad	.Ltmp2732-.Lfunc_begin0
	.quad	.Ltmp2736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc658:
	.quad	.Ltmp2733-.Lfunc_begin0
	.quad	.Ltmp2742-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2742-.Lfunc_begin0
	.quad	.Ltmp2746-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2747-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc659:
	.quad	.Ltmp2734-.Lfunc_begin0
	.quad	.Ltmp2744-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc660:
	.quad	.Ltmp2734-.Lfunc_begin0
	.quad	.Ltmp2736-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc661:
	.quad	.Ltmp2734-.Lfunc_begin0
	.quad	.Ltmp2740-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2745-.Lfunc_begin0
	.quad	.Ltmp2747-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2748-.Lfunc_begin0
	.quad	.Ltmp2751-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc662:
	.quad	.Ltmp2736-.Lfunc_begin0
	.quad	.Ltmp2740-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc663:
	.quad	.Ltmp2736-.Lfunc_begin0
	.quad	.Ltmp2738-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc664:
	.quad	.Ltmp2738-.Lfunc_begin0
	.quad	.Ltmp2744-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc665:
	.quad	.Ltmp2738-.Lfunc_begin0
	.quad	.Ltmp2741-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc666:
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2753-.Lfunc_begin0
	.quad	.Ltmp2759-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp2760-.Lfunc_begin0
	.quad	.Ltmp2780-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc667:
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	.Ltmp2753-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2753-.Lfunc_begin0
	.quad	.Ltmp2759-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2760-.Lfunc_begin0
	.quad	.Ltmp2764-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2764-.Lfunc_begin0
	.quad	.Ltmp2768-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2768-.Lfunc_begin0
	.quad	.Ltmp2772-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2772-.Lfunc_begin0
	.quad	.Ltmp2777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2777-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc668:
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc669:
	.quad	.Ltmp2754-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2761-.Lfunc_begin0
	.quad	.Ltmp2764-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2765-.Lfunc_begin0
	.quad	.Ltmp2768-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2769-.Lfunc_begin0
	.quad	.Ltmp2772-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp2774-.Lfunc_begin0
	.quad	.Ltmp2777-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc670:
	.quad	.Ltmp2755-.Lfunc_begin0
	.quad	.Ltmp2756-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2762-.Lfunc_begin0
	.quad	.Ltmp2763-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2766-.Lfunc_begin0
	.quad	.Ltmp2767-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2770-.Lfunc_begin0
	.quad	.Ltmp2771-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2775-.Lfunc_begin0
	.quad	.Ltmp2776-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc671:
	.quad	.Ltmp2755-.Lfunc_begin0
	.quad	.Ltmp2759-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2762-.Lfunc_begin0
	.quad	.Ltmp2766-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2766-.Lfunc_begin0
	.quad	.Ltmp2773-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2775-.Lfunc_begin0
	.quad	.Ltmp2780-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc672:
	.quad	.Ltmp2781-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc673:
	.quad	.Ltmp2783-.Lfunc_begin0
	.quad	.Ltmp2790-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2791-.Lfunc_begin0
	.quad	.Ltmp2793-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2801-.Lfunc_begin0
	.quad	.Ltmp2804-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2806-.Lfunc_begin0
	.quad	.Ltmp2817-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2817-.Lfunc_begin0
	.quad	.Ltmp2819-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc674:
	.quad	.Ltmp2786-.Lfunc_begin0
	.quad	.Ltmp2800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2801-.Lfunc_begin0
	.quad	.Lfunc_end52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc675:
	.quad	.Ltmp2783-.Lfunc_begin0
	.quad	.Ltmp2790-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2801-.Lfunc_begin0
	.quad	.Ltmp2804-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc676:
	.quad	.Ltmp2792-.Lfunc_begin0
	.quad	.Ltmp2793-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2795-.Lfunc_begin0
	.quad	.Ltmp2797-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2808-.Lfunc_begin0
	.quad	.Ltmp2809-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2811-.Lfunc_begin0
	.quad	.Ltmp2813-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2818-.Lfunc_begin0
	.quad	.Ltmp2819-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2821-.Lfunc_begin0
	.quad	.Ltmp2823-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc677:
	.quad	.Ltmp2792-.Lfunc_begin0
	.quad	.Ltmp2800-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2804-.Lfunc_begin0
	.quad	.Ltmp2807-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2808-.Lfunc_begin0
	.quad	.Lfunc_end52-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc678:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2849-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc679:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc680:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc681:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc682:
	.quad	.Ltmp2827-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2844-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc683:
	.quad	.Ltmp2855-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc684:
	.quad	.Ltmp2829-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2846-.Lfunc_begin0
	.quad	.Ltmp2852-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	.Ltmp2855-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc685:
	.quad	.Ltmp2832-.Lfunc_begin0
	.quad	.Ltmp2838-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc686:
	.quad	.Ltmp2833-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc687:
	.quad	.Ltmp2834-.Lfunc_begin0
	.quad	.Ltmp2842-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc688:
	.quad	.Ltmp2835-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc689:
	.quad	.Ltmp2836-.Lfunc_begin0
	.quad	.Ltmp2842-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc690:
	.quad	.Ltmp2836-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc691:
	.quad	.Ltmp2837-.Lfunc_begin0
	.quad	.Ltmp2842-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc692:
	.quad	.Ltmp2837-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	0
	.quad	0
.Ldebug_loc693:
	.quad	.Ltmp2839-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc694:
	.quad	.Ltmp2839-.Lfunc_begin0
	.quad	.Ltmp2840-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc695:
	.quad	.Ltmp2840-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	91                      # super-register DW_OP_reg11
	.quad	0
	.quad	0
.Ldebug_loc696:
	.quad	.Ltmp2840-.Lfunc_begin0
	.quad	.Ltmp2846-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc697:
	.quad	.Ltmp2840-.Lfunc_begin0
	.quad	.Ltmp2841-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc698:
	.quad	.Ltmp2841-.Lfunc_begin0
	.quad	.Ltmp2845-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc699:
	.quad	.Ltmp2843-.Lfunc_begin0
	.quad	.Ltmp2848-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc700:
	.quad	.Ltmp2853-.Lfunc_begin0
	.quad	.Ltmp2855-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc701:
	.quad	.Ltmp2861-.Lfunc_begin0
	.quad	.Ltmp2862-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # super-register DW_OP_reg3
	.quad	.Ltmp2875-.Lfunc_begin0
	.quad	.Ltmp2878-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2880-.Lfunc_begin0
	.quad	.Ltmp2883-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2885-.Lfunc_begin0
	.quad	.Ltmp2888-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	.Ltmp2890-.Lfunc_begin0
	.quad	.Lfunc_end53-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	88                      # super-register DW_OP_reg8
	.quad	0
	.quad	0
.Ldebug_loc702:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2895-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp2895-.Lfunc_begin0
	.quad	.Ltmp2904-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2905-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc703:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2902-.Lfunc_begin0
	.quad	.Ltmp2904-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2904-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc704:
	.quad	.Lfunc_begin54-.Lfunc_begin0
	.quad	.Ltmp2894-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp2894-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2982-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc705:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2899-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	.Ltmp2922-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # super-register DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc706:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	.Ltmp2920-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc707:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2905-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc708:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc709:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2905-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc710:
	.quad	.Ltmp2898-.Lfunc_begin0
	.quad	.Ltmp2901-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc711:
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc712:
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc713:
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc714:
	.quad	.Ltmp2908-.Lfunc_begin0
	.quad	.Ltmp2910-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	114                     # DW_OP_breg2
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc715:
	.quad	.Ltmp2909-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc716:
	.quad	.Ltmp2911-.Lfunc_begin0
	.quad	.Ltmp2918-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc717:
	.quad	.Ltmp2912-.Lfunc_begin0
	.quad	.Ltmp2921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc718:
	.quad	.Ltmp2913-.Lfunc_begin0
	.quad	.Ltmp2918-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc719:
	.quad	.Ltmp2913-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc720:
	.quad	.Ltmp2914-.Lfunc_begin0
	.quad	.Ltmp2918-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc721:
	.quad	.Ltmp2914-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc722:
	.quad	.Ltmp2915-.Lfunc_begin0
	.quad	.Ltmp2921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc723:
	.quad	.Ltmp2915-.Lfunc_begin0
	.quad	.Ltmp2916-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc724:
	.quad	.Ltmp2916-.Lfunc_begin0
	.quad	.Ltmp2921-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc725:
	.quad	.Ltmp2916-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc726:
	.quad	.Ltmp2916-.Lfunc_begin0
	.quad	.Ltmp2917-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc727:
	.quad	.Ltmp2917-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc728:
	.quad	.Ltmp2919-.Lfunc_begin0
	.quad	.Ltmp2924-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	89                      # super-register DW_OP_reg9
	.quad	0
	.quad	0
.Ldebug_loc729:
	.quad	.Ltmp2926-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc730:
	.quad	.Ltmp2932-.Lfunc_begin0
	.quad	.Ltmp2933-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	90                      # super-register DW_OP_reg10
	.quad	.Ltmp2946-.Lfunc_begin0
	.quad	.Ltmp2949-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2951-.Lfunc_begin0
	.quad	.Ltmp2954-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2956-.Lfunc_begin0
	.quad	.Ltmp2959-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	.Ltmp2961-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # super-register DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc731:
	.quad	.Ltmp2963-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2970-.Lfunc_begin0
	.quad	.Ltmp2972-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2983-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2985-.Lfunc_begin0
	.quad	.Ltmp2996-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	95                      # DW_OP_reg15
	.quad	.Ltmp2996-.Lfunc_begin0
	.quad	.Ltmp2998-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc732:
	.quad	.Ltmp2966-.Lfunc_begin0
	.quad	.Ltmp2979-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Lfunc_end54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc733:
	.quad	.Ltmp2963-.Lfunc_begin0
	.quad	.Ltmp2969-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	.Ltmp2980-.Lfunc_begin0
	.quad	.Ltmp2983-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # super-register DW_OP_reg5
	.quad	0
	.quad	0
.Ldebug_loc734:
	.quad	.Ltmp2971-.Lfunc_begin0
	.quad	.Ltmp2972-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2974-.Lfunc_begin0
	.quad	.Ltmp2976-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2987-.Lfunc_begin0
	.quad	.Ltmp2988-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	127                     # DW_OP_breg15
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2990-.Lfunc_begin0
	.quad	.Ltmp2992-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp2997-.Lfunc_begin0
	.quad	.Ltmp2998-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	127                     # -1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3000-.Lfunc_begin0
	.quad	.Ltmp3002-.Lfunc_begin0
	.short	7                       # Loc expr size
	.byte	117                     # DW_OP_breg5
	.byte	0                       # 0
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	49                      # DW_OP_lit1
	.byte	28                      # DW_OP_minus
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc735:
	.quad	.Ltmp2971-.Lfunc_begin0
	.quad	.Ltmp2979-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2983-.Lfunc_begin0
	.quad	.Ltmp2986-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp2987-.Lfunc_begin0
	.quad	.Lfunc_end54-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	0
	.quad	0
.Ldebug_loc736:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp3008-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3008-.Lfunc_begin0
	.quad	.Ltmp3018-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc737:
	.quad	.Lfunc_begin55-.Lfunc_begin0
	.quad	.Ltmp3007-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # super-register DW_OP_reg4
	.quad	.Ltmp3007-.Lfunc_begin0
	.quad	.Ltmp3018-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc738:
	.quad	.Ltmp3004-.Lfunc_begin0
	.quad	.Ltmp3009-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3009-.Lfunc_begin0
	.quad	.Ltmp3018-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc739:
	.quad	.Ltmp3010-.Lfunc_begin0
	.quad	.Ltmp3015-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc740:
	.quad	.Ltmp3011-.Lfunc_begin0
	.quad	.Ltmp3015-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc741:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp3020-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	85                      # DW_OP_reg5
	.quad	.Ltmp3020-.Lfunc_begin0
	.quad	.Ltmp3024-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3024-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3088-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	.Ltmp3088-.Lfunc_begin0
	.quad	.Ltmp3089-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3090-.Lfunc_begin0
	.quad	.Ltmp3138-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	16                      # 16
	.quad	0
	.quad	0
.Ldebug_loc742:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp3020-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	84                      # DW_OP_reg4
	.quad	.Ltmp3020-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc743:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp3025-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3025-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # super-register DW_OP_reg1
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3129-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc744:
	.quad	.Lfunc_begin56-.Lfunc_begin0
	.quad	.Ltmp3023-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3023-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3049-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3140-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc745:
	.quad	.Ltmp3023-.Lfunc_begin0
	.quad	.Ltmp3029-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3033-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3034-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3039-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3050-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3065-.Lfunc_begin0
	.quad	.Ltmp3067-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3070-.Lfunc_begin0
	.quad	.Ltmp3193-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	.Ltmp3194-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	92                      # DW_OP_reg12
	.quad	0
	.quad	0
.Ldebug_loc746:
	.quad	.Ltmp3023-.Lfunc_begin0
	.quad	.Ltmp3029-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3039-.Lfunc_begin0
	.quad	.Ltmp3041-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3049-.Lfunc_begin0
	.quad	.Ltmp3050-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3071-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3071-.Lfunc_begin0
	.quad	.Ltmp3072-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	.Ltmp3074-.Lfunc_begin0
	.quad	.Ltmp3079-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	126                     # DW_OP_breg14
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3090-.Lfunc_begin0
	.quad	.Ltmp3094-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # super-register DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc747:
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3060-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc748:
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3060-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	4                       # 4
	.quad	0
	.quad	0
.Ldebug_loc749:
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3036-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3050-.Lfunc_begin0
	.quad	.Ltmp3051-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3051-.Lfunc_begin0
	.quad	.Ltmp3060-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc750:
	.quad	.Ltmp3030-.Lfunc_begin0
	.quad	.Ltmp3039-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3043-.Lfunc_begin0
	.quad	.Ltmp3044-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3061-.Lfunc_begin0
	.quad	.Ltmp3070-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3074-.Lfunc_begin0
	.quad	.Ltmp3075-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc751:
	.quad	.Ltmp3032-.Lfunc_begin0
	.quad	.Ltmp3033-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	.Ltmp3063-.Lfunc_begin0
	.quad	.Ltmp3064-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc752:
	.quad	.Ltmp3044-.Lfunc_begin0
	.quad	.Ltmp3047-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	.Ltmp3075-.Lfunc_begin0
	.quad	.Ltmp3078-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	86                      # DW_OP_reg6
	.quad	0
	.quad	0
.Ldebug_loc753:
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3057-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	81                      # DW_OP_reg1
	.quad	0
	.quad	0
.Ldebug_loc754:
	.quad	.Ltmp3053-.Lfunc_begin0
	.quad	.Ltmp3057-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	80                      # super-register DW_OP_reg0
	.quad	0
	.quad	0
.Ldebug_loc755:
	.quad	.Ltmp3080-.Lfunc_begin0
	.quad	.Ltmp3083-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3083-.Lfunc_begin0
	.quad	.Ltmp3087-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	94                      # DW_OP_reg14
	.quad	0
	.quad	0
.Ldebug_loc756:
	.quad	.Ltmp3091-.Lfunc_begin0
	.quad	.Ltmp3095-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3095-.Lfunc_begin0
	.quad	.Ltmp3121-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	82                      # DW_OP_reg2
	.quad	0
	.quad	0
.Ldebug_loc757:
	.quad	.Ltmp3091-.Lfunc_begin0
	.quad	.Ltmp3095-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	48                      # DW_OP_lit0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3095-.Lfunc_begin0
	.quad	.Ltmp3121-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	.Ltmp3123-.Lfunc_begin0
	.quad	.Ltmp3128-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	98                      # DW_OP_reg18
	.quad	0
	.quad	0
.Ldebug_loc758:
	.quad	.Ltmp3091-.Lfunc_begin0
	.quad	.Ltmp3132-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	100                     # DW_OP_reg20
	.quad	0
	.quad	0
.Ldebug_loc759:
	.quad	.Ltmp3096-.Lfunc_begin0
	.quad	.Ltmp3097-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3099-.Lfunc_begin0
	.quad	.Ltmp3100-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3102-.Lfunc_begin0
	.quad	.Ltmp3103-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3105-.Lfunc_begin0
	.quad	.Ltmp3106-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3108-.Lfunc_begin0
	.quad	.Ltmp3109-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3111-.Lfunc_begin0
	.quad	.Ltmp3112-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3114-.Lfunc_begin0
	.quad	.Ltmp3115-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3117-.Lfunc_begin0
	.quad	.Ltmp3118-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3124-.Lfunc_begin0
	.quad	.Ltmp3125-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc760:
	.quad	.Ltmp3097-.Lfunc_begin0
	.quad	.Ltmp3099-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3100-.Lfunc_begin0
	.quad	.Ltmp3102-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3103-.Lfunc_begin0
	.quad	.Ltmp3105-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3106-.Lfunc_begin0
	.quad	.Ltmp3108-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3109-.Lfunc_begin0
	.quad	.Ltmp3111-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3112-.Lfunc_begin0
	.quad	.Ltmp3114-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3115-.Lfunc_begin0
	.quad	.Ltmp3117-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3118-.Lfunc_begin0
	.quad	.Ltmp3121-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	.Ltmp3125-.Lfunc_begin0
	.quad	.Ltmp3127-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	99                      # DW_OP_reg19
	.quad	0
	.quad	0
.Ldebug_loc761:
	.quad	.Ltmp3134-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	2                       # Loc expr size
	.byte	119                     # DW_OP_breg7
	.byte	8                       # 8
	.quad	0
	.quad	0
.Ldebug_loc762:
	.quad	.Ltmp3140-.Lfunc_begin0
	.quad	.Ltmp3192-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	.Ltmp3194-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	83                      # DW_OP_reg3
	.quad	0
	.quad	0
.Ldebug_loc763:
	.quad	.Ltmp3150-.Lfunc_begin0
	.quad	.Ltmp3152-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3152-.Lfunc_begin0
	.quad	.Ltmp3154-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3154-.Lfunc_begin0
	.quad	.Ltmp3156-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3156-.Lfunc_begin0
	.quad	.Ltmp3158-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3158-.Lfunc_begin0
	.quad	.Ltmp3160-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3160-.Lfunc_begin0
	.quad	.Ltmp3162-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3162-.Lfunc_begin0
	.quad	.Ltmp3164-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3164-.Lfunc_begin0
	.quad	.Ltmp3166-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3166-.Lfunc_begin0
	.quad	.Ltmp3168-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3168-.Lfunc_begin0
	.quad	.Ltmp3170-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3170-.Lfunc_begin0
	.quad	.Ltmp3172-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	10                      # 10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3172-.Lfunc_begin0
	.quad	.Ltmp3174-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	11                      # 11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3174-.Lfunc_begin0
	.quad	.Ltmp3176-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	12                      # 12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3176-.Lfunc_begin0
	.quad	.Ltmp3178-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3178-.Lfunc_begin0
	.quad	.Ltmp3180-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3180-.Lfunc_begin0
	.quad	.Ltmp3182-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	15                      # 15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3182-.Lfunc_begin0
	.quad	.Ltmp3184-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	16                      # 16
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3184-.Lfunc_begin0
	.quad	.Ltmp3186-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	17                      # 17
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3186-.Lfunc_begin0
	.quad	.Ltmp3188-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	18                      # 18
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3188-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	19                      # 19
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3190-.Lfunc_begin0
	.quad	.Ltmp3194-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	20                      # 20
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3194-.Lfunc_begin0
	.quad	.Ltmp3195-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3195-.Lfunc_begin0
	.quad	.Ltmp3198-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	1                       # 1
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3198-.Lfunc_begin0
	.quad	.Ltmp3201-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	2                       # 2
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3201-.Lfunc_begin0
	.quad	.Ltmp3204-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	3                       # 3
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3204-.Lfunc_begin0
	.quad	.Ltmp3207-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	4                       # 4
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3207-.Lfunc_begin0
	.quad	.Ltmp3210-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	5                       # 5
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3210-.Lfunc_begin0
	.quad	.Ltmp3213-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	6                       # 6
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3213-.Lfunc_begin0
	.quad	.Ltmp3216-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	7                       # 7
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3216-.Lfunc_begin0
	.quad	.Ltmp3219-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	8                       # 8
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3219-.Lfunc_begin0
	.quad	.Ltmp3222-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	9                       # 9
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3222-.Lfunc_begin0
	.quad	.Ltmp3225-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	10                      # 10
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3225-.Lfunc_begin0
	.quad	.Ltmp3228-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	11                      # 11
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3228-.Lfunc_begin0
	.quad	.Ltmp3231-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	12                      # 12
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3231-.Lfunc_begin0
	.quad	.Ltmp3234-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	13                      # 13
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3234-.Lfunc_begin0
	.quad	.Ltmp3237-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	14                      # 14
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3237-.Lfunc_begin0
	.quad	.Ltmp3240-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	15                      # 15
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3240-.Lfunc_begin0
	.quad	.Ltmp3243-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	16                      # 16
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3243-.Lfunc_begin0
	.quad	.Ltmp3246-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	17                      # 17
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3246-.Lfunc_begin0
	.quad	.Ltmp3249-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	18                      # 18
	.byte	159                     # DW_OP_stack_value
	.quad	.Ltmp3249-.Lfunc_begin0
	.quad	.Lfunc_end56-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	19                      # 19
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc764:
	.quad	.Ltmp3254-.Lfunc_begin0
	.quad	.Ltmp3260-.Lfunc_begin0
	.short	6                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	128                     # 2000000
	.byte	137                     # 
	.byte	250                     # 
	.byte	0                       # 
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
.Ldebug_loc765:
	.quad	.Ltmp3254-.Lfunc_begin0
	.quad	.Ltmp3260-.Lfunc_begin0
	.short	1                       # Loc expr size
	.byte	87                      # DW_OP_reg7
	.quad	0
	.quad	0
.Ldebug_loc766:
	.quad	.Ltmp3257-.Lfunc_begin0
	.quad	.Ltmp3260-.Lfunc_begin0
	.short	3                       # Loc expr size
	.byte	17                      # DW_OP_consts
	.byte	0                       # 0
	.byte	159                     # DW_OP_stack_value
	.quad	0
	.quad	0
	.section	.debug_abbrev,"",@progbits
	.byte	1                       # Abbreviation Code
	.byte	17                      # DW_TAG_compile_unit
	.byte	1                       # DW_CHILDREN_yes
	.byte	37                      # DW_AT_producer
	.byte	14                      # DW_FORM_strp
	.byte	19                      # DW_AT_language
	.byte	5                       # DW_FORM_data2
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	16                      # DW_AT_stmt_list
	.byte	23                      # DW_FORM_sec_offset
	.byte	27                      # DW_AT_comp_dir
	.byte	14                      # DW_FORM_strp
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	2                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	3                       # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	4                       # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	5                       # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	6                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	7                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	8                       # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	9                       # Abbreviation Code
	.byte	15                      # DW_TAG_pointer_type
	.byte	0                       # DW_CHILDREN_no
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	10                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.ascii	"\207B"                 # DW_AT_GNU_vector
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	11                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	12                      # Abbreviation Code
	.byte	36                      # DW_TAG_base_type
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	62                      # DW_AT_encoding
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	13                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	60                      # DW_AT_declaration
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	14                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	15                      # Abbreviation Code
	.byte	38                      # DW_TAG_const_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	16                      # Abbreviation Code
	.byte	1                       # DW_TAG_array_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	17                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	18                      # Abbreviation Code
	.byte	33                      # DW_TAG_subrange_type
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	55                      # DW_AT_count
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	19                      # Abbreviation Code
	.byte	22                      # DW_TAG_typedef
	.byte	0                       # DW_CHILDREN_no
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	20                      # Abbreviation Code
	.byte	19                      # DW_TAG_structure_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	11                      # DW_AT_byte_size
	.byte	11                      # DW_FORM_data1
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	21                      # Abbreviation Code
	.byte	13                      # DW_TAG_member
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	5                       # DW_FORM_data2
	.ascii	"\210\001"              # DW_AT_alignment
	.byte	15                      # DW_FORM_udata
	.byte	56                      # DW_AT_data_member_location
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	22                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	23                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	24                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	25                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	32                      # DW_AT_inline
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	26                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	27                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	28                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	29                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	30                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	87                      # DW_AT_call_column
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	31                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	32                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	33                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	23                      # DW_FORM_sec_offset
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	34                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	35                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	36                      # Abbreviation Code
	.byte	29                      # DW_TAG_inlined_subroutine
	.byte	1                       # DW_CHILDREN_yes
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	85                      # DW_AT_ranges
	.byte	23                      # DW_FORM_sec_offset
	.byte	88                      # DW_AT_call_file
	.byte	11                      # DW_FORM_data1
	.byte	89                      # DW_AT_call_line
	.byte	11                      # DW_FORM_data1
	.byte	87                      # DW_AT_call_column
	.byte	11                      # DW_FORM_data1
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	37                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	38                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	39                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	40                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	41                      # Abbreviation Code
	.byte	5                       # DW_TAG_formal_parameter
	.byte	0                       # DW_CHILDREN_no
	.byte	2                       # DW_AT_location
	.byte	24                      # DW_FORM_exprloc
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	42                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.ascii	"\225B"                 # DW_AT_GNU_tail_call
	.byte	25                      # DW_FORM_flag_present
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	43                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	44                      # Abbreviation Code
	.byte	11                      # DW_TAG_lexical_block
	.byte	1                       # DW_CHILDREN_yes
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	45                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	46                      # Abbreviation Code
	.byte	52                      # DW_TAG_variable
	.byte	0                       # DW_CHILDREN_no
	.byte	28                      # DW_AT_const_value
	.byte	13                      # DW_FORM_sdata
	.byte	49                      # DW_AT_abstract_origin
	.byte	19                      # DW_FORM_ref4
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	47                      # Abbreviation Code
	.ascii	"\211\202\001"          # DW_TAG_GNU_call_site
	.byte	0                       # DW_CHILDREN_no
	.ascii	"\223B"                 # DW_AT_GNU_call_site_target
	.byte	24                      # DW_FORM_exprloc
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	48                      # Abbreviation Code
	.byte	46                      # DW_TAG_subprogram
	.byte	1                       # DW_CHILDREN_yes
	.byte	17                      # DW_AT_low_pc
	.byte	1                       # DW_FORM_addr
	.byte	18                      # DW_AT_high_pc
	.byte	6                       # DW_FORM_data4
	.byte	64                      # DW_AT_frame_base
	.byte	24                      # DW_FORM_exprloc
	.ascii	"\227B"                 # DW_AT_GNU_all_call_sites
	.byte	25                      # DW_FORM_flag_present
	.byte	3                       # DW_AT_name
	.byte	14                      # DW_FORM_strp
	.byte	58                      # DW_AT_decl_file
	.byte	11                      # DW_FORM_data1
	.byte	59                      # DW_AT_decl_line
	.byte	11                      # DW_FORM_data1
	.byte	73                      # DW_AT_type
	.byte	19                      # DW_FORM_ref4
	.byte	63                      # DW_AT_external
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	49                      # Abbreviation Code
	.byte	21                      # DW_TAG_subroutine_type
	.byte	1                       # DW_CHILDREN_yes
	.byte	39                      # DW_AT_prototyped
	.byte	25                      # DW_FORM_flag_present
	.byte	0                       # EOM(1)
	.byte	0                       # EOM(2)
	.byte	0                       # EOM(3)
	.section	.debug_info,"",@progbits
.Lcu_begin0:
	.long	.Ldebug_info_end0-.Ldebug_info_start0 # Length of Unit
.Ldebug_info_start0:
	.short	4                       # DWARF version number
	.long	.debug_abbrev           # Offset Into Abbrev. Section
	.byte	8                       # Address Size (in bytes)
	.byte	1                       # Abbrev [1] 0xb:0x4940 DW_TAG_compile_unit
	.long	.Linfo_string0          # DW_AT_producer
	.short	12                      # DW_AT_language
	.long	.Linfo_string1          # DW_AT_name
	.long	.Lline_table_start0     # DW_AT_stmt_list
	.long	.Linfo_string2          # DW_AT_comp_dir
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end57-.Lfunc_begin0 # DW_AT_high_pc
	.byte	2                       # Abbrev [2] 0x2a:0x1b DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x35:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x3a:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x3f:0x5 DW_TAG_formal_parameter
	.long	81                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0x45:0x7 DW_TAG_base_type
	.long	.Linfo_string4          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0x4c:0x5 DW_TAG_pointer_type
	.long	69                      # DW_AT_type
	.byte	4                       # Abbrev [4] 0x51:0x7 DW_TAG_base_type
	.long	.Linfo_string5          # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0x58:0x16 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x63:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x68:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x6e:0x12 DW_TAG_subprogram
	.long	.Linfo_string7          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x75:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x7a:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	6                       # Abbrev [6] 0x80:0x12 DW_TAG_subprogram
	.long	.Linfo_string8          # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x87:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x8c:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	7                       # Abbrev [7] 0x92:0xb DW_TAG_subprogram
	.long	.Linfo_string9          # DW_AT_name
	.byte	2                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	81                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	8                       # Abbrev [8] 0x9d:0xe DW_TAG_subprogram
	.long	.Linfo_string10         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	455                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xa5:0x5 DW_TAG_formal_parameter
	.long	171                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xab:0x7 DW_TAG_base_type
	.long	.Linfo_string11         # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	2                       # Abbrev [2] 0xb2:0x16 DW_TAG_subprogram
	.long	.Linfo_string12         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xbd:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0xc2:0x5 DW_TAG_formal_parameter
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	8                       # Abbrev [8] 0xc8:0xe DW_TAG_subprogram
	.long	.Linfo_string13         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	565                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xd0:0x5 DW_TAG_formal_parameter
	.long	214                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	9                       # Abbrev [9] 0xd6:0x1 DW_TAG_pointer_type
	.byte	2                       # Abbrev [2] 0xd7:0x11 DW_TAG_subprogram
	.long	.Linfo_string14         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	17                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	171                     # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0xe2:0x5 DW_TAG_formal_parameter
	.long	232                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0xe8:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	244                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0xed:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	4                       # Abbrev [4] 0xf4:0x7 DW_TAG_base_type
	.long	.Linfo_string15         # DW_AT_name
	.byte	5                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	12                      # Abbrev [12] 0xfb:0x7 DW_TAG_base_type
	.long	.Linfo_string16         # DW_AT_name
	.byte	8                       # DW_AT_byte_size
	.byte	7                       # DW_AT_encoding
	.byte	2                       # Abbrev [2] 0x102:0x11 DW_TAG_subprogram
	.long	.Linfo_string17         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	171                     # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	3                       # Abbrev [3] 0x10d:0x5 DW_TAG_formal_parameter
	.long	275                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	10                      # Abbrev [10] 0x113:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	244                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x118:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	13                      # Abbrev [13] 0x11f:0xc DW_TAG_subprogram
	.long	.Linfo_string18         # DW_AT_name
	.byte	3                       # DW_AT_decl_file
	.short	453                     # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_declaration
                                        # DW_AT_external
	.byte	14                      # Abbrev [14] 0x12b:0x15 DW_TAG_variable
	.long	.Linfo_string19         # DW_AT_name
	.long	320                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	INSERTION_SORT_THRESH_BLOCK
	.byte	15                      # Abbrev [15] 0x140:0x5 DW_TAG_const_type
	.long	69                      # DW_AT_type
	.byte	14                      # Abbrev [14] 0x145:0x15 DW_TAG_variable
	.long	.Linfo_string20         # DW_AT_name
	.long	320                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	blocksize
	.byte	14                      # Abbrev [14] 0x15a:0x15 DW_TAG_variable
	.long	.Linfo_string21         # DW_AT_name
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	7                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	count
	.byte	14                      # Abbrev [14] 0x16f:0x15 DW_TAG_variable
	.long	.Linfo_string22         # DW_AT_name
	.long	320                     # DW_AT_type
                                        # DW_AT_external
	.byte	8                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	DATA_AMOUNT
	.byte	14                      # Abbrev [14] 0x184:0x15 DW_TAG_variable
	.long	.Linfo_string23         # DW_AT_name
	.long	409                     # DW_AT_type
                                        # DW_AT_external
	.byte	8                       # DW_AT_decl_file
	.byte	50                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	reference_value
	.byte	4                       # Abbrev [4] 0x199:0x7 DW_TAG_base_type
	.long	.Linfo_string24         # DW_AT_name
	.byte	4                       # DW_AT_encoding
	.byte	4                       # DW_AT_byte_size
	.byte	14                      # Abbrev [14] 0x1a0:0x15 DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.long	437                     # DW_AT_type
                                        # DW_AT_external
	.byte	9                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	x
	.byte	16                      # Abbrev [16] 0x1b5:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x1ba:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	2                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x1c1:0x15 DW_TAG_variable
	.long	.Linfo_string26         # DW_AT_name
	.long	470                     # DW_AT_type
                                        # DW_AT_external
	.byte	10                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	b
	.byte	16                      # Abbrev [16] 0x1d6:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x1db:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	1000000                 # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	14                      # Abbrev [14] 0x1e5:0x15 DW_TAG_variable
	.long	.Linfo_string27         # DW_AT_name
	.long	506                     # DW_AT_type
                                        # DW_AT_external
	.byte	8                       # DW_AT_decl_file
	.byte	49                      # DW_AT_decl_line
	.byte	9                       # DW_AT_location
	.byte	3
	.quad	individual_times
	.byte	16                      # Abbrev [16] 0x1fa:0xd DW_TAG_array_type
	.long	409                     # DW_AT_type
	.byte	18                      # Abbrev [18] 0x1ff:0x7 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.short	10000                   # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x207:0x5 DW_TAG_pointer_type
	.long	524                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x20c:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string28         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x217:0x5 DW_TAG_pointer_type
	.long	540                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x21c:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string29         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x227:0x5 DW_TAG_pointer_type
	.long	556                     # DW_AT_type
	.byte	19                      # Abbrev [19] 0x22c:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string30         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x237:0xb DW_TAG_typedef
	.long	578                     # DW_AT_type
	.long	.Linfo_string31         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x242:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x247:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x24e:0xb DW_TAG_typedef
	.long	232                     # DW_AT_type
	.long	.Linfo_string32         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x259:0xb DW_TAG_typedef
	.long	81                      # DW_AT_type
	.long	.Linfo_string33         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	156                     # DW_AT_decl_line
	.byte	5                       # Abbrev [5] 0x264:0x5 DW_TAG_pointer_type
	.long	617                     # DW_AT_type
	.byte	4                       # Abbrev [4] 0x269:0x7 DW_TAG_base_type
	.long	.Linfo_string34         # DW_AT_name
	.byte	6                       # DW_AT_encoding
	.byte	1                       # DW_AT_byte_size
	.byte	5                       # Abbrev [5] 0x270:0x5 DW_TAG_pointer_type
	.long	629                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x275:0x18 DW_TAG_structure_type
	.long	.Linfo_string36         # DW_AT_name
	.byte	32                      # DW_AT_byte_size
	.byte	11                      # DW_AT_decl_file
	.short	3296                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x27e:0xe DW_TAG_member
	.long	.Linfo_string35         # DW_AT_name
	.long	556                     # DW_AT_type
	.byte	11                      # DW_AT_decl_file
	.short	3297                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x28d:0x5 DW_TAG_pointer_type
	.long	658                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x292:0x5 DW_TAG_const_type
	.long	663                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x297:0x18 DW_TAG_structure_type
	.long	.Linfo_string37         # DW_AT_name
	.byte	32                      # DW_AT_byte_size
	.byte	11                      # DW_AT_decl_file
	.short	3161                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x2a0:0xe DW_TAG_member
	.long	.Linfo_string35         # DW_AT_name
	.long	556                     # DW_AT_type
	.byte	11                      # DW_AT_decl_file
	.short	3162                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x2af:0xb DW_TAG_typedef
	.long	698                     # DW_AT_type
	.long	.Linfo_string38         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x2ba:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x2bf:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x2c6:0x5 DW_TAG_pointer_type
	.long	715                     # DW_AT_type
	.byte	15                      # Abbrev [15] 0x2cb:0x5 DW_TAG_const_type
	.long	720                     # DW_AT_type
	.byte	20                      # Abbrev [20] 0x2d0:0x18 DW_TAG_structure_type
	.long	.Linfo_string40         # DW_AT_name
	.byte	16                      # DW_AT_byte_size
	.byte	12                      # DW_AT_decl_file
	.short	3550                    # DW_AT_decl_line
	.byte	21                      # Abbrev [21] 0x2d9:0xe DW_TAG_member
	.long	.Linfo_string35         # DW_AT_name
	.long	744                     # DW_AT_type
	.byte	12                      # DW_AT_decl_file
	.short	3551                    # DW_AT_decl_line
	.byte	1                       # DW_AT_alignment
	.byte	0                       # DW_AT_data_member_location
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x2e8:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string39         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x2f3:0xb DW_TAG_typedef
	.long	766                     # DW_AT_type
	.long	.Linfo_string41         # DW_AT_name
	.byte	11                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x2fe:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	171                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x303:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x30a:0xb DW_TAG_typedef
	.long	275                     # DW_AT_type
	.long	.Linfo_string42         # DW_AT_name
	.byte	12                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x315:0xb DW_TAG_typedef
	.long	800                     # DW_AT_type
	.long	.Linfo_string43         # DW_AT_name
	.byte	13                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.byte	10                      # Abbrev [10] 0x320:0xc DW_TAG_array_type
                                        # DW_AT_GNU_vector
	.long	171                     # DW_AT_type
	.byte	11                      # Abbrev [11] 0x325:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	4                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x32c:0x7b DW_TAG_subprogram
	.long	.Linfo_string3          # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x338:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x343:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x34e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x359:0xb DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x364:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x36f:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x37a:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x385:0xb DW_TAG_variable
	.long	.Linfo_string52         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x390:0xb DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x39b:0xb DW_TAG_variable
	.long	.Linfo_string54         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x3a7:0xb DW_TAG_typedef
	.long	946                     # DW_AT_type
	.long	.Linfo_string47         # DW_AT_name
	.byte	17                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x3b2:0xb DW_TAG_typedef
	.long	81                      # DW_AT_type
	.long	.Linfo_string46         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.byte	22                      # Abbrev [22] 0x3bd:0x23 DW_TAG_subprogram
	.long	.Linfo_string6          # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3c9:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3d4:0xb DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x3e0:0x23 DW_TAG_subprogram
	.long	.Linfo_string12         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3ec:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3f7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string50         # DW_AT_name
	.byte	15                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x403:0x2a DW_TAG_subprogram
	.long	.Linfo_string7          # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x40b:0xb DW_TAG_formal_parameter
	.long	.Linfo_string55         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x416:0xb DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x421:0xb DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.byte	16                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x42d:0x3d6 DW_TAG_subprogram
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Lfunc_end0-.Lfunc_begin0 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string121        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x446:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc0            # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x455:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc1            # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x464:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc2            # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	18                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	28                      # Abbrev [28] 0x473:0xf DW_TAG_variable
	.byte	3                       # DW_AT_location
	.byte	145
	.ascii	"\320\003"
	.long	.Linfo_string154        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	18644                   # DW_AT_type
	.byte	28                      # Abbrev [28] 0x482:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	80
	.long	.Linfo_string155        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	18644                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x490:0xf DW_TAG_variable
	.long	.Ldebug_loc20           # DW_AT_location
	.long	.Linfo_string77         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x49f:0xf DW_TAG_variable
	.long	.Ldebug_loc21           # DW_AT_location
	.long	.Linfo_string156        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4ae:0xf DW_TAG_variable
	.long	.Ldebug_loc22           # DW_AT_location
	.long	.Linfo_string157        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4bd:0xf DW_TAG_variable
	.long	.Ldebug_loc23           # DW_AT_location
	.long	.Linfo_string158        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4cc:0xf DW_TAG_variable
	.long	.Ldebug_loc24           # DW_AT_location
	.long	.Linfo_string159        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4db:0xf DW_TAG_variable
	.long	.Ldebug_loc25           # DW_AT_location
	.long	.Linfo_string160        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4ea:0xf DW_TAG_variable
	.long	.Ldebug_loc33           # DW_AT_location
	.long	.Linfo_string162        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4f9:0xf DW_TAG_variable
	.long	.Ldebug_loc34           # DW_AT_location
	.long	.Linfo_string163        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x508:0xf DW_TAG_variable
	.long	.Ldebug_loc41           # DW_AT_location
	.long	.Linfo_string161        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	93                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x517:0x107 DW_TAG_inlined_subroutine
	.long	812                     # DW_AT_abstract_origin
	.quad	.Lfunc_begin0           # DW_AT_low_pc
	.long	.Ltmp15-.Lfunc_begin0   # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x52b:0x5 DW_TAG_formal_parameter
	.long	824                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x530:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc3            # DW_AT_location
	.long	835                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x539:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc4            # DW_AT_location
	.long	846                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x542:0x9 DW_TAG_variable
	.long	.Ldebug_loc5            # DW_AT_location
	.long	857                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x54b:0x9 DW_TAG_variable
	.long	.Ldebug_loc6            # DW_AT_location
	.long	868                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x554:0x9 DW_TAG_variable
	.long	.Ldebug_loc7            # DW_AT_location
	.long	879                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x55d:0x9 DW_TAG_variable
	.long	.Ldebug_loc8            # DW_AT_location
	.long	890                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x566:0x9 DW_TAG_variable
	.long	.Ldebug_loc16           # DW_AT_location
	.long	901                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x56f:0x9 DW_TAG_variable
	.long	.Ldebug_loc18           # DW_AT_location
	.long	912                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x578:0x9 DW_TAG_variable
	.long	.Ldebug_loc19           # DW_AT_location
	.long	923                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x581:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp6                  # DW_AT_low_pc
	.long	.Ltmp8-.Ltmp6           # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x595:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc10           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x59e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc9            # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x5a8:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp8                  # DW_AT_low_pc
	.long	.Ltmp10-.Ltmp8          # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5bc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc12           # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5c5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc11           # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x5cf:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp10                 # DW_AT_low_pc
	.long	.Ltmp11-.Ltmp10         # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x5e3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc14           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x5ec:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc13           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x5f6:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp11                 # DW_AT_low_pc
	.long	.Ltmp12-.Ltmp11         # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x60a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc17           # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x613:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc15           # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x61e:0xb3 DW_TAG_lexical_block
	.long	.Ldebug_ranges1         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x623:0xf DW_TAG_variable
	.long	.Ldebug_loc26           # DW_AT_location
	.long	.Linfo_string161        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x632:0x1d DW_TAG_lexical_block
	.quad	.Ltmp31                 # DW_AT_low_pc
	.long	.Ltmp40-.Ltmp31         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x63f:0xf DW_TAG_variable
	.long	.Ldebug_loc27           # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x64f:0x1d DW_TAG_lexical_block
	.quad	.Ltmp42                 # DW_AT_low_pc
	.long	.Ltmp54-.Ltmp42         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x65c:0xf DW_TAG_variable
	.long	.Ldebug_loc28           # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x66c:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp54                 # DW_AT_low_pc
	.long	.Ltmp55-.Ltmp54         # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	41                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x680:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc29           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x689:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc30           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x693:0x3d DW_TAG_lexical_block
	.quad	.Ltmp55                 # DW_AT_low_pc
	.long	.Ltmp79-.Ltmp55         # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x6a0:0xf DW_TAG_variable
	.long	.Ldebug_loc31           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x6af:0x20 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges0         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	43                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x6bb:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x6c0:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x6c5:0x9 DW_TAG_variable
	.long	.Ldebug_loc32           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x6d1:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges2         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x6d6:0xf DW_TAG_variable
	.long	.Ldebug_loc35           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	79                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x6e6:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges3         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x6eb:0xf DW_TAG_variable
	.long	.Ldebug_loc37           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x6fb:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges4         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x700:0xf DW_TAG_variable
	.long	.Ldebug_loc36           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	65                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x710:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp161                # DW_AT_low_pc
	.long	.Ltmp162-.Ltmp161       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	93                      # DW_AT_call_line
	.byte	13                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x724:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc38           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x72d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc39           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x737:0x3d DW_TAG_lexical_block
	.quad	.Ltmp162                # DW_AT_low_pc
	.long	.Ltmp185-.Ltmp162       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x744:0xf DW_TAG_variable
	.long	.Ldebug_loc40           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	95                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x753:0x20 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges5         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	96                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x75f:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x764:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x769:0x9 DW_TAG_variable
	.long	.Ldebug_loc42           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x774:0x47 DW_TAG_lexical_block
	.long	.Ldebug_ranges6         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x779:0xf DW_TAG_variable
	.long	.Ldebug_loc45           # DW_AT_location
	.long	.Linfo_string164        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	124                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x788:0xf DW_TAG_variable
	.long	.Ldebug_loc46           # DW_AT_location
	.long	.Linfo_string165        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	125                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x797:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp251                # DW_AT_low_pc
	.long	.Ltmp253-.Ltmp251       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	131                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x7ab:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x7b0:0x9 DW_TAG_variable
	.long	.Ldebug_loc48           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x7bb:0x47 DW_TAG_lexical_block
	.long	.Ldebug_ranges7         # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x7c0:0xf DW_TAG_variable
	.long	.Ldebug_loc43           # DW_AT_location
	.long	.Linfo_string164        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	112                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x7cf:0xf DW_TAG_variable
	.long	.Ldebug_loc44           # DW_AT_location
	.long	.Linfo_string165        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	113                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0x7de:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp236                # DW_AT_low_pc
	.long	.Ltmp238-.Ltmp236       # DW_AT_high_pc
	.byte	1                       # DW_AT_call_file
	.byte	119                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x7f2:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x7f7:0x9 DW_TAG_variable
	.long	.Ldebug_loc47           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x803:0x102 DW_TAG_subprogram
	.quad	.Lfunc_begin1           # DW_AT_low_pc
	.long	.Lfunc_end1-.Lfunc_begin1 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	812                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x816:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	824                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x81d:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	835                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x824:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	846                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x82b:0x9 DW_TAG_variable
	.long	.Ldebug_loc49           # DW_AT_location
	.long	857                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x834:0x9 DW_TAG_variable
	.long	.Ldebug_loc50           # DW_AT_location
	.long	868                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x83d:0x9 DW_TAG_variable
	.long	.Ldebug_loc51           # DW_AT_location
	.long	879                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x846:0x9 DW_TAG_variable
	.long	.Ldebug_loc52           # DW_AT_location
	.long	890                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x84f:0x9 DW_TAG_variable
	.long	.Ldebug_loc59           # DW_AT_location
	.long	901                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x858:0x9 DW_TAG_variable
	.long	.Ldebug_loc61           # DW_AT_location
	.long	912                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x861:0x9 DW_TAG_variable
	.long	.Ldebug_loc62           # DW_AT_location
	.long	923                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x86a:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp271                # DW_AT_low_pc
	.long	.Ltmp274-.Ltmp271       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x87e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc54           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x887:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc53           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x891:0x25 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp274                # DW_AT_low_pc
	.long	.Ltmp275-.Ltmp274       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	38                      # Abbrev [38] 0x8a5:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8ac:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc55           # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x8b6:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp275                # DW_AT_low_pc
	.long	.Ltmp276-.Ltmp275       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x8ca:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc57           # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8d3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc56           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x8dd:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp276                # DW_AT_low_pc
	.long	.Ltmp277-.Ltmp276       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x8f1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc60           # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x8fa:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc58           # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x905:0x24 DW_TAG_subprogram
	.quad	.Lfunc_begin2           # DW_AT_low_pc
	.long	.Lfunc_end2-.Lfunc_begin2 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	957                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x918:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x91f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc63           # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x929:0x2b DW_TAG_subprogram
	.quad	.Lfunc_begin3           # DW_AT_low_pc
	.long	.Lfunc_end3-.Lfunc_begin3 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	1027                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x93c:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	1035                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x943:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x94a:0x9 DW_TAG_variable
	.long	.Ldebug_loc64           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x954:0x40 DW_TAG_subprogram
	.long	.Linfo_string8          # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x95c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x967:0xb DW_TAG_formal_parameter
	.long	.Linfo_string57         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	1                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x972:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x97d:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x988:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	2                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x994:0xb4 DW_TAG_subprogram
	.quad	.Lfunc_begin4           # DW_AT_low_pc
	.long	.Lfunc_end4-.Lfunc_begin4 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string122        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x9a9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc65           # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x9b8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc66           # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x9c7:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc67           # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	141                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x9d6:0x1d DW_TAG_lexical_block
	.quad	.Ltmp292                # DW_AT_low_pc
	.long	.Ltmp297-.Ltmp292       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x9e3:0xf DW_TAG_variable
	.long	.Ldebug_loc68           # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	1                       # DW_AT_decl_file
	.byte	144                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x9f3:0x3a DW_TAG_inlined_subroutine
	.long	2388                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges8         # DW_AT_ranges
	.byte	1                       # DW_AT_call_file
	.byte	148                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x9ff:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc70           # DW_AT_location
	.long	2396                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xa08:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc71           # DW_AT_location
	.long	2407                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa11:0x9 DW_TAG_variable
	.long	.Ldebug_loc69           # DW_AT_location
	.long	2418                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa1a:0x9 DW_TAG_variable
	.long	.Ldebug_loc72           # DW_AT_location
	.long	2429                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa23:0x9 DW_TAG_variable
	.long	.Ldebug_loc73           # DW_AT_location
	.long	2440                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0xa2d:0xd DW_TAG_GNU_call_site
	.long	1069                    # DW_AT_abstract_origin
	.quad	.Ltmp293                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0xa3a:0xd DW_TAG_GNU_call_site
	.long	2452                    # DW_AT_abstract_origin
	.quad	.Ltmp295                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xa48:0x3f DW_TAG_subprogram
	.quad	.Lfunc_begin5           # DW_AT_low_pc
	.long	.Lfunc_end5-.Lfunc_begin5 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	2388                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xa5b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	2396                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xa62:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc74           # DW_AT_location
	.long	2407                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa6b:0x9 DW_TAG_variable
	.long	.Ldebug_loc75           # DW_AT_location
	.long	2418                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa74:0x9 DW_TAG_variable
	.long	.Ldebug_loc76           # DW_AT_location
	.long	2429                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xa7d:0x9 DW_TAG_variable
	.long	.Ldebug_loc77           # DW_AT_location
	.long	2440                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xa87:0x4f DW_TAG_subprogram
	.quad	.Lfunc_begin6           # DW_AT_low_pc
	.long	.Lfunc_end6-.Lfunc_begin6 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	18267                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xa9a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc78           # DW_AT_location
	.long	18275                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xaa3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc79           # DW_AT_location
	.long	18286                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0xaac:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges9         # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0xab1:0x9 DW_TAG_variable
	.long	.Ldebug_loc80           # DW_AT_location
	.long	18298                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0xabb:0xd DW_TAG_GNU_call_site
	.long	146                     # DW_AT_abstract_origin
	.quad	.Ltmp382                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0xac8:0xd DW_TAG_GNU_call_site
	.long	157                     # DW_AT_abstract_origin
	.quad	.Ltmp383                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xad6:0x3f DW_TAG_subprogram
	.quad	.Lfunc_begin7           # DW_AT_low_pc
	.long	.Lfunc_end7-.Lfunc_begin7 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	7013                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0xae9:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xaf0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc81           # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xaf9:0x9 DW_TAG_variable
	.long	.Ldebug_loc82           # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb02:0x9 DW_TAG_variable
	.long	.Ldebug_loc83           # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xb0b:0x9 DW_TAG_variable
	.long	.Ldebug_loc84           # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xb15:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin8           # DW_AT_low_pc
	.long	.Lfunc_end8-.Lfunc_begin8 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string123        # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0xb2a:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xb37:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc85           # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	41                      # Abbrev [41] 0xb46:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	.Linfo_string48         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0xb53:0xf DW_TAG_variable
	.long	.Ldebug_loc86           # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0xb62:0xf DW_TAG_variable
	.long	.Ldebug_loc87           # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0xb71:0xf DW_TAG_variable
	.long	.Ldebug_loc88           # DW_AT_location
	.long	.Linfo_string60         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xb81:0x6e DW_TAG_subprogram
	.quad	.Lfunc_begin9           # DW_AT_low_pc
	.long	.Lfunc_end9-.Lfunc_begin9 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	3055                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xb94:0x5 DW_TAG_formal_parameter
	.long	3063                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xb99:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc92           # DW_AT_location
	.long	3074                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xba2:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc89           # DW_AT_location
	.long	3085                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbab:0x9 DW_TAG_variable
	.long	.Ldebug_loc90           # DW_AT_location
	.long	3096                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbb4:0x9 DW_TAG_variable
	.long	.Ldebug_loc91           # DW_AT_location
	.long	3107                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbbd:0x9 DW_TAG_variable
	.long	.Ldebug_loc93           # DW_AT_location
	.long	3118                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xbc6:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp501                # DW_AT_low_pc
	.long	.Ltmp504-.Ltmp501       # DW_AT_high_pc
	.byte	20                      # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xbda:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xbdf:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xbe4:0x9 DW_TAG_variable
	.long	.Ldebug_loc94           # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0xbef:0x4b DW_TAG_subprogram
	.long	.Linfo_string61         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0xbf7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xc02:0xb DW_TAG_formal_parameter
	.long	.Linfo_string57         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xc0d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc18:0xb DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc23:0xb DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	5                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xc2e:0xb DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xc3a:0x122 DW_TAG_subprogram
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Lfunc_end10-.Lfunc_begin10 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string124        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0xc4f:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xc5c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc95           # DW_AT_location
	.long	.Linfo_string57         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0xc6b:0x90 DW_TAG_lexical_block
	.quad	.Lfunc_begin10          # DW_AT_low_pc
	.long	.Ltmp536-.Lfunc_begin10 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xc78:0xf DW_TAG_variable
	.long	.Ldebug_loc96           # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xc87:0x73 DW_TAG_inlined_subroutine
	.long	3055                    # DW_AT_abstract_origin
	.quad	.Ltmp514                # DW_AT_low_pc
	.long	.Ltmp536-.Ltmp514       # DW_AT_high_pc
	.byte	20                      # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xc9b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc97           # DW_AT_location
	.long	3063                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xca4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc98           # DW_AT_location
	.long	3074                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xcad:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc99           # DW_AT_location
	.long	3085                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcb6:0x9 DW_TAG_variable
	.long	.Ldebug_loc100          # DW_AT_location
	.long	3096                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcbf:0x9 DW_TAG_variable
	.long	.Ldebug_loc101          # DW_AT_location
	.long	3107                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcc8:0x9 DW_TAG_variable
	.long	.Ldebug_loc102          # DW_AT_location
	.long	3118                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xcd1:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp533                # DW_AT_low_pc
	.long	.Ltmp536-.Ltmp533       # DW_AT_high_pc
	.byte	20                      # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xce5:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xcea:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xcef:0x9 DW_TAG_variable
	.long	.Ldebug_loc103          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xcfb:0x60 DW_TAG_lexical_block
	.quad	.Ltmp536                # DW_AT_low_pc
	.long	.Ltmp565-.Ltmp536       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xd08:0xf DW_TAG_variable
	.long	.Ldebug_loc104          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0xd17:0x43 DW_TAG_inlined_subroutine
	.long	3055                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges10        # DW_AT_ranges
	.byte	20                      # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xd23:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc108          # DW_AT_location
	.long	3063                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xd2c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc107          # DW_AT_location
	.long	3074                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xd35:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc106          # DW_AT_location
	.long	3085                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd3e:0x9 DW_TAG_variable
	.long	.Ldebug_loc105          # DW_AT_location
	.long	3096                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd47:0x9 DW_TAG_variable
	.long	.Ldebug_loc109          # DW_AT_location
	.long	3107                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xd50:0x9 DW_TAG_variable
	.long	.Ldebug_loc110          # DW_AT_location
	.long	3118                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xd5c:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin11          # DW_AT_low_pc
	.long	.Lfunc_end11-.Lfunc_begin11 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string125        # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0xd71:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc111          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd80:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc112          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xd8f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc113          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	20                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	42                      # Abbrev [42] 0xd9e:0xd DW_TAG_GNU_call_site
	.long	3130                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp570                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xdac:0x73 DW_TAG_subprogram
	.quad	.Lfunc_begin12          # DW_AT_low_pc
	.long	.Lfunc_end12-.Lfunc_begin12 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	3615                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xdbf:0x5 DW_TAG_formal_parameter
	.long	3623                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xdc4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc117          # DW_AT_location
	.long	3634                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xdcd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc114          # DW_AT_location
	.long	3645                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xdd6:0x9 DW_TAG_variable
	.long	.Ldebug_loc115          # DW_AT_location
	.long	3656                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xddf:0x9 DW_TAG_variable
	.long	.Ldebug_loc116          # DW_AT_location
	.long	3667                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xde8:0x9 DW_TAG_variable
	.long	.Ldebug_loc118          # DW_AT_location
	.long	3678                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xdf1:0x5 DW_TAG_variable
	.long	3689                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xdf6:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp585                # DW_AT_low_pc
	.long	.Ltmp588-.Ltmp585       # DW_AT_high_pc
	.byte	7                       # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xe0a:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xe0f:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xe14:0x9 DW_TAG_variable
	.long	.Ldebug_loc119          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0xe1f:0x56 DW_TAG_subprogram
	.long	.Linfo_string65         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0xe27:0xb DW_TAG_formal_parameter
	.long	.Linfo_string62         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xe32:0xb DW_TAG_formal_parameter
	.long	.Linfo_string57         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0xe3d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string58         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	3                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe48:0xb DW_TAG_variable
	.long	.Linfo_string53         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe53:0xb DW_TAG_variable
	.long	.Linfo_string63         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	5                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe5e:0xb DW_TAG_variable
	.long	.Linfo_string64         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0xe69:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xe75:0x12c DW_TAG_subprogram
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Lfunc_end13-.Lfunc_begin13 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string126        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0xe8a:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xe97:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc120          # DW_AT_location
	.long	.Linfo_string57         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0xea6:0x95 DW_TAG_lexical_block
	.quad	.Lfunc_begin13          # DW_AT_low_pc
	.long	.Ltmp616-.Lfunc_begin13 # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xeb3:0xf DW_TAG_variable
	.long	.Ldebug_loc121          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	30                      # Abbrev [30] 0xec2:0x78 DW_TAG_inlined_subroutine
	.long	3615                    # DW_AT_abstract_origin
	.quad	.Ltmp598                # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp598       # DW_AT_high_pc
	.byte	7                       # DW_AT_call_file
	.byte	30                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xed6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc122          # DW_AT_location
	.long	3623                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xedf:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc123          # DW_AT_location
	.long	3634                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xee8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc124          # DW_AT_location
	.long	3645                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xef1:0x9 DW_TAG_variable
	.long	.Ldebug_loc125          # DW_AT_location
	.long	3656                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xefa:0x9 DW_TAG_variable
	.long	.Ldebug_loc126          # DW_AT_location
	.long	3667                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf03:0x9 DW_TAG_variable
	.long	.Ldebug_loc127          # DW_AT_location
	.long	3678                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xf0c:0x5 DW_TAG_variable
	.long	3689                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0xf11:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp613                # DW_AT_low_pc
	.long	.Ltmp616-.Ltmp613       # DW_AT_high_pc
	.byte	7                       # DW_AT_call_file
	.byte	18                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0xf25:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0xf2a:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf2f:0x9 DW_TAG_variable
	.long	.Ldebug_loc128          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0xf3b:0x65 DW_TAG_lexical_block
	.quad	.Ltmp617                # DW_AT_low_pc
	.long	.Ltmp643-.Ltmp617       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0xf48:0xf DW_TAG_variable
	.long	.Ldebug_loc129          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0xf57:0x48 DW_TAG_inlined_subroutine
	.long	3615                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges11        # DW_AT_ranges
	.byte	7                       # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	9                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0xf63:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc133          # DW_AT_location
	.long	3623                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xf6c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc132          # DW_AT_location
	.long	3634                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0xf75:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc131          # DW_AT_location
	.long	3645                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf7e:0x9 DW_TAG_variable
	.long	.Ldebug_loc130          # DW_AT_location
	.long	3656                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf87:0x9 DW_TAG_variable
	.long	.Ldebug_loc134          # DW_AT_location
	.long	3667                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0xf90:0x9 DW_TAG_variable
	.long	.Ldebug_loc135          # DW_AT_location
	.long	3678                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0xf99:0x5 DW_TAG_variable
	.long	3689                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0xfa1:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin14          # DW_AT_low_pc
	.long	.Lfunc_end14-.Lfunc_begin14 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string127        # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0xfb6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc136          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfc5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc137          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0xfd4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc138          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	7                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	42                      # Abbrev [42] 0xfe3:0xd DW_TAG_GNU_call_site
	.long	3701                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp648                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0xff1:0x24 DW_TAG_subprogram
	.quad	.Lfunc_begin15          # DW_AT_low_pc
	.long	.Lfunc_end15-.Lfunc_begin15 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	992                     # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1004:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x100b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc139          # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1015:0x40 DW_TAG_subprogram
	.long	.Linfo_string67         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x101d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string68         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1028:0xb DW_TAG_formal_parameter
	.long	.Linfo_string69         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1033:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x103e:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1049:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x1055:0x65 DW_TAG_subprogram
	.long	.Linfo_string70         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1061:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x106c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1077:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1082:0xb DW_TAG_formal_parameter
	.long	.Linfo_string71         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x108d:0xb DW_TAG_variable
	.long	.Linfo_string49         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1098:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x10a3:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x10ae:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x10ba:0x430 DW_TAG_subprogram
	.quad	.Lfunc_begin16          # DW_AT_low_pc
	.long	.Lfunc_end16-.Lfunc_begin16 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string128        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x10d3:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x10e0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc140          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x10ef:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc141          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x10fe:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc142          # DW_AT_location
	.long	.Linfo_string71         # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	64                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x110d:0x2cd DW_TAG_lexical_block
	.quad	.Ltmp655                # DW_AT_low_pc
	.long	.Ltmp725-.Ltmp655       # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x111a:0xf DW_TAG_variable
	.long	.Ldebug_loc143          # DW_AT_location
	.long	.Linfo_string167        # DW_AT_name
	.byte	4                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x1129:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp657                # DW_AT_low_pc
	.long	.Ltmp662-.Ltmp657       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	105                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x113d:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1142:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1147:0x9 DW_TAG_variable
	.long	.Ldebug_loc144          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1150:0x9 DW_TAG_variable
	.long	.Ldebug_loc145          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1159:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x115f:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp663                # DW_AT_low_pc
	.long	.Ltmp667-.Ltmp663       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	106                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1173:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1178:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x117d:0x9 DW_TAG_variable
	.long	.Ldebug_loc146          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1186:0x9 DW_TAG_variable
	.long	.Ldebug_loc147          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x118f:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1195:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp667                # DW_AT_low_pc
	.long	.Ltmp672-.Ltmp667       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	107                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x11a9:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x11ae:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11b3:0x9 DW_TAG_variable
	.long	.Ldebug_loc148          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc149          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x11c5:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x11cb:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp675                # DW_AT_low_pc
	.long	.Ltmp680-.Ltmp675       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	108                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x11df:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x11e4:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11e9:0x9 DW_TAG_variable
	.long	.Ldebug_loc150          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x11f2:0x9 DW_TAG_variable
	.long	.Ldebug_loc151          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x11fb:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1201:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp682                # DW_AT_low_pc
	.long	.Ltmp686-.Ltmp682       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	109                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1215:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x121a:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x121f:0x9 DW_TAG_variable
	.long	.Ldebug_loc152          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1228:0x9 DW_TAG_variable
	.long	.Ldebug_loc153          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1231:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1237:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp686                # DW_AT_low_pc
	.long	.Ltmp691-.Ltmp686       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	110                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x124b:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1250:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1255:0x9 DW_TAG_variable
	.long	.Ldebug_loc154          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x125e:0x9 DW_TAG_variable
	.long	.Ldebug_loc155          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1267:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x126d:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp693                # DW_AT_low_pc
	.long	.Ltmp699-.Ltmp693       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	111                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1281:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1286:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x128b:0x9 DW_TAG_variable
	.long	.Ldebug_loc156          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1294:0x9 DW_TAG_variable
	.long	.Ldebug_loc157          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x129d:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x12a3:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp699                # DW_AT_low_pc
	.long	.Ltmp703-.Ltmp699       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	112                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x12b7:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x12bc:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12c1:0x9 DW_TAG_variable
	.long	.Ldebug_loc158          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12ca:0x9 DW_TAG_variable
	.long	.Ldebug_loc159          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x12d3:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x12d9:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp703                # DW_AT_low_pc
	.long	.Ltmp708-.Ltmp703       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	113                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x12ed:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x12f2:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x12f7:0x9 DW_TAG_variable
	.long	.Ldebug_loc160          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1300:0x9 DW_TAG_variable
	.long	.Ldebug_loc161          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1309:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x130f:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp708                # DW_AT_low_pc
	.long	.Ltmp713-.Ltmp708       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	114                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1323:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1328:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x132d:0x9 DW_TAG_variable
	.long	.Ldebug_loc162          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1336:0x9 DW_TAG_variable
	.long	.Ldebug_loc163          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x133f:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1345:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp713                # DW_AT_low_pc
	.long	.Ltmp717-.Ltmp713       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	115                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1359:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x135e:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1363:0x9 DW_TAG_variable
	.long	.Ldebug_loc164          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x136c:0x9 DW_TAG_variable
	.long	.Ldebug_loc165          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1375:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x137b:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp717                # DW_AT_low_pc
	.long	.Ltmp723-.Ltmp717       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	116                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x138f:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1394:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1399:0x9 DW_TAG_variable
	.long	.Ldebug_loc166          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x13a2:0x9 DW_TAG_variable
	.long	.Ldebug_loc167          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x13ab:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x13b1:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp723                # DW_AT_low_pc
	.long	.Ltmp725-.Ltmp723       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	118                     # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x13c5:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x13ca:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x13cf:0x9 DW_TAG_variable
	.long	.Ldebug_loc168          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x13da:0x10f DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges12        # DW_AT_ranges
	.byte	4                       # DW_AT_call_file
	.byte	122                     # DW_AT_call_line
	.byte	12                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x13e6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc169          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x13ef:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc170          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x13f8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc171          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1401:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc172          # DW_AT_location
	.long	4226                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x140a:0x9 DW_TAG_variable
	.long	.Ldebug_loc175          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1413:0x9 DW_TAG_variable
	.long	.Ldebug_loc176          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x141c:0x9 DW_TAG_variable
	.long	.Ldebug_loc177          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1425:0x9 DW_TAG_variable
	.long	.Ldebug_loc180          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x142e:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp728                # DW_AT_low_pc
	.long	.Ltmp732-.Ltmp728       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1442:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1447:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x144c:0x9 DW_TAG_variable
	.long	.Ldebug_loc173          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1455:0x9 DW_TAG_variable
	.long	.Ldebug_loc174          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x145e:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1464:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp738                # DW_AT_low_pc
	.long	.Ltmp740-.Ltmp738       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x1478:0x9 DW_TAG_variable
	.long	.Ldebug_loc178          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1481:0x9 DW_TAG_variable
	.long	.Ldebug_loc179          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x148a:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1490:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp740                # DW_AT_low_pc
	.long	.Ltmp743-.Ltmp740       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x14a4:0x9 DW_TAG_variable
	.long	.Ldebug_loc181          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x14ad:0x9 DW_TAG_variable
	.long	.Ldebug_loc182          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x14b6:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x14bc:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp743                # DW_AT_low_pc
	.long	.Ltmp745-.Ltmp743       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x14d0:0x9 DW_TAG_variable
	.long	.Ldebug_loc183          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x14d9:0x9 DW_TAG_variable
	.long	.Ldebug_loc184          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x14e2:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x14ea:0x39 DW_TAG_subprogram
	.quad	.Lfunc_begin17          # DW_AT_low_pc
	.long	.Lfunc_end17-.Lfunc_begin17 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	4117                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x14fd:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	4125                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1504:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x150b:0x9 DW_TAG_variable
	.long	.Ldebug_loc185          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1514:0x9 DW_TAG_variable
	.long	.Ldebug_loc186          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x151d:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1523:0x110 DW_TAG_subprogram
	.quad	.Lfunc_begin18          # DW_AT_low_pc
	.long	.Lfunc_end18-.Lfunc_begin18 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	4181                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1536:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	4193                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x153d:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	4204                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1544:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	4215                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x154b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc187          # DW_AT_location
	.long	4226                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1554:0x9 DW_TAG_variable
	.long	.Ldebug_loc190          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x155d:0x9 DW_TAG_variable
	.long	.Ldebug_loc191          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1566:0x9 DW_TAG_variable
	.long	.Ldebug_loc192          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x156f:0x9 DW_TAG_variable
	.long	.Ldebug_loc195          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1578:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp764                # DW_AT_low_pc
	.long	.Ltmp770-.Ltmp764       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x158c:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1591:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1596:0x9 DW_TAG_variable
	.long	.Ldebug_loc188          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x159f:0x9 DW_TAG_variable
	.long	.Ldebug_loc189          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x15a8:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x15ae:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp775                # DW_AT_low_pc
	.long	.Ltmp777-.Ltmp775       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x15c2:0x9 DW_TAG_variable
	.long	.Ldebug_loc193          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15cb:0x9 DW_TAG_variable
	.long	.Ldebug_loc194          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x15d4:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x15da:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp777                # DW_AT_low_pc
	.long	.Ltmp780-.Ltmp777       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x15ee:0x9 DW_TAG_variable
	.long	.Ldebug_loc196          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x15f7:0x9 DW_TAG_variable
	.long	.Ldebug_loc197          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x1600:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1606:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp780                # DW_AT_low_pc
	.long	.Ltmp783-.Ltmp780       # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x161a:0x9 DW_TAG_variable
	.long	.Ldebug_loc198          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1623:0x9 DW_TAG_variable
	.long	.Ldebug_loc199          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x162c:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x1633:0x27 DW_TAG_subprogram
	.quad	.Lfunc_begin19          # DW_AT_low_pc
	.long	.Lfunc_end19-.Lfunc_begin19 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string129        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x164c:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string25         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x165a:0x7f DW_TAG_subprogram
	.quad	.Lfunc_begin20          # DW_AT_low_pc
	.long	.Lfunc_end20-.Lfunc_begin20 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	5849                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x166d:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	5857                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1674:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc200          # DW_AT_location
	.long	5868                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x167d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc201          # DW_AT_location
	.long	5879                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1686:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	5890                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x168d:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	5901                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1694:0x9 DW_TAG_variable
	.long	.Ldebug_loc202          # DW_AT_location
	.long	5934                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x169d:0x9 DW_TAG_variable
	.long	.Ldebug_loc203          # DW_AT_location
	.long	5912                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16a6:0x9 DW_TAG_variable
	.long	.Ldebug_loc204          # DW_AT_location
	.long	5923                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x16af:0x29 DW_TAG_lexical_block
	.quad	.Ltmp801                # DW_AT_low_pc
	.long	.Ltmp807-.Ltmp801       # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x16bc:0x9 DW_TAG_variable
	.long	.Ldebug_loc205          # DW_AT_location
	.long	5946                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16c5:0x9 DW_TAG_variable
	.long	.Ldebug_loc206          # DW_AT_location
	.long	5957                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x16ce:0x9 DW_TAG_variable
	.long	.Ldebug_loc207          # DW_AT_location
	.long	5968                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x16d9:0x84 DW_TAG_subprogram
	.long	.Linfo_string72         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x16e1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string55         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x16ec:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x16f7:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1702:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x170d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string26         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1718:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1723:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x172e:0xb DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1739:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x173a:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1745:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1750:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x175d:0x101 DW_TAG_subprogram
	.quad	.Lfunc_begin21          # DW_AT_low_pc
	.long	.Lfunc_end21-.Lfunc_begin21 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string130        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1772:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc208          # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1781:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc209          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1790:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc210          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x179f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc211          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x17ae:0xf DW_TAG_variable
	.long	.Ldebug_loc212          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	48                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x17bd:0x86 DW_TAG_inlined_subroutine
	.long	5849                    # DW_AT_abstract_origin
	.quad	.Ltmp886                # DW_AT_low_pc
	.long	.Ltmp963-.Ltmp886       # DW_AT_high_pc
	.byte	21                      # DW_AT_call_file
	.byte	54                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x17d1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc219          # DW_AT_location
	.long	5857                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x17da:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc218          # DW_AT_location
	.long	5868                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x17e3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc220          # DW_AT_location
	.long	5879                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x17ec:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc217          # DW_AT_location
	.long	5890                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x17f5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc216          # DW_AT_location
	.long	5901                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x17fe:0x9 DW_TAG_variable
	.long	.Ldebug_loc213          # DW_AT_location
	.long	5912                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1807:0x9 DW_TAG_variable
	.long	.Ldebug_loc214          # DW_AT_location
	.long	5923                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1810:0x9 DW_TAG_variable
	.long	.Ldebug_loc215          # DW_AT_location
	.long	5934                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1819:0x29 DW_TAG_lexical_block
	.quad	.Ltmp891                # DW_AT_low_pc
	.long	.Ltmp897-.Ltmp891       # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1826:0x9 DW_TAG_variable
	.long	.Ldebug_loc221          # DW_AT_location
	.long	5946                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x182f:0x9 DW_TAG_variable
	.long	.Ldebug_loc222          # DW_AT_location
	.long	5957                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1838:0x9 DW_TAG_variable
	.long	.Ldebug_loc223          # DW_AT_location
	.long	5968                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1843:0xd DW_TAG_GNU_call_site
	.long	5981                    # DW_AT_abstract_origin
	.quad	.Ltmp883                # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1850:0xd DW_TAG_GNU_call_site
	.long	5981                    # DW_AT_abstract_origin
	.quad	.Ltmp885                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x185e:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin22          # DW_AT_low_pc
	.long	.Lfunc_end22-.Lfunc_begin22 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string131        # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1873:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc224          # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1882:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc225          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1891:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc226          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x18a0:0xf DW_TAG_variable
	.long	.Ldebug_loc227          # DW_AT_location
	.long	.Linfo_string26         # DW_AT_name
	.byte	21                      # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x18af:0xd DW_TAG_GNU_call_site
	.long	5981                    # DW_AT_abstract_origin
	.quad	.Ltmp969                # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x18bc:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp973                # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x18ca:0x4f DW_TAG_subprogram
	.quad	.Lfunc_begin23          # DW_AT_low_pc
	.long	.Lfunc_end23-.Lfunc_begin23 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	6425                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x18dd:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	6433                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x18e4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc228          # DW_AT_location
	.long	6444                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x18ed:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc229          # DW_AT_location
	.long	6455                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x18f6:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	6466                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x18fd:0x9 DW_TAG_variable
	.long	.Ldebug_loc230          # DW_AT_location
	.long	6499                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1906:0x9 DW_TAG_variable
	.long	.Ldebug_loc231          # DW_AT_location
	.long	6477                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x190f:0x9 DW_TAG_variable
	.long	.Ldebug_loc232          # DW_AT_location
	.long	6488                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1919:0x56 DW_TAG_subprogram
	.long	.Linfo_string75         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1921:0xb DW_TAG_formal_parameter
	.long	.Linfo_string55         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x192c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1937:0xb DW_TAG_formal_parameter
	.long	.Linfo_string49         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1942:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x194d:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1958:0xb DW_TAG_variable
	.long	.Linfo_string73         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1963:0xb DW_TAG_variable
	.long	.Linfo_string74         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x196f:0xc0 DW_TAG_subprogram
	.quad	.Lfunc_begin24          # DW_AT_low_pc
	.long	.Lfunc_end24-.Lfunc_begin24 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string132        # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1984:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc233          # DW_AT_location
	.long	.Linfo_string55         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1993:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc234          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x19a2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc235          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x19b1:0xf DW_TAG_variable
	.long	.Ldebug_loc236          # DW_AT_location
	.long	.Linfo_string49         # DW_AT_name
	.byte	10                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x19c0:0x54 DW_TAG_inlined_subroutine
	.long	6425                    # DW_AT_abstract_origin
	.quad	.Ltmp1050               # DW_AT_low_pc
	.long	.Ltmp1115-.Ltmp1050     # DW_AT_high_pc
	.byte	10                      # DW_AT_call_file
	.byte	33                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x19d4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc242          # DW_AT_location
	.long	6433                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x19dd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc241          # DW_AT_location
	.long	6444                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x19e6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc243          # DW_AT_location
	.long	6455                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x19ef:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc240          # DW_AT_location
	.long	6466                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x19f8:0x9 DW_TAG_variable
	.long	.Ldebug_loc237          # DW_AT_location
	.long	6477                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a01:0x9 DW_TAG_variable
	.long	.Ldebug_loc238          # DW_AT_location
	.long	6488                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a0a:0x9 DW_TAG_variable
	.long	.Ldebug_loc239          # DW_AT_location
	.long	6499                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1a14:0xd DW_TAG_GNU_call_site
	.long	6511                    # DW_AT_abstract_origin
	.quad	.Ltmp1049               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1a21:0xd DW_TAG_GNU_call_site
	.long	6511                    # DW_AT_abstract_origin
	.quad	.Ltmp1050               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1a2f:0xb7 DW_TAG_subprogram
	.quad	.Lfunc_begin25          # DW_AT_low_pc
	.long	.Lfunc_end25-.Lfunc_begin25 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	6886                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1a42:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc244          # DW_AT_location
	.long	6898                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1a4b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc245          # DW_AT_location
	.long	6909                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1a54:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc246          # DW_AT_location
	.long	6920                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a5d:0x9 DW_TAG_variable
	.long	.Ldebug_loc247          # DW_AT_location
	.long	6931                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a66:0x9 DW_TAG_variable
	.long	.Ldebug_loc248          # DW_AT_location
	.long	6942                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a6f:0x9 DW_TAG_variable
	.long	.Ldebug_loc249          # DW_AT_location
	.long	6953                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1a78:0x38 DW_TAG_lexical_block
	.quad	.Ltmp1124               # DW_AT_low_pc
	.long	.Ltmp1153-.Ltmp1124     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1a85:0x9 DW_TAG_variable
	.long	.Ldebug_loc250          # DW_AT_location
	.long	6965                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x1a8e:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges13        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x1a93:0x9 DW_TAG_variable
	.long	.Ldebug_loc251          # DW_AT_location
	.long	6977                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1a9c:0x9 DW_TAG_variable
	.long	.Ldebug_loc252          # DW_AT_location
	.long	6988                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1aa5:0x9 DW_TAG_variable
	.long	.Ldebug_loc253          # DW_AT_location
	.long	6999                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1ab0:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp1153               # DW_AT_low_pc
	.long	.Ltmp1155-.Ltmp1153     # DW_AT_high_pc
	.byte	9                       # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1ac4:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1ac9:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ace:0x9 DW_TAG_variable
	.long	.Ldebug_loc254          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1ad8:0xd DW_TAG_GNU_call_site
	.long	4282                    # DW_AT_abstract_origin
	.quad	.Ltmp1119               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x1ae6:0x7f DW_TAG_subprogram
	.long	.Linfo_string76         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1af2:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1afd:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1b08:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b13:0xb DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b1e:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b29:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1b34:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x1b35:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x1b40:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x1b41:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b4c:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b57:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1b65:0x40 DW_TAG_subprogram
	.long	.Linfo_string78         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1b6d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1b78:0xb DW_TAG_formal_parameter
	.long	.Linfo_string57         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	15                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b83:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b8e:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1b99:0xb DW_TAG_variable
	.long	.Linfo_string60         # DW_AT_name
	.byte	18                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x1ba5:0x15c DW_TAG_subprogram
	.quad	.Lfunc_begin26          # DW_AT_low_pc
	.long	.Lfunc_end26-.Lfunc_begin26 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string133        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1bba:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc255          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1bc9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc256          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1bd8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc257          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x1be7:0xb8 DW_TAG_lexical_block
	.long	.Ldebug_ranges16        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x1bec:0xf DW_TAG_variable
	.long	.Ldebug_loc274          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	9                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x1bfb:0xa3 DW_TAG_inlined_subroutine
	.long	6886                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges14        # DW_AT_ranges
	.byte	9                       # DW_AT_call_file
	.byte	35                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1c07:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc258          # DW_AT_location
	.long	6898                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1c10:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc259          # DW_AT_location
	.long	6909                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1c19:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc260          # DW_AT_location
	.long	6920                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c22:0x9 DW_TAG_variable
	.long	.Ldebug_loc261          # DW_AT_location
	.long	6931                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c2b:0x9 DW_TAG_variable
	.long	.Ldebug_loc262          # DW_AT_location
	.long	6942                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c34:0x9 DW_TAG_variable
	.long	.Ldebug_loc268          # DW_AT_location
	.long	6953                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x1c3d:0x38 DW_TAG_lexical_block
	.quad	.Ltmp1188               # DW_AT_low_pc
	.long	.Ltmp1216-.Ltmp1188     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x1c4a:0x9 DW_TAG_variable
	.long	.Ldebug_loc269          # DW_AT_location
	.long	6965                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x1c53:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges15        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x1c58:0x9 DW_TAG_variable
	.long	.Ldebug_loc270          # DW_AT_location
	.long	6977                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c61:0x9 DW_TAG_variable
	.long	.Ldebug_loc271          # DW_AT_location
	.long	6988                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c6a:0x9 DW_TAG_variable
	.long	.Ldebug_loc272          # DW_AT_location
	.long	6999                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1c75:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp1216               # DW_AT_low_pc
	.long	.Ltmp1218-.Ltmp1216     # DW_AT_high_pc
	.byte	9                       # DW_AT_call_file
	.byte	28                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1c89:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1c8e:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1c93:0x9 DW_TAG_variable
	.long	.Ldebug_loc273          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1c9f:0x3a DW_TAG_inlined_subroutine
	.long	7013                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges17        # DW_AT_ranges
	.byte	9                       # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1cab:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc264          # DW_AT_location
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1cb4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc265          # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1cbd:0x9 DW_TAG_variable
	.long	.Ldebug_loc263          # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1cc6:0x9 DW_TAG_variable
	.long	.Ldebug_loc266          # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ccf:0x9 DW_TAG_variable
	.long	.Ldebug_loc267          # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1cd9:0xd DW_TAG_GNU_call_site
	.long	4282                    # DW_AT_abstract_origin
	.quad	.Ltmp1165               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1ce6:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
	.quad	.Ltmp1219               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x1cf3:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1224               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x1d01:0xc1 DW_TAG_subprogram
	.quad	.Lfunc_begin27          # DW_AT_low_pc
	.long	.Lfunc_end27-.Lfunc_begin27 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	7618                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1d14:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	7626                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1d1b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc275          # DW_AT_location
	.long	7637                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1d24:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	7648                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1d2b:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	7659                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x1d32:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	7670                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d39:0x9 DW_TAG_variable
	.long	.Ldebug_loc276          # DW_AT_location
	.long	7725                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d42:0x9 DW_TAG_variable
	.long	.Ldebug_loc277          # DW_AT_location
	.long	7736                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d4b:0x9 DW_TAG_variable
	.long	.Ldebug_loc278          # DW_AT_location
	.long	7747                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d54:0x9 DW_TAG_variable
	.long	.Ldebug_loc279          # DW_AT_location
	.long	7703                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d5d:0x9 DW_TAG_variable
	.long	.Ldebug_loc280          # DW_AT_location
	.long	7692                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d66:0x9 DW_TAG_variable
	.long	.Ldebug_loc281          # DW_AT_location
	.long	7681                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d6f:0x9 DW_TAG_variable
	.long	.Ldebug_loc282          # DW_AT_location
	.long	7758                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d78:0x9 DW_TAG_variable
	.long	.Ldebug_loc283          # DW_AT_location
	.long	7714                    # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x1d81:0x20 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges18        # DW_AT_ranges
	.byte	22                      # DW_AT_call_file
	.byte	73                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1d8d:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1d92:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1d97:0x9 DW_TAG_variable
	.long	.Ldebug_loc284          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x1da1:0x20 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges19        # DW_AT_ranges
	.byte	22                      # DW_AT_call_file
	.byte	74                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1dad:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1db2:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1db7:0x9 DW_TAG_variable
	.long	.Ldebug_loc285          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x1dc2:0x98 DW_TAG_subprogram
	.long	.Linfo_string79         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1dca:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1dd5:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1de0:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1deb:0xb DW_TAG_formal_parameter
	.long	.Linfo_string80         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	7770                    # DW_AT_type
	.byte	23                      # Abbrev [23] 0x1df6:0xb DW_TAG_formal_parameter
	.long	.Linfo_string81         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	7770                    # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e01:0xb DW_TAG_variable
	.long	.Linfo_string82         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e0c:0xb DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e17:0xb DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e22:0xb DW_TAG_variable
	.long	.Linfo_string85         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e2d:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e38:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e43:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1e4e:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x1e5a:0x5 DW_TAG_pointer_type
	.long	935                     # DW_AT_type
	.byte	39                      # Abbrev [39] 0x1e5f:0x141 DW_TAG_subprogram
	.quad	.Lfunc_begin28          # DW_AT_low_pc
	.long	.Lfunc_end28-.Lfunc_begin28 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string134        # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x1e74:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc286          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1e83:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc287          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x1e92:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc288          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x1ea1:0xd7 DW_TAG_lexical_block
	.long	.Ldebug_ranges21        # DW_AT_ranges
	.byte	24                      # Abbrev [24] 0x1ea6:0xb DW_TAG_variable
	.long	.Linfo_string84         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1eb1:0xb DW_TAG_variable
	.long	.Linfo_string83         # DW_AT_name
	.byte	22                      # DW_AT_decl_file
	.byte	88                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x1ebc:0xbb DW_TAG_inlined_subroutine
	.long	7618                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges20        # DW_AT_ranges
	.byte	22                      # DW_AT_call_file
	.byte	89                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x1ec8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc294          # DW_AT_location
	.long	7626                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1ed1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc293          # DW_AT_location
	.long	7637                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x1eda:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc292          # DW_AT_location
	.long	7648                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ee3:0x9 DW_TAG_variable
	.long	.Ldebug_loc289          # DW_AT_location
	.long	7681                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1eec:0x9 DW_TAG_variable
	.long	.Ldebug_loc290          # DW_AT_location
	.long	7692                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1ef5:0x9 DW_TAG_variable
	.long	.Ldebug_loc291          # DW_AT_location
	.long	7703                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1efe:0x9 DW_TAG_variable
	.long	.Ldebug_loc295          # DW_AT_location
	.long	7714                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f07:0x9 DW_TAG_variable
	.long	.Ldebug_loc298          # DW_AT_location
	.long	7725                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f10:0x9 DW_TAG_variable
	.long	.Ldebug_loc299          # DW_AT_location
	.long	7736                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f19:0x9 DW_TAG_variable
	.long	.Ldebug_loc300          # DW_AT_location
	.long	7747                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f22:0x9 DW_TAG_variable
	.long	.Ldebug_loc301          # DW_AT_location
	.long	7758                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x1f2b:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp1282               # DW_AT_low_pc
	.long	.Ltmp1284-.Ltmp1282     # DW_AT_high_pc
	.byte	22                      # DW_AT_call_file
	.byte	73                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1f3f:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x1f44:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f49:0x9 DW_TAG_variable
	.long	.Ldebug_loc296          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x1f53:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp1284               # DW_AT_low_pc
	.long	.Ltmp1286-.Ltmp1284     # DW_AT_high_pc
	.byte	22                      # DW_AT_call_file
	.byte	74                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x1f67:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x1f6c:0x9 DW_TAG_variable
	.long	.Ldebug_loc297          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x1f78:0xd DW_TAG_GNU_call_site
	.long	7775                    # DW_AT_abstract_origin
	.quad	.Ltmp1287               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x1f85:0xd DW_TAG_GNU_call_site
	.long	7775                    # DW_AT_abstract_origin
	.quad	.Ltmp1288               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x1f92:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1317               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x1fa0:0x23 DW_TAG_subprogram
	.long	.Linfo_string14         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	8131                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1fac:0xb DW_TAG_formal_parameter
	.long	.Linfo_string88         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	16                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1fb7:0xb DW_TAG_variable
	.long	.Linfo_string89         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	17                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x1fc3:0xb DW_TAG_typedef
	.long	8142                    # DW_AT_type
	.long	.Linfo_string87         # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x1fce:0xb DW_TAG_typedef
	.long	171                     # DW_AT_type
	.long	.Linfo_string86         # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.byte	22                      # Abbrev [22] 0x1fd9:0x44 DW_TAG_subprogram
	.long	.Linfo_string17         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	8131                    # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x1fe5:0xb DW_TAG_formal_parameter
	.long	.Linfo_string25         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	8                       # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ff0:0xb DW_TAG_variable
	.long	.Linfo_string90         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	9                       # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x1ffb:0xb DW_TAG_variable
	.long	.Linfo_string91         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	10                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2006:0xb DW_TAG_variable
	.long	.Linfo_string92         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2011:0xb DW_TAG_variable
	.long	.Linfo_string93         # DW_AT_name
	.byte	23                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x201d:0x106 DW_TAG_subprogram
	.quad	.Lfunc_begin29          # DW_AT_low_pc
	.long	.Lfunc_end29-.Lfunc_begin29 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8575                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2030:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	8583                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2037:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc302          # DW_AT_location
	.long	8594                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2040:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc303          # DW_AT_location
	.long	8605                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2049:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	8616                    # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2050:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	8627                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2057:0x5 DW_TAG_variable
	.long	8660                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x205c:0x9 DW_TAG_variable
	.long	.Ldebug_loc304          # DW_AT_location
	.long	8649                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2065:0x9 DW_TAG_variable
	.long	.Ldebug_loc306          # DW_AT_location
	.long	8638                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x206e:0x9 DW_TAG_variable
	.long	.Ldebug_loc313          # DW_AT_location
	.long	8671                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x2077:0x85 DW_TAG_lexical_block
	.long	.Ldebug_ranges23        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x207c:0x9 DW_TAG_variable
	.long	.Ldebug_loc305          # DW_AT_location
	.long	8683                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x2085:0x76 DW_TAG_lexical_block
	.long	.Ldebug_ranges22        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x208a:0x9 DW_TAG_variable
	.long	.Ldebug_loc307          # DW_AT_location
	.long	8695                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2093:0x5 DW_TAG_variable
	.long	8706                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2098:0x9 DW_TAG_variable
	.long	.Ldebug_loc311          # DW_AT_location
	.long	8717                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x20a1:0x59 DW_TAG_inlined_subroutine
	.long	8096                    # DW_AT_abstract_origin
	.quad	.Ltmp1324               # DW_AT_low_pc
	.long	.Ltmp1329-.Ltmp1324     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x20b5:0x5 DW_TAG_formal_parameter
	.long	8108                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x20ba:0x5 DW_TAG_variable
	.long	8119                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x20bf:0x3a DW_TAG_inlined_subroutine
	.long	8153                    # DW_AT_abstract_origin
	.quad	.Ltmp1325               # DW_AT_low_pc
	.long	.Ltmp1329-.Ltmp1325     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x20d3:0x5 DW_TAG_formal_parameter
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x20d8:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20dd:0x9 DW_TAG_variable
	.long	.Ldebug_loc308          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20e6:0x9 DW_TAG_variable
	.long	.Ldebug_loc309          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x20ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc310          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x20fc:0x26 DW_TAG_lexical_block
	.quad	.Ltmp1336               # DW_AT_low_pc
	.long	.Ltmp1355-.Ltmp1336     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2109:0x9 DW_TAG_variable
	.long	.Ldebug_loc314          # DW_AT_location
	.long	8731                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x2112:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges24        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x2117:0x9 DW_TAG_variable
	.long	.Ldebug_loc312          # DW_AT_location
	.long	8743                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2123:0x5c DW_TAG_subprogram
	.quad	.Lfunc_begin30          # DW_AT_low_pc
	.long	.Lfunc_end30-.Lfunc_begin30 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8096                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2136:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc315          # DW_AT_location
	.long	8108                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x213f:0x5 DW_TAG_variable
	.long	8119                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2144:0x3a DW_TAG_inlined_subroutine
	.long	8153                    # DW_AT_abstract_origin
	.quad	.Ltmp1357               # DW_AT_low_pc
	.long	.Ltmp1361-.Ltmp1357     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2158:0x5 DW_TAG_formal_parameter
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x215d:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2162:0x9 DW_TAG_variable
	.long	.Ldebug_loc316          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x216b:0x9 DW_TAG_variable
	.long	.Ldebug_loc317          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2174:0x9 DW_TAG_variable
	.long	.Ldebug_loc318          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x217f:0xb6 DW_TAG_subprogram
	.long	.Linfo_string94         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x2187:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2192:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x219d:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x21a8:0xb DW_TAG_formal_parameter
	.long	.Linfo_string95         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x21b3:0xb DW_TAG_formal_parameter
	.long	.Linfo_string96         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x21be:0xb DW_TAG_variable
	.long	.Linfo_string97         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x21c9:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x21d4:0xb DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x21df:0xb DW_TAG_variable
	.long	.Linfo_string99         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x21ea:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x21eb:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x21f6:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x21f7:0xb DW_TAG_variable
	.long	.Linfo_string100        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2202:0xb DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x220d:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	44                      # Abbrev [44] 0x221a:0x1a DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x221b:0xb DW_TAG_variable
	.long	.Linfo_string102        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2226:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2227:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2235:0x23d DW_TAG_subprogram
	.quad	.Lfunc_begin31          # DW_AT_low_pc
	.long	.Lfunc_end31-.Lfunc_begin31 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string135        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x224a:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc319          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2259:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc320          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2268:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc321          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2277:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc322          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	58                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2286:0x169 DW_TAG_lexical_block
	.long	.Ldebug_ranges29        # DW_AT_ranges
	.byte	28                      # Abbrev [28] 0x228b:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	32
	.long	.Linfo_string98         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.long	18656                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2299:0xf DW_TAG_variable
	.long	.Ldebug_loc323          # DW_AT_location
	.long	.Linfo_string97         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x22a8:0xf DW_TAG_variable
	.long	.Ldebug_loc339          # DW_AT_location
	.long	.Linfo_string168        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	67                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x22b7:0xfd DW_TAG_inlined_subroutine
	.long	8575                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges25        # DW_AT_ranges
	.byte	5                       # DW_AT_call_file
	.byte	65                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x22c3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc326          # DW_AT_location
	.long	8583                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x22cc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc325          # DW_AT_location
	.long	8594                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x22d5:0x5 DW_TAG_formal_parameter
	.long	8605                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x22da:0x5 DW_TAG_formal_parameter
	.long	8616                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x22df:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc324          # DW_AT_location
	.long	8627                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x22e8:0x9 DW_TAG_variable
	.long	.Ldebug_loc327          # DW_AT_location
	.long	8638                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x22f1:0x9 DW_TAG_variable
	.long	.Ldebug_loc329          # DW_AT_location
	.long	8649                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x22fa:0x5 DW_TAG_variable
	.long	8660                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x22ff:0x9 DW_TAG_variable
	.long	.Ldebug_loc335          # DW_AT_location
	.long	8671                    # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x2308:0x8d DW_TAG_lexical_block
	.quad	.Ltmp1373               # DW_AT_low_pc
	.long	.Ltmp1388-.Ltmp1373     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2315:0x9 DW_TAG_variable
	.long	.Ldebug_loc328          # DW_AT_location
	.long	8683                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x231e:0x76 DW_TAG_lexical_block
	.long	.Ldebug_ranges26        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x2323:0x9 DW_TAG_variable
	.long	.Ldebug_loc330          # DW_AT_location
	.long	8695                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x232c:0x5 DW_TAG_variable
	.long	8706                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2331:0x9 DW_TAG_variable
	.long	.Ldebug_loc334          # DW_AT_location
	.long	8717                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x233a:0x59 DW_TAG_inlined_subroutine
	.long	8096                    # DW_AT_abstract_origin
	.quad	.Ltmp1376               # DW_AT_low_pc
	.long	.Ltmp1381-.Ltmp1376     # DW_AT_high_pc
	.byte	5                       # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x234e:0x5 DW_TAG_formal_parameter
	.long	8108                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2353:0x5 DW_TAG_variable
	.long	8119                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2358:0x3a DW_TAG_inlined_subroutine
	.long	8153                    # DW_AT_abstract_origin
	.quad	.Ltmp1377               # DW_AT_low_pc
	.long	.Ltmp1381-.Ltmp1377     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x236c:0x5 DW_TAG_formal_parameter
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2371:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2376:0x9 DW_TAG_variable
	.long	.Ldebug_loc331          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x237f:0x9 DW_TAG_variable
	.long	.Ldebug_loc332          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2388:0x9 DW_TAG_variable
	.long	.Ldebug_loc333          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x2395:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges28        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x239a:0x9 DW_TAG_variable
	.long	.Ldebug_loc337          # DW_AT_location
	.long	8731                    # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x23a3:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges27        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x23a8:0x9 DW_TAG_variable
	.long	.Ldebug_loc336          # DW_AT_location
	.long	8743                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x23b4:0x3a DW_TAG_lexical_block
	.quad	.Ltmp1739               # DW_AT_low_pc
	.long	.Ltmp1758-.Ltmp1739     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x23c1:0xf DW_TAG_variable
	.long	.Ldebug_loc338          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x23d0:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1739               # DW_AT_low_pc
	.long	.Ltmp1758-.Ltmp1739     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x23dd:0xf DW_TAG_variable
	.long	.Ldebug_loc340          # DW_AT_location
	.long	.Linfo_string169        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	70                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	42                      # Abbrev [42] 0x23ef:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1390               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x23fc:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1742               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2409:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1744               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2416:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1746               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2423:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1748               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2430:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1750               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x243d:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1752               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x244a:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1754               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2457:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1756               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2464:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1758               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2472:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin32          # DW_AT_low_pc
	.long	.Lfunc_end32-.Lfunc_begin32 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string136        # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2487:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc341          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2496:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc342          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x24a5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc343          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	83                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x24b4:0xf DW_TAG_variable
	.long	.Ldebug_loc344          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	5                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x24c3:0xd DW_TAG_GNU_call_site
	.long	8757                    # DW_AT_abstract_origin
	.quad	.Ltmp1764               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x24d0:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1768               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x24de:0x15f DW_TAG_subprogram
	.quad	.Lfunc_begin33          # DW_AT_low_pc
	.long	.Lfunc_end33-.Lfunc_begin33 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string137        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x24f3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc345          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2502:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc346          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2511:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc347          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2520:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc348          # DW_AT_location
	.long	.Linfo_string95         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x252f:0xb DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x253a:0xf5 DW_TAG_lexical_block
	.quad	.Ltmp1772               # DW_AT_low_pc
	.long	.Ltmp1834-.Ltmp1772     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2547:0xf DW_TAG_variable
	.long	.Ldebug_loc349          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2556:0xd8 DW_TAG_lexical_block
	.quad	.Ltmp1775               # DW_AT_low_pc
	.long	.Ltmp1832-.Ltmp1775     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x2563:0xf DW_TAG_variable
	.long	.Ldebug_loc350          # DW_AT_location
	.long	.Linfo_string100        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2572:0xb DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x257d:0xf DW_TAG_variable
	.long	.Ldebug_loc355          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x258c:0x59 DW_TAG_inlined_subroutine
	.long	8096                    # DW_AT_abstract_origin
	.quad	.Ltmp1777               # DW_AT_low_pc
	.long	.Ltmp1782-.Ltmp1777     # DW_AT_high_pc
	.byte	25                      # DW_AT_call_file
	.byte	29                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x25a0:0x5 DW_TAG_formal_parameter
	.long	8108                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x25a5:0x5 DW_TAG_variable
	.long	8119                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x25aa:0x3a DW_TAG_inlined_subroutine
	.long	8153                    # DW_AT_abstract_origin
	.quad	.Ltmp1778               # DW_AT_low_pc
	.long	.Ltmp1782-.Ltmp1778     # DW_AT_high_pc
	.byte	23                      # DW_AT_call_file
	.byte	19                      # DW_AT_call_line
	.byte	10                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x25be:0x5 DW_TAG_formal_parameter
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x25c3:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x25c8:0x9 DW_TAG_variable
	.long	.Ldebug_loc351          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x25d1:0x9 DW_TAG_variable
	.long	.Ldebug_loc352          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x25da:0x9 DW_TAG_variable
	.long	.Ldebug_loc353          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x25e5:0x48 DW_TAG_lexical_block
	.long	.Ldebug_ranges31        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x25ea:0xf DW_TAG_variable
	.long	.Ldebug_loc354          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x25f9:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges30        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x25fe:0xf DW_TAG_variable
	.long	.Ldebug_loc356          # DW_AT_location
	.long	.Linfo_string25         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x260d:0xf DW_TAG_variable
	.long	.Ldebug_loc357          # DW_AT_location
	.long	.Linfo_string66         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x261c:0xf DW_TAG_variable
	.long	.Ldebug_loc358          # DW_AT_location
	.long	.Linfo_string50         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x262f:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
	.quad	.Ltmp1771               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x263d:0x10b DW_TAG_subprogram
	.quad	.Lfunc_begin34          # DW_AT_low_pc
	.long	.Lfunc_end34-.Lfunc_begin34 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string138        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2652:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc359          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2661:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc360          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2670:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc361          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x267f:0x39 DW_TAG_lexical_block
	.quad	.Ltmp1844               # DW_AT_low_pc
	.long	.Ltmp1855-.Ltmp1844     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x268c:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string98         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	47                      # DW_AT_decl_line
	.long	18656                   # DW_AT_type
	.byte	35                      # Abbrev [35] 0x269a:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1846               # DW_AT_low_pc
	.long	.Ltmp1855-.Ltmp1846     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x26a7:0xf DW_TAG_variable
	.long	.Ldebug_loc362          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x26b8:0xd DW_TAG_GNU_call_site
	.long	9438                    # DW_AT_abstract_origin
	.quad	.Ltmp1845               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x26c5:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1846               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x26d2:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1848               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x26df:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1849               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x26ec:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1850               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x26f9:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1851               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2706:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1852               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2713:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1853               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2720:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1854               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x272d:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
	.quad	.Ltmp1855               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x273a:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1859               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2748:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin35          # DW_AT_low_pc
	.long	.Lfunc_end35-.Lfunc_begin35 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string139        # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x275d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc363          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x276c:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc364          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x277b:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc365          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	25                      # DW_AT_decl_file
	.byte	66                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	42                      # Abbrev [42] 0x278a:0xd DW_TAG_GNU_call_site
	.long	9789                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1861               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2798:0x14b DW_TAG_subprogram
	.quad	.Lfunc_begin36          # DW_AT_low_pc
	.long	.Lfunc_end36-.Lfunc_begin36 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string140        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x27ad:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x27ba:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc366          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x27c9:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc367          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	41                      # Abbrev [41] 0x27d8:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	.Linfo_string95         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	19                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	41                      # Abbrev [41] 0x27e5:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	.Linfo_string96         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	20                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x27f2:0xb DW_TAG_variable
	.long	.Linfo_string98         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x27fd:0xf DW_TAG_variable
	.long	.Ldebug_loc368          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x280c:0xf DW_TAG_variable
	.long	.Ldebug_loc370          # DW_AT_location
	.long	.Linfo_string97         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x281b:0xf DW_TAG_variable
	.long	.Ldebug_loc378          # DW_AT_location
	.long	.Linfo_string99         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x282a:0x7e DW_TAG_lexical_block
	.long	.Ldebug_ranges33        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x282f:0xf DW_TAG_variable
	.long	.Ldebug_loc369          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x283e:0x69 DW_TAG_lexical_block
	.long	.Ldebug_ranges32        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2843:0xf DW_TAG_variable
	.long	.Ldebug_loc371          # DW_AT_location
	.long	.Linfo_string100        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2852:0xb DW_TAG_variable
	.long	.Linfo_string101        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	28                      # DW_AT_decl_line
	.long	540                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x285d:0xf DW_TAG_variable
	.long	.Ldebug_loc375          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	30                      # Abbrev [30] 0x286c:0x3a DW_TAG_inlined_subroutine
	.long	8153                    # DW_AT_abstract_origin
	.quad	.Ltmp1868               # DW_AT_low_pc
	.long	.Ltmp1872-.Ltmp1868     # DW_AT_high_pc
	.byte	6                       # DW_AT_call_file
	.byte	30                      # DW_AT_call_line
	.byte	25                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2880:0x5 DW_TAG_formal_parameter
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2885:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x288a:0x9 DW_TAG_variable
	.long	.Ldebug_loc372          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2893:0x9 DW_TAG_variable
	.long	.Ldebug_loc373          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x289c:0x9 DW_TAG_variable
	.long	.Ldebug_loc374          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x28a8:0x3a DW_TAG_lexical_block
	.quad	.Ltmp1878               # DW_AT_low_pc
	.long	.Ltmp1968-.Ltmp1878     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x28b5:0xf DW_TAG_variable
	.long	.Ldebug_loc376          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	37                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x28c4:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1878               # DW_AT_low_pc
	.long	.Ltmp1968-.Ltmp1878     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x28d1:0xf DW_TAG_variable
	.long	.Ldebug_loc377          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x28e3:0x3d DW_TAG_subprogram
	.quad	.Lfunc_begin37          # DW_AT_low_pc
	.long	.Lfunc_end37-.Lfunc_begin37 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	8153                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x28f6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc379          # DW_AT_location
	.long	8165                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x28ff:0x5 DW_TAG_variable
	.long	8176                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2904:0x9 DW_TAG_variable
	.long	.Ldebug_loc380          # DW_AT_location
	.long	8187                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x290d:0x9 DW_TAG_variable
	.long	.Ldebug_loc381          # DW_AT_location
	.long	8198                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2916:0x9 DW_TAG_variable
	.long	.Ldebug_loc382          # DW_AT_location
	.long	8209                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2920:0x121 DW_TAG_subprogram
	.quad	.Lfunc_begin38          # DW_AT_low_pc
	.long	.Lfunc_end38-.Lfunc_begin38 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string141        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2935:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc383          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2944:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc384          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2953:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc385          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2962:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc386          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x2971:0x74 DW_TAG_lexical_block
	.quad	.Ltmp1981               # DW_AT_low_pc
	.long	.Ltmp1995-.Ltmp1981     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x297e:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string98         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	56                      # DW_AT_decl_line
	.long	18668                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x298c:0xf DW_TAG_variable
	.long	.Ldebug_loc387          # DW_AT_location
	.long	.Linfo_string97         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	55                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x299b:0xf DW_TAG_variable
	.long	.Ldebug_loc389          # DW_AT_location
	.long	.Linfo_string168        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	59                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x29aa:0x3a DW_TAG_lexical_block
	.quad	.Ltmp1985               # DW_AT_low_pc
	.long	.Ltmp1995-.Ltmp1985     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x29b7:0xf DW_TAG_variable
	.long	.Ldebug_loc388          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x29c6:0x1d DW_TAG_lexical_block
	.quad	.Ltmp1985               # DW_AT_low_pc
	.long	.Ltmp1995-.Ltmp1985     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x29d3:0xf DW_TAG_variable
	.long	.Ldebug_loc390          # DW_AT_location
	.long	.Linfo_string169        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x29e5:0xd DW_TAG_GNU_call_site
	.long	10136                   # DW_AT_abstract_origin
	.quad	.Ltmp1985               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x29f2:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp1987               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x29ff:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp1989               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a0c:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp1991               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a19:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp1993               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2a26:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp1995               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2a33:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp1999               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2a41:0x6c DW_TAG_subprogram
	.quad	.Lfunc_begin39          # DW_AT_low_pc
	.long	.Lfunc_end39-.Lfunc_begin39 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string142        # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2a56:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc391          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2a65:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc392          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2a74:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc393          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	72                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2a83:0xf DW_TAG_variable
	.long	.Ldebug_loc394          # DW_AT_location
	.long	.Linfo_string96         # DW_AT_name
	.byte	6                       # DW_AT_decl_file
	.byte	73                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	40                      # Abbrev [40] 0x2a92:0xd DW_TAG_GNU_call_site
	.long	10528                   # DW_AT_abstract_origin
	.quad	.Ltmp2004               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2a9f:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2008               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x2aad:0xc1 DW_TAG_subprogram
	.quad	.Lfunc_begin40          # DW_AT_low_pc
	.long	.Lfunc_end40-.Lfunc_begin40 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	11118                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2ac0:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	11126                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2ac7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc395          # DW_AT_location
	.long	11137                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2ad0:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	11148                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2ad7:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	82
	.long	11159                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x2ade:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	88
	.long	11170                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2ae5:0x9 DW_TAG_variable
	.long	.Ldebug_loc398          # DW_AT_location
	.long	11192                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2aee:0x9 DW_TAG_variable
	.long	.Ldebug_loc399          # DW_AT_location
	.long	11181                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2af7:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Lfunc_begin40          # DW_AT_low_pc
	.long	.Ltmp2013-.Lfunc_begin40 # DW_AT_high_pc
	.byte	26                      # DW_AT_call_file
	.byte	33                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2b0b:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2b10:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2b15:0x9 DW_TAG_variable
	.long	.Ldebug_loc396          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2b1e:0x9 DW_TAG_variable
	.long	.Ldebug_loc397          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2b27:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x2b2d:0x40 DW_TAG_lexical_block
	.quad	.Ltmp2013               # DW_AT_low_pc
	.long	.Ltmp2028-.Ltmp2013     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2b3a:0x9 DW_TAG_variable
	.long	.Ldebug_loc400          # DW_AT_location
	.long	11204                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x2b43:0x29 DW_TAG_lexical_block
	.quad	.Ltmp2017               # DW_AT_low_pc
	.long	.Ltmp2026-.Ltmp2017     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2b50:0x9 DW_TAG_variable
	.long	.Ldebug_loc401          # DW_AT_location
	.long	11216                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2b59:0x9 DW_TAG_variable
	.long	.Ldebug_loc402          # DW_AT_location
	.long	11227                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2b62:0x9 DW_TAG_variable
	.long	.Ldebug_loc403          # DW_AT_location
	.long	11238                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x2b6e:0x86 DW_TAG_subprogram
	.long	.Linfo_string103        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x2b76:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2b81:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2b8c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2b97:0xb DW_TAG_formal_parameter
	.long	.Linfo_string104        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x2ba2:0xb DW_TAG_formal_parameter
	.long	.Linfo_string105        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2bad:0xb DW_TAG_variable
	.long	.Linfo_string106        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2bb8:0xb DW_TAG_variable
	.long	.Linfo_string107        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2bc3:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2bc4:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x2bcf:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x2bd0:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2bdb:0xb DW_TAG_variable
	.long	.Linfo_string55         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2be6:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2bf4:0x136 DW_TAG_subprogram
	.quad	.Lfunc_begin41          # DW_AT_low_pc
	.long	.Lfunc_end41-.Lfunc_begin41 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string143        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2c09:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc404          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2c18:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc405          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2c27:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc406          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	80                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2c36:0xcc DW_TAG_lexical_block
	.long	.Ldebug_ranges36        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2c3b:0xf DW_TAG_variable
	.long	.Ldebug_loc410          # DW_AT_location
	.long	.Linfo_string105        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	86                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2c4a:0xf DW_TAG_variable
	.long	.Ldebug_loc414          # DW_AT_location
	.long	.Linfo_string104        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	85                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x2c59:0xa8 DW_TAG_inlined_subroutine
	.long	11118                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges34        # DW_AT_ranges
	.byte	26                      # DW_AT_call_file
	.byte	89                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x2c65:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc411          # DW_AT_location
	.long	11126                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2c6e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc412          # DW_AT_location
	.long	11137                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2c77:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc413          # DW_AT_location
	.long	11148                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2c80:0x9 DW_TAG_variable
	.long	.Ldebug_loc408          # DW_AT_location
	.long	11181                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2c89:0x9 DW_TAG_variable
	.long	.Ldebug_loc409          # DW_AT_location
	.long	11192                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2c92:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2044               # DW_AT_low_pc
	.long	.Ltmp2049-.Ltmp2044     # DW_AT_high_pc
	.byte	26                      # DW_AT_call_file
	.byte	33                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2ca6:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2cab:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2cb0:0x9 DW_TAG_variable
	.long	.Ldebug_loc415          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2cb9:0x9 DW_TAG_variable
	.long	.Ldebug_loc416          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2cc2:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x2cc8:0x38 DW_TAG_lexical_block
	.long	.Ldebug_ranges35        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x2ccd:0x9 DW_TAG_variable
	.long	.Ldebug_loc407          # DW_AT_location
	.long	11204                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x2cd6:0x29 DW_TAG_lexical_block
	.quad	.Ltmp2054               # DW_AT_low_pc
	.long	.Ltmp2062-.Ltmp2054     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x2ce3:0x9 DW_TAG_variable
	.long	.Ldebug_loc417          # DW_AT_location
	.long	11216                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2cec:0x9 DW_TAG_variable
	.long	.Ldebug_loc418          # DW_AT_location
	.long	11227                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2cf5:0x9 DW_TAG_variable
	.long	.Ldebug_loc419          # DW_AT_location
	.long	11238                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x2d02:0xd DW_TAG_GNU_call_site
	.long	11252                   # DW_AT_abstract_origin
	.quad	.Ltmp2036               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x2d0f:0xd DW_TAG_GNU_call_site
	.long	11252                   # DW_AT_abstract_origin
	.quad	.Ltmp2038               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x2d1c:0xd DW_TAG_GNU_call_site
	.long	7077                    # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2068               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2d2a:0x50 DW_TAG_subprogram
	.quad	.Lfunc_begin42          # DW_AT_low_pc
	.long	.Lfunc_end42-.Lfunc_begin42 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string144        # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x2d3f:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc420          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2d4e:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc421          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2d5d:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc422          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	26                      # DW_AT_decl_file
	.byte	109                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	42                      # Abbrev [42] 0x2d6c:0xd DW_TAG_GNU_call_site
	.long	11252                   # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp2070               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	26                      # Abbrev [26] 0x2d7a:0x273 DW_TAG_subprogram
	.quad	.Lfunc_begin43          # DW_AT_low_pc
	.long	.Lfunc_end43-.Lfunc_begin43 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	86
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string145        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	41                      # Abbrev [41] 0x2d93:0xd DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	.Linfo_string44         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2da0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc423          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x2daf:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc424          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	45                      # Abbrev [45] 0x2dbe:0xc DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	.Linfo_string71         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	25                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2dca:0xb DW_TAG_variable
	.long	.Linfo_string171        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2dd5:0xf DW_TAG_variable
	.long	.Ldebug_loc439          # DW_AT_location
	.long	.Linfo_string172        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2de4:0xf DW_TAG_variable
	.long	.Ldebug_loc440          # DW_AT_location
	.long	.Linfo_string59         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2df3:0xf DW_TAG_variable
	.long	.Ldebug_loc441          # DW_AT_location
	.long	.Linfo_string58         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2e02:0xf DW_TAG_variable
	.long	.Ldebug_loc442          # DW_AT_location
	.long	.Linfo_string77         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	26                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	36                      # Abbrev [36] 0x2e11:0x102 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges37        # DW_AT_ranges
	.byte	27                      # DW_AT_call_file
	.byte	26                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2e1d:0x5 DW_TAG_formal_parameter
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2e22:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc425          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x2e2b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc426          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e34:0x9 DW_TAG_variable
	.long	.Ldebug_loc429          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e3d:0x9 DW_TAG_variable
	.long	.Ldebug_loc430          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e46:0x9 DW_TAG_variable
	.long	.Ldebug_loc431          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e4f:0x9 DW_TAG_variable
	.long	.Ldebug_loc434          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x2e58:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2074               # DW_AT_low_pc
	.long	.Ltmp2079-.Ltmp2074     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2e6c:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2e71:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e76:0x9 DW_TAG_variable
	.long	.Ldebug_loc427          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2e7f:0x9 DW_TAG_variable
	.long	.Ldebug_loc428          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2e88:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x2e8e:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2085               # DW_AT_low_pc
	.long	.Ltmp2087-.Ltmp2085     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x2ea2:0x9 DW_TAG_variable
	.long	.Ldebug_loc432          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2eab:0x9 DW_TAG_variable
	.long	.Ldebug_loc433          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2eb4:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x2eba:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2087               # DW_AT_low_pc
	.long	.Ltmp2090-.Ltmp2087     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x2ece:0x9 DW_TAG_variable
	.long	.Ldebug_loc435          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2ed7:0x9 DW_TAG_variable
	.long	.Ldebug_loc436          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2ee0:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x2ee6:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2090               # DW_AT_low_pc
	.long	.Ltmp2093-.Ltmp2090     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x2efa:0x9 DW_TAG_variable
	.long	.Ldebug_loc437          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2f03:0x9 DW_TAG_variable
	.long	.Ldebug_loc438          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x2f0c:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x2f13:0x7e DW_TAG_lexical_block
	.quad	.Ltmp2105               # DW_AT_low_pc
	.long	.Ltmp2151-.Ltmp2105     # DW_AT_high_pc
	.byte	28                      # Abbrev [28] 0x2f20:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	119
	.byte	0
	.long	.Linfo_string170        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	38                      # DW_AT_decl_line
	.long	18680                   # DW_AT_type
	.byte	24                      # Abbrev [24] 0x2f2e:0xb DW_TAG_variable
	.long	.Linfo_string173        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	35                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2f39:0xf DW_TAG_variable
	.long	.Ldebug_loc443          # DW_AT_location
	.long	.Linfo_string174        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	36                      # DW_AT_decl_line
	.long	524                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2f48:0x48 DW_TAG_lexical_block
	.long	.Ldebug_ranges39        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2f4d:0xf DW_TAG_variable
	.long	.Ldebug_loc444          # DW_AT_location
	.long	.Linfo_string82         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x2f5c:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges38        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2f61:0xf DW_TAG_variable
	.long	.Ldebug_loc445          # DW_AT_location
	.long	.Linfo_string66         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2f70:0xf DW_TAG_variable
	.long	.Ldebug_loc446          # DW_AT_location
	.long	.Linfo_string50         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2f7f:0xf DW_TAG_variable
	.long	.Ldebug_loc447          # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x2f91:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges40        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x2f96:0xf DW_TAG_variable
	.long	.Ldebug_loc448          # DW_AT_location
	.long	.Linfo_string66         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	60                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2fa5:0xf DW_TAG_variable
	.long	.Ldebug_loc449          # DW_AT_location
	.long	.Linfo_string51         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x2fb4:0xf DW_TAG_variable
	.long	.Ldebug_loc450          # DW_AT_location
	.long	.Linfo_string50         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	61                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x2fc4:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2185               # DW_AT_low_pc
	.long	.Ltmp2187-.Ltmp2185     # DW_AT_high_pc
	.byte	27                      # DW_AT_call_file
	.byte	71                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x2fd8:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x2fdd:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x2fe2:0x9 DW_TAG_variable
	.long	.Ldebug_loc451          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x2fed:0x7a DW_TAG_subprogram
	.quad	.Lfunc_begin44          # DW_AT_low_pc
	.long	.Lfunc_end44-.Lfunc_begin44 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string146        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3002:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc452          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3011:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc453          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3020:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc454          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	75                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	35                      # Abbrev [35] 0x302f:0x1d DW_TAG_lexical_block
	.quad	.Ltmp2194               # DW_AT_low_pc
	.long	.Ltmp2199-.Ltmp2194     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x303c:0xf DW_TAG_variable
	.long	.Ldebug_loc455          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	27                      # DW_AT_decl_file
	.byte	78                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x304c:0xd DW_TAG_GNU_call_site
	.long	11642                   # DW_AT_abstract_origin
	.quad	.Ltmp2195               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x3059:0xd DW_TAG_GNU_call_site
	.long	12269                   # DW_AT_abstract_origin
	.quad	.Ltmp2197               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x3067:0x1b5 DW_TAG_subprogram
	.quad	.Lfunc_begin45          # DW_AT_low_pc
	.long	.Lfunc_end45-.Lfunc_begin45 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	12828                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x307a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	12840                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3081:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc456          # DW_AT_location
	.long	12851                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x308a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc457          # DW_AT_location
	.long	12862                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3093:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	12873                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3099:0x9 DW_TAG_variable
	.long	.Ldebug_loc474          # DW_AT_location
	.long	12884                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x30a2:0x9 DW_TAG_variable
	.long	.Ldebug_loc475          # DW_AT_location
	.long	12895                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x30ab:0x106 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges41        # DW_AT_ranges
	.byte	28                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x30b7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc458          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x30c0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc459          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x30c9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc460          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x30d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc463          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x30db:0x9 DW_TAG_variable
	.long	.Ldebug_loc464          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x30e4:0x9 DW_TAG_variable
	.long	.Ldebug_loc465          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x30ed:0x9 DW_TAG_variable
	.long	.Ldebug_loc468          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x30f6:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2205               # DW_AT_low_pc
	.long	.Ltmp2210-.Ltmp2205     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x310a:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x310f:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3114:0x9 DW_TAG_variable
	.long	.Ldebug_loc461          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x311d:0x9 DW_TAG_variable
	.long	.Ldebug_loc462          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3126:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x312c:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2217               # DW_AT_low_pc
	.long	.Ltmp2219-.Ltmp2217     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3140:0x9 DW_TAG_variable
	.long	.Ldebug_loc466          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3149:0x9 DW_TAG_variable
	.long	.Ldebug_loc467          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3152:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3158:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2219               # DW_AT_low_pc
	.long	.Ltmp2222-.Ltmp2219     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x316c:0x9 DW_TAG_variable
	.long	.Ldebug_loc469          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3175:0x9 DW_TAG_variable
	.long	.Ldebug_loc470          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x317e:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3184:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2222               # DW_AT_low_pc
	.long	.Ltmp2225-.Ltmp2222     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3198:0x9 DW_TAG_variable
	.long	.Ldebug_loc471          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31a1:0x9 DW_TAG_variable
	.long	.Ldebug_loc472          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x31aa:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x31b1:0x42 DW_TAG_lexical_block
	.long	.Ldebug_ranges43        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x31b6:0x9 DW_TAG_variable
	.long	.Ldebug_loc473          # DW_AT_location
	.long	12907                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x31bf:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges42        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x31c4:0x9 DW_TAG_variable
	.long	.Ldebug_loc476          # DW_AT_location
	.long	12919                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31cd:0x9 DW_TAG_variable
	.long	.Ldebug_loc477          # DW_AT_location
	.long	12930                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31d6:0x9 DW_TAG_variable
	.long	.Ldebug_loc478          # DW_AT_location
	.long	12941                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31df:0x9 DW_TAG_variable
	.long	.Ldebug_loc479          # DW_AT_location
	.long	12952                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x31e8:0x9 DW_TAG_variable
	.long	.Ldebug_loc480          # DW_AT_location
	.long	12963                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x31f3:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2263               # DW_AT_low_pc
	.long	.Ltmp2265-.Ltmp2263     # DW_AT_high_pc
	.byte	28                      # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3207:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x320c:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3211:0x9 DW_TAG_variable
	.long	.Ldebug_loc481          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x321c:0x95 DW_TAG_subprogram
	.long	.Linfo_string108        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3228:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3233:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x323e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3249:0xb DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3254:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x325f:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x326a:0x46 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x326b:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3276:0x39 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3277:0xb DW_TAG_variable
	.long	.Linfo_string109        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	34                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3282:0xb DW_TAG_variable
	.long	.Linfo_string110        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	33                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x328d:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3298:0xb DW_TAG_variable
	.long	.Linfo_string25         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x32a3:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x32b1:0x248 DW_TAG_subprogram
	.quad	.Lfunc_begin46          # DW_AT_low_pc
	.long	.Lfunc_end46-.Lfunc_begin46 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string147        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x32c6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc482          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x32d5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc483          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x32e4:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc484          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x32f3:0x1be DW_TAG_lexical_block
	.long	.Ldebug_ranges48        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x32f8:0xf DW_TAG_variable
	.long	.Ldebug_loc494          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	28                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3307:0x1a9 DW_TAG_inlined_subroutine
	.long	12828                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges44        # DW_AT_ranges
	.byte	28                      # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3313:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc491          # DW_AT_location
	.long	12840                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x331c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc490          # DW_AT_location
	.long	12851                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3325:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc489          # DW_AT_location
	.long	12862                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x332e:0x9 DW_TAG_variable
	.long	.Ldebug_loc488          # DW_AT_location
	.long	12873                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3337:0x9 DW_TAG_variable
	.long	.Ldebug_loc506          # DW_AT_location
	.long	12884                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3340:0x9 DW_TAG_variable
	.long	.Ldebug_loc507          # DW_AT_location
	.long	12895                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3349:0x42 DW_TAG_lexical_block
	.long	.Ldebug_ranges46        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x334e:0x9 DW_TAG_variable
	.long	.Ldebug_loc505          # DW_AT_location
	.long	12907                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3357:0x33 DW_TAG_lexical_block
	.long	.Ldebug_ranges45        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x335c:0x9 DW_TAG_variable
	.long	.Ldebug_loc508          # DW_AT_location
	.long	12919                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3365:0x9 DW_TAG_variable
	.long	.Ldebug_loc509          # DW_AT_location
	.long	12930                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x336e:0x9 DW_TAG_variable
	.long	.Ldebug_loc510          # DW_AT_location
	.long	12941                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3377:0x9 DW_TAG_variable
	.long	.Ldebug_loc511          # DW_AT_location
	.long	12952                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3380:0x9 DW_TAG_variable
	.long	.Ldebug_loc512          # DW_AT_location
	.long	12963                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x338b:0x101 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges47        # DW_AT_ranges
	.byte	28                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3397:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc487          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33a0:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc486          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x33a9:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc485          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33b2:0x9 DW_TAG_variable
	.long	.Ldebug_loc495          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33bb:0x9 DW_TAG_variable
	.long	.Ldebug_loc496          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33c4:0x9 DW_TAG_variable
	.long	.Ldebug_loc497          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33cd:0x9 DW_TAG_variable
	.long	.Ldebug_loc500          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x33d6:0x31 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2272               # DW_AT_low_pc
	.long	.Ltmp2277-.Ltmp2272     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x33ea:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33ef:0x9 DW_TAG_variable
	.long	.Ldebug_loc492          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x33f8:0x9 DW_TAG_variable
	.long	.Ldebug_loc493          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3401:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3407:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2291               # DW_AT_low_pc
	.long	.Ltmp2293-.Ltmp2291     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x341b:0x9 DW_TAG_variable
	.long	.Ldebug_loc498          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3424:0x9 DW_TAG_variable
	.long	.Ldebug_loc499          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x342d:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3433:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2293               # DW_AT_low_pc
	.long	.Ltmp2295-.Ltmp2293     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3447:0x9 DW_TAG_variable
	.long	.Ldebug_loc501          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3450:0x9 DW_TAG_variable
	.long	.Ldebug_loc502          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3459:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x345f:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2295               # DW_AT_low_pc
	.long	.Ltmp2298-.Ltmp2295     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3473:0x9 DW_TAG_variable
	.long	.Ldebug_loc503          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x347c:0x9 DW_TAG_variable
	.long	.Ldebug_loc504          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3485:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x348c:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2329               # DW_AT_low_pc
	.long	.Ltmp2331-.Ltmp2329     # DW_AT_high_pc
	.byte	28                      # DW_AT_call_file
	.byte	39                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x34a0:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x34a5:0x9 DW_TAG_variable
	.long	.Ldebug_loc513          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x34b1:0x3a DW_TAG_inlined_subroutine
	.long	7013                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges49        # DW_AT_ranges
	.byte	28                      # DW_AT_call_file
	.byte	50                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x34bd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc515          # DW_AT_location
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x34c6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc516          # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x34cf:0x9 DW_TAG_variable
	.long	.Ldebug_loc514          # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x34d8:0x9 DW_TAG_variable
	.long	.Ldebug_loc517          # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x34e1:0x9 DW_TAG_variable
	.long	.Ldebug_loc518          # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x34eb:0xd DW_TAG_GNU_call_site
	.long	12977                   # DW_AT_abstract_origin
	.quad	.Ltmp2279               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x34f9:0x191 DW_TAG_subprogram
	.quad	.Lfunc_begin47          # DW_AT_low_pc
	.long	.Lfunc_end47-.Lfunc_begin47 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	13962                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x350c:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	13974                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3513:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc519          # DW_AT_location
	.long	13985                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x351c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc520          # DW_AT_location
	.long	13996                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3525:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	14007                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x352b:0x9 DW_TAG_variable
	.long	.Ldebug_loc536          # DW_AT_location
	.long	14018                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3534:0x9 DW_TAG_variable
	.long	.Ldebug_loc538          # DW_AT_location
	.long	14029                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x353d:0x106 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges50        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3549:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc521          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3552:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc522          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x355b:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc523          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3564:0x9 DW_TAG_variable
	.long	.Ldebug_loc526          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x356d:0x9 DW_TAG_variable
	.long	.Ldebug_loc527          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3576:0x9 DW_TAG_variable
	.long	.Ldebug_loc528          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x357f:0x9 DW_TAG_variable
	.long	.Ldebug_loc531          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3588:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2375               # DW_AT_low_pc
	.long	.Ltmp2380-.Ltmp2375     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x359c:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x35a1:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35a6:0x9 DW_TAG_variable
	.long	.Ldebug_loc524          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35af:0x9 DW_TAG_variable
	.long	.Ldebug_loc525          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x35b8:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x35be:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2387               # DW_AT_low_pc
	.long	.Ltmp2389-.Ltmp2387     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x35d2:0x9 DW_TAG_variable
	.long	.Ldebug_loc529          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x35db:0x9 DW_TAG_variable
	.long	.Ldebug_loc530          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x35e4:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x35ea:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2389               # DW_AT_low_pc
	.long	.Ltmp2392-.Ltmp2389     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x35fe:0x9 DW_TAG_variable
	.long	.Ldebug_loc532          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3607:0x9 DW_TAG_variable
	.long	.Ldebug_loc533          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3610:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3616:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2392               # DW_AT_low_pc
	.long	.Ltmp2395-.Ltmp2392     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x362a:0x9 DW_TAG_variable
	.long	.Ldebug_loc534          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3633:0x9 DW_TAG_variable
	.long	.Ldebug_loc535          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x363c:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x3643:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges52        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3648:0x9 DW_TAG_variable
	.long	.Ldebug_loc537          # DW_AT_location
	.long	14041                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3651:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges51        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3656:0x9 DW_TAG_variable
	.long	.Ldebug_loc539          # DW_AT_location
	.long	14053                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3661:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2421               # DW_AT_low_pc
	.long	.Ltmp2423-.Ltmp2421     # DW_AT_high_pc
	.byte	29                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3675:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x367a:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x367f:0x9 DW_TAG_variable
	.long	.Ldebug_loc540          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x368a:0x69 DW_TAG_subprogram
	.long	.Linfo_string111        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3696:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x36a1:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x36ac:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x36b7:0xb DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x36c2:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x36cd:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x36d8:0x1a DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x36d9:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x36e4:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x36e5:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x36f3:0x224 DW_TAG_subprogram
	.quad	.Lfunc_begin48          # DW_AT_low_pc
	.long	.Lfunc_end48-.Lfunc_begin48 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string148        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3708:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc541          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3717:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc542          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3726:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc543          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3735:0x19a DW_TAG_lexical_block
	.long	.Ldebug_ranges57        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x373a:0xf DW_TAG_variable
	.long	.Ldebug_loc553          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	29                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3749:0x185 DW_TAG_inlined_subroutine
	.long	13962                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges53        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	44                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3755:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc550          # DW_AT_location
	.long	13974                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x375e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc549          # DW_AT_location
	.long	13985                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3767:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc548          # DW_AT_location
	.long	13996                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3770:0x9 DW_TAG_variable
	.long	.Ldebug_loc547          # DW_AT_location
	.long	14007                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3779:0x9 DW_TAG_variable
	.long	.Ldebug_loc564          # DW_AT_location
	.long	14018                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3782:0x9 DW_TAG_variable
	.long	.Ldebug_loc566          # DW_AT_location
	.long	14029                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x378b:0x1e DW_TAG_lexical_block
	.long	.Ldebug_ranges55        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3790:0x9 DW_TAG_variable
	.long	.Ldebug_loc565          # DW_AT_location
	.long	14041                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3799:0xf DW_TAG_lexical_block
	.long	.Ldebug_ranges54        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x379e:0x9 DW_TAG_variable
	.long	.Ldebug_loc567          # DW_AT_location
	.long	14053                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x37a9:0x101 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges56        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x37b5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc546          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x37be:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc545          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x37c7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc544          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x37d0:0x9 DW_TAG_variable
	.long	.Ldebug_loc554          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x37d9:0x9 DW_TAG_variable
	.long	.Ldebug_loc555          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x37e2:0x9 DW_TAG_variable
	.long	.Ldebug_loc556          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x37eb:0x9 DW_TAG_variable
	.long	.Ldebug_loc559          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x37f4:0x31 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2430               # DW_AT_low_pc
	.long	.Ltmp2435-.Ltmp2430     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3808:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x380d:0x9 DW_TAG_variable
	.long	.Ldebug_loc551          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3816:0x9 DW_TAG_variable
	.long	.Ldebug_loc552          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x381f:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3825:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2449               # DW_AT_low_pc
	.long	.Ltmp2451-.Ltmp2449     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3839:0x9 DW_TAG_variable
	.long	.Ldebug_loc557          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3842:0x9 DW_TAG_variable
	.long	.Ldebug_loc558          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x384b:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3851:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2451               # DW_AT_low_pc
	.long	.Ltmp2454-.Ltmp2451     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3865:0x9 DW_TAG_variable
	.long	.Ldebug_loc560          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x386e:0x9 DW_TAG_variable
	.long	.Ldebug_loc561          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3877:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x387d:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2454               # DW_AT_low_pc
	.long	.Ltmp2457-.Ltmp2454     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3891:0x9 DW_TAG_variable
	.long	.Ldebug_loc562          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x389a:0x9 DW_TAG_variable
	.long	.Ldebug_loc563          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x38a3:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x38aa:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2480               # DW_AT_low_pc
	.long	.Ltmp2482-.Ltmp2480     # DW_AT_high_pc
	.byte	29                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x38be:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38c3:0x9 DW_TAG_variable
	.long	.Ldebug_loc568          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x38cf:0x3a DW_TAG_inlined_subroutine
	.long	7013                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges58        # DW_AT_ranges
	.byte	29                      # DW_AT_call_file
	.byte	48                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x38db:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc570          # DW_AT_location
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x38e4:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc571          # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38ed:0x9 DW_TAG_variable
	.long	.Ldebug_loc569          # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38f6:0x9 DW_TAG_variable
	.long	.Ldebug_loc572          # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x38ff:0x9 DW_TAG_variable
	.long	.Ldebug_loc573          # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3909:0xd DW_TAG_GNU_call_site
	.long	14067                   # DW_AT_abstract_origin
	.quad	.Ltmp2437               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x3917:0x13e DW_TAG_subprogram
	.quad	.Lfunc_begin49          # DW_AT_low_pc
	.long	.Lfunc_end49-.Lfunc_begin49 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	14933                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x392a:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	14945                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x3931:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	84
	.long	14956                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3938:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc574          # DW_AT_location
	.long	14967                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3941:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	14978                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3947:0x9 DW_TAG_variable
	.long	.Ldebug_loc589          # DW_AT_location
	.long	14989                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3950:0x104 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges59        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	38                      # Abbrev [38] 0x395c:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3963:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc575          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x396c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc576          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3975:0x9 DW_TAG_variable
	.long	.Ldebug_loc579          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x397e:0x9 DW_TAG_variable
	.long	.Ldebug_loc580          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3987:0x9 DW_TAG_variable
	.long	.Ldebug_loc581          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3990:0x9 DW_TAG_variable
	.long	.Ldebug_loc584          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3999:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2526               # DW_AT_low_pc
	.long	.Ltmp2531-.Ltmp2526     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x39ad:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x39b2:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x39b7:0x9 DW_TAG_variable
	.long	.Ldebug_loc577          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x39c0:0x9 DW_TAG_variable
	.long	.Ldebug_loc578          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x39c9:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x39cf:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2539               # DW_AT_low_pc
	.long	.Ltmp2541-.Ltmp2539     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x39e3:0x9 DW_TAG_variable
	.long	.Ldebug_loc582          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x39ec:0x9 DW_TAG_variable
	.long	.Ldebug_loc583          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x39f5:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x39fb:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2541               # DW_AT_low_pc
	.long	.Ltmp2544-.Ltmp2541     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3a0f:0x9 DW_TAG_variable
	.long	.Ldebug_loc585          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3a18:0x9 DW_TAG_variable
	.long	.Ldebug_loc586          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3a21:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3a27:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2544               # DW_AT_low_pc
	.long	.Ltmp2547-.Ltmp2544     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3a3b:0x9 DW_TAG_variable
	.long	.Ldebug_loc587          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3a44:0x9 DW_TAG_variable
	.long	.Ldebug_loc588          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3a4d:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x3a55:0x44 DW_TAG_subprogram
	.long	.Linfo_string112        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3a61:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3a6c:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3a77:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a82:0xb DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3a8d:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3a99:0x1da DW_TAG_subprogram
	.quad	.Lfunc_begin50          # DW_AT_low_pc
	.long	.Lfunc_end50-.Lfunc_begin50 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string149        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3aae:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc590          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3abd:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc591          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3acc:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc592          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	98                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3adb:0x150 DW_TAG_lexical_block
	.long	.Ldebug_ranges62        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x3ae0:0xf DW_TAG_variable
	.long	.Ldebug_loc602          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	30                      # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3aef:0x13b DW_TAG_inlined_subroutine
	.long	14933                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges60        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	101                     # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3afb:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc599          # DW_AT_location
	.long	14945                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b04:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc598          # DW_AT_location
	.long	14956                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b0d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc597          # DW_AT_location
	.long	14967                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b16:0x9 DW_TAG_variable
	.long	.Ldebug_loc596          # DW_AT_location
	.long	14978                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b1f:0x9 DW_TAG_variable
	.long	.Ldebug_loc613          # DW_AT_location
	.long	14989                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3b28:0x101 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges61        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3b34:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc595          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b3d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc594          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3b46:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc593          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b4f:0x9 DW_TAG_variable
	.long	.Ldebug_loc603          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b58:0x9 DW_TAG_variable
	.long	.Ldebug_loc604          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b61:0x9 DW_TAG_variable
	.long	.Ldebug_loc605          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b6a:0x9 DW_TAG_variable
	.long	.Ldebug_loc608          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3b73:0x31 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2565               # DW_AT_low_pc
	.long	.Ltmp2570-.Ltmp2565     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3b87:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b8c:0x9 DW_TAG_variable
	.long	.Ldebug_loc600          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3b95:0x9 DW_TAG_variable
	.long	.Ldebug_loc601          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3b9e:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3ba4:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2584               # DW_AT_low_pc
	.long	.Ltmp2586-.Ltmp2584     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3bb8:0x9 DW_TAG_variable
	.long	.Ldebug_loc606          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3bc1:0x9 DW_TAG_variable
	.long	.Ldebug_loc607          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3bca:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3bd0:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2586               # DW_AT_low_pc
	.long	.Ltmp2589-.Ltmp2586     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3be4:0x9 DW_TAG_variable
	.long	.Ldebug_loc609          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3bed:0x9 DW_TAG_variable
	.long	.Ldebug_loc610          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3bf6:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3bfc:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2589               # DW_AT_low_pc
	.long	.Ltmp2592-.Ltmp2589     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3c10:0x9 DW_TAG_variable
	.long	.Ldebug_loc611          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c19:0x9 DW_TAG_variable
	.long	.Ldebug_loc612          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3c22:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x3c2b:0x3a DW_TAG_inlined_subroutine
	.long	7013                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges63        # DW_AT_ranges
	.byte	30                      # DW_AT_call_file
	.byte	105                     # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3c37:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc615          # DW_AT_location
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3c40:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc616          # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c49:0x9 DW_TAG_variable
	.long	.Ldebug_loc614          # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c52:0x9 DW_TAG_variable
	.long	.Ldebug_loc617          # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3c5b:0x9 DW_TAG_variable
	.long	.Ldebug_loc618          # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x3c65:0xd DW_TAG_GNU_call_site
	.long	15001                   # DW_AT_abstract_origin
	.quad	.Ltmp2572               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x3c73:0x1ab DW_TAG_subprogram
	.quad	.Lfunc_begin51          # DW_AT_low_pc
	.long	.Lfunc_end51-.Lfunc_begin51 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	15902                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x3c86:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	15914                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3c8d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc619          # DW_AT_location
	.long	15925                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3c96:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc620          # DW_AT_location
	.long	15936                   # DW_AT_abstract_origin
	.byte	46                      # Abbrev [46] 0x3c9f:0x6 DW_TAG_variable
	.byte	0                       # DW_AT_const_value
	.long	15947                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3ca5:0x9 DW_TAG_variable
	.long	.Ldebug_loc637          # DW_AT_location
	.long	15958                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cae:0x9 DW_TAG_variable
	.long	.Ldebug_loc638          # DW_AT_location
	.long	15969                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3cb7:0x106 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges64        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3cc3:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc621          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3ccc:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc622          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3cd5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc623          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cde:0x9 DW_TAG_variable
	.long	.Ldebug_loc626          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3ce7:0x9 DW_TAG_variable
	.long	.Ldebug_loc627          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cf0:0x9 DW_TAG_variable
	.long	.Ldebug_loc628          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3cf9:0x9 DW_TAG_variable
	.long	.Ldebug_loc631          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3d02:0x36 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2649               # DW_AT_low_pc
	.long	.Ltmp2654-.Ltmp2649     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3d16:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3d1b:0x5 DW_TAG_formal_parameter
	.long	4136                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d20:0x9 DW_TAG_variable
	.long	.Ldebug_loc624          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d29:0x9 DW_TAG_variable
	.long	.Ldebug_loc625          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d32:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3d38:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2661               # DW_AT_low_pc
	.long	.Ltmp2663-.Ltmp2661     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3d4c:0x9 DW_TAG_variable
	.long	.Ldebug_loc629          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d55:0x9 DW_TAG_variable
	.long	.Ldebug_loc630          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d5e:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3d64:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2663               # DW_AT_low_pc
	.long	.Ltmp2666-.Ltmp2663     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3d78:0x9 DW_TAG_variable
	.long	.Ldebug_loc632          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3d81:0x9 DW_TAG_variable
	.long	.Ldebug_loc633          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3d8a:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3d90:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2666               # DW_AT_low_pc
	.long	.Ltmp2669-.Ltmp2666     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3da4:0x9 DW_TAG_variable
	.long	.Ldebug_loc634          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3dad:0x9 DW_TAG_variable
	.long	.Ldebug_loc635          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3db6:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x3dbd:0x38 DW_TAG_lexical_block
	.quad	.Ltmp2677               # DW_AT_low_pc
	.long	.Ltmp2706-.Ltmp2677     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x3dca:0x9 DW_TAG_variable
	.long	.Ldebug_loc636          # DW_AT_location
	.long	15981                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x3dd3:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges65        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x3dd8:0x9 DW_TAG_variable
	.long	.Ldebug_loc639          # DW_AT_location
	.long	15993                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3de1:0x9 DW_TAG_variable
	.long	.Ldebug_loc640          # DW_AT_location
	.long	16004                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3dea:0x9 DW_TAG_variable
	.long	.Ldebug_loc641          # DW_AT_location
	.long	16015                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3df5:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2706               # DW_AT_low_pc
	.long	.Ltmp2708-.Ltmp2706     # DW_AT_high_pc
	.byte	31                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3e09:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x3e0e:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3e13:0x9 DW_TAG_variable
	.long	.Ldebug_loc642          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x3e1e:0x7f DW_TAG_subprogram
	.long	.Linfo_string113        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	935                     # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x3e2a:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3e35:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x3e40:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	21                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e4b:0xb DW_TAG_variable
	.long	.Linfo_string71         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	22                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e56:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e61:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	23                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3e6c:0x30 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3e6d:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	29                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	44                      # Abbrev [44] 0x3e78:0x23 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x3e79:0xb DW_TAG_variable
	.long	.Linfo_string66         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	30                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e84:0xb DW_TAG_variable
	.long	.Linfo_string51         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	32                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x3e8f:0xb DW_TAG_variable
	.long	.Linfo_string50         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	31                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x3e9d:0x23e DW_TAG_subprogram
	.quad	.Lfunc_begin52          # DW_AT_low_pc
	.long	.Lfunc_end52-.Lfunc_begin52 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string150        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x3eb2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc643          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3ec1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc644          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x3ed0:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc645          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	41                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x3edf:0x1b4 DW_TAG_lexical_block
	.long	.Ldebug_ranges69        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x3ee4:0xf DW_TAG_variable
	.long	.Ldebug_loc655          # DW_AT_location
	.long	.Linfo_string166        # DW_AT_name
	.byte	31                      # DW_AT_decl_file
	.byte	44                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x3ef3:0x19f DW_TAG_inlined_subroutine
	.long	15902                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges66        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	44                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3eff:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc652          # DW_AT_location
	.long	15914                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f08:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc651          # DW_AT_location
	.long	15925                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f11:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc650          # DW_AT_location
	.long	15936                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f1a:0x9 DW_TAG_variable
	.long	.Ldebug_loc649          # DW_AT_location
	.long	15947                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f23:0x9 DW_TAG_variable
	.long	.Ldebug_loc667          # DW_AT_location
	.long	15958                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f2c:0x9 DW_TAG_variable
	.long	.Ldebug_loc668          # DW_AT_location
	.long	15969                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x3f35:0x101 DW_TAG_inlined_subroutine
	.long	4181                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges67        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	23                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x3f41:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc648          # DW_AT_location
	.long	4193                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f4a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc647          # DW_AT_location
	.long	4204                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x3f53:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc646          # DW_AT_location
	.long	4215                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f5c:0x9 DW_TAG_variable
	.long	.Ldebug_loc656          # DW_AT_location
	.long	4237                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f65:0x9 DW_TAG_variable
	.long	.Ldebug_loc657          # DW_AT_location
	.long	4248                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f6e:0x9 DW_TAG_variable
	.long	.Ldebug_loc658          # DW_AT_location
	.long	4259                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f77:0x9 DW_TAG_variable
	.long	.Ldebug_loc661          # DW_AT_location
	.long	4270                    # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x3f80:0x31 DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2715               # DW_AT_low_pc
	.long	.Ltmp2720-.Ltmp2715     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	36                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x3f94:0x5 DW_TAG_formal_parameter
	.long	4125                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3f99:0x9 DW_TAG_variable
	.long	.Ldebug_loc653          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3fa2:0x9 DW_TAG_variable
	.long	.Ldebug_loc654          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3fab:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3fb1:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2734               # DW_AT_low_pc
	.long	.Ltmp2736-.Ltmp2734     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	45                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3fc5:0x9 DW_TAG_variable
	.long	.Ldebug_loc659          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3fce:0x9 DW_TAG_variable
	.long	.Ldebug_loc660          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x3fd7:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x3fdd:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2736               # DW_AT_low_pc
	.long	.Ltmp2738-.Ltmp2736     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	46                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x3ff1:0x9 DW_TAG_variable
	.long	.Ldebug_loc662          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x3ffa:0x9 DW_TAG_variable
	.long	.Ldebug_loc663          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x4003:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4009:0x2c DW_TAG_inlined_subroutine
	.long	4117                    # DW_AT_abstract_origin
	.quad	.Ltmp2738               # DW_AT_low_pc
	.long	.Ltmp2741-.Ltmp2738     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	47                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	33                      # Abbrev [33] 0x401d:0x9 DW_TAG_variable
	.long	.Ldebug_loc664          # DW_AT_location
	.long	4147                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4026:0x9 DW_TAG_variable
	.long	.Ldebug_loc665          # DW_AT_location
	.long	4158                    # DW_AT_abstract_origin
	.byte	43                      # Abbrev [43] 0x402f:0x5 DW_TAG_variable
	.long	4169                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x4036:0x38 DW_TAG_lexical_block
	.quad	.Ltmp2749               # DW_AT_low_pc
	.long	.Ltmp2780-.Ltmp2749     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x4043:0x9 DW_TAG_variable
	.long	.Ldebug_loc666          # DW_AT_location
	.long	15981                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x404c:0x21 DW_TAG_lexical_block
	.long	.Ldebug_ranges68        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x4051:0x9 DW_TAG_variable
	.long	.Ldebug_loc669          # DW_AT_location
	.long	15993                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x405a:0x9 DW_TAG_variable
	.long	.Ldebug_loc670          # DW_AT_location
	.long	16004                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4063:0x9 DW_TAG_variable
	.long	.Ldebug_loc671          # DW_AT_location
	.long	16015                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x406e:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2780               # DW_AT_low_pc
	.long	.Ltmp2782-.Ltmp2780     # DW_AT_high_pc
	.byte	31                      # DW_AT_call_file
	.byte	37                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4082:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4087:0x9 DW_TAG_variable
	.long	.Ldebug_loc672          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x4093:0x3a DW_TAG_inlined_subroutine
	.long	7013                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges70        # DW_AT_ranges
	.byte	31                      # DW_AT_call_file
	.byte	48                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x409f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc674          # DW_AT_location
	.long	7021                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x40a8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc675          # DW_AT_location
	.long	7032                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x40b1:0x9 DW_TAG_variable
	.long	.Ldebug_loc673          # DW_AT_location
	.long	7043                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x40ba:0x9 DW_TAG_variable
	.long	.Ldebug_loc676          # DW_AT_location
	.long	7054                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x40c3:0x9 DW_TAG_variable
	.long	.Ldebug_loc677          # DW_AT_location
	.long	7065                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x40cd:0xd DW_TAG_GNU_call_site
	.long	16029                   # DW_AT_abstract_origin
	.quad	.Ltmp2722               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x40db:0x192 DW_TAG_subprogram
	.quad	.Lfunc_begin53          # DW_AT_low_pc
	.long	.Lfunc_end53-.Lfunc_begin53 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	17005                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x40ee:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	85
	.long	17017                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x40f5:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc678          # DW_AT_location
	.long	17028                   # DW_AT_abstract_origin
	.byte	38                      # Abbrev [38] 0x40fe:0x7 DW_TAG_formal_parameter
	.byte	1                       # DW_AT_location
	.byte	81
	.long	17039                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4105:0x9 DW_TAG_variable
	.long	.Ldebug_loc682          # DW_AT_location
	.long	17061                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x410e:0x9 DW_TAG_variable
	.long	.Ldebug_loc684          # DW_AT_location
	.long	17050                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4117:0x103 DW_TAG_inlined_subroutine
	.long	812                     # DW_AT_abstract_origin
	.long	.Ldebug_ranges71        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	12                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4123:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc679          # DW_AT_location
	.long	824                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x412c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc680          # DW_AT_location
	.long	835                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4135:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc681          # DW_AT_location
	.long	846                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x413e:0x9 DW_TAG_variable
	.long	.Ldebug_loc685          # DW_AT_location
	.long	857                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4147:0x9 DW_TAG_variable
	.long	.Ldebug_loc686          # DW_AT_location
	.long	868                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4150:0x9 DW_TAG_variable
	.long	.Ldebug_loc687          # DW_AT_location
	.long	879                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4159:0x9 DW_TAG_variable
	.long	.Ldebug_loc688          # DW_AT_location
	.long	890                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4162:0x9 DW_TAG_variable
	.long	.Ldebug_loc696          # DW_AT_location
	.long	901                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x416b:0x9 DW_TAG_variable
	.long	.Ldebug_loc698          # DW_AT_location
	.long	912                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4174:0x9 DW_TAG_variable
	.long	.Ldebug_loc699          # DW_AT_location
	.long	923                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x417d:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp2835               # DW_AT_low_pc
	.long	.Ltmp2837-.Ltmp2835     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4191:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc690          # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x419a:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc689          # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x41a4:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp2837               # DW_AT_low_pc
	.long	.Ltmp2839-.Ltmp2837     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x41b8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc692          # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x41c1:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc691          # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x41cb:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp2839               # DW_AT_low_pc
	.long	.Ltmp2840-.Ltmp2839     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x41df:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc694          # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x41e8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc693          # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x41f2:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp2840               # DW_AT_low_pc
	.long	.Ltmp2841-.Ltmp2840     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4206:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc697          # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x420f:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc695          # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x421a:0x2a DW_TAG_lexical_block
	.long	.Ldebug_ranges73        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x421f:0x9 DW_TAG_variable
	.long	.Ldebug_loc683          # DW_AT_location
	.long	17073                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4228:0x1b DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges72        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	17                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4234:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4239:0x9 DW_TAG_variable
	.long	.Ldebug_loc701          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4244:0x28 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2852               # DW_AT_low_pc
	.long	.Ltmp2854-.Ltmp2852     # DW_AT_high_pc
	.byte	32                      # DW_AT_call_file
	.byte	20                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4258:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	31                      # Abbrev [31] 0x425d:0x5 DW_TAG_formal_parameter
	.long	1046                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4262:0x9 DW_TAG_variable
	.long	.Ldebug_loc700          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	22                      # Abbrev [22] 0x426d:0x51 DW_TAG_subprogram
	.long	.Linfo_string114        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
                                        # DW_AT_prototyped
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4279:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4284:0xb DW_TAG_formal_parameter
	.long	.Linfo_string45         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	23                      # Abbrev [23] 0x428f:0xb DW_TAG_formal_parameter
	.long	.Linfo_string48         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	11                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	24                      # Abbrev [24] 0x429a:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	13                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x42a5:0xb DW_TAG_variable
	.long	.Linfo_string77         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	12                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x42b0:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x42b1:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	14                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	39                      # Abbrev [39] 0x42be:0x22d DW_TAG_subprogram
	.quad	.Lfunc_begin54          # DW_AT_low_pc
	.long	.Lfunc_end54-.Lfunc_begin54 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string151        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x42d3:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc702          # DW_AT_location
	.long	.Linfo_string44         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x42e2:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc703          # DW_AT_location
	.long	.Linfo_string45         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x42f1:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc704          # DW_AT_location
	.long	.Linfo_string48         # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	24                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x4300:0x1a3 DW_TAG_lexical_block
	.long	.Ldebug_ranges77        # DW_AT_ranges
	.byte	24                      # Abbrev [24] 0x4305:0xb DW_TAG_variable
	.long	.Linfo_string166        # DW_AT_name
	.byte	32                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4310:0x192 DW_TAG_inlined_subroutine
	.long	17005                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges74        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	27                      # DW_AT_call_line
	.byte	20                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x431c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc709          # DW_AT_location
	.long	17017                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4325:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc708          # DW_AT_location
	.long	17028                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x432e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc707          # DW_AT_location
	.long	17039                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4337:0x9 DW_TAG_variable
	.long	.Ldebug_loc705          # DW_AT_location
	.long	17050                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4340:0x9 DW_TAG_variable
	.long	.Ldebug_loc706          # DW_AT_location
	.long	17061                   # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x4349:0x23 DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.quad	.Ltmp2897               # DW_AT_low_pc
	.long	.Ltmp2900-.Ltmp2897     # DW_AT_high_pc
	.byte	32                      # DW_AT_call_file
	.byte	20                      # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x435d:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4362:0x9 DW_TAG_variable
	.long	.Ldebug_loc710          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x436c:0x10b DW_TAG_inlined_subroutine
	.long	812                     # DW_AT_abstract_origin
	.quad	.Ltmp2907               # DW_AT_low_pc
	.long	.Ltmp2920-.Ltmp2907     # DW_AT_high_pc
	.byte	32                      # DW_AT_call_file
	.byte	12                      # DW_AT_call_line
	.byte	15                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4380:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc711          # DW_AT_location
	.long	824                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4389:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc712          # DW_AT_location
	.long	835                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4392:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc713          # DW_AT_location
	.long	846                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x439b:0x9 DW_TAG_variable
	.long	.Ldebug_loc714          # DW_AT_location
	.long	857                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43a4:0x9 DW_TAG_variable
	.long	.Ldebug_loc715          # DW_AT_location
	.long	868                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43ad:0x9 DW_TAG_variable
	.long	.Ldebug_loc716          # DW_AT_location
	.long	879                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43b6:0x9 DW_TAG_variable
	.long	.Ldebug_loc717          # DW_AT_location
	.long	890                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43bf:0x9 DW_TAG_variable
	.long	.Ldebug_loc725          # DW_AT_location
	.long	901                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43c8:0x9 DW_TAG_variable
	.long	.Ldebug_loc727          # DW_AT_location
	.long	912                     # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x43d1:0x9 DW_TAG_variable
	.long	.Ldebug_loc728          # DW_AT_location
	.long	923                     # DW_AT_abstract_origin
	.byte	30                      # Abbrev [30] 0x43da:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp2912               # DW_AT_low_pc
	.long	.Ltmp2914-.Ltmp2912     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	22                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x43ee:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc719          # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x43f7:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc718          # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4401:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp2914               # DW_AT_low_pc
	.long	.Ltmp2915-.Ltmp2914     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	21                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4415:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc721          # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x441e:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc720          # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x4428:0x27 DW_TAG_inlined_subroutine
	.long	957                     # DW_AT_abstract_origin
	.quad	.Ltmp2915               # DW_AT_low_pc
	.long	.Ltmp2916-.Ltmp2915     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	14                      # DW_AT_call_line
	.byte	18                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x443c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc723          # DW_AT_location
	.long	969                     # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4445:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc722          # DW_AT_location
	.long	980                     # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	30                      # Abbrev [30] 0x444f:0x27 DW_TAG_inlined_subroutine
	.long	992                     # DW_AT_abstract_origin
	.quad	.Ltmp2916               # DW_AT_low_pc
	.long	.Ltmp2917-.Ltmp2916     # DW_AT_high_pc
	.byte	4                       # DW_AT_call_file
	.byte	15                      # DW_AT_call_line
	.byte	17                      # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x4463:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc726          # DW_AT_location
	.long	1004                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x446c:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc724          # DW_AT_location
	.long	1015                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x4477:0x2a DW_TAG_lexical_block
	.long	.Ldebug_ranges76        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x447c:0x9 DW_TAG_variable
	.long	.Ldebug_loc729          # DW_AT_location
	.long	17073                   # DW_AT_abstract_origin
	.byte	36                      # Abbrev [36] 0x4485:0x1b DW_TAG_inlined_subroutine
	.long	1027                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges75        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	17                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	31                      # Abbrev [31] 0x4491:0x5 DW_TAG_formal_parameter
	.long	1035                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4496:0x9 DW_TAG_variable
	.long	.Ldebug_loc730          # DW_AT_location
	.long	1057                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	36                      # Abbrev [36] 0x44a3:0x3a DW_TAG_inlined_subroutine
	.long	2388                    # DW_AT_abstract_origin
	.long	.Ldebug_ranges78        # DW_AT_ranges
	.byte	32                      # DW_AT_call_file
	.byte	31                      # DW_AT_call_line
	.byte	7                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x44af:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc732          # DW_AT_location
	.long	2396                    # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x44b8:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc733          # DW_AT_location
	.long	2407                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44c1:0x9 DW_TAG_variable
	.long	.Ldebug_loc731          # DW_AT_location
	.long	2418                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44ca:0x9 DW_TAG_variable
	.long	.Ldebug_loc734          # DW_AT_location
	.long	2429                    # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x44d3:0x9 DW_TAG_variable
	.long	.Ldebug_loc735          # DW_AT_location
	.long	2440                    # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x44dd:0xd DW_TAG_GNU_call_site
	.long	17086                   # DW_AT_abstract_origin
	.quad	.Ltmp2901               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	37                      # Abbrev [37] 0x44eb:0x54 DW_TAG_subprogram
	.quad	.Lfunc_begin55          # DW_AT_low_pc
	.long	.Lfunc_end55-.Lfunc_begin55 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	17727                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x44fe:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc736          # DW_AT_location
	.long	17735                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4507:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc737          # DW_AT_location
	.long	17746                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4510:0x9 DW_TAG_variable
	.long	.Ldebug_loc738          # DW_AT_location
	.long	17757                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x4519:0x18 DW_TAG_lexical_block
	.long	.Ldebug_ranges79        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x451e:0x9 DW_TAG_variable
	.long	.Ldebug_loc739          # DW_AT_location
	.long	17769                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4527:0x9 DW_TAG_variable
	.long	.Ldebug_loc740          # DW_AT_location
	.long	17780                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x4531:0xd DW_TAG_GNU_call_site
	.long	287                     # DW_AT_abstract_origin
	.quad	.Ltmp3016               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x453f:0x42 DW_TAG_subprogram
	.long	.Linfo_string115        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4547:0xb DW_TAG_formal_parameter
	.long	.Linfo_string116        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x4552:0xb DW_TAG_formal_parameter
	.long	.Linfo_string97         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	39                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	24                      # Abbrev [24] 0x455d:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	40                      # DW_AT_decl_line
	.long	17793                   # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4568:0x18 DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x4569:0xb DW_TAG_variable
	.long	.Linfo_string59         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	42                      # DW_AT_decl_line
	.long	17793                   # DW_AT_type
	.byte	24                      # Abbrev [24] 0x4574:0xb DW_TAG_variable
	.long	.Linfo_string56         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	43                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x4581:0xb DW_TAG_typedef
	.long	17804                   # DW_AT_type
	.long	.Linfo_string118        # DW_AT_name
	.byte	33                      # DW_AT_decl_file
	.byte	46                      # DW_AT_decl_line
	.byte	4                       # Abbrev [4] 0x458c:0x7 DW_TAG_base_type
	.long	.Linfo_string117        # DW_AT_name
	.byte	7                       # DW_AT_encoding
	.byte	8                       # DW_AT_byte_size
	.byte	39                      # Abbrev [39] 0x4593:0x1c8 DW_TAG_subprogram
	.quad	.Lfunc_begin56          # DW_AT_low_pc
	.long	.Lfunc_end56-.Lfunc_begin56 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string152        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	27                      # Abbrev [27] 0x45a8:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc741          # DW_AT_location
	.long	.Linfo_string175        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	612                     # DW_AT_type
	.byte	27                      # Abbrev [27] 0x45b7:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc742          # DW_AT_location
	.long	.Linfo_string176        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	18692                   # DW_AT_type
	.byte	27                      # Abbrev [27] 0x45c6:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc743          # DW_AT_location
	.long	.Linfo_string177        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	52                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	27                      # Abbrev [27] 0x45d5:0xf DW_TAG_formal_parameter
	.long	.Ldebug_loc744          # DW_AT_location
	.long	.Linfo_string116        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	53                      # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x45e4:0xf DW_TAG_variable
	.long	.Ldebug_loc745          # DW_AT_location
	.long	.Linfo_string178        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	62                      # DW_AT_decl_line
	.long	18714                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x45f3:0xf DW_TAG_variable
	.long	.Ldebug_loc746          # DW_AT_location
	.long	.Linfo_string180        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	63                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4602:0xf DW_TAG_variable
	.long	.Ldebug_loc757          # DW_AT_location
	.long	.Linfo_string185        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	101                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4611:0xf DW_TAG_variable
	.long	.Ldebug_loc758          # DW_AT_location
	.long	.Linfo_string186        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	100                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4620:0xf DW_TAG_variable
	.long	.Ldebug_loc761          # DW_AT_location
	.long	.Linfo_string189        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	107                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x462f:0xf DW_TAG_variable
	.long	.Ldebug_loc762          # DW_AT_location
	.long	.Linfo_string190        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	113                     # DW_AT_decl_line
	.long	612                     # DW_AT_type
	.byte	34                      # Abbrev [34] 0x463e:0x96 DW_TAG_lexical_block
	.long	.Ldebug_ranges83        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x4643:0xf DW_TAG_variable
	.long	.Ldebug_loc750          # DW_AT_location
	.long	.Linfo_string168        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	69                      # DW_AT_decl_line
	.long	18725                   # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4652:0xf DW_TAG_variable
	.long	.Ldebug_loc751          # DW_AT_location
	.long	.Linfo_string183        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	71                      # DW_AT_decl_line
	.long	18725                   # DW_AT_type
	.byte	36                      # Abbrev [36] 0x4661:0x40 DW_TAG_inlined_subroutine
	.long	17727                   # DW_AT_abstract_origin
	.long	.Ldebug_ranges80        # DW_AT_ranges
	.byte	8                       # DW_AT_call_file
	.byte	67                      # DW_AT_call_line
	.byte	5                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x466d:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc747          # DW_AT_location
	.long	17735                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x4676:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc748          # DW_AT_location
	.long	17746                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x467f:0x9 DW_TAG_variable
	.long	.Ldebug_loc749          # DW_AT_location
	.long	17757                   # DW_AT_abstract_origin
	.byte	34                      # Abbrev [34] 0x4688:0x18 DW_TAG_lexical_block
	.long	.Ldebug_ranges81        # DW_AT_ranges
	.byte	33                      # Abbrev [33] 0x468d:0x9 DW_TAG_variable
	.long	.Ldebug_loc753          # DW_AT_location
	.long	17769                   # DW_AT_abstract_origin
	.byte	33                      # Abbrev [33] 0x4696:0x9 DW_TAG_variable
	.long	.Ldebug_loc754          # DW_AT_location
	.long	17780                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x46a1:0x32 DW_TAG_lexical_block
	.long	.Ldebug_ranges82        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x46a6:0xf DW_TAG_variable
	.long	.Ldebug_loc752          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	84                      # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	35                      # Abbrev [35] 0x46b5:0x1d DW_TAG_lexical_block
	.quad	.Ltmp3080               # DW_AT_low_pc
	.long	.Ltmp3087-.Ltmp3080     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x46c2:0xf DW_TAG_variable
	.long	.Ldebug_loc755          # DW_AT_location
	.long	.Linfo_string184        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	87                      # DW_AT_decl_line
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x46d4:0x41 DW_TAG_lexical_block
	.quad	.Ltmp3091               # DW_AT_low_pc
	.long	.Ltmp3127-.Ltmp3091     # DW_AT_high_pc
	.byte	29                      # Abbrev [29] 0x46e1:0xf DW_TAG_variable
	.long	.Ldebug_loc756          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	102                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	34                      # Abbrev [34] 0x46f0:0x24 DW_TAG_lexical_block
	.long	.Ldebug_ranges84        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x46f5:0xf DW_TAG_variable
	.long	.Ldebug_loc759          # DW_AT_location
	.long	.Linfo_string187        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	103                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	29                      # Abbrev [29] 0x4704:0xf DW_TAG_variable
	.long	.Ldebug_loc760          # DW_AT_location
	.long	.Linfo_string188        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	104                     # DW_AT_decl_line
	.long	409                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	34                      # Abbrev [34] 0x4715:0x15 DW_TAG_lexical_block
	.long	.Ldebug_ranges85        # DW_AT_ranges
	.byte	29                      # Abbrev [29] 0x471a:0xf DW_TAG_variable
	.long	.Ldebug_loc763          # DW_AT_location
	.long	.Linfo_string102        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	123                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	47                      # Abbrev [47] 0x472a:0xb DW_TAG_GNU_call_site
	.byte	1                       # DW_AT_GNU_call_site_target
	.byte	87
	.quad	.Ltmp3031               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4735:0xd DW_TAG_GNU_call_site
	.long	287                     # DW_AT_abstract_origin
	.quad	.Ltmp3058               # DW_AT_low_pc
	.byte	47                      # Abbrev [47] 0x4742:0xb DW_TAG_GNU_call_site
	.byte	1                       # DW_AT_GNU_call_site_target
	.byte	87
	.quad	.Ltmp3062               # DW_AT_low_pc
	.byte	42                      # Abbrev [42] 0x474d:0xd DW_TAG_GNU_call_site
	.long	200                     # DW_AT_abstract_origin
                                        # DW_AT_GNU_tail_call
	.quad	.Ltmp3194               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	25                      # Abbrev [25] 0x475b:0x2c DW_TAG_subprogram
	.long	.Linfo_string119        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
                                        # DW_AT_prototyped
                                        # DW_AT_external
	.byte	1                       # DW_AT_inline
	.byte	23                      # Abbrev [23] 0x4763:0xb DW_TAG_formal_parameter
	.long	.Linfo_string44         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	76                      # DW_AT_type
	.byte	23                      # Abbrev [23] 0x476e:0xb DW_TAG_formal_parameter
	.long	.Linfo_string120        # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	4                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	44                      # Abbrev [44] 0x4779:0xd DW_TAG_lexical_block
	.byte	24                      # Abbrev [24] 0x477a:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	19                      # DW_AT_decl_file
	.byte	6                       # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	48                      # Abbrev [48] 0x4787:0x14d DW_TAG_subprogram
	.quad	.Lfunc_begin57          # DW_AT_low_pc
	.long	.Lfunc_end57-.Lfunc_begin57 # DW_AT_high_pc
	.byte	1                       # DW_AT_frame_base
	.byte	87
                                        # DW_AT_GNU_all_call_sites
	.long	.Linfo_string153        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	152                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
                                        # DW_AT_external
	.byte	28                      # Abbrev [28] 0x47a0:0xe DW_TAG_variable
	.byte	2                       # DW_AT_location
	.byte	145
	.byte	0
	.long	.Linfo_string116        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	156                     # DW_AT_decl_line
	.long	18747                   # DW_AT_type
	.byte	24                      # Abbrev [24] 0x47ae:0xb DW_TAG_variable
	.long	.Linfo_string191        # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	154                     # DW_AT_decl_line
	.long	18656                   # DW_AT_type
	.byte	30                      # Abbrev [30] 0x47b9:0x3e DW_TAG_inlined_subroutine
	.long	18267                   # DW_AT_abstract_origin
	.quad	.Ltmp3254               # DW_AT_low_pc
	.long	.Ltmp3259-.Ltmp3254     # DW_AT_high_pc
	.byte	8                       # DW_AT_call_file
	.byte	163                     # DW_AT_call_line
	.byte	3                       # DW_AT_call_column
	.byte	32                      # Abbrev [32] 0x47cd:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc765          # DW_AT_location
	.long	18275                   # DW_AT_abstract_origin
	.byte	32                      # Abbrev [32] 0x47d6:0x9 DW_TAG_formal_parameter
	.long	.Ldebug_loc764          # DW_AT_location
	.long	18286                   # DW_AT_abstract_origin
	.byte	35                      # Abbrev [35] 0x47df:0x17 DW_TAG_lexical_block
	.quad	.Ltmp3258               # DW_AT_low_pc
	.long	.Ltmp3259-.Ltmp3258     # DW_AT_high_pc
	.byte	33                      # Abbrev [33] 0x47ec:0x9 DW_TAG_variable
	.long	.Ldebug_loc766          # DW_AT_location
	.long	18298                   # DW_AT_abstract_origin
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
	.byte	35                      # Abbrev [35] 0x47f7:0x19 DW_TAG_lexical_block
	.quad	.Ltmp3260               # DW_AT_low_pc
	.long	.Ltmp3279-.Ltmp3260     # DW_AT_high_pc
	.byte	24                      # Abbrev [24] 0x4804:0xb DW_TAG_variable
	.long	.Linfo_string58         # DW_AT_name
	.byte	8                       # DW_AT_decl_file
	.byte	165                     # DW_AT_decl_line
	.long	69                      # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	40                      # Abbrev [40] 0x4810:0xd DW_TAG_GNU_call_site
	.long	146                     # DW_AT_abstract_origin
	.quad	.Ltmp3255               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x481d:0xd DW_TAG_GNU_call_site
	.long	157                     # DW_AT_abstract_origin
	.quad	.Ltmp3256               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x482a:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3264               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4837:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3265               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4844:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3266               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4851:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3267               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x485e:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3268               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x486b:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3269               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4878:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3270               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4885:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3271               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x4892:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3272               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x489f:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3273               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x48ac:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3274               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x48b9:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3275               # DW_AT_low_pc
	.byte	40                      # Abbrev [40] 0x48c6:0xd DW_TAG_GNU_call_site
	.long	17811                   # DW_AT_abstract_origin
	.quad	.Ltmp3278               # DW_AT_low_pc
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x48d4:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x48d9:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	128                     # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x48e0:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x48e5:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	9                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x48ec:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x48f1:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	5                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	16                      # Abbrev [16] 0x48f8:0xc DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	11                      # Abbrev [11] 0x48fd:0x6 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.byte	8                       # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	5                       # Abbrev [5] 0x4904:0x5 DW_TAG_pointer_type
	.long	18697                   # DW_AT_type
	.byte	49                      # Abbrev [49] 0x4909:0x11 DW_TAG_subroutine_type
                                        # DW_AT_prototyped
	.byte	3                       # Abbrev [3] 0x490a:0x5 DW_TAG_formal_parameter
	.long	76                      # DW_AT_type
	.byte	3                       # Abbrev [3] 0x490f:0x5 DW_TAG_formal_parameter
	.long	935                     # DW_AT_type
	.byte	3                       # Abbrev [3] 0x4914:0x5 DW_TAG_formal_parameter
	.long	935                     # DW_AT_type
	.byte	0                       # End Of Children Mark
	.byte	19                      # Abbrev [19] 0x491a:0xb DW_TAG_typedef
	.long	601                     # DW_AT_type
	.long	.Linfo_string179        # DW_AT_name
	.byte	34                      # DW_AT_decl_file
	.byte	7                       # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x4925:0xb DW_TAG_typedef
	.long	18736                   # DW_AT_type
	.long	.Linfo_string182        # DW_AT_name
	.byte	24                      # DW_AT_decl_file
	.byte	27                      # DW_AT_decl_line
	.byte	19                      # Abbrev [19] 0x4930:0xb DW_TAG_typedef
	.long	17804                   # DW_AT_type
	.long	.Linfo_string181        # DW_AT_name
	.byte	14                      # DW_AT_decl_file
	.byte	45                      # DW_AT_decl_line
	.byte	16                      # Abbrev [16] 0x493b:0xf DW_TAG_array_type
	.long	69                      # DW_AT_type
	.byte	17                      # Abbrev [17] 0x4940:0x9 DW_TAG_subrange_type
	.long	251                     # DW_AT_type
	.long	2000000                 # DW_AT_count
	.byte	0                       # End Of Children Mark
	.byte	0                       # End Of Children Mark
.Ldebug_info_end0:
	.section	.debug_ranges,"",@progbits
.Ldebug_ranges0:
	.quad	.Ltmp64-.Lfunc_begin0
	.quad	.Ltmp66-.Lfunc_begin0
	.quad	.Ltmp68-.Lfunc_begin0
	.quad	.Ltmp70-.Lfunc_begin0
	.quad	.Ltmp76-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges1:
	.quad	.Ltmp19-.Lfunc_begin0
	.quad	.Ltmp27-.Lfunc_begin0
	.quad	.Ltmp28-.Lfunc_begin0
	.quad	.Ltmp79-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges2:
	.quad	.Ltmp85-.Lfunc_begin0
	.quad	.Ltmp90-.Lfunc_begin0
	.quad	.Ltmp110-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges3:
	.quad	.Ltmp103-.Lfunc_begin0
	.quad	.Ltmp107-.Lfunc_begin0
	.quad	.Ltmp147-.Lfunc_begin0
	.quad	.Ltmp159-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges4:
	.quad	.Ltmp96-.Lfunc_begin0
	.quad	.Ltmp101-.Lfunc_begin0
	.quad	.Ltmp126-.Lfunc_begin0
	.quad	.Ltmp138-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges5:
	.quad	.Ltmp170-.Lfunc_begin0
	.quad	.Ltmp172-.Lfunc_begin0
	.quad	.Ltmp174-.Lfunc_begin0
	.quad	.Ltmp176-.Lfunc_begin0
	.quad	.Ltmp183-.Lfunc_begin0
	.quad	.Ltmp185-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges6:
	.quad	.Ltmp212-.Lfunc_begin0
	.quad	.Ltmp228-.Lfunc_begin0
	.quad	.Ltmp245-.Lfunc_begin0
	.quad	.Ltmp258-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges7:
	.quad	.Ltmp198-.Lfunc_begin0
	.quad	.Ltmp211-.Lfunc_begin0
	.quad	.Ltmp233-.Lfunc_begin0
	.quad	.Ltmp241-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges8:
	.quad	.Ltmp300-.Lfunc_begin0
	.quad	.Ltmp317-.Lfunc_begin0
	.quad	.Ltmp319-.Lfunc_begin0
	.quad	.Ltmp341-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges9:
	.quad	.Ltmp383-.Lfunc_begin0
	.quad	.Ltmp398-.Lfunc_begin0
	.quad	.Ltmp402-.Lfunc_begin0
	.quad	.Ltmp403-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges10:
	.quad	.Ltmp538-.Lfunc_begin0
	.quad	.Ltmp539-.Lfunc_begin0
	.quad	.Ltmp544-.Lfunc_begin0
	.quad	.Ltmp565-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges11:
	.quad	.Ltmp619-.Lfunc_begin0
	.quad	.Ltmp620-.Lfunc_begin0
	.quad	.Ltmp625-.Lfunc_begin0
	.quad	.Ltmp643-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges12:
	.quad	.Ltmp725-.Lfunc_begin0
	.quad	.Ltmp732-.Lfunc_begin0
	.quad	.Ltmp734-.Lfunc_begin0
	.quad	.Ltmp751-.Lfunc_begin0
	.quad	.Ltmp752-.Lfunc_begin0
	.quad	.Ltmp755-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges13:
	.quad	.Ltmp1127-.Lfunc_begin0
	.quad	.Ltmp1131-.Lfunc_begin0
	.quad	.Ltmp1134-.Lfunc_begin0
	.quad	.Ltmp1150-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges14:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1218-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges15:
	.quad	.Ltmp1189-.Lfunc_begin0
	.quad	.Ltmp1193-.Lfunc_begin0
	.quad	.Ltmp1196-.Lfunc_begin0
	.quad	.Ltmp1213-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges16:
	.quad	.Ltmp1163-.Lfunc_begin0
	.quad	.Ltmp1169-.Lfunc_begin0
	.quad	.Ltmp1188-.Lfunc_begin0
	.quad	.Ltmp1224-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges17:
	.quad	.Ltmp1170-.Lfunc_begin0
	.quad	.Ltmp1187-.Lfunc_begin0
	.quad	.Ltmp1225-.Lfunc_begin0
	.quad	.Ltmp1246-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges18:
	.quad	.Ltmp1266-.Lfunc_begin0
	.quad	.Ltmp1268-.Lfunc_begin0
	.quad	.Ltmp1269-.Lfunc_begin0
	.quad	.Ltmp1270-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges19:
	.quad	.Ltmp1270-.Lfunc_begin0
	.quad	.Ltmp1273-.Lfunc_begin0
	.quad	.Ltmp1274-.Lfunc_begin0
	.quad	.Ltmp1275-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges20:
	.quad	.Ltmp1281-.Lfunc_begin0
	.quad	.Ltmp1286-.Lfunc_begin0
	.quad	.Ltmp1294-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges21:
	.quad	.Ltmp1281-.Lfunc_begin0
	.quad	.Ltmp1290-.Lfunc_begin0
	.quad	.Ltmp1294-.Lfunc_begin0
	.quad	.Ltmp1313-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges22:
	.quad	.Ltmp1322-.Lfunc_begin0
	.quad	.Ltmp1331-.Lfunc_begin0
	.quad	.Ltmp1333-.Lfunc_begin0
	.quad	.Ltmp1334-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges23:
	.quad	.Lfunc_begin29-.Lfunc_begin0
	.quad	.Ltmp1320-.Lfunc_begin0
	.quad	.Ltmp1321-.Lfunc_begin0
	.quad	.Ltmp1335-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges24:
	.quad	.Ltmp1336-.Lfunc_begin0
	.quad	.Ltmp1337-.Lfunc_begin0
	.quad	.Ltmp1340-.Lfunc_begin0
	.quad	.Ltmp1355-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges25:
	.quad	.Ltmp1371-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1739-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges26:
	.quad	.Ltmp1374-.Lfunc_begin0
	.quad	.Ltmp1383-.Lfunc_begin0
	.quad	.Ltmp1385-.Lfunc_begin0
	.quad	.Ltmp1386-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges27:
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1739-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges28:
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1401-.Lfunc_begin0
	.quad	.Ltmp1402-.Lfunc_begin0
	.quad	.Ltmp1739-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges29:
	.quad	.Ltmp1369-.Lfunc_begin0
	.quad	.Ltmp1388-.Lfunc_begin0
	.quad	.Ltmp1390-.Lfunc_begin0
	.quad	.Ltmp1758-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges30:
	.quad	.Ltmp1782-.Lfunc_begin0
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Ltmp1784-.Lfunc_begin0
	.quad	.Ltmp1832-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges31:
	.quad	.Ltmp1782-.Lfunc_begin0
	.quad	.Ltmp1783-.Lfunc_begin0
	.quad	.Ltmp1784-.Lfunc_begin0
	.quad	.Ltmp1832-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges32:
	.quad	.Ltmp1866-.Lfunc_begin0
	.quad	.Ltmp1874-.Lfunc_begin0
	.quad	.Ltmp1876-.Lfunc_begin0
	.quad	.Ltmp1877-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges33:
	.quad	.Lfunc_begin36-.Lfunc_begin0
	.quad	.Ltmp1864-.Lfunc_begin0
	.quad	.Ltmp1865-.Lfunc_begin0
	.quad	.Ltmp1878-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges34:
	.quad	.Ltmp2044-.Lfunc_begin0
	.quad	.Ltmp2053-.Lfunc_begin0
	.quad	.Ltmp2054-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges35:
	.quad	.Ltmp2049-.Lfunc_begin0
	.quad	.Ltmp2053-.Lfunc_begin0
	.quad	.Ltmp2054-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges36:
	.quad	.Ltmp2034-.Lfunc_begin0
	.quad	.Ltmp2039-.Lfunc_begin0
	.quad	.Ltmp2043-.Lfunc_begin0
	.quad	.Ltmp2064-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges37:
	.quad	.Ltmp2071-.Lfunc_begin0
	.quad	.Ltmp2079-.Lfunc_begin0
	.quad	.Ltmp2081-.Lfunc_begin0
	.quad	.Ltmp2101-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges38:
	.quad	.Ltmp2106-.Lfunc_begin0
	.quad	.Ltmp2107-.Lfunc_begin0
	.quad	.Ltmp2108-.Lfunc_begin0
	.quad	.Ltmp2151-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges39:
	.quad	.Ltmp2106-.Lfunc_begin0
	.quad	.Ltmp2107-.Lfunc_begin0
	.quad	.Ltmp2108-.Lfunc_begin0
	.quad	.Ltmp2151-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges40:
	.quad	.Ltmp2159-.Lfunc_begin0
	.quad	.Ltmp2163-.Lfunc_begin0
	.quad	.Ltmp2166-.Lfunc_begin0
	.quad	.Ltmp2182-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges41:
	.quad	.Lfunc_begin45-.Lfunc_begin0
	.quad	.Ltmp2210-.Lfunc_begin0
	.quad	.Ltmp2213-.Lfunc_begin0
	.quad	.Ltmp2229-.Lfunc_begin0
	.quad	.Ltmp2231-.Lfunc_begin0
	.quad	.Ltmp2233-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges42:
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2241-.Lfunc_begin0
	.quad	.Ltmp2246-.Lfunc_begin0
	.quad	.Ltmp2260-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges43:
	.quad	.Ltmp2233-.Lfunc_begin0
	.quad	.Ltmp2237-.Lfunc_begin0
	.quad	.Ltmp2239-.Lfunc_begin0
	.quad	.Ltmp2263-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges44:
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2278-.Lfunc_begin0
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges45:
	.quad	.Ltmp2309-.Lfunc_begin0
	.quad	.Ltmp2311-.Lfunc_begin0
	.quad	.Ltmp2313-.Lfunc_begin0
	.quad	.Ltmp2326-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges46:
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2306-.Lfunc_begin0
	.quad	.Ltmp2329-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges47:
	.quad	.Ltmp2272-.Lfunc_begin0
	.quad	.Ltmp2277-.Lfunc_begin0
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2306-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges48:
	.quad	.Ltmp2271-.Lfunc_begin0
	.quad	.Ltmp2281-.Lfunc_begin0
	.quad	.Ltmp2285-.Lfunc_begin0
	.quad	.Ltmp2331-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges49:
	.quad	.Ltmp2332-.Lfunc_begin0
	.quad	.Ltmp2348-.Lfunc_begin0
	.quad	.Ltmp2350-.Lfunc_begin0
	.quad	.Ltmp2372-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges50:
	.quad	.Lfunc_begin47-.Lfunc_begin0
	.quad	.Ltmp2380-.Lfunc_begin0
	.quad	.Ltmp2383-.Lfunc_begin0
	.quad	.Ltmp2399-.Lfunc_begin0
	.quad	.Ltmp2401-.Lfunc_begin0
	.quad	.Ltmp2403-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges51:
	.quad	.Ltmp2409-.Lfunc_begin0
	.quad	.Ltmp2411-.Lfunc_begin0
	.quad	.Ltmp2413-.Lfunc_begin0
	.quad	.Ltmp2418-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges52:
	.quad	.Ltmp2403-.Lfunc_begin0
	.quad	.Ltmp2407-.Lfunc_begin0
	.quad	.Ltmp2409-.Lfunc_begin0
	.quad	.Ltmp2421-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges53:
	.quad	.Ltmp2429-.Lfunc_begin0
	.quad	.Ltmp2436-.Lfunc_begin0
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges54:
	.quad	.Ltmp2468-.Lfunc_begin0
	.quad	.Ltmp2470-.Lfunc_begin0
	.quad	.Ltmp2472-.Lfunc_begin0
	.quad	.Ltmp2477-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges55:
	.quad	.Ltmp2429-.Lfunc_begin0
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2465-.Lfunc_begin0
	.quad	.Ltmp2480-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges56:
	.quad	.Ltmp2430-.Lfunc_begin0
	.quad	.Ltmp2435-.Lfunc_begin0
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2465-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges57:
	.quad	.Ltmp2429-.Lfunc_begin0
	.quad	.Ltmp2439-.Lfunc_begin0
	.quad	.Ltmp2443-.Lfunc_begin0
	.quad	.Ltmp2482-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges58:
	.quad	.Ltmp2483-.Lfunc_begin0
	.quad	.Ltmp2499-.Lfunc_begin0
	.quad	.Ltmp2501-.Lfunc_begin0
	.quad	.Ltmp2523-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges59:
	.quad	.Lfunc_begin49-.Lfunc_begin0
	.quad	.Ltmp2531-.Lfunc_begin0
	.quad	.Ltmp2535-.Lfunc_begin0
	.quad	.Ltmp2552-.Lfunc_begin0
	.quad	.Ltmp2553-.Lfunc_begin0
	.quad	.Ltmp2555-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges60:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2571-.Lfunc_begin0
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges61:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2570-.Lfunc_begin0
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2600-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges62:
	.quad	.Ltmp2565-.Lfunc_begin0
	.quad	.Ltmp2574-.Lfunc_begin0
	.quad	.Ltmp2578-.Lfunc_begin0
	.quad	.Ltmp2604-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges63:
	.quad	.Ltmp2605-.Lfunc_begin0
	.quad	.Ltmp2622-.Lfunc_begin0
	.quad	.Ltmp2624-.Lfunc_begin0
	.quad	.Ltmp2646-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges64:
	.quad	.Lfunc_begin51-.Lfunc_begin0
	.quad	.Ltmp2654-.Lfunc_begin0
	.quad	.Ltmp2657-.Lfunc_begin0
	.quad	.Ltmp2674-.Lfunc_begin0
	.quad	.Ltmp2675-.Lfunc_begin0
	.quad	.Ltmp2677-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges65:
	.quad	.Ltmp2680-.Lfunc_begin0
	.quad	.Ltmp2684-.Lfunc_begin0
	.quad	.Ltmp2687-.Lfunc_begin0
	.quad	.Ltmp2703-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges66:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2721-.Lfunc_begin0
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges67:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2720-.Lfunc_begin0
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2749-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges68:
	.quad	.Ltmp2753-.Lfunc_begin0
	.quad	.Ltmp2757-.Lfunc_begin0
	.quad	.Ltmp2760-.Lfunc_begin0
	.quad	.Ltmp2777-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges69:
	.quad	.Ltmp2715-.Lfunc_begin0
	.quad	.Ltmp2724-.Lfunc_begin0
	.quad	.Ltmp2728-.Lfunc_begin0
	.quad	.Ltmp2782-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges70:
	.quad	.Ltmp2783-.Lfunc_begin0
	.quad	.Ltmp2800-.Lfunc_begin0
	.quad	.Ltmp2802-.Lfunc_begin0
	.quad	.Ltmp2824-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges71:
	.quad	.Lfunc_begin53-.Lfunc_begin0
	.quad	.Ltmp2827-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.quad	.Ltmp2844-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges72:
	.quad	.Ltmp2860-.Lfunc_begin0
	.quad	.Ltmp2862-.Lfunc_begin0
	.quad	.Ltmp2874-.Lfunc_begin0
	.quad	.Ltmp2876-.Lfunc_begin0
	.quad	.Ltmp2879-.Lfunc_begin0
	.quad	.Ltmp2881-.Lfunc_begin0
	.quad	.Ltmp2884-.Lfunc_begin0
	.quad	.Ltmp2886-.Lfunc_begin0
	.quad	.Ltmp2889-.Lfunc_begin0
	.quad	.Ltmp2891-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges73:
	.quad	.Ltmp2827-.Lfunc_begin0
	.quad	.Ltmp2828-.Lfunc_begin0
	.quad	.Ltmp2829-.Lfunc_begin0
	.quad	.Ltmp2831-.Lfunc_begin0
	.quad	.Ltmp2844-.Lfunc_begin0
	.quad	.Ltmp2845-.Lfunc_begin0
	.quad	.Ltmp2846-.Lfunc_begin0
	.quad	.Ltmp2851-.Lfunc_begin0
	.quad	.Ltmp2855-.Lfunc_begin0
	.quad	.Ltmp2891-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges74:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2900-.Lfunc_begin0
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges75:
	.quad	.Ltmp2931-.Lfunc_begin0
	.quad	.Ltmp2933-.Lfunc_begin0
	.quad	.Ltmp2945-.Lfunc_begin0
	.quad	.Ltmp2947-.Lfunc_begin0
	.quad	.Ltmp2950-.Lfunc_begin0
	.quad	.Ltmp2952-.Lfunc_begin0
	.quad	.Ltmp2955-.Lfunc_begin0
	.quad	.Ltmp2957-.Lfunc_begin0
	.quad	.Ltmp2960-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges76:
	.quad	.Ltmp2920-.Lfunc_begin0
	.quad	.Ltmp2921-.Lfunc_begin0
	.quad	.Ltmp2922-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges77:
	.quad	.Ltmp2896-.Lfunc_begin0
	.quad	.Ltmp2903-.Lfunc_begin0
	.quad	.Ltmp2907-.Lfunc_begin0
	.quad	.Ltmp2962-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges78:
	.quad	.Ltmp2963-.Lfunc_begin0
	.quad	.Ltmp2979-.Lfunc_begin0
	.quad	.Ltmp2981-.Lfunc_begin0
	.quad	.Ltmp3003-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges79:
	.quad	.Ltmp3010-.Lfunc_begin0
	.quad	.Ltmp3012-.Lfunc_begin0
	.quad	.Ltmp3015-.Lfunc_begin0
	.quad	.Ltmp3017-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges80:
	.quad	.Ltmp3024-.Lfunc_begin0
	.quad	.Ltmp3026-.Lfunc_begin0
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3059-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges81:
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3054-.Lfunc_begin0
	.quad	.Ltmp3057-.Lfunc_begin0
	.quad	.Ltmp3059-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges82:
	.quad	.Ltmp3043-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3074-.Lfunc_begin0
	.quad	.Ltmp3090-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges83:
	.quad	.Ltmp3024-.Lfunc_begin0
	.quad	.Ltmp3027-.Lfunc_begin0
	.quad	.Ltmp3029-.Lfunc_begin0
	.quad	.Ltmp3039-.Lfunc_begin0
	.quad	.Ltmp3043-.Lfunc_begin0
	.quad	.Ltmp3048-.Lfunc_begin0
	.quad	.Ltmp3052-.Lfunc_begin0
	.quad	.Ltmp3070-.Lfunc_begin0
	.quad	.Ltmp3074-.Lfunc_begin0
	.quad	.Ltmp3090-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges84:
	.quad	.Ltmp3095-.Lfunc_begin0
	.quad	.Ltmp3119-.Lfunc_begin0
	.quad	.Ltmp3123-.Lfunc_begin0
	.quad	.Ltmp3126-.Lfunc_begin0
	.quad	0
	.quad	0
.Ldebug_ranges85:
	.quad	.Ltmp3150-.Lfunc_begin0
	.quad	.Ltmp3190-.Lfunc_begin0
	.quad	.Ltmp3194-.Lfunc_begin0
	.quad	.Ltmp3252-.Lfunc_begin0
	.quad	0
	.quad	0
	.ident	"clang version 10.0.0-4ubuntu1 "
	.section	".note.GNU-stack","",@progbits
	.addrsig
	.addrsig_sym sort_quick_block
	.addrsig_sym insertionSortStd
	.addrsig_sym heapsort
	.addrsig_sym heapsorto
	.addrsig_sym sort_merge_optimized
	.addrsig_sym sort_merge_standard
	.addrsig_sym sort_quick_optimized
	.addrsig_sym sort_quick_simd
	.addrsig_sym sort_quick_optimized_swap_arith
	.addrsig_sym sort_quick_optimized_swap_array
	.addrsig_sym sort_quick_optimized_swap_asm
	.addrsig_sym sort_quick_optimized_swap_cmov
	.addrsig_sym sort_quick_standard
	.section	.debug_line,"",@progbits
.Lline_table_start0:
