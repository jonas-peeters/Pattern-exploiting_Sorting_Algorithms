#include <stdbool.h>
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#include "const.h"

void swap(int *a, int *b);
int median_of_three_auto_finish(int array[], int64_t low, int64_t high, int *done);
int x[2];

int64_t partition_quick_optimized(int array[], int64_t low, int64_t high) {
  int done = 0;
  int pivot = median_of_three_auto_finish(array, low, high, &done);
  if (done) {
    return (low + high) / 2;
  }
  int64_t i = low;
  for (int64_t j = low; j < high; j++) {
    int c = pivot > array[j];
    int y = array[i];
    int z = array[j];
    array[i] = c ? z : y;
    array[j] = c ? y : z;
    i += c;
  }
  swap(&array[i], &array[high]);
  return (i);
}

void sort_quick_optimized(int array[], int64_t low, int64_t high) {
  if (low < high) {
    if (high - low > INSERTION_SORT_THRESH) {
      int64_t pi = partition_quick_optimized(array, low, high);
      sort_quick_optimized(array, low, pi - 1);
      sort_quick_optimized(array, pi + 1, high);
    } else {
      insertionSortOptimized(array + low, high - low + 1);
    }
  }
}
