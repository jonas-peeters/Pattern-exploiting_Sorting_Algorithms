#include <stdio.h>
#include <time.h>

void merging_standard(int a[], int64_t low, int64_t mid, int64_t high, int *b) {
  int64_t l1, l2, i;

  for (l1 = low, l2 = mid + 1, i = low; l1 <= mid && l2 <= high; i++) {
    if (a[l1] <= a[l2]) {
      b[i] = a[l1];
      l1++;
    } else {
      b[i] = a[l2];
      l2++;
    }
  }

  while (l1 <= mid)
    b[i++] = a[l1++];

  while (l2 <= high)
    b[i++] = a[l2++];

  for (i = low; i <= high; i++)
    a[i] = b[i];
}

void sort_merge_standard_h(int a[], int64_t low, int64_t high, int *b) {
  int64_t mid;

  if (low < high) {
    mid = (low + high) / 2;
    sort_merge_standard_h(a, low, mid, b);
    sort_merge_standard_h(a, mid + 1, high, b);
    merging_standard(a, low, mid, high, b);
  } else {
    return;
  }
}

void sort_merge_standard(int a[], int64_t low, int64_t high) {
  int *b = (int*) malloc(sizeof(int32_t) * (high - low + 1));
  sort_merge_standard_h(a, low, high, b);
  free(b);
}