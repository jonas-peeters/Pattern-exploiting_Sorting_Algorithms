#include <stdbool.h>
#include <stdint.h>
#include <stdio.h>
#include <stdlib.h>

void swap(int *a, int *b);
int median_of_three_of_median_of_three(int array[], int low, int high);
void insertionSort(int array[], int n);

int partition_quick_optimized_swap_cmov(int array[], int low, int high) {
  int pivot = median_of_three_of_median_of_three(array, low, high);

  int i = low;
  for (int j = low; j < high; j++) {
    int c = pivot > array[j];
    int y = array[i];
    int z = array[j];
    array[i] = c ? z : y; // Done using CMOVgl
    array[j] = c ? y : z; // Done using CMOVgl
    i += c;
  }
  swap(&array[i], &array[high]);
  return (i);
}

void sort_quick_optimized_swap_cmov(int array[], int low, int high) {
  if (low < high) {
    if (high - low > 20) {
      int pi = partition_quick_optimized_swap_cmov(array, low, high);
      sort_quick_optimized_swap_cmov(array, low, pi - 1);
      sort_quick_optimized_swap_cmov(array, pi + 1, high);
    } else {
      insertionSort(array + low, high - low + 1);
    }
  }
}