
============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      29    1       3       java.lang.Object::<init> (1 bytes)
 total in heap  [0x000000011b4b3010,0x000000011b4b3320] = 784
 relocation     [0x000000011b4b3170,0x000000011b4b31a0] = 48
 main code      [0x000000011b4b31a0,0x000000011b4b3280] = 224
 stub code      [0x000000011b4b3280,0x000000011b4b32b0] = 48
 metadata       [0x000000011b4b32b0,0x000000011b4b32c0] = 16
 scopes data    [0x000000011b4b32c0,0x000000011b4b32d8] = 24
 scopes pcs     [0x000000011b4b32d8,0x000000011b4b3318] = 64
 dependencies   [0x000000011b4b3318,0x000000011b4b3320] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000080042d548} '<init>' '()V' in 'java/lang/Object'
  #           [sp+0x40]  (sp of caller)
  0x000000011b4b31a0:   mov    0x8(%rsi),%r10d
  0x000000011b4b31a4:   movabs $0x800000000,%r11
  0x000000011b4b31ae:   add    %r11,%r10
  0x000000011b4b31b1:   cmp    %rax,%r10
  0x000000011b4b31b4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x000000011b4b31ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000000011b4b31c0:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b31c7:   push   %rbp
  0x000000011b4b31c8:   sub    $0x30,%rsp
  0x000000011b4b31cc:   movabs $0x1120088b8,%rdi            ;   {metadata(method data for {method} {0x000000080042d548} '<init>' '()V' in 'java/lang/Object')}
  0x000000011b4b31d6:   mov    0xac(%rdi),%ebx
  0x000000011b4b31dc:   add    $0x2,%ebx
  0x000000011b4b31df:   mov    %ebx,0xac(%rdi)
  0x000000011b4b31e5:   and    $0x7fe,%ebx
  0x000000011b4b31eb:   cmp    $0x0,%ebx
  0x000000011b4b31ee:   je     0x000000011b4b3207           ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.lang.Object::<init>@0 (line 44)
  0x000000011b4b31f4:   add    $0x30,%rsp
  0x000000011b4b31f8:   pop    %rbp
  0x000000011b4b31f9:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b3200:   ja     0x000000011b4b3225
  0x000000011b4b3206:   retq   
  0x000000011b4b3207:   movabs $0x80042d548,%r10            ;   {metadata({method} {0x000000080042d548} '<init>' '()V' in 'java/lang/Object')}
  0x000000011b4b3211:   mov    %r10,0x8(%rsp)
  0x000000011b4b3216:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b321e:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.lang.Object::<init>@-1 (line 44)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b3223:   jmp    0x000000011b4b31f4
  0x000000011b4b3225:   movabs $0x11b4b31f9,%r10            ;   {internal_word}
  0x000000011b4b322f:   mov    %r10,0x358(%r15)
  0x000000011b4b3236:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b323b:   nop
  0x000000011b4b323c:   nop
  0x000000011b4b323d:   mov    0x3d0(%r15),%rax
  0x000000011b4b3244:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b324f:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b325a:   add    $0x30,%rsp
  0x000000011b4b325e:   pop    %rbp
  0x000000011b4b325f:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b3264:   hlt    
  0x000000011b4b3265:   hlt    
  0x000000011b4b3266:   hlt    
  0x000000011b4b3267:   hlt    
  0x000000011b4b3268:   hlt    
  0x000000011b4b3269:   hlt    
  0x000000011b4b326a:   hlt    
  0x000000011b4b326b:   hlt    
  0x000000011b4b326c:   hlt    
  0x000000011b4b326d:   hlt    
  0x000000011b4b326e:   hlt    
  0x000000011b4b326f:   hlt    
  0x000000011b4b3270:   hlt    
  0x000000011b4b3271:   hlt    
  0x000000011b4b3272:   hlt    
  0x000000011b4b3273:   hlt    
  0x000000011b4b3274:   hlt    
  0x000000011b4b3275:   hlt    
  0x000000011b4b3276:   hlt    
  0x000000011b4b3277:   hlt    
  0x000000011b4b3278:   hlt    
  0x000000011b4b3279:   hlt    
  0x000000011b4b327a:   hlt    
  0x000000011b4b327b:   hlt    
  0x000000011b4b327c:   hlt    
  0x000000011b4b327d:   hlt    
  0x000000011b4b327e:   hlt    
  0x000000011b4b327f:   hlt    
[Exception Handler]
  0x000000011b4b3280:   callq  0x000000011b015e00           ;   {no_reloc}
  0x000000011b4b3285:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b328f:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b3293:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b3298:   hlt    
[Deopt Handler Code]
  0x000000011b4b3299:   movabs $0x11b4b3299,%r10            ;   {section_word}
  0x000000011b4b32a3:   push   %r10
  0x000000011b4b32a5:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b32aa:   hlt    
  0x000000011b4b32ab:   hlt    
  0x000000011b4b32ac:   hlt    
  0x000000011b4b32ad:   hlt    
  0x000000011b4b32ae:   hlt    
  0x000000011b4b32af:   hlt    
--------------------------------------------------------------------------------

Compiled method (n/a)      33    5     n 0       jdk.internal.misc.Unsafe::compareAndSetLong (native)
 total in heap  [0x00000001229ea010,0x00000001229ea398] = 904
 relocation     [0x00000001229ea170,0x00000001229ea1a0] = 48
 main code      [0x00000001229ea1a0,0x00000001229ea398] = 504

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008003ffcd8} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe'
  # this:     rsi:rsi   = 'jdk/internal/misc/Unsafe'
  # parm0:    rdx:rdx   = 'java/lang/Object'
  # parm1:    rcx:rcx   = long
  # parm2:    r8:r8     = long
  # parm3:    r9:r9     = long
  #           [sp+0x50]  (sp of caller)
  0x00000001229ea1a0:   mov    0x8(%rsi),%r10d
  0x00000001229ea1a4:   movabs $0x800000000,%r11
  0x00000001229ea1ae:   add    %r11,%r10
  0x00000001229ea1b1:   cmp    %r10,%rax
  0x00000001229ea1b4:   je     0x00000001229ea1c0
  0x00000001229ea1ba:   jmpq   0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229ea1bf:   nop
[Verified Entry Point]
  0x00000001229ea1c0:   mov    %eax,-0x14000(%rsp)
  0x00000001229ea1c7:   push   %rbp
  0x00000001229ea1c8:   mov    %rsp,%rbp
  0x00000001229ea1cb:   sub    $0x40,%rsp
  0x00000001229ea1cf:   mov    %rdx,0x8(%rsp)
  0x00000001229ea1d4:   cmp    $0x0,%rdx
  0x00000001229ea1d8:   lea    0x8(%rsp),%rdx
  0x00000001229ea1dd:   cmove  0x8(%rsp),%rdx
  0x00000001229ea1e3:   mov    %rsi,(%rsp)
  0x00000001229ea1e7:   cmp    $0x0,%rsi
  0x00000001229ea1eb:   lea    (%rsp),%rsi
  0x00000001229ea1ef:   cmove  (%rsp),%rsi
  0x00000001229ea1f4:   vzeroupper 
  0x00000001229ea1f7:   movabs $0x1229ea1f4,%r10            ;   {internal_word}
  0x00000001229ea201:   mov    %r10,0x290(%r15)
  0x00000001229ea208:   mov    %rsp,0x288(%r15)
  0x00000001229ea20f:   cmpb   $0x0,-0x11e338cc(%rip)        # 0x0000000110bb694a
                                                            ;   {external_word}
  0x00000001229ea216:   je     0x00000001229ea25a
  0x00000001229ea21c:   push   %rsi
  0x00000001229ea21d:   push   %rdx
  0x00000001229ea21e:   push   %rcx
  0x00000001229ea21f:   push   %r8
  0x00000001229ea221:   push   %r9
  0x00000001229ea223:   movabs $0x8003ffcd8,%rsi            ;   {metadata({method} {0x00000008003ffcd8} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00000001229ea22d:   mov    %r15,%rdi
  0x00000001229ea230:   test   $0xf,%esp
  0x00000001229ea236:   je     0x00000001229ea24e
  0x00000001229ea23c:   sub    $0x8,%rsp
  0x00000001229ea240:   callq  0x00000001108288ca           ;   {runtime_call _ZN13SharedRuntime19dtrace_method_entryEP10JavaThreadP6Method}
  0x00000001229ea245:   add    $0x8,%rsp
  0x00000001229ea249:   jmpq   0x00000001229ea253
  0x00000001229ea24e:   callq  0x00000001108288ca           ;   {runtime_call _ZN13SharedRuntime19dtrace_method_entryEP10JavaThreadP6Method}
  0x00000001229ea253:   pop    %r9
  0x00000001229ea255:   pop    %r8
  0x00000001229ea257:   pop    %rcx
  0x00000001229ea258:   pop    %rdx
  0x00000001229ea259:   pop    %rsi
  0x00000001229ea25a:   lea    0x2a8(%r15),%rdi
  0x00000001229ea261:   movl   $0x4,0x338(%r15)
  0x00000001229ea26c:   callq  0x00000001109578e2           ;   {runtime_call _ZL24Unsafe_CompareAndSetLongP7JNIEnv_P8_jobjectS2_lll}
  0x00000001229ea271:   vzeroupper 
  0x00000001229ea274:   and    $0xff,%eax
  0x00000001229ea27a:   setne  %al
  0x00000001229ea27d:   movl   $0x5,0x338(%r15)
  0x00000001229ea288:   lock addl $0x0,-0x40(%rsp)
  0x00000001229ea28e:   cmp    0x340(%r15),%rbp
  0x00000001229ea295:   ja     0x00000001229ea2ac
  0x00000001229ea29b:   cmpl   $0x0,0x328(%r15)
  0x00000001229ea2a6:   je     0x00000001229ea2d0
  0x00000001229ea2ac:   vzeroupper 
  0x00000001229ea2af:   mov    %rax,-0x8(%rbp)
  0x00000001229ea2b3:   mov    %r15,%rdi
  0x00000001229ea2b6:   mov    %rsp,%r12
  0x00000001229ea2b9:   sub    $0x0,%rsp
  0x00000001229ea2bd:   and    $0xfffffffffffffff0,%rsp
  0x00000001229ea2c1:   callq  0x0000000110935b8a           ;   {runtime_call _ZN10JavaThread40check_special_condition_for_native_transEPS_}
  0x00000001229ea2c6:   mov    %r12,%rsp
  0x00000001229ea2c9:   xor    %r12,%r12
  0x00000001229ea2cc:   mov    -0x8(%rbp),%rax
  0x00000001229ea2d0:   movl   $0x8,0x338(%r15)
  0x00000001229ea2db:   cmpl   $0x2,0x3a8(%r15)
  0x00000001229ea2e6:   je     0x00000001229ea370
  0x00000001229ea2ec:   cmpb   $0x0,-0x11e339a9(%rip)        # 0x0000000110bb694a
                                                            ;   {external_word}
  0x00000001229ea2f3:   je     0x00000001229ea331
  0x00000001229ea2f9:   mov    %rax,-0x8(%rbp)
  0x00000001229ea2fd:   movabs $0x8003ffcd8,%rsi            ;   {metadata({method} {0x00000008003ffcd8} 'compareAndSetLong' '(Ljava/lang/Object;JJJ)Z' in 'jdk/internal/misc/Unsafe')}
  0x00000001229ea307:   mov    %r15,%rdi
  0x00000001229ea30a:   test   $0xf,%esp
  0x00000001229ea310:   je     0x00000001229ea328
  0x00000001229ea316:   sub    $0x8,%rsp
  0x00000001229ea31a:   callq  0x0000000110828946           ;   {runtime_call _ZN13SharedRuntime18dtrace_method_exitEP10JavaThreadP6Method}
  0x00000001229ea31f:   add    $0x8,%rsp
  0x00000001229ea323:   jmpq   0x00000001229ea32d
  0x00000001229ea328:   callq  0x0000000110828946           ;   {runtime_call _ZN13SharedRuntime18dtrace_method_exitEP10JavaThreadP6Method}
  0x00000001229ea32d:   mov    -0x8(%rbp),%rax
  0x00000001229ea331:   movq   $0x0,0x288(%r15)
  0x00000001229ea33c:   movq   $0x0,0x290(%r15)
  0x00000001229ea347:   vzeroupper 
  0x00000001229ea34a:   mov    0xd8(%r15),%rcx
  0x00000001229ea351:   movl   $0x0,0x100(%rcx)
  0x00000001229ea35b:   leaveq 
  0x00000001229ea35c:   cmpq   $0x0,0x8(%r15)
  0x00000001229ea364:   jne    0x00000001229ea36b
  0x00000001229ea36a:   retq   
  0x00000001229ea36b:   jmpq   Stub::forward exception      ;   {runtime_call StubRoutines (1)}
  0x00000001229ea370:   vzeroupper 
  0x00000001229ea373:   mov    %rax,-0x8(%rbp)
  0x00000001229ea377:   mov    %rsp,%r12
  0x00000001229ea37a:   sub    $0x0,%rsp
  0x00000001229ea37e:   and    $0xfffffffffffffff0,%rsp
  0x00000001229ea382:   callq  0x000000011082a618           ;   {runtime_call _ZN13SharedRuntime20reguard_yellow_pagesEv}
  0x00000001229ea387:   mov    %r12,%rsp
  0x00000001229ea38a:   xor    %r12,%r12
  0x00000001229ea38d:   mov    -0x8(%rbp),%rax
  0x00000001229ea391:   jmpq   0x00000001229ea2ec
  0x00000001229ea396:   hlt    
  0x00000001229ea397:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      39    4       1       java.util.concurrent.atomic.AtomicLong::get (5 bytes)
 total in heap  [0x00000001229ea410,0x00000001229ea6d0] = 704
 relocation     [0x00000001229ea570,0x00000001229ea598] = 40
 main code      [0x00000001229ea5a0,0x00000001229ea640] = 160
 stub code      [0x00000001229ea640,0x00000001229ea670] = 48
 metadata       [0x00000001229ea670,0x00000001229ea678] = 8
 scopes data    [0x00000001229ea678,0x00000001229ea688] = 16
 scopes pcs     [0x00000001229ea688,0x00000001229ea6c8] = 64
 dependencies   [0x00000001229ea6c8,0x00000001229ea6d0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000080009d088} 'get' '()J' in 'java/util/concurrent/atomic/AtomicLong'
  #           [sp+0x40]  (sp of caller)
  0x00000001229ea5a0:   mov    0x8(%rsi),%r10d
  0x00000001229ea5a4:   movabs $0x800000000,%r11
  0x00000001229ea5ae:   add    %r11,%r10
  0x00000001229ea5b1:   cmp    %rax,%r10
  0x00000001229ea5b4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229ea5ba:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x00000001229ea5c0:   mov    %eax,-0x14000(%rsp)
  0x00000001229ea5c7:   push   %rbp
  0x00000001229ea5c8:   sub    $0x30,%rsp                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@0 (line 104)
  0x00000001229ea5cc:   vmovsd 0x10(%rsi),%xmm0
  0x00000001229ea5d1:   vmovq  %xmm0,%rax                   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
  0x00000001229ea5d6:   add    $0x30,%rsp
  0x00000001229ea5da:   pop    %rbp
  0x00000001229ea5db:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ea5e2:   ja     0x00000001229ea5e9
  0x00000001229ea5e8:   retq   
  0x00000001229ea5e9:   movabs $0x1229ea5db,%r10            ;   {internal_word}
  0x00000001229ea5f3:   mov    %r10,0x358(%r15)
  0x00000001229ea5fa:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ea5ff:   nop
  0x00000001229ea600:   nop
  0x00000001229ea601:   mov    0x3d0(%r15),%rax
  0x00000001229ea608:   movq   $0x0,0x3d0(%r15)
  0x00000001229ea613:   movq   $0x0,0x3d8(%r15)
  0x00000001229ea61e:   add    $0x30,%rsp
  0x00000001229ea622:   pop    %rbp
  0x00000001229ea623:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x00000001229ea628:   hlt    
  0x00000001229ea629:   hlt    
  0x00000001229ea62a:   hlt    
  0x00000001229ea62b:   hlt    
  0x00000001229ea62c:   hlt    
  0x00000001229ea62d:   hlt    
  0x00000001229ea62e:   hlt    
  0x00000001229ea62f:   hlt    
  0x00000001229ea630:   hlt    
  0x00000001229ea631:   hlt    
  0x00000001229ea632:   hlt    
  0x00000001229ea633:   hlt    
  0x00000001229ea634:   hlt    
  0x00000001229ea635:   hlt    
  0x00000001229ea636:   hlt    
  0x00000001229ea637:   hlt    
  0x00000001229ea638:   hlt    
  0x00000001229ea639:   hlt    
  0x00000001229ea63a:   hlt    
  0x00000001229ea63b:   hlt    
  0x00000001229ea63c:   hlt    
  0x00000001229ea63d:   hlt    
  0x00000001229ea63e:   hlt    
  0x00000001229ea63f:   hlt    
[Exception Handler]
  0x00000001229ea640:   callq  0x000000011b015e00           ;   {no_reloc}
  0x00000001229ea645:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x00000001229ea64f:   and    $0xfffffffffffffff0,%rsp
  0x00000001229ea653:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x00000001229ea658:   hlt    
[Deopt Handler Code]
  0x00000001229ea659:   movabs $0x1229ea659,%r10            ;   {section_word}
  0x00000001229ea663:   push   %r10
  0x00000001229ea665:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ea66a:   hlt    
  0x00000001229ea66b:   hlt    
  0x00000001229ea66c:   hlt    
  0x00000001229ea66d:   hlt    
  0x00000001229ea66e:   hlt    
  0x00000001229ea66f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      42    6       3       java.util.concurrent.atomic.AtomicLong::compareAndSet (13 bytes)
 total in heap  [0x000000011b4b3390,0x000000011b4b36d0] = 832
 relocation     [0x000000011b4b34f0,0x000000011b4b3520] = 48
 main code      [0x000000011b4b3520,0x000000011b4b3620] = 256
 stub code      [0x000000011b4b3620,0x000000011b4b3650] = 48
 metadata       [0x000000011b4b3650,0x000000011b4b3658] = 8
 scopes data    [0x000000011b4b3658,0x000000011b4b3678] = 32
 scopes pcs     [0x000000011b4b3678,0x000000011b4b36c8] = 80
 dependencies   [0x000000011b4b36c8,0x000000011b4b36d0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000080009d298} 'compareAndSet' '(JJ)Z' in 'java/util/concurrent/atomic/AtomicLong'
  # this:     rsi:rsi   = 'java/util/concurrent/atomic/AtomicLong'
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x60]  (sp of caller)
  0x000000011b4b3520:   mov    0x8(%rsi),%r10d
  0x000000011b4b3524:   movabs $0x800000000,%r11
  0x000000011b4b352e:   add    %r11,%r10
  0x000000011b4b3531:   cmp    %rax,%r10
  0x000000011b4b3534:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x000000011b4b353a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000000011b4b3540:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b3547:   push   %rbp
  0x000000011b4b3548:   sub    $0x50,%rsp
  0x000000011b4b354c:   movabs $0x1120117b0,%rax            ;   {metadata(method data for {method} {0x000000080009d298} 'compareAndSet' '(JJ)Z' in 'java/util/concurrent/atomic/AtomicLong')}
  0x000000011b4b3556:   mov    0xac(%rax),%ebx
  0x000000011b4b355c:   add    $0x2,%ebx
  0x000000011b4b355f:   mov    %ebx,0xac(%rax)
  0x000000011b4b3565:   and    $0x7fe,%ebx
  0x000000011b4b356b:   cmp    $0x0,%ebx
  0x000000011b4b356e:   je     0x000000011b4b35a9           ;*getstatic U {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@0 (line 151)
  0x000000011b4b3574:   lea    0x10(%rsi),%rsi
  0x000000011b4b3578:   mov    %rdx,%rax
  0x000000011b4b357b:   mov    %rcx,%rbx
  0x000000011b4b357e:   lock cmpxchg %rbx,(%rsi)
  0x000000011b4b3583:   mov    $0x1,%eax
  0x000000011b4b3588:   je     0x000000011b4b3593
  0x000000011b4b358e:   mov    $0x0,%eax                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
  0x000000011b4b3593:   and    $0x1,%eax
  0x000000011b4b3596:   add    $0x50,%rsp
  0x000000011b4b359a:   pop    %rbp
  0x000000011b4b359b:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b35a2:   ja     0x000000011b4b35c7
  0x000000011b4b35a8:   retq   
  0x000000011b4b35a9:   movabs $0x80009d298,%r10            ;   {metadata({method} {0x000000080009d298} 'compareAndSet' '(JJ)Z' in 'java/util/concurrent/atomic/AtomicLong')}
  0x000000011b4b35b3:   mov    %r10,0x8(%rsp)
  0x000000011b4b35b8:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b35c0:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@-1 (line 151)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b35c5:   jmp    0x000000011b4b3574
  0x000000011b4b35c7:   movabs $0x11b4b359b,%r10            ;   {internal_word}
  0x000000011b4b35d1:   mov    %r10,0x358(%r15)
  0x000000011b4b35d8:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b35dd:   nop
  0x000000011b4b35de:   nop
  0x000000011b4b35df:   mov    0x3d0(%r15),%rax
  0x000000011b4b35e6:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b35f1:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b35fc:   add    $0x50,%rsp
  0x000000011b4b3600:   pop    %rbp
  0x000000011b4b3601:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b3606:   hlt    
  0x000000011b4b3607:   hlt    
  0x000000011b4b3608:   hlt    
  0x000000011b4b3609:   hlt    
  0x000000011b4b360a:   hlt    
  0x000000011b4b360b:   hlt    
  0x000000011b4b360c:   hlt    
  0x000000011b4b360d:   hlt    
  0x000000011b4b360e:   hlt    
  0x000000011b4b360f:   hlt    
  0x000000011b4b3610:   hlt    
  0x000000011b4b3611:   hlt    
  0x000000011b4b3612:   hlt    
  0x000000011b4b3613:   hlt    
  0x000000011b4b3614:   hlt    
  0x000000011b4b3615:   hlt    
  0x000000011b4b3616:   hlt    
  0x000000011b4b3617:   hlt    
  0x000000011b4b3618:   hlt    
  0x000000011b4b3619:   hlt    
  0x000000011b4b361a:   hlt    
  0x000000011b4b361b:   hlt    
  0x000000011b4b361c:   hlt    
  0x000000011b4b361d:   hlt    
  0x000000011b4b361e:   hlt    
  0x000000011b4b361f:   hlt    
[Exception Handler]
  0x000000011b4b3620:   callq  0x000000011b015e00           ;   {no_reloc}
  0x000000011b4b3625:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b362f:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b3633:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b3638:   hlt    
[Deopt Handler Code]
  0x000000011b4b3639:   movabs $0x11b4b3639,%r10            ;   {section_word}
  0x000000011b4b3643:   push   %r10
  0x000000011b4b3645:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b364a:   hlt    
  0x000000011b4b364b:   hlt    
  0x000000011b4b364c:   hlt    
  0x000000011b4b364d:   hlt    
  0x000000011b4b364e:   hlt    
  0x000000011b4b364f:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      46    7       2       java.util.Random::nextInt (74 bytes)
 total in heap  [0x000000011b4b3710,0x000000011b4b3e58] = 1864
 relocation     [0x000000011b4b3870,0x000000011b4b38d0] = 96
 main code      [0x000000011b4b38e0,0x000000011b4b3b80] = 672
 stub code      [0x000000011b4b3b80,0x000000011b4b3be0] = 96
 metadata       [0x000000011b4b3be0,0x000000011b4b3bf0] = 16
 scopes data    [0x000000011b4b3bf0,0x000000011b4b3cb0] = 192
 scopes pcs     [0x000000011b4b3cb0,0x000000011b4b3e40] = 400
 dependencies   [0x000000011b4b3e40,0x000000011b4b3e48] = 8
 nul chk table  [0x000000011b4b3e48,0x000000011b4b3e58] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011b4b38e0:   mov    0x8(%rsi),%r10d
  0x000000011b4b38e4:   movabs $0x800000000,%r11
  0x000000011b4b38ee:   add    %r11,%r10
  0x000000011b4b38f1:   cmp    %rax,%r10
  0x000000011b4b38f4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x000000011b4b38fa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000000011b4b3900:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b3907:   push   %rbp
  0x000000011b4b3908:   sub    $0x50,%rsp
  0x000000011b4b390c:   mov    %rsi,0x30(%rsp)
  0x000000011b4b3911:   mov    %edx,0x28(%rsp)
  0x000000011b4b3915:   movabs $0x112011740,%rdi
  0x000000011b4b391f:   mov    0x8(%rdi),%ebx
  0x000000011b4b3922:   add    $0x2,%ebx
  0x000000011b4b3925:   mov    %ebx,0x8(%rdi)
  0x000000011b4b3928:   and    $0xffe,%ebx
  0x000000011b4b392e:   cmp    $0x0,%ebx
  0x000000011b4b3931:   je     0x000000011b4b3ab6           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@0 (line 321)
  0x000000011b4b3937:   cmp    $0x0,%edx
  0x000000011b4b393a:   jle    0x000000011b4b3a36           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
  0x000000011b4b3940:   mov    $0x1f,%edx
  0x000000011b4b3945:   mov    %rsi,%rbx
  0x000000011b4b3948:   mov    %rbx,%rsi                    ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x000000011b4b394b:   nopl   0x0(%rax)
  0x000000011b4b394f:   callq  0x000000011b4b3b85           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {optimized virtual_call}
  0x000000011b4b3954:   mov    0x28(%rsp),%edx
  0x000000011b4b3958:   dec    %edx
  0x000000011b4b395a:   mov    %edx,0x2c(%rsp)
  0x000000011b4b395e:   mov    %rdx,%rsi
  0x000000011b4b3961:   and    0x28(%rsp),%esi
  0x000000011b4b3965:   cmp    $0x0,%esi
  0x000000011b4b3968:   je     0x000000011b4b39ff           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
  0x000000011b4b396e:   mov    %rax,%rsi
  0x000000011b4b3971:   mov    %rdx,%rdi
  0x000000011b4b3974:   jmpq   0x000000011b4b39c7           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@47 (line 329)
  0x000000011b4b3979:   nopl   0x0(%rax)
  0x000000011b4b3980:   mov    $0x1f,%edx
  0x000000011b4b3985:   mov    %rbx,%rsi                    ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
  0x000000011b4b3988:   nopl   0x0(%rax)
  0x000000011b4b398f:   callq  0x000000011b4b3b95           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ;   {optimized virtual_call}
  0x000000011b4b3994:   movabs $0x112011740,%rcx
  0x000000011b4b399e:   mov    0xc(%rcx),%edx
  0x000000011b4b39a1:   add    $0x2,%edx
  0x000000011b4b39a4:   mov    %edx,0xc(%rcx)
  0x000000011b4b39a7:   and    $0x7ffe,%edx
  0x000000011b4b39ad:   cmp    $0x0,%edx
  0x000000011b4b39b0:   je     0x000000011b4b3ad7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
  0x000000011b4b39b6:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
  0x000000011b4b39bd:   test   %eax,(%r10)                  ;   {poll}
  0x000000011b4b39c0:   mov    %rax,%rsi                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
  0x000000011b4b39c3:   mov    0x2c(%rsp),%edi
  0x000000011b4b39c7:   mov    0x28(%rsp),%edx
  0x000000011b4b39cb:   mov    0x30(%rsp),%rbx
  0x000000011b4b39d0:   mov    %rsi,%rax
  0x000000011b4b39d3:   mov    %rdx,%rcx
  0x000000011b4b39d6:   cmp    $0x80000000,%eax
  0x000000011b4b39dc:   jne    0x000000011b4b39ed
  0x000000011b4b39e2:   xor    %edx,%edx
  0x000000011b4b39e4:   cmp    $0xffffffff,%ecx
  0x000000011b4b39e7:   je     0x000000011b4b39f0
  0x000000011b4b39ed:   cltd   
  0x000000011b4b39ee:   idiv   %ecx                         ; implicit exception: dispatches to 0x000000011b4b3af8
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x000000011b4b39f0:   sub    %edx,%esi
  0x000000011b4b39f2:   add    %edi,%esi
  0x000000011b4b39f4:   cmp    $0x0,%esi
  0x000000011b4b39f7:   jge    0x000000011b4b3a20
  0x000000011b4b39fd:   jmp    0x000000011b4b3980           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x000000011b4b39ff:   mov    0x28(%rsp),%edx
  0x000000011b4b3a03:   movslq %edx,%rdx
  0x000000011b4b3a06:   movslq %eax,%rax
  0x000000011b4b3a09:   mov    %rax,%rcx
  0x000000011b4b3a0c:   mov    %rdx,%rax
  0x000000011b4b3a0f:   imul   %rcx,%rax
  0x000000011b4b3a13:   mov    $0x1f,%ecx
  0x000000011b4b3a18:   sar    %cl,%rax
  0x000000011b4b3a1b:   mov    %eax,%eax
  0x000000011b4b3a1d:   mov    %rax,%rdx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@41 (line 326)
  0x000000011b4b3a20:   mov    %rdx,%rax
  0x000000011b4b3a23:   add    $0x50,%rsp
  0x000000011b4b3a27:   pop    %rbp
  0x000000011b4b3a28:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b3a2f:   ja     0x000000011b4b3afd
  0x000000011b4b3a35:   retq                                ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@73 (line 333)
  0x000000011b4b3a36:   xchg   %ax,%ax
  0x000000011b4b3a38:   jmpq   0x000000011b4b3b22           ;   {no_reloc}
  0x000000011b4b3a3d:   add    %al,(%rax)
  0x000000011b4b3a3f:   add    %al,(%rax)
  0x000000011b4b3a41:   add    %cl,-0x75(%rcx)
  0x000000011b4b3a44:   xchg   %ecx,(%rax)
  0x000000011b4b3a46:   add    %eax,(%rax)
  0x000000011b4b3a48:   add    %cl,-0x73(%rax)
  0x000000011b4b3a4b:   js     0x000000011b4b3a75
  0x000000011b4b3a4d:   cmp    0x118(%r15),%rdi
  0x000000011b4b3a54:   ja     0x000000011b4b3b2c
  0x000000011b4b3a5a:   mov    %rdi,0x108(%r15)
  0x000000011b4b3a61:   movq   $0x1,(%rax)
  0x000000011b4b3a68:   mov    %rdx,%rcx
  0x000000011b4b3a6b:   movabs $0x800000000,%r10
  0x000000011b4b3a75:   sub    %r10,%rcx
  0x000000011b4b3a78:   mov    %ecx,0x8(%rax)
  0x000000011b4b3a7b:   xor    %rcx,%rcx
  0x000000011b4b3a7e:   mov    %ecx,0xc(%rax)
  0x000000011b4b3a81:   xor    %rcx,%rcx
  0x000000011b4b3a84:   mov    %rcx,0x10(%rax)
  0x000000011b4b3a88:   mov    %rcx,0x18(%rax)
  0x000000011b4b3a8c:   mov    %rcx,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
  0x000000011b4b3a90:   movabs $0x7ffe4b888,%rdx            ;   {oop("bound must be positive"{0x00000007ffe4b888})}
  0x000000011b4b3a9a:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 322)
  0x000000011b4b3a9d:   mov    %rax,0x38(%rsp)
  0x000000011b4b3aa2:   nopl   0x0(%rax,%rax,1)
  0x000000011b4b3aa7:   callq  0x000000011af6da80           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 322)
                                                            ;   {optimized virtual_call}
  0x000000011b4b3aac:   mov    0x38(%rsp),%rax
  0x000000011b4b3ab1:   jmpq   0x000000011b4b3b58
  0x000000011b4b3ab6:   movabs $0x8000ce0f0,%r10            ;   {metadata({method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random')}
  0x000000011b4b3ac0:   mov    %r10,0x8(%rsp)
  0x000000011b4b3ac5:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b3acd:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop [48]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 321)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b3ad2:   jmpq   0x000000011b4b3937
  0x000000011b4b3ad7:   movabs $0x8000ce0f0,%r10            ;   {metadata({method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random')}
  0x000000011b4b3ae1:   mov    %r10,0x8(%rsp)
  0x000000011b4b3ae6:   movq   $0x45,(%rsp)
  0x000000011b4b3aee:   callq  0x000000011b019400           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b3af3:   jmpq   0x000000011b4b39b6
  0x000000011b4b3af8:   callq  0x000000011b013d20           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011b4b3afd:   movabs $0x11b4b3a28,%r10            ;   {internal_word}
  0x000000011b4b3b07:   mov    %r10,0x358(%r15)
  0x000000011b4b3b0e:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b3b13:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000000011b4b3b1d:   mov    $0xa050f00,%eax
  0x000000011b4b3b22:   callq  0x000000011b018380           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011b4b3b27:   jmpq   0x000000011b4b3a38
  0x000000011b4b3b2c:   mov    %rdx,%rdx
  0x000000011b4b3b2f:   callq  0x000000011b014900           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011b4b3b34:   jmpq   0x000000011b4b3a90
  0x000000011b4b3b39:   nop
  0x000000011b4b3b3a:   nop
  0x000000011b4b3b3b:   mov    0x3d0(%r15),%rax
  0x000000011b4b3b42:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b3b4d:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b3b58:   add    $0x50,%rsp
  0x000000011b4b3b5c:   pop    %rbp
  0x000000011b4b3b5d:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b3b62:   hlt    
  0x000000011b4b3b63:   hlt    
  0x000000011b4b3b64:   hlt    
  0x000000011b4b3b65:   hlt    
  0x000000011b4b3b66:   hlt    
  0x000000011b4b3b67:   hlt    
  0x000000011b4b3b68:   hlt    
  0x000000011b4b3b69:   hlt    
  0x000000011b4b3b6a:   hlt    
  0x000000011b4b3b6b:   hlt    
  0x000000011b4b3b6c:   hlt    
  0x000000011b4b3b6d:   hlt    
  0x000000011b4b3b6e:   hlt    
  0x000000011b4b3b6f:   hlt    
  0x000000011b4b3b70:   hlt    
  0x000000011b4b3b71:   hlt    
  0x000000011b4b3b72:   hlt    
  0x000000011b4b3b73:   hlt    
  0x000000011b4b3b74:   hlt    
  0x000000011b4b3b75:   hlt    
  0x000000011b4b3b76:   hlt    
  0x000000011b4b3b77:   hlt    
  0x000000011b4b3b78:   hlt    
  0x000000011b4b3b79:   hlt    
  0x000000011b4b3b7a:   hlt    
  0x000000011b4b3b7b:   hlt    
  0x000000011b4b3b7c:   hlt    
  0x000000011b4b3b7d:   hlt    
  0x000000011b4b3b7e:   hlt    
  0x000000011b4b3b7f:   hlt    
[Stub Code]
  0x000000011b4b3b80:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000000011b4b3b85:   movabs $0x8000cdfe8,%rbx            ;   {static_stub}
  0x000000011b4b3b8f:   jmpq   0x000000011af72a5c           ;   {runtime_call I2C/C2I adapters}
  0x000000011b4b3b94:   nop
  0x000000011b4b3b95:   movabs $0x8000cdfe8,%rbx            ;   {static_stub}
  0x000000011b4b3b9f:   jmpq   0x000000011af72a5c           ;   {runtime_call I2C/C2I adapters}
  0x000000011b4b3ba4:   nop
  0x000000011b4b3ba5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b3baf:   jmpq   0x000000011b4b3baf           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x000000011b4b3bb4:   callq  0x000000011b015e00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b4b3bb9:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b3bc3:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b3bc7:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b3bcc:   hlt    
[Deopt Handler Code]
  0x000000011b4b3bcd:   movabs $0x11b4b3bcd,%r10            ;   {section_word}
  0x000000011b4b3bd7:   push   %r10
  0x000000011b4b3bd9:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b3bde:   hlt    
  0x000000011b4b3bdf:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)      55    9       4       java.util.concurrent.atomic.AtomicLong::compareAndSet (13 bytes)
 total in heap  [0x00000001229ea710,0x00000001229ea960] = 592
 relocation     [0x00000001229ea870,0x00000001229ea880] = 16
 main code      [0x00000001229ea880,0x00000001229ea900] = 128
 stub code      [0x00000001229ea900,0x00000001229ea918] = 24
 metadata       [0x00000001229ea918,0x00000001229ea920] = 8
 scopes data    [0x00000001229ea920,0x00000001229ea928] = 8
 scopes pcs     [0x00000001229ea928,0x00000001229ea958] = 48
 dependencies   [0x00000001229ea958,0x00000001229ea960] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x000000080009d298} 'compareAndSet' '(JJ)Z' in 'java/util/concurrent/atomic/AtomicLong'
  # this:     rsi:rsi   = 'java/util/concurrent/atomic/AtomicLong'
  # parm0:    rdx:rdx   = long
  # parm1:    rcx:rcx   = long
  #           [sp+0x20]  (sp of caller)
  0x00000001229ea880:   mov    0x8(%rsi),%r10d
  0x00000001229ea884:   movabs $0x800000000,%r11
  0x00000001229ea88e:   add    %r11,%r10
  0x00000001229ea891:   cmp    %r10,%rax
  0x00000001229ea894:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229ea89a:   xchg   %ax,%ax
  0x00000001229ea89c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x00000001229ea8a0:   sub    $0x18,%rsp
  0x00000001229ea8a7:   mov    %rbp,0x10(%rsp)
  0x00000001229ea8ac:   mov    %rdx,%rax
  0x00000001229ea8af:   lock cmpxchg %rcx,0x10(%rsi)
  0x00000001229ea8b5:   sete   %r11b
  0x00000001229ea8b9:   movzbl %r11b,%r11d                  ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
  0x00000001229ea8bd:   mov    %r11d,%eax
  0x00000001229ea8c0:   add    $0x10,%rsp
  0x00000001229ea8c4:   pop    %rbp
  0x00000001229ea8c5:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ea8cc:   ja     0x00000001229ea8d3
  0x00000001229ea8d2:   retq   
  0x00000001229ea8d3:   movabs $0x1229ea8c5,%r10            ;   {internal_word}
  0x00000001229ea8dd:   mov    %r10,0x358(%r15)
  0x00000001229ea8e4:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ea8e9:   hlt    
  0x00000001229ea8ea:   hlt    
  0x00000001229ea8eb:   hlt    
  0x00000001229ea8ec:   hlt    
  0x00000001229ea8ed:   hlt    
  0x00000001229ea8ee:   hlt    
  0x00000001229ea8ef:   hlt    
  0x00000001229ea8f0:   hlt    
  0x00000001229ea8f1:   hlt    
  0x00000001229ea8f2:   hlt    
  0x00000001229ea8f3:   hlt    
  0x00000001229ea8f4:   hlt    
  0x00000001229ea8f5:   hlt    
  0x00000001229ea8f6:   hlt    
  0x00000001229ea8f7:   hlt    
  0x00000001229ea8f8:   hlt    
  0x00000001229ea8f9:   hlt    
  0x00000001229ea8fa:   hlt    
  0x00000001229ea8fb:   hlt    
  0x00000001229ea8fc:   hlt    
  0x00000001229ea8fd:   hlt    
  0x00000001229ea8fe:   hlt    
  0x00000001229ea8ff:   hlt    
[Exception Handler]
  0x00000001229ea900:   jmpq   0x000000011af85a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00000001229ea905:   callq  0x00000001229ea90a
  0x00000001229ea90a:   subq   $0x5,(%rsp)
  0x00000001229ea90f:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ea914:   hlt    
  0x00000001229ea915:   hlt    
  0x00000001229ea916:   hlt    
  0x00000001229ea917:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      58   10 %     3       Test::main @ 15 (64 bytes)
 total in heap  [0x000000011b4b3e90,0x000000011b4b4898] = 2568
 relocation     [0x000000011b4b3ff0,0x000000011b4b4078] = 136
 main code      [0x000000011b4b4080,0x000000011b4b44c0] = 1088
 stub code      [0x000000011b4b44c0,0x000000011b4b4530] = 112
 oops           [0x000000011b4b4530,0x000000011b4b4538] = 8
 metadata       [0x000000011b4b4538,0x000000011b4b4550] = 24
 scopes data    [0x000000011b4b4550,0x000000011b4b4658] = 264
 scopes pcs     [0x000000011b4b4658,0x000000011b4b4878] = 544
 dependencies   [0x000000011b4b4878,0x000000011b4b4880] = 8
 nul chk table  [0x000000011b4b4880,0x000000011b4b4898] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test'
  0x000000011b4b4080:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b4087:   push   %rbp
  0x000000011b4b4088:   sub    $0x70,%rsp
  0x000000011b4b408c:   movabs $0x112400768,%rbx            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b4096:   mov    0xac(%rbx),%edx
  0x000000011b4b409c:   add    $0x2,%edx
  0x000000011b4b409f:   mov    %edx,0xac(%rbx)
  0x000000011b4b40a5:   and    $0x7fe,%edx
  0x000000011b4b40ab:   cmp    $0x0,%edx
  0x000000011b4b40ae:   je     0x000000011b4b43ea           ;*ldc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@0 (line 8)
  0x000000011b4b40b4:   mov    $0x186a0,%ebx
  0x000000011b4b40b9:   movabs $0x800006718,%rdx            ;   {metadata({type array int})}
  0x000000011b4b40c3:   movslq %ebx,%rbx
  0x000000011b4b40c6:   mov    %rbx,%rdi
  0x000000011b4b40c9:   cmp    $0xffffff,%rbx
  0x000000011b4b40d0:   ja     0x000000011b4b440b
  0x000000011b4b40d6:   movabs $0x17,%rsi
  0x000000011b4b40e0:   lea    (%rsi,%rbx,4),%rsi
  0x000000011b4b40e4:   and    $0xfffffffffffffff8,%rsi
  0x000000011b4b40e8:   mov    0x108(%r15),%rax
  0x000000011b4b40ef:   lea    (%rax,%rsi,1),%rsi
  0x000000011b4b40f3:   cmp    0x118(%r15),%rsi
  0x000000011b4b40fa:   ja     0x000000011b4b440b
  0x000000011b4b4100:   mov    %rsi,0x108(%r15)
  0x000000011b4b4107:   sub    %rax,%rsi
  0x000000011b4b410a:   movq   $0x1,(%rax)
  0x000000011b4b4111:   mov    %rdx,%rcx
  0x000000011b4b4114:   movabs $0x800000000,%r10
  0x000000011b4b411e:   sub    %r10,%rcx
  0x000000011b4b4121:   mov    %ecx,0x8(%rax)
  0x000000011b4b4124:   mov    %ebx,0xc(%rax)
  0x000000011b4b4127:   sub    $0x10,%rsi
  0x000000011b4b412b:   je     0x000000011b4b414b
  0x000000011b4b4131:   test   %rsi,%rsi
  0x000000011b4b4134:   je     0x000000011b4b414b
  0x000000011b4b413a:   xor    %rbx,%rbx
  0x000000011b4b413d:   shr    $0x3,%rsi
  0x000000011b4b4141:   mov    %rbx,0x8(%rax,%rsi,8)
  0x000000011b4b4146:   dec    %rsi
  0x000000011b4b4149:   jne    0x000000011b4b4141           ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@2 (line 8)
  0x000000011b4b414b:   movabs $0x8000cd5b8,%rdx            ;   {metadata('java/util/Random')}
  0x000000011b4b4155:   mov    %rax,0x30(%rsp)
  0x000000011b4b415a:   mov    0x108(%r15),%rax
  0x000000011b4b4161:   lea    0x20(%rax),%rdi
  0x000000011b4b4165:   cmp    0x118(%r15),%rdi
  0x000000011b4b416c:   ja     0x000000011b4b4415
  0x000000011b4b4172:   mov    %rdi,0x108(%r15)
  0x000000011b4b4179:   movq   $0x1,(%rax)
  0x000000011b4b4180:   mov    %rdx,%rcx
  0x000000011b4b4183:   movabs $0x800000000,%r10
  0x000000011b4b418d:   sub    %r10,%rcx
  0x000000011b4b4190:   mov    %ecx,0x8(%rax)
  0x000000011b4b4193:   xor    %rcx,%rcx
  0x000000011b4b4196:   mov    %ecx,0xc(%rax)
  0x000000011b4b4199:   xor    %rcx,%rcx
  0x000000011b4b419c:   mov    %rcx,0x10(%rax)
  0x000000011b4b41a0:   mov    %rcx,0x18(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@5 (line 10)
  0x000000011b4b41a4:   mov    %rax,%rsi
  0x000000011b4b41a7:   movabs $0x112400768,%rdi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b41b1:   addq   $0x1,0xf0(%rdi)
  0x000000011b4b41b9:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@9 (line 10)
  0x000000011b4b41bc:   mov    %rax,0x28(%rsp)
  0x000000011b4b41c1:   nopw   0x0(%rax,%rax,1)
  0x000000011b4b41c7:   callq  0x000000011af6da80           ; ImmutableOopMap {[40]=Oop [48]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@9 (line 10)
                                                            ;   {optimized virtual_call}
  0x000000011b4b41cc:   mov    0x28(%rsp),%rax
  0x000000011b4b41d1:   mov    0x30(%rsp),%rdi
  0x000000011b4b41d6:   mov    $0x0,%ebx
  0x000000011b4b41db:   jmpq   0x000000011b4b4276           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@15 (line 11)
  0x000000011b4b41e0:   mov    %ebx,0x3c(%rsp)
  0x000000011b4b41e4:   mov    %rdi,0x50(%rsp)
  0x000000011b4b41e9:   cmp    (%rax),%rax                  ; implicit exception: dispatches to 0x000000011b4b4422
  0x000000011b4b41ec:   mov    %rax,%rdx
  0x000000011b4b41ef:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b41f9:   addq   $0x1,0x138(%rsi)
  0x000000011b4b4201:   mov    $0x186a0,%edx
  0x000000011b4b4206:   mov    %rax,%rsi                    ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@26 (line 12)
  0x000000011b4b4209:   mov    %rax,0x58(%rsp)
  0x000000011b4b420e:   nop
  0x000000011b4b420f:   callq  0x000000011af6da80           ; ImmutableOopMap {[88]=Oop [80]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@26 (line 12)
                                                            ;   {optimized virtual_call}
  0x000000011b4b4214:   mov    0x50(%rsp),%rdi
  0x000000011b4b4219:   mov    0x3c(%rsp),%ebx
  0x000000011b4b421d:   cmp    0xc(%rdi),%ebx
  0x000000011b4b4220:   jae    0x000000011b4b4427
  0x000000011b4b4226:   movslq %ebx,%rsi
  0x000000011b4b4229:   mov    %eax,0x10(%rdi,%rsi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@29 (line 12)
  0x000000011b4b422d:   inc    %ebx
  0x000000011b4b422f:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b4239:   mov    0xb0(%rsi),%eax
  0x000000011b4b423f:   add    $0x2,%eax
  0x000000011b4b4242:   mov    %eax,0xb0(%rsi)
  0x000000011b4b4248:   and    $0x3ffe,%eax
  0x000000011b4b424e:   cmp    $0x0,%eax
  0x000000011b4b4251:   je     0x000000011b4b4435           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@33 (line 11)
  0x000000011b4b4257:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[88]=Oop rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::main@33 (line 11)
  0x000000011b4b425e:   test   %eax,(%r10)                  ;   {poll}
  0x000000011b4b4261:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b426b:   incl   0x158(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@33 (line 11)
  0x000000011b4b4271:   mov    0x58(%rsp),%rax
  0x000000011b4b4276:   mov    0xc(%rdi),%edx               ; implicit exception: dispatches to 0x000000011b4b4456
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@17 (line 11)
  0x000000011b4b4279:   cmp    %edx,%ebx
  0x000000011b4b427b:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b4285:   movabs $0x110,%rcx
  0x000000011b4b428f:   jl     0x000000011b4b429f
  0x000000011b4b4295:   movabs $0x100,%rcx
  0x000000011b4b429f:   mov    (%rsi,%rcx,1),%r8
  0x000000011b4b42a3:   lea    0x1(%r8),%r8
  0x000000011b4b42a7:   mov    %r8,(%rsi,%rcx,1)
  0x000000011b4b42ab:   jl     0x000000011b4b41e0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@18 (line 11)
  0x000000011b4b42b1:   mov    $0x0,%ebx
  0x000000011b4b42b6:   mov    %edx,0x60(%rsp)
  0x000000011b4b42ba:   jmpq   0x000000011b4b4359           ;*iload_3 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@38 (line 15)
  0x000000011b4b42bf:   nop
  0x000000011b4b42c0:   mov    %ebx,0x64(%rsp)
  0x000000011b4b42c4:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b42ce:   addq   $0x1,0x190(%rsi)
  0x000000011b4b42d6:   mov    %rdi,%rsi                    ;*invokestatic shuffle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@45 (line 16)
  0x000000011b4b42d9:   mov    %rdi,0x50(%rsp)
  0x000000011b4b42de:   nop
  0x000000011b4b42df:   callq  0x000000011af6e080           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokestatic shuffle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@45 (line 16)
                                                            ;   {static_call}
  0x000000011b4b42e4:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b42ee:   addq   $0x1,0x1a0(%rsi)
  0x000000011b4b42f6:   mov    0x60(%rsp),%ecx
  0x000000011b4b42fa:   dec    %ecx
  0x000000011b4b42fc:   mov    0x50(%rsp),%rsi
  0x000000011b4b4301:   mov    $0x0,%edx                    ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@54 (line 18)
  0x000000011b4b4306:   nop
  0x000000011b4b4307:   callq  0x000000011af6e080           ; ImmutableOopMap {[80]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@54 (line 18)
                                                            ;   {static_call}
  0x000000011b4b430c:   mov    0x64(%rsp),%ebx
  0x000000011b4b4310:   inc    %ebx
  0x000000011b4b4312:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b431c:   mov    0xb0(%rsi),%edi
  0x000000011b4b4322:   add    $0x2,%edi
  0x000000011b4b4325:   mov    %edi,0xb0(%rsi)
  0x000000011b4b432b:   and    $0x3ffe,%edi
  0x000000011b4b4331:   cmp    $0x0,%edi
  0x000000011b4b4334:   je     0x000000011b4b445b           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@60 (line 15)
  0x000000011b4b433a:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[80]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::main@60 (line 15)
  0x000000011b4b4341:   test   %eax,(%r10)                  ;   {poll}
  0x000000011b4b4344:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b434e:   incl   0x1b0(%rsi)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@60 (line 15)
  0x000000011b4b4354:   mov    0x50(%rsp),%rdi
  0x000000011b4b4359:   cmp    $0x64,%ebx
  0x000000011b4b435c:   movabs $0x112400768,%rsi            ;   {metadata(method data for {method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b4366:   movabs $0x180,%rax
  0x000000011b4b4370:   jl     0x000000011b4b4380
  0x000000011b4b4376:   movabs $0x170,%rax
  0x000000011b4b4380:   mov    (%rsi,%rax,1),%rcx
  0x000000011b4b4384:   lea    0x1(%rcx),%rcx
  0x000000011b4b4388:   mov    %rcx,(%rsi,%rax,1)
  0x000000011b4b438c:   jl     0x000000011b4b42c0           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@41 (line 15)
  0x000000011b4b4392:   add    $0x70,%rsp
  0x000000011b4b4396:   pop    %rbp
  0x000000011b4b4397:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b439e:   ja     0x000000011b4b447c
  0x000000011b4b43a4:   retq                                ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@63 (line 20)
  0x000000011b4b43a5:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b43ac:   push   %rbp
  0x000000011b4b43ad:   sub    $0x70,%rsp
  0x000000011b4b43b1:   mov    0x10(%rsi),%rbx
  0x000000011b4b43b5:   mov    0x8(%rsi),%rax
  0x000000011b4b43b9:   mov    (%rsi),%edx
  0x000000011b4b43bb:   mov    %rsi,%rdi
  0x000000011b4b43be:   mov    %rbx,0x48(%rsp)
  0x000000011b4b43c3:   mov    %rax,0x40(%rsp)
  0x000000011b4b43c8:   mov    %edx,0x38(%rsp)
  0x000000011b4b43cc:   callq  0x000000011082b56a           ;   {runtime_call _ZN13SharedRuntime17OSR_migration_endEPl}
  0x000000011b4b43d1:   mov    0x38(%rsp),%edx
  0x000000011b4b43d5:   mov    %rdx,%rbx
  0x000000011b4b43d8:   mov    0x40(%rsp),%rax
  0x000000011b4b43dd:   mov    0x48(%rsp),%rdx
  0x000000011b4b43e2:   mov    %rdx,%rdi
  0x000000011b4b43e5:   jmpq   0x000000011b4b4276
  0x000000011b4b43ea:   movabs $0x112400328,%r10            ;   {metadata({method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b43f4:   mov    %r10,0x8(%rsp)
  0x000000011b4b43f9:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b4401:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - Test::main@-1 (line 8)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b4406:   jmpq   0x000000011b4b40b4
  0x000000011b4b440b:   callq  0x000000011b014f00           ; ImmutableOopMap {}
                                                            ;*newarray {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@2 (line 8)
                                                            ;   {runtime_call new_type_array Runtime1 stub}
  0x000000011b4b4410:   jmpq   0x000000011b4b414b
  0x000000011b4b4415:   mov    %rdx,%rdx
  0x000000011b4b4418:   callq  0x000000011b014900           ; ImmutableOopMap {[48]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@5 (line 10)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011b4b441d:   jmpq   0x000000011b4b41a4
  0x000000011b4b4422:   callq  0x000000011b014020           ; ImmutableOopMap {rax=Oop [80]=Oop }
                                                            ;*invokevirtual nextInt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@26 (line 12)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4427:   mov    %rbx,(%rsp)
  0x000000011b4b442b:   mov    %rdi,0x8(%rsp)
  0x000000011b4b4430:   callq  0x000000011b013720           ; ImmutableOopMap {[88]=Oop rdi=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@29 (line 12)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4435:   movabs $0x112400328,%r10            ;   {metadata({method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b443f:   mov    %r10,0x8(%rsp)
  0x000000011b4b4444:   movq   $0x21,(%rsp)
  0x000000011b4b444c:   callq  0x000000011b019400           ; ImmutableOopMap {[88]=Oop rdi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::main@33 (line 11)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b4451:   jmpq   0x000000011b4b4257
  0x000000011b4b4456:   callq  0x000000011b014020           ; ImmutableOopMap {rax=Oop rdi=Oop }
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::main@17 (line 11)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b445b:   movabs $0x112400328,%r10            ;   {metadata({method} {0x0000000112400328} 'main' '([Ljava/lang/String;)V' in 'Test')}
  0x000000011b4b4465:   mov    %r10,0x8(%rsp)
  0x000000011b4b446a:   movq   $0x3c,(%rsp)
  0x000000011b4b4472:   callq  0x000000011b019400           ; ImmutableOopMap {[80]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::main@60 (line 15)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b4477:   jmpq   0x000000011b4b433a
  0x000000011b4b447c:   movabs $0x11b4b4397,%r10            ;   {internal_word}
  0x000000011b4b4486:   mov    %r10,0x358(%r15)
  0x000000011b4b448d:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b4492:   nop
  0x000000011b4b4493:   nop
  0x000000011b4b4494:   mov    0x3d0(%r15),%rax
  0x000000011b4b449b:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b44a6:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b44b1:   add    $0x70,%rsp
  0x000000011b4b44b5:   pop    %rbp
  0x000000011b4b44b6:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b44bb:   hlt    
  0x000000011b4b44bc:   hlt    
  0x000000011b4b44bd:   hlt    
  0x000000011b4b44be:   hlt    
  0x000000011b4b44bf:   hlt    
[Stub Code]
  0x000000011b4b44c0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000000011b4b44c5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b44cf:   jmpq   0x000000011b4b44cf           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b44d4:   nop
  0x000000011b4b44d5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b44df:   jmpq   0x000000011b4b44df           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b44e4:   nop
  0x000000011b4b44e5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b44ef:   jmpq   0x000000011b4b44ef           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b44f4:   nop
  0x000000011b4b44f5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b44ff:   jmpq   0x000000011b4b44ff           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x000000011b4b4504:   callq  0x000000011b015e00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b4b4509:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b4513:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b4517:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b451c:   hlt    
[Deopt Handler Code]
  0x000000011b4b451d:   movabs $0x11b4b451d,%r10            ;   {section_word}
  0x000000011b4b4527:   push   %r10
  0x000000011b4b4529:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b452e:   hlt    
  0x000000011b4b452f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)      70   11       4       java.util.Random::nextInt (74 bytes)
 total in heap  [0x00000001229eaa10,0x00000001229eb0e0] = 1744
 relocation     [0x00000001229eab70,0x00000001229eaba0] = 48
 main code      [0x00000001229eaba0,0x00000001229ead80] = 480
 stub code      [0x00000001229ead80,0x00000001229eada8] = 40
 metadata       [0x00000001229eada8,0x00000001229eadc8] = 32
 scopes data    [0x00000001229eadc8,0x00000001229eaee8] = 288
 scopes pcs     [0x00000001229eaee8,0x00000001229eb0a8] = 448
 dependencies   [0x00000001229eb0a8,0x00000001229eb0b8] = 16
 handler table  [0x00000001229eb0b8,0x00000001229eb0d0] = 24
 nul chk table  [0x00000001229eb0d0,0x00000001229eb0e0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001229eaba0:   mov    0x8(%rsi),%r10d
  0x00000001229eaba4:   movabs $0x800000000,%r11
  0x00000001229eabae:   add    %r11,%r10
  0x00000001229eabb1:   cmp    %r10,%rax
  0x00000001229eabb4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229eabba:   xchg   %ax,%ax
  0x00000001229eabbc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x00000001229eabc0:   mov    %eax,-0x14000(%rsp)
  0x00000001229eabc7:   push   %rbp
  0x00000001229eabc8:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 321)
  0x00000001229eabcc:   mov    %rsi,%r10
  0x00000001229eabcf:   mov    %edx,%r11d
  0x00000001229eabd2:   test   %edx,%edx
  0x00000001229eabd4:   jle    0x00000001229eacf0           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
  0x00000001229eabda:   mov    %rsi,%rcx
  0x00000001229eabdd:   mov    0x18(%rsi),%r10d             ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eabe1:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00000001229ead40
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eabe6:   movabs $0x5deece66d,%r8
  0x00000001229eabf0:   mov    %rax,%rbx
  0x00000001229eabf3:   imul   %r8,%rbx
  0x00000001229eabf7:   add    $0xb,%rbx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eabfb:   movabs $0xffffffffffff,%r8
  0x00000001229eac05:   mov    %rbx,%rdi
  0x00000001229eac08:   and    %r8,%rdi                     ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eac0b:   lock cmpxchg %rdi,0x10(%r12,%r10,8)
  0x00000001229eac12:   sete   %r9b
  0x00000001229eac16:   movzbl %r9b,%r9d                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eac1a:   nopw   0x0(%rax,%rax,1)
  0x00000001229eac20:   test   %r9d,%r9d
  0x00000001229eac23:   je     0x00000001229ead04           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eac29:   shr    $0x11,%rbx
  0x00000001229eac2d:   mov    %edx,%ebp
  0x00000001229eac2f:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@23 (line 324)
  0x00000001229eac31:   mov    %edx,%r10d
  0x00000001229eac34:   and    %ebp,%r10d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@27 (line 325)
  0x00000001229eac37:   and    $0x7fffffff,%rbx
  0x00000001229eac3e:   mov    %ebx,%r9d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 210)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eac41:   test   %r10d,%r10d
  0x00000001229eac44:   je     0x00000001229ead24           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
  0x00000001229eac4a:   test   %edx,%edx
  0x00000001229eac4c:   je     0x00000001229eace2
  0x00000001229eac52:   mov    %r9d,%eax
  0x00000001229eac55:   cmp    $0x80000000,%eax
  0x00000001229eac5a:   jne    0x00000001229eac64
  0x00000001229eac5c:   xor    %edx,%edx
  0x00000001229eac5e:   cmp    $0xffffffff,%r11d
  0x00000001229eac62:   je     0x00000001229eac68
  0x00000001229eac64:   cltd   
  0x00000001229eac65:   idiv   %r11d                        ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x00000001229eac68:   sub    %edx,%r9d
  0x00000001229eac6b:   add    %r11d,%r9d
  0x00000001229eac6e:   dec    %r9d
  0x00000001229eac71:   test   %r9d,%r9d
  0x00000001229eac74:   jl     0x00000001229eac90
  0x00000001229eac76:   mov    %edx,%eax                    ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x00000001229eac78:   add    $0x30,%rsp
  0x00000001229eac7c:   pop    %rbp
  0x00000001229eac7d:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229eac84:   ja     0x00000001229ead59
  0x00000001229eac8a:   retq   
  0x00000001229eac8b:   mov    0x8(%rsp),%rcx               ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@61 (line 330)
  0x00000001229eac90:   mov    %rcx,0x8(%rsp)
  0x00000001229eac95:   mov    %r11d,(%rsp)
  0x00000001229eac99:   mov    %rcx,%rsi
  0x00000001229eac9c:   mov    $0x1f,%edx
  0x00000001229eaca1:   xchg   %ax,%ax
  0x00000001229eaca3:   callq  0x000000011af6da80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ;   {optimized virtual_call}
  0x00000001229eaca8:   mov    %eax,%r8d                    ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229eacab:   mov    0x348(%r15),%r11             ; ImmutableOopMap {[8]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
  0x00000001229eacb2:   test   %eax,(%r11)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
                                                            ;   {poll}
  0x00000001229eacb5:   mov    (%rsp),%r11d
  0x00000001229eacb9:   cmp    $0x80000000,%eax
  0x00000001229eacbe:   jne    0x00000001229eacc8
  0x00000001229eacc0:   xor    %edx,%edx
  0x00000001229eacc2:   cmp    $0xffffffff,%r11d
  0x00000001229eacc6:   je     0x00000001229eaccc
  0x00000001229eacc8:   cltd   
  0x00000001229eacc9:   idiv   %r11d                        ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x00000001229eaccc:   sub    %edx,%r8d
  0x00000001229eaccf:   add    %r11d,%r8d
  0x00000001229eacd2:   dec    %r8d
  0x00000001229eacd5:   test   %r8d,%r8d
  0x00000001229eacd8:   jl     0x00000001229eac8b           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x00000001229eacda:   mov    %edx,%eax
  0x00000001229eacdc:   nopl   0x0(%rax)
  0x00000001229eace0:   jmp    0x00000001229eac78
  0x00000001229eace2:   mov    $0xffffff86,%esi
  0x00000001229eace7:   mov    %r9d,%ebp
  0x00000001229eacea:   nop
  0x00000001229eaceb:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eacf0:   mov    $0xffffff45,%esi
  0x00000001229eacf5:   mov    %r10,%rbp
  0x00000001229eacf8:   mov    %edx,0x4(%rsp)
  0x00000001229eacfc:   data16 xchg %ax,%ax
  0x00000001229eacff:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@1 (line 321)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ead04:   mov    $0xffffff45,%esi
  0x00000001229ead09:   mov    %rcx,%rbp
  0x00000001229ead0c:   mov    %edx,(%rsp)
  0x00000001229ead0f:   mov    %rdi,0x8(%rsp)
  0x00000001229ead14:   mov    %r10d,0x4(%rsp)
  0x00000001229ead19:   mov    %r9d,0x10(%rsp)
  0x00000001229ead1e:   nop
  0x00000001229ead1f:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop [4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ead24:   mov    $0xffffff45,%esi
  0x00000001229ead29:   mov    %rcx,(%rsp)
  0x00000001229ead2d:   mov    %edx,0x8(%rsp)
  0x00000001229ead31:   mov    %r9d,0xc(%rsp)
  0x00000001229ead36:   mov    %r10d,0x10(%rsp)
  0x00000001229ead3b:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@28 (line 325)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ead40:   mov    $0xfffffff6,%esi
  0x00000001229ead45:   xchg   %ax,%ax
  0x00000001229ead47:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ead4c:   mov    %rax,%rsi
  0x00000001229ead4f:   add    $0x30,%rsp
  0x00000001229ead53:   pop    %rbp
  0x00000001229ead54:   jmpq   0x000000011b01ee00           ;   {runtime_call _rethrow_Java}
  0x00000001229ead59:   movabs $0x1229eac7d,%r10            ;   {internal_word}
  0x00000001229ead63:   mov    %r10,0x358(%r15)
  0x00000001229ead6a:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ead6f:   hlt    
  0x00000001229ead70:   hlt    
  0x00000001229ead71:   hlt    
  0x00000001229ead72:   hlt    
  0x00000001229ead73:   hlt    
  0x00000001229ead74:   hlt    
  0x00000001229ead75:   hlt    
  0x00000001229ead76:   hlt    
  0x00000001229ead77:   hlt    
  0x00000001229ead78:   hlt    
  0x00000001229ead79:   hlt    
  0x00000001229ead7a:   hlt    
  0x00000001229ead7b:   hlt    
  0x00000001229ead7c:   hlt    
  0x00000001229ead7d:   hlt    
  0x00000001229ead7e:   hlt    
  0x00000001229ead7f:   hlt    
[Stub Code]
  0x00000001229ead80:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00000001229ead8a:   jmpq   0x00000001229ead8a           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x00000001229ead8f:   jmpq   0x000000011af85a80           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00000001229ead94:   callq  0x00000001229ead99
  0x00000001229ead99:   subq   $0x5,(%rsp)
  0x00000001229ead9e:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229eada3:   hlt    
  0x00000001229eada4:   hlt    
  0x00000001229eada5:   hlt    
  0x00000001229eada6:   hlt    
  0x00000001229eada7:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)      78   13 %     2       Test::partition @ 12 (82 bytes)
 total in heap  [0x000000011b4b4910,0x000000011b4b5110] = 2048
 relocation     [0x000000011b4b4a70,0x000000011b4b4ac0] = 80
 main code      [0x000000011b4b4ac0,0x000000011b4b4d80] = 704
 stub code      [0x000000011b4b4d80,0x000000011b4b4db0] = 48
 oops           [0x000000011b4b4db0,0x000000011b4b4db8] = 8
 metadata       [0x000000011b4b4db8,0x000000011b4b4dc0] = 8
 scopes data    [0x000000011b4b4dc0,0x000000011b4b4e90] = 208
 scopes pcs     [0x000000011b4b4e90,0x000000011b4b50d0] = 576
 dependencies   [0x000000011b4b50d0,0x000000011b4b50d8] = 8
 nul chk table  [0x000000011b4b50d8,0x000000011b4b5110] = 56

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000000112400518} 'partition' '([III)I' in 'Test'
  0x000000011b4b4ac0:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b4ac7:   push   %rbp
  0x000000011b4b4ac8:   sub    $0x50,%rsp
  0x000000011b4b4acc:   movabs $0x112400ce8,%rdi
  0x000000011b4b4ad6:   mov    0x8(%rdi),%ebx
  0x000000011b4b4ad9:   add    $0x2,%ebx
  0x000000011b4b4adc:   mov    %ebx,0x8(%rdi)
  0x000000011b4b4adf:   and    $0xffe,%ebx
  0x000000011b4b4ae5:   cmp    $0x0,%ebx
  0x000000011b4b4ae8:   je     0x000000011b4b4c4d           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@0 (line 39)
  0x000000011b4b4aee:   cmp    0xc(%rsi),%ecx               ; implicit exception: dispatches to 0x000000011b4b4c6e
  0x000000011b4b4af1:   jae    0x000000011b4b4c78
  0x000000011b4b4af7:   movslq %ecx,%rdi
  0x000000011b4b4afa:   mov    0x10(%rsi,%rdi,4),%edi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
  0x000000011b4b4afe:   mov    %rdx,%rbx
  0x000000011b4b4b01:   dec    %ebx
  0x000000011b4b4b03:   jmpq   0x000000011b4b4b88           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@12 (line 41)
  0x000000011b4b4b08:   cmp    0xc(%rsi),%edx               ; implicit exception: dispatches to 0x000000011b4b4c86
  0x000000011b4b4b0b:   jae    0x000000011b4b4c90
  0x000000011b4b4b11:   movslq %edx,%rax
  0x000000011b4b4b14:   mov    0x10(%rsi,%rax,4),%eax       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
  0x000000011b4b4b18:   cmp    %edi,%eax
  0x000000011b4b4b1a:   jg     0x000000011b4b4b55           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
  0x000000011b4b4b20:   inc    %ebx
  0x000000011b4b4b22:   cmp    0xc(%rsi),%ebx
  0x000000011b4b4b25:   jae    0x000000011b4b4c9e
  0x000000011b4b4b2b:   movslq %ebx,%r8
  0x000000011b4b4b2e:   mov    0x10(%rsi,%r8,4),%r8d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
  0x000000011b4b4b33:   cmp    0xc(%rsi),%ebx
  0x000000011b4b4b36:   jae    0x000000011b4b4cac
  0x000000011b4b4b3c:   movslq %ebx,%r9
  0x000000011b4b4b3f:   mov    %eax,0x10(%rsi,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
  0x000000011b4b4b44:   cmp    0xc(%rsi),%edx
  0x000000011b4b4b47:   jae    0x000000011b4b4cba
  0x000000011b4b4b4d:   movslq %edx,%rax
  0x000000011b4b4b50:   mov    %r8d,0x10(%rsi,%rax,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
  0x000000011b4b4b55:   inc    %edx
  0x000000011b4b4b57:   movabs $0x112400ce8,%rax
  0x000000011b4b4b61:   mov    0xc(%rax),%r8d
  0x000000011b4b4b65:   add    $0x2,%r8d
  0x000000011b4b4b69:   mov    %r8d,0xc(%rax)
  0x000000011b4b4b6d:   and    $0x7ffe,%r8d
  0x000000011b4b4b74:   cmp    $0x0,%r8d
  0x000000011b4b4b78:   je     0x000000011b4b4cc8           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
  0x000000011b4b4b7e:   mov    0x348(%r15),%r10             ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
  0x000000011b4b4b85:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ;   {poll}
  0x000000011b4b4b88:   cmp    %ecx,%edx
  0x000000011b4b4b8a:   jl     0x000000011b4b4b08           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
  0x000000011b4b4b90:   inc    %ebx
  0x000000011b4b4b92:   cmp    0xc(%rsi),%ebx               ; implicit exception: dispatches to 0x000000011b4b4ce9
  0x000000011b4b4b95:   jae    0x000000011b4b4cf3
  0x000000011b4b4b9b:   movslq %ebx,%rax
  0x000000011b4b4b9e:   mov    0x10(%rsi,%rax,4),%eax       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
  0x000000011b4b4ba2:   cmp    0xc(%rsi),%ecx
  0x000000011b4b4ba5:   jae    0x000000011b4b4d01
  0x000000011b4b4bab:   movslq %ecx,%rdi
  0x000000011b4b4bae:   mov    0x10(%rsi,%rdi,4),%edi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@70 (line 56)
  0x000000011b4b4bb2:   cmp    0xc(%rsi),%ebx
  0x000000011b4b4bb5:   jae    0x000000011b4b4d0f
  0x000000011b4b4bbb:   movslq %ebx,%rdx
  0x000000011b4b4bbe:   mov    %edi,0x10(%rsi,%rdx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
  0x000000011b4b4bc2:   cmp    0xc(%rsi),%ecx
  0x000000011b4b4bc5:   jae    0x000000011b4b4d1d
  0x000000011b4b4bcb:   movslq %ecx,%rcx
  0x000000011b4b4bce:   mov    %eax,0x10(%rsi,%rcx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@76 (line 57)
  0x000000011b4b4bd2:   mov    %rbx,%rax
  0x000000011b4b4bd5:   add    $0x50,%rsp
  0x000000011b4b4bd9:   pop    %rbp
  0x000000011b4b4bda:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b4be1:   ja     0x000000011b4b4d2b
  0x000000011b4b4be7:   retq                                ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@81 (line 59)
  0x000000011b4b4be8:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b4bef:   push   %rbp
  0x000000011b4b4bf0:   sub    $0x50,%rsp
  0x000000011b4b4bf4:   mov    0x30(%rsi),%rbx
  0x000000011b4b4bf8:   mov    0x20(%rsi),%eax
  0x000000011b4b4bfb:   mov    0x18(%rsi),%edx
  0x000000011b4b4bfe:   mov    0x10(%rsi),%ecx
  0x000000011b4b4c01:   mov    0x8(%rsi),%r8d
  0x000000011b4b4c05:   mov    %rsi,%rdi
  0x000000011b4b4c08:   mov    %rbx,0x38(%rsp)
  0x000000011b4b4c0d:   mov    %eax,0x34(%rsp)
  0x000000011b4b4c11:   mov    %edx,0x30(%rsp)
  0x000000011b4b4c15:   mov    %ecx,0x2c(%rsp)
  0x000000011b4b4c19:   mov    %r8d,0x28(%rsp)
  0x000000011b4b4c1e:   callq  0x000000011082b56a           ;   {runtime_call _ZN13SharedRuntime17OSR_migration_endEPl}
  0x000000011b4b4c23:   mov    0x28(%rsp),%r8d
  0x000000011b4b4c28:   mov    %r8,%rdx
  0x000000011b4b4c2b:   mov    0x2c(%rsp),%ecx
  0x000000011b4b4c2f:   mov    %rcx,%rbx
  0x000000011b4b4c32:   mov    0x30(%rsp),%eax
  0x000000011b4b4c36:   mov    %rax,%rdi
  0x000000011b4b4c39:   mov    0x34(%rsp),%eax
  0x000000011b4b4c3d:   mov    %rax,%rcx
  0x000000011b4b4c40:   mov    0x38(%rsp),%rax
  0x000000011b4b4c45:   mov    %rax,%rsi
  0x000000011b4b4c48:   jmpq   0x000000011b4b4b88
  0x000000011b4b4c4d:   movabs $0x112400518,%r10            ;   {metadata({method} {0x0000000112400518} 'partition' '([III)I' in 'Test')}
  0x000000011b4b4c57:   mov    %r10,0x8(%rsp)
  0x000000011b4b4c5c:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b4c64:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - Test::partition@-1 (line 39)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b4c69:   jmpq   0x000000011b4b4aee
  0x000000011b4b4c6e:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4c73:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4c78:   mov    %rcx,(%rsp)
  0x000000011b4b4c7c:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4c81:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4c86:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4c8b:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4c90:   mov    %rdx,(%rsp)
  0x000000011b4b4c94:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4c99:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4c9e:   mov    %rbx,(%rsp)
  0x000000011b4b4ca2:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4ca7:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4cac:   mov    %rbx,(%rsp)
  0x000000011b4b4cb0:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4cb5:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4cba:   mov    %rdx,(%rsp)
  0x000000011b4b4cbe:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4cc3:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4cc8:   movabs $0x112400518,%r10            ;   {metadata({method} {0x0000000112400518} 'partition' '([III)I' in 'Test')}
  0x000000011b4b4cd2:   mov    %r10,0x8(%rsp)
  0x000000011b4b4cd7:   movq   $0x34,(%rsp)
  0x000000011b4b4cdf:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b4ce4:   jmpq   0x000000011b4b4b7e
  0x000000011b4b4ce9:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4cee:   callq  0x000000011b014020           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b4cf3:   mov    %rbx,(%rsp)
  0x000000011b4b4cf7:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4cfc:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4d01:   mov    %rcx,(%rsp)
  0x000000011b4b4d05:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4d0a:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@70 (line 56)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4d0f:   mov    %rbx,(%rsp)
  0x000000011b4b4d13:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4d18:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4d1d:   mov    %rcx,(%rsp)
  0x000000011b4b4d21:   mov    %rsi,0x8(%rsp)
  0x000000011b4b4d26:   callq  0x000000011b013720           ; ImmutableOopMap {rsi=Oop }
                                                            ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@76 (line 57)
                                                            ;   {runtime_call throw_range_check_failed Runtime1 stub}
  0x000000011b4b4d2b:   movabs $0x11b4b4bda,%r10            ;   {internal_word}
  0x000000011b4b4d35:   mov    %r10,0x358(%r15)
  0x000000011b4b4d3c:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b4d41:   nop
  0x000000011b4b4d42:   nop
  0x000000011b4b4d43:   mov    0x3d0(%r15),%rax
  0x000000011b4b4d4a:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b4d55:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b4d60:   add    $0x50,%rsp
  0x000000011b4b4d64:   pop    %rbp
  0x000000011b4b4d65:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b4d6a:   hlt    
  0x000000011b4b4d6b:   hlt    
  0x000000011b4b4d6c:   hlt    
  0x000000011b4b4d6d:   hlt    
  0x000000011b4b4d6e:   hlt    
  0x000000011b4b4d6f:   hlt    
  0x000000011b4b4d70:   hlt    
  0x000000011b4b4d71:   hlt    
  0x000000011b4b4d72:   hlt    
  0x000000011b4b4d73:   hlt    
  0x000000011b4b4d74:   hlt    
  0x000000011b4b4d75:   hlt    
  0x000000011b4b4d76:   hlt    
  0x000000011b4b4d77:   hlt    
  0x000000011b4b4d78:   hlt    
  0x000000011b4b4d79:   hlt    
  0x000000011b4b4d7a:   hlt    
  0x000000011b4b4d7b:   hlt    
  0x000000011b4b4d7c:   hlt    
  0x000000011b4b4d7d:   hlt    
  0x000000011b4b4d7e:   hlt    
  0x000000011b4b4d7f:   hlt    
[Exception Handler]
  0x000000011b4b4d80:   callq  0x000000011b015e00           ;   {no_reloc}
  0x000000011b4b4d85:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b4d8f:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b4d93:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b4d98:   hlt    
[Deopt Handler Code]
  0x000000011b4b4d99:   movabs $0x11b4b4d99,%r10            ;   {section_word}
  0x000000011b4b4da3:   push   %r10
  0x000000011b4b4da5:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b4daa:   hlt    
  0x000000011b4b4dab:   hlt    
  0x000000011b4b4dac:   hlt    
  0x000000011b4b4dad:   hlt    
  0x000000011b4b4dae:   hlt    
  0x000000011b4b4daf:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)      89   12 %     4       Test::shuffle @ 13 (48 bytes)
 total in heap  [0x00000001229eb110,0x00000001229ebae8] = 2520
 relocation     [0x00000001229eb270,0x00000001229eb2b0] = 64
 main code      [0x00000001229eb2c0,0x00000001229eb5e0] = 800
 stub code      [0x00000001229eb5e0,0x00000001229eb608] = 40
 oops           [0x00000001229eb608,0x00000001229eb610] = 8
 metadata       [0x00000001229eb610,0x00000001229eb640] = 48
 scopes data    [0x00000001229eb640,0x00000001229eb820] = 480
 scopes pcs     [0x00000001229eb820,0x00000001229ebaa0] = 640
 dependencies   [0x00000001229ebaa0,0x00000001229ebab0] = 16
 handler table  [0x00000001229ebab0,0x00000001229ebac8] = 24
 nul chk table  [0x00000001229ebac8,0x00000001229ebae8] = 32

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000000112400410} 'shuffle' '([I)V' in 'Test'
  0x00000001229eb2c0:   callq  0x00000001107bd7dc           ;   {runtime_call _ZN2os10breakpointEv}
  0x00000001229eb2c5:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001229eb2d0:   mov    %eax,-0x14000(%rsp)
  0x00000001229eb2d7:   push   %rbp
  0x00000001229eb2d8:   sub    $0x40,%rsp
  0x00000001229eb2dc:   mov    0x20(%rsi),%rbp
  0x00000001229eb2e0:   mov    0x18(%rsi),%r13
  0x00000001229eb2e4:   mov    0x10(%rsi),%ebx
  0x00000001229eb2e7:   mov    %rsi,%rdi
  0x00000001229eb2ea:   movabs $0x11082b56a,%r10
  0x00000001229eb2f4:   callq  *%r10
  0x00000001229eb2f7:   test   %rbp,%rbp
  0x00000001229eb2fa:   nopw   0x0(%rax,%rax,1)
  0x00000001229eb300:   je     0x00000001229eb564
  0x00000001229eb306:   mov    0x8(%rbp),%r11d
  0x00000001229eb30a:   cmp    $0x6718,%r11d                ;   {metadata({type array int})}
  0x00000001229eb311:   jne    0x00000001229eb56c
  0x00000001229eb317:   mov    %rbp,%r8
  0x00000001229eb31a:   nopw   0x0(%rax,%rax,1)
  0x00000001229eb320:   mov    0x8(%r13),%r11d              ; implicit exception: dispatches to 0x00000001229eb599
  0x00000001229eb324:   cmp    $0xcd5b8,%r11d               ;   {metadata('java/util/Random')}
  0x00000001229eb32b:   jne    0x00000001229eb56c
  0x00000001229eb331:   mov    %r13,%r9                     ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@13 (line 25)
  0x00000001229eb334:   mov    0xc(%r8),%ecx                ; implicit exception: dispatches to 0x00000001229eb59e
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@27 (line 31)
  0x00000001229eb338:   jmp    0x00000001229eb381
  0x00000001229eb33a:   mov    (%rsp),%ebx
  0x00000001229eb33d:   mov    0x8(%rsp),%r8
  0x00000001229eb342:   mov    0x10(%rsp),%r9
  0x00000001229eb347:   mov    0x20(%rsp),%ecx              ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb34b:   cmp    %ecx,%ebx
  0x00000001229eb34d:   jae    0x00000001229eb4bc
  0x00000001229eb353:   mov    0x10(%r8,%rbx,4),%r11d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@27 (line 31)
  0x00000001229eb358:   cmp    %ecx,%edx
  0x00000001229eb35a:   nopw   0x0(%rax,%rax,1)
  0x00000001229eb360:   jae    0x00000001229eb4d8
  0x00000001229eb366:   mov    0x10(%r8,%rdx,4),%edi
  0x00000001229eb36b:   mov    %edi,0x10(%r8,%rbx,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@35 (line 32)
  0x00000001229eb370:   mov    %r11d,0x10(%r8,%rdx,4)       ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb375:   mov    0x348(%r15),%r10
  0x00000001229eb37c:   dec    %ebx                         ; ImmutableOopMap {r8=Oop r9=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::shuffle@44 (line 25)
  0x00000001229eb37e:   test   %eax,(%r10)                  ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@13 (line 25)
                                                            ;   {poll}
  0x00000001229eb381:   test   %ebx,%ebx
  0x00000001229eb383:   jle    0x00000001229eb499           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@14 (line 25)
  0x00000001229eb389:   mov    %ebx,%ebp
  0x00000001229eb38b:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@20 (line 28)
  0x00000001229eb38d:   test   %ebp,%ebp
  0x00000001229eb38f:   jle    0x00000001229eb500           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb395:   mov    0x18(%r9),%r10d              ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb399:   nopl   0x0(%rax)
  0x00000001229eb3a0:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00000001229eb580
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3a5:   mov    %rax,%rdx
  0x00000001229eb3a8:   movabs $0x5deece66d,%r11
  0x00000001229eb3b2:   imul   %r11,%rdx
  0x00000001229eb3b6:   add    $0xb,%rdx                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3ba:   mov    %rdx,%r11
  0x00000001229eb3bd:   movabs $0xffffffffffff,%rdi
  0x00000001229eb3c7:   and    %rdi,%r11                    ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3ca:   lock cmpxchg %r11,0x10(%r12,%r10,8)
  0x00000001229eb3d1:   sete   %dil
  0x00000001229eb3d5:   movzbl %dil,%edi                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3d9:   test   %edi,%edi
  0x00000001229eb3db:   nopl   0x0(%rax,%rax,1)
  0x00000001229eb3e0:   je     0x00000001229eb518           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3e6:   mov    %ebx,%r11d
  0x00000001229eb3e9:   and    %ebp,%r11d                   ;*iand {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@27 (line 325)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3ec:   shr    $0x11,%rdx
  0x00000001229eb3f0:   and    $0x7fffffff,%rdx
  0x00000001229eb3f7:   mov    %edx,%r10d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 210)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb3fa:   nopw   0x0(%rax,%rax,1)
  0x00000001229eb400:   test   %r11d,%r11d
  0x00000001229eb403:   je     0x00000001229eb540           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb409:   cmp    $0xffffffff,%ebx
  0x00000001229eb40c:   je     0x00000001229eb4ac
  0x00000001229eb412:   mov    %r10d,%eax
  0x00000001229eb415:   cmp    $0x80000000,%eax
  0x00000001229eb41a:   jne    0x00000001229eb423
  0x00000001229eb41c:   xor    %edx,%edx
  0x00000001229eb41e:   cmp    $0xffffffff,%ebp
  0x00000001229eb421:   je     0x00000001229eb426
  0x00000001229eb423:   cltd   
  0x00000001229eb424:   idiv   %ebp                         ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb426:   sub    %edx,%r10d
  0x00000001229eb429:   add    %ebx,%r10d
  0x00000001229eb42c:   test   %r10d,%r10d
  0x00000001229eb42f:   jge    0x00000001229eb34b           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb435:   mov    %ecx,0x20(%rsp)
  0x00000001229eb439:   nopl   0x0(%rax)                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@61 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb440:   mov    %r9,0x10(%rsp)
  0x00000001229eb445:   mov    %r8,0x8(%rsp)
  0x00000001229eb44a:   mov    %ebx,(%rsp)
  0x00000001229eb44d:   mov    %r9,%rsi
  0x00000001229eb450:   mov    $0x1f,%edx
  0x00000001229eb455:   xchg   %ax,%ax
  0x00000001229eb457:   callq  0x000000011af6da80           ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {optimized virtual_call}
  0x00000001229eb45c:   mov    %eax,%r11d                   ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb45f:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[8]=Oop [16]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb466:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {poll}
  0x00000001229eb469:   cmp    $0x80000000,%eax
  0x00000001229eb46e:   jne    0x00000001229eb477
  0x00000001229eb470:   xor    %edx,%edx
  0x00000001229eb472:   cmp    $0xffffffff,%ebp
  0x00000001229eb475:   je     0x00000001229eb47a
  0x00000001229eb477:   cltd   
  0x00000001229eb478:   idiv   %ebp                         ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb47a:   sub    %edx,%r11d
  0x00000001229eb47d:   add    (%rsp),%r11d
  0x00000001229eb481:   test   %r11d,%r11d
  0x00000001229eb484:   jge    0x00000001229eb33a           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eb48a:   mov    (%rsp),%ebx
  0x00000001229eb48d:   mov    0x8(%rsp),%r8
  0x00000001229eb492:   mov    0x10(%rsp),%r9
  0x00000001229eb497:   jmp    0x00000001229eb440
  0x00000001229eb499:   add    $0x40,%rsp
  0x00000001229eb49d:   pop    %rbp
  0x00000001229eb49e:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229eb4a5:   ja     0x00000001229eb5b8
  0x00000001229eb4ab:   retq   
  0x00000001229eb4ac:   mov    $0xffffff86,%esi
  0x00000001229eb4b1:   mov    %r10d,%ebp
  0x00000001229eb4b4:   data16 xchg %ax,%ax
  0x00000001229eb4b7:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb4bc:   mov    $0xffffffe4,%esi
  0x00000001229eb4c1:   mov    %r9,(%rsp)
  0x00000001229eb4c5:   mov    %edx,0xc(%rsp)
  0x00000001229eb4c9:   mov    %r8,0x10(%rsp)
  0x00000001229eb4ce:   mov    %ebx,0x18(%rsp)
  0x00000001229eb4d2:   nop
  0x00000001229eb4d3:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@27 (line 31)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb4d8:   mov    $0xffffffe4,%esi
  0x00000001229eb4dd:   mov    %r9,(%rsp)
  0x00000001229eb4e1:   mov    %r11d,0x10(%rsp)
  0x00000001229eb4e6:   mov    %r8,0x18(%rsp)
  0x00000001229eb4eb:   mov    %ebx,0x14(%rsp)
  0x00000001229eb4ef:   mov    %r8,0x20(%rsp)
  0x00000001229eb4f4:   mov    %edx,0x28(%rsp)
  0x00000001229eb4f8:   data16 xchg %ax,%ax
  0x00000001229eb4fb:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@34 (line 32)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb500:   mov    $0xffffff45,%esi
  0x00000001229eb505:   mov    %r8,(%rsp)
  0x00000001229eb509:   mov    %ebx,0x10(%rsp)
  0x00000001229eb50d:   mov    %r9,0x18(%rsp)
  0x00000001229eb512:   nop
  0x00000001229eb513:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@1 (line 321)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb518:   mov    $0xffffff45,%esi
  0x00000001229eb51d:   mov    %r8,(%rsp)
  0x00000001229eb521:   mov    %ebx,0x10(%rsp)
  0x00000001229eb525:   mov    %r9,0x18(%rsp)
  0x00000001229eb52a:   mov    %r11,0x20(%rsp)
  0x00000001229eb52f:   mov    %r10d,0x14(%rsp)
  0x00000001229eb534:   mov    %edi,0x28(%rsp)
  0x00000001229eb538:   data16 xchg %ax,%ax
  0x00000001229eb53b:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [20]=NarrowOop [24]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb540:   mov    $0xffffff45,%esi
  0x00000001229eb545:   mov    %r8,(%rsp)
  0x00000001229eb549:   mov    %r9,0x18(%rsp)
  0x00000001229eb54e:   mov    %r10d,0x14(%rsp)
  0x00000001229eb553:   mov    %ebx,0x20(%rsp)
  0x00000001229eb557:   mov    %r11d,0x24(%rsp)
  0x00000001229eb55c:   data16 xchg %ax,%ax
  0x00000001229eb55f:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [24]=Oop }
                                                            ;*ifne {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@28 (line 325)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb564:   xor    %r8d,%r8d
  0x00000001229eb567:   jmpq   0x00000001229eb31a
  0x00000001229eb56c:   mov    $0xffffff8d,%esi
  0x00000001229eb571:   mov    %ebx,(%rsp)
  0x00000001229eb574:   mov    %r13,0x8(%rsp)
  0x00000001229eb579:   xchg   %ax,%ax
  0x00000001229eb57b:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@13 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb580:   mov    $0xfffffff6,%esi
  0x00000001229eb585:   xchg   %ax,%ax
  0x00000001229eb587:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb58c:   mov    %rax,%rsi
  0x00000001229eb58f:   add    $0x40,%rsp
  0x00000001229eb593:   pop    %rbp
  0x00000001229eb594:   jmpq   0x000000011b01ee00           ;   {runtime_call _rethrow_Java}
  0x00000001229eb599:   xor    %r10d,%r10d
  0x00000001229eb59c:   jmp    0x00000001229eb5a1
  0x00000001229eb59e:   mov    %r9,%r10
  0x00000001229eb5a1:   mov    $0xffffffbe,%esi
  0x00000001229eb5a6:   mov    %r8,%rbp
  0x00000001229eb5a9:   mov    %ebx,(%rsp)
  0x00000001229eb5ac:   mov    %r10,0x8(%rsp)
  0x00000001229eb5b1:   xchg   %ax,%ax
  0x00000001229eb5b3:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop [8]=Oop }
                                                            ;*iload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@13 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eb5b8:   movabs $0x1229eb49e,%r10            ;   {internal_word}
  0x00000001229eb5c2:   mov    %r10,0x358(%r15)
  0x00000001229eb5c9:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229eb5ce:   hlt    
  0x00000001229eb5cf:   hlt    
  0x00000001229eb5d0:   hlt    
  0x00000001229eb5d1:   hlt    
  0x00000001229eb5d2:   hlt    
  0x00000001229eb5d3:   hlt    
  0x00000001229eb5d4:   hlt    
  0x00000001229eb5d5:   hlt    
  0x00000001229eb5d6:   hlt    
  0x00000001229eb5d7:   hlt    
  0x00000001229eb5d8:   hlt    
  0x00000001229eb5d9:   hlt    
  0x00000001229eb5da:   hlt    
  0x00000001229eb5db:   hlt    
  0x00000001229eb5dc:   hlt    
  0x00000001229eb5dd:   hlt    
  0x00000001229eb5de:   hlt    
  0x00000001229eb5df:   hlt    
[Stub Code]
  0x00000001229eb5e0:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00000001229eb5ea:   jmpq   0x00000001229eb5ea           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x00000001229eb5ef:   jmpq   0x000000011af85a80           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00000001229eb5f4:   callq  0x00000001229eb5f9
  0x00000001229eb5f9:   subq   $0x5,(%rsp)
  0x00000001229eb5fe:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229eb603:   hlt    
  0x00000001229eb604:   hlt    
  0x00000001229eb605:   hlt    
  0x00000001229eb606:   hlt    
  0x00000001229eb607:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     103    8       2       java.util.Random::next (47 bytes)
 total in heap  [0x000000011b4b5190,0x000000011b4b56c8] = 1336
 relocation     [0x000000011b4b52f0,0x000000011b4b5330] = 64
 main code      [0x000000011b4b5340,0x000000011b4b5500] = 448
 stub code      [0x000000011b4b5500,0x000000011b4b5540] = 64
 metadata       [0x000000011b4b5540,0x000000011b4b5558] = 24
 scopes data    [0x000000011b4b5558,0x000000011b4b55d0] = 120
 scopes pcs     [0x000000011b4b55d0,0x000000011b4b56b0] = 224
 dependencies   [0x000000011b4b56b0,0x000000011b4b56b8] = 8
 nul chk table  [0x000000011b4b56b8,0x000000011b4b56c8] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000cdfe8} 'next' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x80]  (sp of caller)
  0x000000011b4b5340:   mov    0x8(%rsi),%r10d
  0x000000011b4b5344:   movabs $0x800000000,%r11
  0x000000011b4b534e:   add    %r11,%r10
  0x000000011b4b5351:   cmp    %rax,%r10
  0x000000011b4b5354:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x000000011b4b535a:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000000011b4b5360:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b5367:   push   %rbp
  0x000000011b4b5368:   sub    $0x70,%rsp
  0x000000011b4b536c:   mov    %edx,0x50(%rsp)
  0x000000011b4b5370:   movabs $0x112011778,%rax
  0x000000011b4b537a:   mov    0x8(%rax),%ecx
  0x000000011b4b537d:   add    $0x2,%ecx
  0x000000011b4b5380:   mov    %ecx,0x8(%rax)
  0x000000011b4b5383:   and    $0xffe,%ecx
  0x000000011b4b5389:   cmp    $0x0,%ecx
  0x000000011b4b538c:   je     0x000000011b4b5479           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@0 (line 205)
  0x000000011b4b5392:   mov    0x18(%rsi),%edi
  0x000000011b4b5395:   shl    $0x3,%rdi                    ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
  0x000000011b4b5399:   mov    %rdi,0x48(%rsp)
  0x000000011b4b539e:   jmpq   0x000000011b4b53ad           ;*aload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@6 (line 207)
  0x000000011b4b53a3:   nopl   0x0(%rax,%rax,1)
  0x000000011b4b53a8:   mov    0x48(%rsp),%rdi
  0x000000011b4b53ad:   vmovsd 0x10(%rdi),%xmm0             ; implicit exception: dispatches to 0x000000011b4b549a
  0x000000011b4b53b2:   vmovq  %xmm0,%rcx                   ;*getfield value {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@1 (line 104)
                                                            ; - java.util.Random::next@8 (line 207)
  0x000000011b4b53b7:   movabs $0x5deece66d,%rax
  0x000000011b4b53c1:   mov    %rax,%rsi
  0x000000011b4b53c4:   mov    %rcx,%rax
  0x000000011b4b53c7:   imul   %rsi,%rax
  0x000000011b4b53cb:   movabs $0xb,%r10
  0x000000011b4b53d5:   add    %r10,%rax
  0x000000011b4b53d8:   movabs $0xffffffffffff,%r10
  0x000000011b4b53e2:   and    %r10,%rax
  0x000000011b4b53e5:   mov    %rcx,%rdx
  0x000000011b4b53e8:   mov    %rax,%rcx
  0x000000011b4b53eb:   mov    %rdi,%rsi                    ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@32 (line 209)
  0x000000011b4b53ee:   mov    %rax,0x58(%rsp)
  0x000000011b4b53f3:   nopl   0x0(%rax)
  0x000000011b4b53f7:   callq  0x000000011af6da80           ; ImmutableOopMap {[72]=Oop }
                                                            ;*invokevirtual compareAndSet {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ;   {optimized virtual_call}
  0x000000011b4b53fc:   cmp    $0x0,%eax
  0x000000011b4b53ff:   mov    $0x2,%ecx
  0x000000011b4b5404:   je     0x000000011b4b540f
  0x000000011b4b540a:   mov    $0x0,%ecx
  0x000000011b4b540f:   movabs $0x112011778,%rsi
  0x000000011b4b5419:   mov    0xc(%rsi),%edi
  0x000000011b4b541c:   add    %ecx,%edi
  0x000000011b4b541e:   mov    %edi,0xc(%rsi)
  0x000000011b4b5421:   cmp    $0x0,%ecx
  0x000000011b4b5424:   jne    0x000000011b4b542f
  0x000000011b4b542a:   mov    $0x2,%edi
  0x000000011b4b542f:   and    $0x7ffe,%edi
  0x000000011b4b5435:   cmp    $0x0,%edi
  0x000000011b4b5438:   je     0x000000011b4b549f           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
  0x000000011b4b543e:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[72]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
  0x000000011b4b5445:   test   %eax,(%r10)                  ;   {poll}
  0x000000011b4b5448:   cmp    $0x0,%eax
  0x000000011b4b544b:   je     0x000000011b4b53a8           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
  0x000000011b4b5451:   mov    0x58(%rsp),%rax
  0x000000011b4b5456:   mov    0x50(%rsp),%edx
  0x000000011b4b545a:   mov    $0x30,%ecx
  0x000000011b4b545f:   sub    %edx,%ecx
  0x000000011b4b5461:   shr    %cl,%rax
  0x000000011b4b5464:   mov    %eax,%eax
  0x000000011b4b5466:   add    $0x70,%rsp
  0x000000011b4b546a:   pop    %rbp
  0x000000011b4b546b:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b5472:   ja     0x000000011b4b54bd
  0x000000011b4b5478:   retq   
  0x000000011b4b5479:   movabs $0x8000cdfe8,%r10            ;   {metadata({method} {0x00000008000cdfe8} 'next' '(I)I' in 'java/util/Random')}
  0x000000011b4b5483:   mov    %r10,0x8(%rsp)
  0x000000011b4b5488:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b5490:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::next@-1 (line 205)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b5495:   jmpq   0x000000011b4b5392
  0x000000011b4b549a:   callq  0x000000011b014020           ; ImmutableOopMap {rdi=Oop [72]=Oop }
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ;   {runtime_call throw_null_pointer_exception Runtime1 stub}
  0x000000011b4b549f:   movabs $0x8000cdfe8,%r10            ;   {metadata({method} {0x00000008000cdfe8} 'next' '(I)I' in 'java/util/Random')}
  0x000000011b4b54a9:   mov    %r10,0x8(%rsp)
  0x000000011b4b54ae:   movq   $0x23,(%rsp)
  0x000000011b4b54b6:   callq  0x000000011b019400           ; ImmutableOopMap {[72]=Oop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b54bb:   jmp    0x000000011b4b543e
  0x000000011b4b54bd:   movabs $0x11b4b546b,%r10            ;   {internal_word}
  0x000000011b4b54c7:   mov    %r10,0x358(%r15)
  0x000000011b4b54ce:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b54d3:   nop
  0x000000011b4b54d4:   nop
  0x000000011b4b54d5:   mov    0x3d0(%r15),%rax
  0x000000011b4b54dc:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b54e7:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b54f2:   add    $0x70,%rsp
  0x000000011b4b54f6:   pop    %rbp
  0x000000011b4b54f7:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b54fc:   hlt    
  0x000000011b4b54fd:   hlt    
  0x000000011b4b54fe:   hlt    
  0x000000011b4b54ff:   hlt    
[Stub Code]
  0x000000011b4b5500:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000000011b4b5505:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b550f:   jmpq   0x000000011b4b550f           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x000000011b4b5514:   callq  0x000000011b015e00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b4b5519:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b5523:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b5527:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b552c:   hlt    
[Deopt Handler Code]
  0x000000011b4b552d:   movabs $0x11b4b552d,%r10            ;   {section_word}
  0x000000011b4b5537:   push   %r10
  0x000000011b4b5539:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b553e:   hlt    
  0x000000011b4b553f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     109   15       4       Test::partition (82 bytes)
 total in heap  [0x00000001229ebb10,0x00000001229ec398] = 2184
 relocation     [0x00000001229ebc70,0x00000001229ebc90] = 32
 main code      [0x00000001229ebca0,0x00000001229ebf20] = 640
 stub code      [0x00000001229ebf20,0x00000001229ebf38] = 24
 oops           [0x00000001229ebf38,0x00000001229ebf40] = 8
 metadata       [0x00000001229ebf40,0x00000001229ebf48] = 8
 scopes data    [0x00000001229ebf48,0x00000001229ec050] = 264
 scopes pcs     [0x00000001229ec050,0x00000001229ec380] = 816
 dependencies   [0x00000001229ec380,0x00000001229ec388] = 8
 nul chk table  [0x00000001229ec388,0x00000001229ec398] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000000112400518} 'partition' '([III)I' in 'Test'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001229ebca0:   mov    %eax,-0x14000(%rsp)
  0x00000001229ebca7:   push   %rbp
  0x00000001229ebca8:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - Test::partition@-1 (line 39)
  0x00000001229ebcac:   mov    0xc(%rsi),%eax               ; implicit exception: dispatches to 0x00000001229ebee7
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
  0x00000001229ebcaf:   cmp    %eax,%ecx
  0x00000001229ebcb1:   jae    0x00000001229ebe91
  0x00000001229ebcb7:   mov    %edx,%ebp
  0x00000001229ebcb9:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@6 (line 40)
  0x00000001229ebcbb:   cmp    %ecx,%edx
  0x00000001229ebcbd:   data16 xchg %ax,%ax
  0x00000001229ebcc0:   jge    0x00000001229ebe58           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
  0x00000001229ebcc6:   mov    0x10(%rsi,%rcx,4),%ebx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
  0x00000001229ebcca:   cmp    %eax,%edx
  0x00000001229ebccc:   jae    0x00000001229ebec0
  0x00000001229ebcd2:   movslq %ecx,%r10
  0x00000001229ebcd5:   movslq %eax,%r11
  0x00000001229ebcd8:   dec    %r10
  0x00000001229ebcdb:   nopl   0x0(%rax,%rax,1)
  0x00000001229ebce0:   cmp    %r11,%r10
  0x00000001229ebce3:   jae    0x00000001229ebec0
  0x00000001229ebce9:   mov    %edx,%r11d
  0x00000001229ebcec:   inc    %r11d                        ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
  0x00000001229ebcef:   mov    0x10(%rsi,%rdx,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
  0x00000001229ebcf4:   cmp    %ebx,%r10d
  0x00000001229ebcf7:   jle    0x00000001229ebcfe           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
  0x00000001229ebcf9:   mov    %ebp,%r8d
  0x00000001229ebcfc:   jmp    0x00000001229ebd1e
  0x00000001229ebcfe:   mov    %ebp,%r8d
  0x00000001229ebd01:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
  0x00000001229ebd04:   cmp    %eax,%r8d
  0x00000001229ebd07:   jae    0x00000001229ebdf5
  0x00000001229ebd0d:   movslq %ebp,%r9
  0x00000001229ebd10:   mov    0x14(%rsi,%r9,4),%ebp        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
  0x00000001229ebd15:   mov    %r10d,0x14(%rsi,%r9,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
  0x00000001229ebd1a:   mov    %ebp,0x10(%rsi,%rdx,4)
  0x00000001229ebd1e:   inc    %edx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
  0x00000001229ebd20:   cmp    %r11d,%edx
  0x00000001229ebd23:   jge    0x00000001229ebd2a           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
  0x00000001229ebd25:   mov    %r8d,%ebp
  0x00000001229ebd28:   jmp    0x00000001229ebcef
  0x00000001229ebd2a:   mov    %ecx,%r11d
  0x00000001229ebd2d:   dec    %r11d
  0x00000001229ebd30:   mov    $0x80000000,%r9d
  0x00000001229ebd36:   cmp    %r11d,%ecx
  0x00000001229ebd39:   cmovl  %r9d,%r11d
  0x00000001229ebd3d:   data16 xchg %ax,%ax
  0x00000001229ebd40:   cmp    %r11d,%edx
  0x00000001229ebd43:   jge    0x00000001229ebe14
  0x00000001229ebd49:   mov    $0x7d0,%r14d
  0x00000001229ebd4f:   xor    %r9d,%r9d
  0x00000001229ebd52:   jmp    0x00000001229ebd69           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
  0x00000001229ebd54:   mov    0x348(%r15),%r10             ; ImmutableOopMap {rsi=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
  0x00000001229ebd5b:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ;   {poll}
  0x00000001229ebd5e:   xchg   %ax,%ax
  0x00000001229ebd60:   cmp    %r11d,%edx
  0x00000001229ebd63:   jge    0x00000001229ebe14           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
  0x00000001229ebd69:   mov    %r11d,%edi
  0x00000001229ebd6c:   sub    %edx,%edi
  0x00000001229ebd6e:   cmp    %edx,%r11d
  0x00000001229ebd71:   cmovl  %r9d,%edi
  0x00000001229ebd75:   cmp    $0x7d0,%edi
  0x00000001229ebd7b:   cmova  %r14d,%edi
  0x00000001229ebd7f:   add    %edx,%edi
  0x00000001229ebd81:   jmp    0x00000001229ebda4
  0x00000001229ebd83:   vmovd  %ecx,%xmm0
  0x00000001229ebd87:   movslq %r13d,%rcx
  0x00000001229ebd8a:   mov    0x14(%rsi,%rcx,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
  0x00000001229ebd8f:   mov    %r10d,0x14(%rsi,%rcx,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
  0x00000001229ebd94:   mov    %r13d,0x14(%rsi,%rbp,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
  0x00000001229ebd99:   vmovd  %xmm0,%ecx
  0x00000001229ebd9d:   add    $0x2,%edx                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
  0x00000001229ebda0:   cmp    %edi,%edx
  0x00000001229ebda2:   jge    0x00000001229ebd54           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
  0x00000001229ebda4:   mov    0x10(%rsi,%rdx,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
  0x00000001229ebda9:   cmp    %ebx,%r10d
  0x00000001229ebdac:   jle    0x00000001229ebdb3           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
  0x00000001229ebdae:   mov    %r8d,%r13d
  0x00000001229ebdb1:   jmp    0x00000001229ebdcf
  0x00000001229ebdb3:   mov    %r8d,%r13d
  0x00000001229ebdb6:   inc    %r13d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
  0x00000001229ebdb9:   cmp    %eax,%r13d
  0x00000001229ebdbc:   jae    0x00000001229ebdf2
  0x00000001229ebdbe:   movslq %r8d,%r8
  0x00000001229ebdc1:   mov    0x14(%rsi,%r8,4),%ebp        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
  0x00000001229ebdc6:   mov    %r10d,0x14(%rsi,%r8,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
  0x00000001229ebdcb:   mov    %ebp,0x10(%rsi,%rdx,4)       ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
  0x00000001229ebdcf:   movslq %edx,%rbp
  0x00000001229ebdd2:   mov    0x14(%rsi,%rbp,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
  0x00000001229ebdd7:   cmp    %ebx,%r10d
  0x00000001229ebdda:   jle    0x00000001229ebde2           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
  0x00000001229ebddc:   mov    %r13d,%r8d
  0x00000001229ebddf:   nop
  0x00000001229ebde0:   jmp    0x00000001229ebd9d
  0x00000001229ebde2:   mov    %r13d,%r8d
  0x00000001229ebde5:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
  0x00000001229ebde8:   cmp    %eax,%r8d
  0x00000001229ebdeb:   jb     0x00000001229ebd83
  0x00000001229ebded:   inc    %edx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
  0x00000001229ebdef:   mov    %r8d,%r13d
  0x00000001229ebdf2:   mov    %r13d,%r8d
  0x00000001229ebdf5:   mov    %edx,(%rsp)
  0x00000001229ebdf8:   mov    %ecx,0x4(%rsp)
  0x00000001229ebdfc:   mov    %ebx,0x8(%rsp)
  0x00000001229ebe00:   mov    %rsi,0x10(%rsp)
  0x00000001229ebe05:   mov    %r8d,0x18(%rsp)
  0x00000001229ebe0a:   mov    $0xffffffe4,%esi
  0x00000001229ebe0f:   callq  0x000000011af73000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ebe14:   cmp    %ecx,%edx
  0x00000001229ebe16:   jge    0x00000001229ebe55           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
  0x00000001229ebe1c:   mov    0x10(%rsi,%rdx,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
  0x00000001229ebe21:   cmp    %ebx,%r11d
  0x00000001229ebe24:   jle    0x00000001229ebe2b           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
  0x00000001229ebe26:   mov    %r8d,%ebp
  0x00000001229ebe29:   jmp    0x00000001229ebe4a
  0x00000001229ebe2b:   mov    %r8d,%ebp
  0x00000001229ebe2e:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
  0x00000001229ebe30:   cmp    %eax,%ebp
  0x00000001229ebe32:   jae    0x00000001229ebedc
  0x00000001229ebe38:   movslq %r8d,%r10
  0x00000001229ebe3b:   mov    0x14(%rsi,%r10,4),%r9d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
  0x00000001229ebe40:   mov    %r11d,0x14(%rsi,%r10,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
  0x00000001229ebe45:   mov    %r9d,0x10(%rsi,%rdx,4)
  0x00000001229ebe4a:   inc    %edx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
  0x00000001229ebe4c:   cmp    %ecx,%edx
  0x00000001229ebe4e:   jge    0x00000001229ebe58
  0x00000001229ebe50:   mov    %ebp,%r8d
  0x00000001229ebe53:   jmp    0x00000001229ebe1c
  0x00000001229ebe55:   mov    %r8d,%ebp                    ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
  0x00000001229ebe58:   mov    %ebp,%r11d
  0x00000001229ebe5b:   inc    %r11d                        ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@59 (line 55)
  0x00000001229ebe5e:   xchg   %ax,%ax
  0x00000001229ebe60:   cmp    %eax,%r11d
  0x00000001229ebe63:   jae    0x00000001229ebea8
  0x00000001229ebe65:   mov    0x10(%rsi,%rcx,4),%r10d
  0x00000001229ebe6a:   movslq %ebp,%r8
  0x00000001229ebe6d:   mov    0x14(%rsi,%r8,4),%ebx        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
  0x00000001229ebe72:   mov    %r10d,0x14(%rsi,%r8,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
  0x00000001229ebe77:   mov    %ebx,0x10(%rsi,%rcx,4)       ;*synchronization entry
                                                            ; - Test::partition@-1 (line 39)
  0x00000001229ebe7b:   mov    %r11d,%eax
  0x00000001229ebe7e:   add    $0x30,%rsp
  0x00000001229ebe82:   pop    %rbp
  0x00000001229ebe83:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ebe8a:   ja     0x00000001229ebef4
  0x00000001229ebe90:   retq   
  0x00000001229ebe91:   mov    %edx,(%rsp)
  0x00000001229ebe94:   mov    %rsi,0x8(%rsp)
  0x00000001229ebe99:   mov    %ecx,0x10(%rsp)
  0x00000001229ebe9d:   mov    $0xffffffe4,%esi
  0x00000001229ebea2:   nop
  0x00000001229ebea3:   callq  0x000000011af73000           ; ImmutableOopMap {[8]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ebea8:   mov    %ecx,0x8(%rsp)
  0x00000001229ebeac:   mov    %rsi,0x10(%rsp)
  0x00000001229ebeb1:   mov    %r11d,0xc(%rsp)
  0x00000001229ebeb6:   mov    $0xffffffe4,%esi
  0x00000001229ebebb:   callq  0x000000011af73000           ; ImmutableOopMap {[16]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ebec0:   mov    %rsi,(%rsp)
  0x00000001229ebec4:   mov    %ebx,0xc(%rsp)
  0x00000001229ebec8:   mov    %edx,0x14(%rsp)
  0x00000001229ebecc:   mov    %ecx,0x18(%rsp)
  0x00000001229ebed0:   mov    $0xffffff76,%esi
  0x00000001229ebed5:   xchg   %ax,%ax
  0x00000001229ebed7:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@15 (line 41)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ebedc:   mov    %edx,(%rsp)
  0x00000001229ebedf:   mov    %ebp,%r8d
  0x00000001229ebee2:   jmpq   0x00000001229ebdf8
  0x00000001229ebee7:   mov    $0xfffffff6,%esi
  0x00000001229ebeec:   mov    %ecx,%ebp
  0x00000001229ebeee:   nop
  0x00000001229ebeef:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ebef4:   movabs $0x1229ebe83,%r10            ;   {internal_word}
  0x00000001229ebefe:   mov    %r10,0x358(%r15)
  0x00000001229ebf05:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ebf0a:   hlt    
  0x00000001229ebf0b:   hlt    
  0x00000001229ebf0c:   hlt    
  0x00000001229ebf0d:   hlt    
  0x00000001229ebf0e:   hlt    
  0x00000001229ebf0f:   hlt    
  0x00000001229ebf10:   hlt    
  0x00000001229ebf11:   hlt    
  0x00000001229ebf12:   hlt    
  0x00000001229ebf13:   hlt    
  0x00000001229ebf14:   hlt    
  0x00000001229ebf15:   hlt    
  0x00000001229ebf16:   hlt    
  0x00000001229ebf17:   hlt    
  0x00000001229ebf18:   hlt    
  0x00000001229ebf19:   hlt    
  0x00000001229ebf1a:   hlt    
  0x00000001229ebf1b:   hlt    
  0x00000001229ebf1c:   hlt    
  0x00000001229ebf1d:   hlt    
  0x00000001229ebf1e:   hlt    
  0x00000001229ebf1f:   hlt    
[Exception Handler]
  0x00000001229ebf20:   jmpq   0x000000011af85a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00000001229ebf25:   callq  0x00000001229ebf2a
  0x00000001229ebf2a:   subq   $0x5,(%rsp)
  0x00000001229ebf2f:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ebf34:   hlt    
  0x00000001229ebf35:   hlt    
  0x00000001229ebf36:   hlt    
  0x00000001229ebf37:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     120   14       2       Test::sort (29 bytes)
 total in heap  [0x000000011b4b5710,0x000000011b4b5db0] = 1696
 relocation     [0x000000011b4b5870,0x000000011b4b58f0] = 128
 main code      [0x000000011b4b5900,0x000000011b4b5ac0] = 448
 stub code      [0x000000011b4b5ac0,0x000000011b4b5b60] = 160
 oops           [0x000000011b4b5b60,0x000000011b4b5b68] = 8
 metadata       [0x000000011b4b5b68,0x000000011b4b5b70] = 8
 scopes data    [0x000000011b4b5b70,0x000000011b4b5c58] = 232
 scopes pcs     [0x000000011b4b5c58,0x000000011b4b5da8] = 336
 dependencies   [0x000000011b4b5da8,0x000000011b4b5db0] = 8

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00000001124005e0} 'sort' '([III)V' in 'Test'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x90]  (sp of caller)
  0x000000011b4b5900:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b5907:   push   %rbp
  0x000000011b4b5908:   sub    $0x80,%rsp
  0x000000011b4b590f:   mov    %rsi,0x58(%rsp)
  0x000000011b4b5914:   mov    %edx,0x50(%rsp)
  0x000000011b4b5918:   mov    %ecx,0x54(%rsp)
  0x000000011b4b591c:   movabs $0x112400eb8,%rdi
  0x000000011b4b5926:   mov    0x8(%rdi),%ebx
  0x000000011b4b5929:   add    $0x2,%ebx
  0x000000011b4b592c:   mov    %ebx,0x8(%rdi)
  0x000000011b4b592f:   and    $0xffe,%ebx
  0x000000011b4b5935:   cmp    $0x0,%ebx
  0x000000011b4b5938:   je     0x000000011b4b5a42           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@0 (line 64)
  0x000000011b4b593e:   cmp    %ecx,%edx
  0x000000011b4b5940:   jge    0x000000011b4b5a2c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
  0x000000011b4b5946:   mov    %rsi,%rdi
  0x000000011b4b5949:   mov    %rdi,%rsi
  0x000000011b4b594c:   mov    %rdx,%rbx
  0x000000011b4b594f:   mov    %rbx,%rdx
  0x000000011b4b5952:   mov    %rcx,%rax
  0x000000011b4b5955:   mov    %rax,%rcx                    ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
  0x000000011b4b5958:   nopl   0x0(%rax)
  0x000000011b4b595f:   callq  0x00000001229ebca0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {static_call}
  0x000000011b4b5964:   mov    %rax,%rdi
  0x000000011b4b5967:   dec    %edi
  0x000000011b4b5969:   mov    0x50(%rsp),%edx
  0x000000011b4b596d:   cmp    %edi,%edx
  0x000000011b4b596f:   jge    0x000000011b4b59c8           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
                                                            ; - Test::sort@17 (line 71)
  0x000000011b4b5975:   mov    %eax,0x64(%rsp)
  0x000000011b4b5979:   mov    0x58(%rsp),%rsi
  0x000000011b4b597e:   mov    %rdx,%rbx
  0x000000011b4b5981:   mov    %rbx,%rdx
  0x000000011b4b5984:   mov    %rdi,%rcx                    ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x000000011b4b5987:   mov    %edi,0x60(%rsp)
  0x000000011b4b598b:   nopl   0x0(%rax)
  0x000000011b4b598f:   callq  0x00000001229ebca0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {static_call}
  0x000000011b4b5994:   mov    %rax,%rcx
  0x000000011b4b5997:   dec    %ecx
  0x000000011b4b5999:   mov    0x58(%rsp),%rsi
  0x000000011b4b599e:   mov    0x50(%rsp),%edx              ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@17 (line 71)
  0x000000011b4b59a2:   mov    %eax,0x68(%rsp)
  0x000000011b4b59a6:   nop
  0x000000011b4b59a7:   callq  0x000000011b4b5900           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {static_call}
  0x000000011b4b59ac:   mov    0x68(%rsp),%eax
  0x000000011b4b59b0:   inc    %eax
  0x000000011b4b59b2:   mov    0x58(%rsp),%rsi
  0x000000011b4b59b7:   mov    %rax,%rdx
  0x000000011b4b59ba:   mov    0x60(%rsp),%ecx              ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@17 (line 71)
  0x000000011b4b59be:   nop
  0x000000011b4b59bf:   callq  0x000000011b4b5900           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {static_call}
  0x000000011b4b59c4:   mov    0x64(%rsp),%eax
  0x000000011b4b59c8:   inc    %eax
  0x000000011b4b59ca:   cmp    0x54(%rsp),%eax
  0x000000011b4b59ce:   jge    0x000000011b4b5a2c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
                                                            ; - Test::sort@25 (line 72)
  0x000000011b4b59d4:   mov    0x54(%rsp),%ecx
  0x000000011b4b59d8:   mov    0x58(%rsp),%rsi
  0x000000011b4b59dd:   mov    %rsi,%rdi
  0x000000011b4b59e0:   mov    %rdi,%rsi
  0x000000011b4b59e3:   mov    %rax,%rdx
  0x000000011b4b59e6:   mov    %rcx,%rbx
  0x000000011b4b59e9:   mov    %rbx,%rcx                    ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x000000011b4b59ec:   mov    %eax,0x6c(%rsp)
  0x000000011b4b59f0:   nopl   0x0(%rax)
  0x000000011b4b59f7:   callq  0x00000001229ebca0           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {static_call}
  0x000000011b4b59fc:   mov    %rax,%rcx
  0x000000011b4b59ff:   dec    %ecx
  0x000000011b4b5a01:   mov    0x58(%rsp),%rsi
  0x000000011b4b5a06:   mov    0x6c(%rsp),%edx              ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@25 (line 72)
  0x000000011b4b5a0a:   mov    %eax,0x70(%rsp)
  0x000000011b4b5a0e:   nop
  0x000000011b4b5a0f:   callq  0x000000011b4b5900           ; ImmutableOopMap {[88]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {static_call}
  0x000000011b4b5a14:   mov    0x70(%rsp),%eax
  0x000000011b4b5a18:   inc    %eax
  0x000000011b4b5a1a:   mov    0x58(%rsp),%rsi
  0x000000011b4b5a1f:   mov    %rax,%rdx
  0x000000011b4b5a22:   mov    0x54(%rsp),%ecx              ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@25 (line 72)
  0x000000011b4b5a26:   nop
  0x000000011b4b5a27:   callq  0x000000011b4b5900           ; ImmutableOopMap {}
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {static_call}
  0x000000011b4b5a2c:   add    $0x80,%rsp
  0x000000011b4b5a33:   pop    %rbp
  0x000000011b4b5a34:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b5a3b:   ja     0x000000011b4b5a63
  0x000000011b4b5a41:   retq   
  0x000000011b4b5a42:   movabs $0x1124005e0,%r10            ;   {metadata({method} {0x00000001124005e0} 'sort' '([III)V' in 'Test')}
  0x000000011b4b5a4c:   mov    %r10,0x8(%rsp)
  0x000000011b4b5a51:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b5a59:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop [88]=Oop }
                                                            ;*synchronization entry
                                                            ; - Test::sort@-1 (line 64)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b5a5e:   jmpq   0x000000011b4b593e
  0x000000011b4b5a63:   movabs $0x11b4b5a34,%r10            ;   {internal_word}
  0x000000011b4b5a6d:   mov    %r10,0x358(%r15)
  0x000000011b4b5a74:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b5a79:   nop
  0x000000011b4b5a7a:   nop
  0x000000011b4b5a7b:   mov    0x3d0(%r15),%rax
  0x000000011b4b5a82:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b5a8d:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b5a98:   add    $0x80,%rsp
  0x000000011b4b5a9f:   pop    %rbp
  0x000000011b4b5aa0:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b5aa5:   hlt    
  0x000000011b4b5aa6:   hlt    
  0x000000011b4b5aa7:   hlt    
  0x000000011b4b5aa8:   hlt    
  0x000000011b4b5aa9:   hlt    
  0x000000011b4b5aaa:   hlt    
  0x000000011b4b5aab:   hlt    
  0x000000011b4b5aac:   hlt    
  0x000000011b4b5aad:   hlt    
  0x000000011b4b5aae:   hlt    
  0x000000011b4b5aaf:   hlt    
  0x000000011b4b5ab0:   hlt    
  0x000000011b4b5ab1:   hlt    
  0x000000011b4b5ab2:   hlt    
  0x000000011b4b5ab3:   hlt    
  0x000000011b4b5ab4:   hlt    
  0x000000011b4b5ab5:   hlt    
  0x000000011b4b5ab6:   hlt    
  0x000000011b4b5ab7:   hlt    
  0x000000011b4b5ab8:   hlt    
  0x000000011b4b5ab9:   hlt    
  0x000000011b4b5aba:   hlt    
  0x000000011b4b5abb:   hlt    
  0x000000011b4b5abc:   hlt    
  0x000000011b4b5abd:   hlt    
  0x000000011b4b5abe:   hlt    
  0x000000011b4b5abf:   hlt    
[Stub Code]
  0x000000011b4b5ac0:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000000011b4b5ac5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5acf:   jmpq   0x000000011b4b5acf           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5ad4:   nop
  0x000000011b4b5ad5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5adf:   jmpq   0x000000011b4b5adf           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5ae4:   nop
  0x000000011b4b5ae5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5aef:   jmpq   0x000000011b4b5aef           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5af4:   nop
  0x000000011b4b5af5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5aff:   jmpq   0x000000011b4b5aff           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5b04:   nop
  0x000000011b4b5b05:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5b0f:   jmpq   0x000000011b4b5b0f           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5b14:   nop
  0x000000011b4b5b15:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5b1f:   jmpq   0x000000011b4b5b1f           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b5b24:   nop
  0x000000011b4b5b25:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b5b2f:   jmpq   0x000000011b4b5b2f           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x000000011b4b5b34:   callq  0x000000011b015e00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b4b5b39:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b5b43:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b5b47:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b5b4c:   hlt    
[Deopt Handler Code]
  0x000000011b4b5b4d:   movabs $0x11b4b5b4d,%r10            ;   {section_word}
  0x000000011b4b5b57:   push   %r10
  0x000000011b4b5b59:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b5b5e:   hlt    
  0x000000011b4b5b5f:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     129   18       4       java.util.Random::next (47 bytes)
 total in heap  [0x00000001229ec410,0x00000001229ec7d0] = 960
 relocation     [0x00000001229ec570,0x00000001229ec588] = 24
 main code      [0x00000001229ec5a0,0x00000001229ec680] = 224
 stub code      [0x00000001229ec680,0x00000001229ec698] = 24
 metadata       [0x00000001229ec698,0x00000001229ec6a8] = 16
 scopes data    [0x00000001229ec6a8,0x00000001229ec708] = 96
 scopes pcs     [0x00000001229ec708,0x00000001229ec7b8] = 176
 dependencies   [0x00000001229ec7b8,0x00000001229ec7c0] = 8
 nul chk table  [0x00000001229ec7c0,0x00000001229ec7d0] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000cdfe8} 'next' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x30]  (sp of caller)
  0x00000001229ec5a0:   mov    0x8(%rsi),%r10d
  0x00000001229ec5a4:   movabs $0x800000000,%r11
  0x00000001229ec5ae:   add    %r11,%r10
  0x00000001229ec5b1:   cmp    %r10,%rax
  0x00000001229ec5b4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229ec5ba:   xchg   %ax,%ax
  0x00000001229ec5bc:   nopl   0x0(%rax)
[Verified Entry Point]
  0x00000001229ec5c0:   mov    %eax,-0x14000(%rsp)
  0x00000001229ec5c7:   push   %rbp
  0x00000001229ec5c8:   sub    $0x20,%rsp                   ;*synchronization entry
                                                            ; - java.util.Random::next@-1 (line 205)
  0x00000001229ec5cc:   mov    0x18(%rsi),%r10d             ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
  0x00000001229ec5d0:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00000001229ec644
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
  0x00000001229ec5d5:   movabs $0xffffffffffff,%r11
  0x00000001229ec5df:   movabs $0x5deece66d,%r8
  0x00000001229ec5e9:   mov    %rax,%r9
  0x00000001229ec5ec:   imul   %r8,%r9
  0x00000001229ec5f0:   add    $0xb,%r9
  0x00000001229ec5f4:   and    %r11,%r9                     ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 208)
  0x00000001229ec5f7:   lock cmpxchg %r9,0x10(%r12,%r10,8)
  0x00000001229ec5fe:   sete   %bpl
  0x00000001229ec602:   movzbl %bpl,%ebp                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
  0x00000001229ec606:   test   %ebp,%ebp
  0x00000001229ec608:   je     0x00000001229ec62a           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
  0x00000001229ec60a:   mov    $0x30,%ecx
  0x00000001229ec60f:   sub    %edx,%ecx
  0x00000001229ec611:   shr    %cl,%r9
  0x00000001229ec614:   mov    %r9d,%eax                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 210)
  0x00000001229ec617:   add    $0x20,%rsp
  0x00000001229ec61b:   pop    %rbp
  0x00000001229ec61c:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ec623:   ja     0x00000001229ec650
  0x00000001229ec629:   retq   
  0x00000001229ec62a:   mov    $0xffffff45,%esi
  0x00000001229ec62f:   mov    %edx,(%rsp)
  0x00000001229ec632:   mov    %r10d,0x4(%rsp)
  0x00000001229ec637:   mov    %r9,0x8(%rsp)
  0x00000001229ec63c:   data16 xchg %ax,%ax
  0x00000001229ec63f:   callq  0x000000011af73000           ; ImmutableOopMap {[4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ec644:   mov    $0xfffffff6,%esi
  0x00000001229ec649:   xchg   %ax,%ax
  0x00000001229ec64b:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ec650:   movabs $0x1229ec61c,%r10            ;   {internal_word}
  0x00000001229ec65a:   mov    %r10,0x358(%r15)
  0x00000001229ec661:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ec666:   hlt    
  0x00000001229ec667:   hlt    
  0x00000001229ec668:   hlt    
  0x00000001229ec669:   hlt    
  0x00000001229ec66a:   hlt    
  0x00000001229ec66b:   hlt    
  0x00000001229ec66c:   hlt    
  0x00000001229ec66d:   hlt    
  0x00000001229ec66e:   hlt    
  0x00000001229ec66f:   hlt    
  0x00000001229ec670:   hlt    
  0x00000001229ec671:   hlt    
  0x00000001229ec672:   hlt    
  0x00000001229ec673:   hlt    
  0x00000001229ec674:   hlt    
  0x00000001229ec675:   hlt    
  0x00000001229ec676:   hlt    
  0x00000001229ec677:   hlt    
  0x00000001229ec678:   hlt    
  0x00000001229ec679:   hlt    
  0x00000001229ec67a:   hlt    
  0x00000001229ec67b:   hlt    
  0x00000001229ec67c:   hlt    
  0x00000001229ec67d:   hlt    
  0x00000001229ec67e:   hlt    
  0x00000001229ec67f:   hlt    
[Exception Handler]
  0x00000001229ec680:   jmpq   0x000000011af85a80           ;   {no_reloc}
[Deopt Handler Code]
  0x00000001229ec685:   callq  0x00000001229ec68a
  0x00000001229ec68a:   subq   $0x5,(%rsp)
  0x00000001229ec68f:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ec694:   hlt    
  0x00000001229ec695:   hlt    
  0x00000001229ec696:   hlt    
  0x00000001229ec697:   hlt    
--------------------------------------------------------------------------------

============================= C1-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c1)     133   17       2       java.util.Random::nextInt (74 bytes)
 total in heap  [0x000000011b4b5e10,0x000000011b4b6558] = 1864
 relocation     [0x000000011b4b5f70,0x000000011b4b5fd0] = 96
 main code      [0x000000011b4b5fe0,0x000000011b4b6280] = 672
 stub code      [0x000000011b4b6280,0x000000011b4b62e0] = 96
 metadata       [0x000000011b4b62e0,0x000000011b4b62f0] = 16
 scopes data    [0x000000011b4b62f0,0x000000011b4b63b0] = 192
 scopes pcs     [0x000000011b4b63b0,0x000000011b4b6540] = 400
 dependencies   [0x000000011b4b6540,0x000000011b4b6548] = 8
 nul chk table  [0x000000011b4b6548,0x000000011b4b6558] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x60]  (sp of caller)
  0x000000011b4b5fe0:   mov    0x8(%rsi),%r10d
  0x000000011b4b5fe4:   movabs $0x800000000,%r11
  0x000000011b4b5fee:   add    %r11,%r10
  0x000000011b4b5ff1:   cmp    %rax,%r10
  0x000000011b4b5ff4:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x000000011b4b5ffa:   nopw   0x0(%rax,%rax,1)
[Verified Entry Point]
  0x000000011b4b6000:   mov    %eax,-0x14000(%rsp)
  0x000000011b4b6007:   push   %rbp
  0x000000011b4b6008:   sub    $0x50,%rsp
  0x000000011b4b600c:   mov    %rsi,0x30(%rsp)
  0x000000011b4b6011:   mov    %edx,0x28(%rsp)
  0x000000011b4b6015:   movabs $0x112011740,%rdi
  0x000000011b4b601f:   mov    0x8(%rdi),%ebx
  0x000000011b4b6022:   add    $0x2,%ebx
  0x000000011b4b6025:   mov    %ebx,0x8(%rdi)
  0x000000011b4b6028:   and    $0xffe,%ebx
  0x000000011b4b602e:   cmp    $0x0,%ebx
  0x000000011b4b6031:   je     0x000000011b4b61b6           ;*iload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@0 (line 321)
  0x000000011b4b6037:   cmp    $0x0,%edx
  0x000000011b4b603a:   jle    0x000000011b4b6136           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
  0x000000011b4b6040:   mov    $0x1f,%edx
  0x000000011b4b6045:   mov    %rsi,%rbx
  0x000000011b4b6048:   mov    %rbx,%rsi                    ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x000000011b4b604b:   nopl   0x0(%rax)
  0x000000011b4b604f:   callq  0x00000001229ec5c0           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {optimized virtual_call}
  0x000000011b4b6054:   mov    0x28(%rsp),%edx
  0x000000011b4b6058:   dec    %edx
  0x000000011b4b605a:   mov    %edx,0x2c(%rsp)
  0x000000011b4b605e:   mov    %rdx,%rsi
  0x000000011b4b6061:   and    0x28(%rsp),%esi
  0x000000011b4b6065:   cmp    $0x0,%esi
  0x000000011b4b6068:   je     0x000000011b4b60ff           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
  0x000000011b4b606e:   mov    %rax,%rsi
  0x000000011b4b6071:   mov    %rdx,%rdi
  0x000000011b4b6074:   jmpq   0x000000011b4b60c7           ;*iload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@47 (line 329)
  0x000000011b4b6079:   nopl   0x0(%rax)
  0x000000011b4b6080:   mov    $0x1f,%edx
  0x000000011b4b6085:   mov    %rbx,%rsi                    ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
  0x000000011b4b6088:   nopl   0x0(%rax)
  0x000000011b4b608f:   callq  0x000000011af6da80           ; ImmutableOopMap {[48]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ;   {optimized virtual_call}
  0x000000011b4b6094:   movabs $0x112011740,%rcx
  0x000000011b4b609e:   mov    0xc(%rcx),%edx
  0x000000011b4b60a1:   add    $0x2,%edx
  0x000000011b4b60a4:   mov    %edx,0xc(%rcx)
  0x000000011b4b60a7:   and    $0x7ffe,%edx
  0x000000011b4b60ad:   cmp    $0x0,%edx
  0x000000011b4b60b0:   je     0x000000011b4b61d7           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
  0x000000011b4b60b6:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
  0x000000011b4b60bd:   test   %eax,(%r10)                  ;   {poll}
  0x000000011b4b60c0:   mov    %rax,%rsi                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
  0x000000011b4b60c3:   mov    0x2c(%rsp),%edi
  0x000000011b4b60c7:   mov    0x28(%rsp),%edx
  0x000000011b4b60cb:   mov    0x30(%rsp),%rbx
  0x000000011b4b60d0:   mov    %rsi,%rax
  0x000000011b4b60d3:   mov    %rdx,%rcx
  0x000000011b4b60d6:   cmp    $0x80000000,%eax
  0x000000011b4b60dc:   jne    0x000000011b4b60ed
  0x000000011b4b60e2:   xor    %edx,%edx
  0x000000011b4b60e4:   cmp    $0xffffffff,%ecx
  0x000000011b4b60e7:   je     0x000000011b4b60f0
  0x000000011b4b60ed:   cltd   
  0x000000011b4b60ee:   idiv   %ecx                         ; implicit exception: dispatches to 0x000000011b4b61f8
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x000000011b4b60f0:   sub    %edx,%esi
  0x000000011b4b60f2:   add    %edi,%esi
  0x000000011b4b60f4:   cmp    $0x0,%esi
  0x000000011b4b60f7:   jge    0x000000011b4b6120
  0x000000011b4b60fd:   jmp    0x000000011b4b6080           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x000000011b4b60ff:   mov    0x28(%rsp),%edx
  0x000000011b4b6103:   movslq %edx,%rdx
  0x000000011b4b6106:   movslq %eax,%rax
  0x000000011b4b6109:   mov    %rax,%rcx
  0x000000011b4b610c:   mov    %rdx,%rax
  0x000000011b4b610f:   imul   %rcx,%rax
  0x000000011b4b6113:   mov    $0x1f,%ecx
  0x000000011b4b6118:   sar    %cl,%rax
  0x000000011b4b611b:   mov    %eax,%eax
  0x000000011b4b611d:   mov    %rax,%rdx                    ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@41 (line 326)
  0x000000011b4b6120:   mov    %rdx,%rax
  0x000000011b4b6123:   add    $0x50,%rsp
  0x000000011b4b6127:   pop    %rbp
  0x000000011b4b6128:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x000000011b4b612f:   ja     0x000000011b4b61fd
  0x000000011b4b6135:   retq                                ;*ireturn {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@73 (line 333)
  0x000000011b4b6136:   xchg   %ax,%ax
  0x000000011b4b6138:   jmpq   0x000000011b4b6222           ;   {no_reloc}
  0x000000011b4b613d:   add    %al,(%rax)
  0x000000011b4b613f:   add    %al,(%rax)
  0x000000011b4b6141:   add    %cl,-0x75(%rcx)
  0x000000011b4b6144:   xchg   %ecx,(%rax)
  0x000000011b4b6146:   add    %eax,(%rax)
  0x000000011b4b6148:   add    %cl,-0x73(%rax)
  0x000000011b4b614b:   js     0x000000011b4b6175
  0x000000011b4b614d:   cmp    0x118(%r15),%rdi
  0x000000011b4b6154:   ja     0x000000011b4b622c
  0x000000011b4b615a:   mov    %rdi,0x108(%r15)
  0x000000011b4b6161:   movq   $0x1,(%rax)
  0x000000011b4b6168:   mov    %rdx,%rcx
  0x000000011b4b616b:   movabs $0x800000000,%r10
  0x000000011b4b6175:   sub    %r10,%rcx
  0x000000011b4b6178:   mov    %ecx,0x8(%rax)
  0x000000011b4b617b:   xor    %rcx,%rcx
  0x000000011b4b617e:   mov    %ecx,0xc(%rax)
  0x000000011b4b6181:   xor    %rcx,%rcx
  0x000000011b4b6184:   mov    %rcx,0x10(%rax)
  0x000000011b4b6188:   mov    %rcx,0x18(%rax)
  0x000000011b4b618c:   mov    %rcx,0x20(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
  0x000000011b4b6190:   movabs $0x7ffe4b888,%rdx            ;   {oop("bound must be positive"{0x00000007ffe4b888})}
  0x000000011b4b619a:   mov    %rax,%rsi                    ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 322)
  0x000000011b4b619d:   mov    %rax,0x38(%rsp)
  0x000000011b4b61a2:   nopl   0x0(%rax,%rax,1)
  0x000000011b4b61a7:   callq  0x000000011af6da80           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@10 (line 322)
                                                            ;   {optimized virtual_call}
  0x000000011b4b61ac:   mov    0x38(%rsp),%rax
  0x000000011b4b61b1:   jmpq   0x000000011b4b6258
  0x000000011b4b61b6:   movabs $0x8000ce0f0,%r10            ;   {metadata({method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random')}
  0x000000011b4b61c0:   mov    %r10,0x8(%rsp)
  0x000000011b4b61c5:   movq   $0xffffffffffffffff,(%rsp)
  0x000000011b4b61cd:   callq  0x000000011b019400           ; ImmutableOopMap {rsi=Oop [48]=Oop }
                                                            ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 321)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b61d2:   jmpq   0x000000011b4b6037
  0x000000011b4b61d7:   movabs $0x8000ce0f0,%r10            ;   {metadata({method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random')}
  0x000000011b4b61e1:   mov    %r10,0x8(%rsp)
  0x000000011b4b61e6:   movq   $0x45,(%rsp)
  0x000000011b4b61ee:   callq  0x000000011b019400           ; ImmutableOopMap {[48]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
                                                            ;   {runtime_call counter_overflow Runtime1 stub}
  0x000000011b4b61f3:   jmpq   0x000000011b4b60b6
  0x000000011b4b61f8:   callq  0x000000011b013d20           ; ImmutableOopMap {rbx=Oop [48]=Oop }
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ;   {runtime_call throw_div0_exception Runtime1 stub}
  0x000000011b4b61fd:   movabs $0x11b4b6128,%r10            ;   {internal_word}
  0x000000011b4b6207:   mov    %r10,0x358(%r15)
  0x000000011b4b620e:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x000000011b4b6213:   movabs $0x0,%rdx                    ;   {metadata(NULL)}
  0x000000011b4b621d:   mov    $0xa050f00,%eax
  0x000000011b4b6222:   callq  0x000000011b018380           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
                                                            ;   {runtime_call load_klass_patching Runtime1 stub}
  0x000000011b4b6227:   jmpq   0x000000011b4b6138
  0x000000011b4b622c:   mov    %rdx,%rdx
  0x000000011b4b622f:   callq  0x000000011b014900           ; ImmutableOopMap {}
                                                            ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@4 (line 322)
                                                            ;   {runtime_call fast_new_instance Runtime1 stub}
  0x000000011b4b6234:   jmpq   0x000000011b4b6190
  0x000000011b4b6239:   nop
  0x000000011b4b623a:   nop
  0x000000011b4b623b:   mov    0x3d0(%r15),%rax
  0x000000011b4b6242:   movq   $0x0,0x3d0(%r15)
  0x000000011b4b624d:   movq   $0x0,0x3d8(%r15)
  0x000000011b4b6258:   add    $0x50,%rsp
  0x000000011b4b625c:   pop    %rbp
  0x000000011b4b625d:   jmpq   0x000000011af85100           ;   {runtime_call unwind_exception Runtime1 stub}
  0x000000011b4b6262:   hlt    
  0x000000011b4b6263:   hlt    
  0x000000011b4b6264:   hlt    
  0x000000011b4b6265:   hlt    
  0x000000011b4b6266:   hlt    
  0x000000011b4b6267:   hlt    
  0x000000011b4b6268:   hlt    
  0x000000011b4b6269:   hlt    
  0x000000011b4b626a:   hlt    
  0x000000011b4b626b:   hlt    
  0x000000011b4b626c:   hlt    
  0x000000011b4b626d:   hlt    
  0x000000011b4b626e:   hlt    
  0x000000011b4b626f:   hlt    
  0x000000011b4b6270:   hlt    
  0x000000011b4b6271:   hlt    
  0x000000011b4b6272:   hlt    
  0x000000011b4b6273:   hlt    
  0x000000011b4b6274:   hlt    
  0x000000011b4b6275:   hlt    
  0x000000011b4b6276:   hlt    
  0x000000011b4b6277:   hlt    
  0x000000011b4b6278:   hlt    
  0x000000011b4b6279:   hlt    
  0x000000011b4b627a:   hlt    
  0x000000011b4b627b:   hlt    
  0x000000011b4b627c:   hlt    
  0x000000011b4b627d:   hlt    
  0x000000011b4b627e:   hlt    
  0x000000011b4b627f:   hlt    
[Stub Code]
  0x000000011b4b6280:   nopl   0x0(%rax,%rax,1)             ;   {no_reloc}
  0x000000011b4b6285:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b628f:   jmpq   0x000000011b4b628f           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b6294:   nop
  0x000000011b4b6295:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b629f:   jmpq   0x000000011b4b629f           ;   {runtime_call const_jargs+-253661281}
  0x000000011b4b62a4:   nop
  0x000000011b4b62a5:   movabs $0x0,%rbx                    ;   {static_stub}
  0x000000011b4b62af:   jmpq   0x000000011b4b62af           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x000000011b4b62b4:   callq  0x000000011b015e00           ;   {runtime_call handle_exception_from_callee Runtime1 stub}
  0x000000011b4b62b9:   movabs $0x1109e999d,%rdi            ;   {external_word}
  0x000000011b4b62c3:   and    $0xfffffffffffffff0,%rsp
  0x000000011b4b62c7:   callq  0x00000001106efa38           ;   {runtime_call _ZN14MacroAssembler7debug64EPcxPx}
  0x000000011b4b62cc:   hlt    
[Deopt Handler Code]
  0x000000011b4b62cd:   movabs $0x11b4b62cd,%r10            ;   {section_word}
  0x000000011b4b62d7:   push   %r10
  0x000000011b4b62d9:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x000000011b4b62de:   hlt    
  0x000000011b4b62df:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     144   19       4       Test::sort (29 bytes)
 total in heap  [0x00000001229ec810,0x00000001229ee238] = 6696
 relocation     [0x00000001229ec970,0x00000001229ec9d0] = 96
 main code      [0x00000001229ec9e0,0x00000001229ed2e0] = 2304
 stub code      [0x00000001229ed2e0,0x00000001229ed330] = 80
 oops           [0x00000001229ed330,0x00000001229ed338] = 8
 metadata       [0x00000001229ed338,0x00000001229ed348] = 16
 scopes data    [0x00000001229ed348,0x00000001229ed810] = 1224
 scopes pcs     [0x00000001229ed810,0x00000001229ee1c0] = 2480
 dependencies   [0x00000001229ee1c0,0x00000001229ee1c8] = 8
 handler table  [0x00000001229ee1c8,0x00000001229ee228] = 96
 nul chk table  [0x00000001229ee228,0x00000001229ee238] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x00000001124005e0} 'sort' '([III)V' in 'Test'
  # parm0:    rsi:rsi   = '[I'
  # parm1:    rdx       = int
  # parm2:    rcx       = int
  #           [sp+0x60]  (sp of caller)
  0x00000001229ec9e0:   mov    %eax,-0x14000(%rsp)
  0x00000001229ec9e7:   push   %rbp
  0x00000001229ec9e8:   sub    $0x50,%rsp                   ;*synchronization entry
                                                            ; - Test::sort@-1 (line 64)
  0x00000001229ec9ec:   mov    %ecx,0x28(%rsp)
  0x00000001229ec9f0:   cmp    %ecx,%edx
  0x00000001229ec9f2:   jge    0x00000001229ecc9c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
  0x00000001229ec9f8:   mov    %rsi,0x38(%rsp)
  0x00000001229ec9fd:   data16 xchg %ax,%ax
  0x00000001229eca00:   mov    0xc(%rsi),%ebx               ; implicit exception: dispatches to 0x00000001229ed2a9
  0x00000001229eca03:   cmp    %ebx,%ecx
  0x00000001229eca05:   jae    0x00000001229ed15c
  0x00000001229eca0b:   mov    0x10(%rsi,%rcx,4),%ecx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca0f:   mov    %edx,%r9d
  0x00000001229eca12:   dec    %r9d                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@6 (line 40)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca15:   cmp    %ebx,%edx
  0x00000001229eca17:   jae    0x00000001229ed178
  0x00000001229eca1d:   movslq %ebx,%r11
  0x00000001229eca20:   movslq 0x28(%rsp),%r10
  0x00000001229eca25:   dec    %r10
  0x00000001229eca28:   cmp    %r11,%r10
  0x00000001229eca2b:   jae    0x00000001229ed178
  0x00000001229eca31:   mov    %edx,%edi
  0x00000001229eca33:   inc    %edi
  0x00000001229eca35:   mov    %edx,%r8d
  0x00000001229eca38:   mov    %r9d,%eax                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca3b:   mov    0x38(%rsp),%r10
  0x00000001229eca40:   mov    0x10(%r10,%r8,4),%r10d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca45:   cmp    %ecx,%r10d
  0x00000001229eca48:   jle    0x00000001229eca4e           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca4a:   mov    %eax,%ebp
  0x00000001229eca4c:   jmp    0x00000001229eca75
  0x00000001229eca4e:   mov    %eax,%ebp
  0x00000001229eca50:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca52:   cmp    %ebx,%ebp
  0x00000001229eca54:   jae    0x00000001229ecba7
  0x00000001229eca5a:   movslq %eax,%rsi
  0x00000001229eca5d:   mov    0x38(%rsp),%rax
  0x00000001229eca62:   mov    0x14(%rax,%rsi,4),%eax       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca66:   mov    0x38(%rsp),%r13
  0x00000001229eca6b:   mov    %r10d,0x14(%r13,%rsi,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca70:   mov    %eax,0x10(%r13,%r8,4)
  0x00000001229eca75:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca78:   cmp    %edi,%r8d
  0x00000001229eca7b:   jge    0x00000001229eca82           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eca7d:   mov    %ebp,%eax
  0x00000001229eca7f:   nop
  0x00000001229eca80:   jmp    0x00000001229eca3b
  0x00000001229eca82:   mov    0x28(%rsp),%r10d
  0x00000001229eca87:   dec    %r10d
  0x00000001229eca8a:   mov    $0x80000000,%eax
  0x00000001229eca8f:   mov    0x28(%rsp),%r13d
  0x00000001229eca94:   cmp    %r10d,%r13d
  0x00000001229eca97:   cmovl  %eax,%r10d
  0x00000001229eca9b:   nopl   0x0(%rax,%rax,1)
  0x00000001229ecaa0:   cmp    %r10d,%r8d
  0x00000001229ecaa3:   jge    0x00000001229eccbc
  0x00000001229ecaa9:   jmp    0x00000001229ecad3           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecaab:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecab2:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {poll}
  0x00000001229ecab5:   cmp    0x4(%rsp),%r8d
  0x00000001229ecaba:   nopw   0x0(%rax,%rax,1)
  0x00000001229ecac0:   jge    0x00000001229eccaf
  0x00000001229ecac6:   mov    (%rsp),%ebx
  0x00000001229ecac9:   vmovd  %xmm0,%r9d
  0x00000001229ecace:   mov    0x4(%rsp),%r10d              ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecad3:   mov    %r10d,%esi
  0x00000001229ecad6:   sub    %r8d,%esi
  0x00000001229ecad9:   xor    %r13d,%r13d
  0x00000001229ecadc:   cmp    %r8d,%r10d
  0x00000001229ecadf:   cmovl  %r13d,%esi
  0x00000001229ecae3:   cmp    $0x7d0,%esi
  0x00000001229ecae9:   mov    $0x7d0,%r13d
  0x00000001229ecaef:   cmova  %r13d,%esi
  0x00000001229ecaf3:   add    %r8d,%esi
  0x00000001229ecaf6:   mov    %ebx,(%rsp)
  0x00000001229ecaf9:   vmovd  %r9d,%xmm0
  0x00000001229ecafe:   mov    %r10d,0x4(%rsp)
  0x00000001229ecb03:   jmp    0x00000001229ecb39
  0x00000001229ecb05:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001229ecb10:   movslq %r10d,%r10
  0x00000001229ecb13:   mov    0x38(%rsp),%r13
  0x00000001229ecb18:   mov    0x14(%r13,%r10,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb1d:   mov    0x38(%rsp),%r14
  0x00000001229ecb22:   mov    %r9d,0x14(%r14,%r10,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb27:   mov    %r13d,0x14(%r14,%rbx,4)
  0x00000001229ecb2c:   add    $0x2,%r8d                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb30:   cmp    %esi,%r8d
  0x00000001229ecb33:   jge    0x00000001229ecaab           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb39:   mov    0x38(%rsp),%r10
  0x00000001229ecb3e:   mov    0x10(%r10,%r8,4),%r13d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb43:   cmp    %ecx,%r13d
  0x00000001229ecb46:   jle    0x00000001229ecb4d           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb48:   mov    %ebp,%r10d
  0x00000001229ecb4b:   jmp    0x00000001229ecb79
  0x00000001229ecb4d:   mov    %ebp,%r10d
  0x00000001229ecb50:   inc    %r10d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb53:   cmp    (%rsp),%r10d
  0x00000001229ecb57:   jae    0x00000001229ecba4
  0x00000001229ecb5d:   movslq %ebp,%r9
  0x00000001229ecb60:   mov    0x38(%rsp),%rbx
  0x00000001229ecb65:   mov    0x14(%rbx,%r9,4),%ebx        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb6a:   mov    0x38(%rsp),%rbp
  0x00000001229ecb6f:   mov    %r13d,0x14(%rbp,%r9,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb74:   mov    %ebx,0x10(%rbp,%r8,4)        ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb79:   movslq %r8d,%rbx
  0x00000001229ecb7c:   mov    0x38(%rsp),%r9
  0x00000001229ecb81:   mov    0x14(%r9,%rbx,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb86:   cmp    %ecx,%r9d
  0x00000001229ecb89:   jle    0x00000001229ecb90           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb8b:   mov    %r10d,%ebp
  0x00000001229ecb8e:   jmp    0x00000001229ecb2c
  0x00000001229ecb90:   mov    %r10d,%ebp
  0x00000001229ecb93:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecb95:   cmp    (%rsp),%ebp
  0x00000001229ecb98:   jb     0x00000001229ecb10
  0x00000001229ecb9e:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecba1:   mov    %ebp,%r10d
  0x00000001229ecba4:   mov    %r10d,%ebp
  0x00000001229ecba7:   mov    $0xffffffe4,%esi
  0x00000001229ecbac:   mov    %edx,0x8(%rsp)
  0x00000001229ecbb0:   mov    %rax,-0x8(%rsp)
  0x00000001229ecbb5:   mov    0x28(%rsp),%eax
  0x00000001229ecbb9:   mov    %eax,0x18(%rsp)
  0x00000001229ecbbd:   mov    -0x8(%rsp),%rax
  0x00000001229ecbc2:   mov    %ecx,0x1c(%rsp)
  0x00000001229ecbc6:   mov    %r8d,0x20(%rsp)
  0x00000001229ecbcb:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ecbd0:   cmp    0x28(%rsp),%r11d
  0x00000001229ecbd5:   jge    0x00000001229ecc2e
  0x00000001229ecbdb:   nop                                 ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecbdc:   mov    0x38(%rsp),%r10
  0x00000001229ecbe1:   mov    0x10(%r10,%r11,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecbe6:   cmp    %ebp,%r10d
  0x00000001229ecbe9:   jle    0x00000001229ecbf2           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecbeb:   mov    %r9d,0x1c(%rsp)
  0x00000001229ecbf0:   jmp    0x00000001229ecc1d
  0x00000001229ecbf2:   mov    %r9d,%ecx
  0x00000001229ecbf5:   inc    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecbf7:   mov    %ecx,0x1c(%rsp)
  0x00000001229ecbfb:   cmp    %ebx,%ecx
  0x00000001229ecbfd:   data16 xchg %ax,%ax
  0x00000001229ecc00:   jae    0x00000001229ed285
  0x00000001229ecc06:   movslq %r9d,%r8
  0x00000001229ecc09:   mov    0x38(%rsp),%r9
  0x00000001229ecc0e:   mov    0x14(%r9,%r8,4),%ecx         ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc13:   mov    %r10d,0x14(%r9,%r8,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc18:   mov    %ecx,0x10(%r9,%r11,4)
  0x00000001229ecc1d:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc20:   cmp    0x28(%rsp),%r11d
  0x00000001229ecc25:   jge    0x00000001229ecc33           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc27:   mov    0x1c(%rsp),%r9d
  0x00000001229ecc2c:   jmp    0x00000001229ecbdc
  0x00000001229ecc2e:   mov    %r9d,0x1c(%rsp)
  0x00000001229ecc33:   mov    0x1c(%rsp),%ebp
  0x00000001229ecc37:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@59 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc39:   cmp    %ebx,%ebp
  0x00000001229ecc3b:   nopl   0x0(%rax,%rax,1)
  0x00000001229ecc40:   jae    0x00000001229ed268
  0x00000001229ecc46:   mov    0x38(%rsp),%r10
  0x00000001229ecc4b:   mov    0x28(%rsp),%r8d
  0x00000001229ecc50:   mov    0x10(%r10,%r8,4),%r10d
  0x00000001229ecc55:   movslq 0x1c(%rsp),%r11
  0x00000001229ecc5a:   mov    0x38(%rsp),%r8
  0x00000001229ecc5f:   mov    0x14(%r8,%r11,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc64:   mov    %r10d,0x14(%r8,%r11,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc69:   mov    0x28(%rsp),%r11d
  0x00000001229ecc6e:   mov    %r9d,0x10(%r8,%r11,4)        ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc73:   mov    0x38(%rsp),%rsi
  0x00000001229ecc78:   mov    0x1c(%rsp),%ecx
  0x00000001229ecc7c:   data16 xchg %ax,%ax
  0x00000001229ecc7f:   callq  0x00000001229ec9e0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {static_call}
  0x00000001229ecc84:   mov    0x1c(%rsp),%edx
  0x00000001229ecc88:   add    $0x2,%edx                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@23 (line 72)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecc8b:   mov    0x38(%rsp),%rsi
  0x00000001229ecc90:   mov    0x28(%rsp),%ecx
  0x00000001229ecc94:   data16 xchg %ax,%ax
  0x00000001229ecc97:   callq  0x00000001229ec9e0           ; ImmutableOopMap {}
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {static_call}
  0x00000001229ecc9c:   add    $0x50,%rsp
  0x00000001229ecca0:   pop    %rbp
  0x00000001229ecca1:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ecca8:   ja     0x00000001229ed2b8
  0x00000001229eccae:   retq   
  0x00000001229eccaf:   mov    (%rsp),%ebx
  0x00000001229eccb2:   vmovd  %xmm0,%r9d
  0x00000001229eccb7:   mov    0x4(%rsp),%r10d
  0x00000001229eccbc:   nopl   0x0(%rax)
  0x00000001229eccc0:   cmp    0x28(%rsp),%r8d
  0x00000001229eccc5:   jge    0x00000001229ecd29           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecccb:   mov    0x38(%rsp),%rsi
  0x00000001229eccd0:   mov    0x10(%rsi,%r8,4),%esi        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eccd5:   cmp    %ecx,%esi
  0x00000001229eccd7:   jle    0x00000001229eccde           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eccd9:   mov    %ebp,%r14d
  0x00000001229eccdc:   jmp    0x00000001229ecd0e
  0x00000001229eccde:   vmovd  %r10d,%xmm0
  0x00000001229ecce3:   mov    0x38(%rsp),%r13
  0x00000001229ecce8:   mov    %ebp,%r14d
  0x00000001229ecceb:   inc    %r14d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eccee:   cmp    %ebx,%r14d
  0x00000001229eccf1:   jae    0x00000001229ed1c0
  0x00000001229eccf7:   movslq %ebp,%rbp
  0x00000001229eccfa:   mov    0x14(%r13,%rbp,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229eccff:   mov    %esi,0x14(%r13,%rbp,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd04:   mov    %r10d,0x10(%r13,%r8,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd09:   vmovd  %xmm0,%r10d
  0x00000001229ecd0e:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd11:   cmp    0x28(%rsp),%r8d
  0x00000001229ecd16:   jge    0x00000001229ecd22           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd18:   mov    %r14d,%ebp
  0x00000001229ecd1b:   nopl   0x0(%rax,%rax,1)
  0x00000001229ecd20:   jmp    0x00000001229ecccb
  0x00000001229ecd22:   mov    %r14d,0x14(%rsp)
  0x00000001229ecd27:   jmp    0x00000001229ecd2d
  0x00000001229ecd29:   mov    %ebp,0x14(%rsp)              ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@76 (line 57)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecd2d:   mov    0x14(%rsp),%r8d
  0x00000001229ecd32:   inc    %r8d                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@59 (line 55)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd35:   cmp    %ebx,%r8d
  0x00000001229ecd38:   jae    0x00000001229ed1ac
  0x00000001229ecd3e:   mov    0x38(%rsp),%rcx
  0x00000001229ecd43:   mov    0x28(%rsp),%ebp
  0x00000001229ecd47:   mov    0x10(%rcx,%rbp,4),%esi
  0x00000001229ecd4b:   movslq 0x14(%rsp),%rbp
  0x00000001229ecd50:   mov    0x14(%rcx,%rbp,4),%ecx       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd54:   mov    0x38(%rsp),%r13
  0x00000001229ecd59:   mov    %esi,0x14(%r13,%rbp,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd5e:   mov    0x38(%rsp),%rsi
  0x00000001229ecd63:   mov    0x28(%rsp),%r13d
  0x00000001229ecd68:   mov    %ecx,0x10(%rsi,%r13,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@76 (line 57)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecd6d:   cmp    0x14(%rsp),%edx
  0x00000001229ecd71:   jge    0x00000001229ecfd5           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecd77:   mov    0x14(%rsp),%ecx
  0x00000001229ecd7b:   cmp    %ebx,%ecx
  0x00000001229ecd7d:   data16 xchg %ax,%ax
  0x00000001229ecd80:   jae    0x00000001229ed1c8
  0x00000001229ecd86:   mov    0x10(%rsi,%rcx,4),%r13d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecd8b:   dec    %rbp
  0x00000001229ecd8e:   cmp    %r11,%rbp
  0x00000001229ecd91:   jae    0x00000001229ed1ec
  0x00000001229ecd97:   mov    %edx,%ebp                    ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecd99:   mov    0x38(%rsp),%r11
  0x00000001229ecd9e:   mov    0x10(%r11,%rbp,4),%esi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecda3:   cmp    %r13d,%esi
  0x00000001229ecda6:   jle    0x00000001229ecdad           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecda8:   mov    %r9d,%r14d
  0x00000001229ecdab:   jmp    0x00000001229ecdd8
  0x00000001229ecdad:   mov    %r9d,%r14d
  0x00000001229ecdb0:   inc    %r14d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdb3:   cmp    %ebx,%r14d
  0x00000001229ecdb6:   jae    0x00000001229eced8
  0x00000001229ecdbc:   vmovd  %r8d,%xmm1
  0x00000001229ecdc1:   movslq %r9d,%r9
  0x00000001229ecdc4:   mov    0x14(%r11,%r9,4),%r8d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdc9:   mov    %esi,0x14(%r11,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdce:   mov    %r8d,0x10(%r11,%rbp,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdd3:   vmovd  %xmm1,%r8d
  0x00000001229ecdd8:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdda:   cmp    %edi,%ebp
  0x00000001229ecddc:   jge    0x00000001229ecde3           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdde:   mov    %r14d,%r9d
  0x00000001229ecde1:   jmp    0x00000001229ecd99
  0x00000001229ecde3:   mov    %ecx,%esi
  0x00000001229ecde5:   dec    %esi
  0x00000001229ecde7:   cmp    %esi,%ecx
  0x00000001229ecde9:   cmovl  %eax,%esi
  0x00000001229ecdec:   cmp    %esi,%ebp
  0x00000001229ecdee:   jge    0x00000001229ecf0c
  0x00000001229ecdf4:   jmp    0x00000001229ece08           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ecdf6:   mov    0x348(%r15),%r9              ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecdfd:   test   %eax,(%r9)                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {poll}
  0x00000001229ece00:   cmp    %esi,%ebp
  0x00000001229ece02:   jge    0x00000001229ecf0c           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece08:   mov    %esi,%r11d
  0x00000001229ece0b:   sub    %ebp,%r11d
  0x00000001229ece0e:   xor    %edi,%edi
  0x00000001229ece10:   cmp    %ebp,%esi
  0x00000001229ece12:   cmovl  %edi,%r11d
  0x00000001229ece16:   cmp    $0x7d0,%r11d
  0x00000001229ece1d:   mov    $0x7d0,%edi
  0x00000001229ece22:   cmova  %edi,%r11d
  0x00000001229ece26:   add    %ebp,%r11d
  0x00000001229ece29:   jmp    0x00000001229ece53
  0x00000001229ece2b:   nopl   0x0(%rax,%rax,1)
  0x00000001229ece30:   movslq %edi,%rdi
  0x00000001229ece33:   mov    0x14(%rcx,%rdi,4),%r8d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece38:   mov    %r9d,0x14(%rcx,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece3d:   mov    %r8d,0x14(%rcx,%rax,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece42:   vmovd  %xmm1,%ecx
  0x00000001229ece46:   vmovd  %xmm0,%r8d
  0x00000001229ece4b:   add    $0x2,%ebp                    ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece4e:   cmp    %r11d,%ebp
  0x00000001229ece51:   jge    0x00000001229ecdf6           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece53:   mov    0x38(%rsp),%r9
  0x00000001229ece58:   mov    0x10(%r9,%rbp,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece5d:   data16 xchg %ax,%ax
  0x00000001229ece60:   cmp    %r13d,%r9d
  0x00000001229ece63:   jle    0x00000001229ece6a           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece65:   mov    %r14d,%edi
  0x00000001229ece68:   jmp    0x00000001229ece98
  0x00000001229ece6a:   mov    %r14d,%edi
  0x00000001229ece6d:   inc    %edi                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece6f:   cmp    %ebx,%edi
  0x00000001229ece71:   jae    0x00000001229eced5
  0x00000001229ece77:   vmovd  %r8d,%xmm0
  0x00000001229ece7c:   mov    0x38(%rsp),%r8
  0x00000001229ece81:   movslq %r14d,%r14
  0x00000001229ece84:   mov    0x14(%r8,%r14,4),%eax        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece89:   mov    %r9d,0x14(%r8,%r14,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece8e:   mov    %eax,0x10(%r8,%rbp,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@48 (line 50)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece93:   vmovd  %xmm0,%r8d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ece98:   movslq %ebp,%rax
  0x00000001229ece9b:   mov    0x38(%rsp),%r9
  0x00000001229ecea0:   mov    0x14(%r9,%rax,4),%r9d        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecea5:   cmp    %r13d,%r9d
  0x00000001229ecea8:   jle    0x00000001229eceaf           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229eceaa:   mov    %edi,%r14d
  0x00000001229ecead:   jmp    0x00000001229ece4b
  0x00000001229eceaf:   vmovd  %r8d,%xmm0
  0x00000001229eceb4:   vmovd  %ecx,%xmm1
  0x00000001229eceb8:   mov    0x38(%rsp),%rcx
  0x00000001229ecebd:   mov    %edi,%r14d
  0x00000001229ecec0:   inc    %r14d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecec3:   cmp    %ebx,%r14d
  0x00000001229ecec6:   jb     0x00000001229ece30
  0x00000001229ececc:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecece:   mov    %r14d,%edi
  0x00000001229eced1:   vmovd  %xmm1,%ecx
  0x00000001229eced5:   mov    %edi,%r14d
  0x00000001229eced8:   mov    $0xffffffe4,%esi
  0x00000001229ecedd:   mov    %rax,-0x8(%rsp)
  0x00000001229ecee2:   mov    0x28(%rsp),%eax
  0x00000001229ecee6:   mov    %eax,0x8(%rsp)
  0x00000001229eceea:   mov    -0x8(%rsp),%rax
  0x00000001229eceef:   mov    %r8d,0xc(%rsp)
  0x00000001229ecef4:   mov    %edx,0x18(%rsp)
  0x00000001229ecef8:   mov    %ecx,0x28(%rsp)
  0x00000001229ecefc:   mov    %r13d,0x2c(%rsp)
  0x00000001229ecf01:   mov    %r14d,0x34(%rsp)
  0x00000001229ecf06:   nop
  0x00000001229ecf07:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ecf0c:   cmp    %ecx,%ebp
  0x00000001229ecf0e:   jge    0x00000001229ecf5a           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf14:   mov    0x38(%rsp),%r11
  0x00000001229ecf19:   mov    0x10(%r11,%rbp,4),%esi       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf1e:   xchg   %ax,%ax
  0x00000001229ecf20:   cmp    %r13d,%esi
  0x00000001229ecf23:   jle    0x00000001229ecf2a           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf25:   mov    %r14d,%r9d
  0x00000001229ecf28:   jmp    0x00000001229ecf4f
  0x00000001229ecf2a:   mov    %r14d,%r9d
  0x00000001229ecf2d:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf30:   cmp    %ebx,%r9d
  0x00000001229ecf33:   jae    0x00000001229ed278
  0x00000001229ecf39:   movslq %r14d,%rdi
  0x00000001229ecf3c:   mov    0x14(%r11,%rdi,4),%r11d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf41:   mov    0x38(%rsp),%rax
  0x00000001229ecf46:   mov    %esi,0x14(%rax,%rdi,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf4a:   mov    %r11d,0x10(%rax,%rbp,4)
  0x00000001229ecf4f:   inc    %ebp                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf51:   cmp    %ecx,%ebp
  0x00000001229ecf53:   jge    0x00000001229ecf5d           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf55:   mov    %r9d,%r14d
  0x00000001229ecf58:   jmp    0x00000001229ecf14
  0x00000001229ecf5a:   mov    %r14d,%r9d
  0x00000001229ecf5d:   mov    %r9d,%ebp
  0x00000001229ecf60:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@59 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf62:   cmp    %ebx,%ebp
  0x00000001229ecf64:   jae    0x00000001229ed238
  0x00000001229ecf6a:   mov    %r8d,0x8(%rsp)
  0x00000001229ecf6f:   mov    %r10d,0x4(%rsp)
  0x00000001229ecf74:   mov    %ebx,(%rsp)
  0x00000001229ecf77:   mov    0x38(%rsp),%r10
  0x00000001229ecf7c:   mov    0x10(%r10,%rcx,4),%r10d
  0x00000001229ecf81:   mov    %r9d,0xc(%rsp)
  0x00000001229ecf86:   movslq %r9d,%r11
  0x00000001229ecf89:   mov    0x38(%rsp),%r8
  0x00000001229ecf8e:   mov    0x14(%r8,%r11,4),%ebx        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf93:   mov    %r10d,0x14(%r8,%r11,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@71 (line 56)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf98:   mov    %ebx,0x10(%r8,%rcx,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@76 (line 57)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecf9d:   mov    %ecx,0x14(%rsp)              ;*invokestatic partition {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecfa1:   mov    0x38(%rsp),%rsi
  0x00000001229ecfa6:   mov    %r9d,%ecx
  0x00000001229ecfa9:   xchg   %ax,%ax
  0x00000001229ecfab:   callq  0x00000001229ec9e0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {static_call}
  0x00000001229ecfb0:   mov    0xc(%rsp),%edx
  0x00000001229ecfb4:   add    $0x2,%edx                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@23 (line 72)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecfb7:   mov    0x38(%rsp),%rsi
  0x00000001229ecfbc:   mov    0x14(%rsp),%ecx
  0x00000001229ecfc0:   data16 xchg %ax,%ax
  0x00000001229ecfc3:   callq  0x00000001229ec9e0           ; ImmutableOopMap {[56]=Oop }
                                                            ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {static_call}
  0x00000001229ecfc8:   mov    (%rsp),%ebx
  0x00000001229ecfcb:   mov    0x4(%rsp),%r10d
  0x00000001229ecfd0:   mov    0x8(%rsp),%r8d               ;*return {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@28 (line 74)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ecfd5:   mov    0x14(%rsp),%edx
  0x00000001229ecfd9:   add    $0x2,%edx                    ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@23 (line 72)
  0x00000001229ecfdc:   nopl   0x0(%rax)
  0x00000001229ecfe0:   cmp    0x28(%rsp),%edx
  0x00000001229ecfe4:   jge    0x00000001229ecc9c           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@2 (line 64)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecfea:   mov    0x38(%rsp),%r11
  0x00000001229ecfef:   mov    0x28(%rsp),%ecx
  0x00000001229ecff3:   mov    0x10(%r11,%rcx,4),%ebp       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ecff8:   cmp    %ebx,%edx
  0x00000001229ecffa:   nopw   0x0(%rax,%rax,1)
  0x00000001229ed000:   jae    0x00000001229ed220
  0x00000001229ed006:   mov    0x14(%rsp),%ecx
  0x00000001229ed00a:   add    $0x3,%ecx
  0x00000001229ed00d:   mov    %edx,%r11d                   ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed010:   mov    0x38(%rsp),%r9
  0x00000001229ed015:   mov    0x10(%r9,%r11,4),%esi        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed01a:   cmp    %ebp,%esi
  0x00000001229ed01c:   jle    0x00000001229ed023           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed01e:   mov    %r8d,%r9d
  0x00000001229ed021:   jmp    0x00000001229ed049
  0x00000001229ed023:   mov    %r8d,%r9d
  0x00000001229ed026:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed029:   cmp    %ebx,%r9d
  0x00000001229ed02c:   jae    0x00000001229ed132
  0x00000001229ed032:   movslq %r8d,%r8
  0x00000001229ed035:   mov    0x38(%rsp),%rdi
  0x00000001229ed03a:   mov    0x14(%rdi,%r8,4),%eax        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed03f:   mov    %esi,0x14(%rdi,%r8,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed044:   mov    %eax,0x10(%rdi,%r11,4)
  0x00000001229ed049:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed04c:   cmp    %ecx,%r11d
  0x00000001229ed04f:   jge    0x00000001229ed056           ;*if_icmpge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed051:   mov    %r9d,%r8d
  0x00000001229ed054:   jmp    0x00000001229ed010
  0x00000001229ed056:   cmp    %r10d,%r11d
  0x00000001229ed059:   jge    0x00000001229ecbd0
  0x00000001229ed05f:   nop
  0x00000001229ed060:   jmp    0x00000001229ed074           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
  0x00000001229ed062:   mov    0x348(%r15),%rax             ; ImmutableOopMap {[56]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed069:   test   %eax,(%rax)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@52 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {poll}
  0x00000001229ed06b:   cmp    %r10d,%r11d
  0x00000001229ed06e:   jge    0x00000001229ecbd0           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed074:   mov    %r10d,%esi
  0x00000001229ed077:   sub    %r11d,%esi
  0x00000001229ed07a:   xor    %ecx,%ecx
  0x00000001229ed07c:   cmp    %r11d,%r10d
  0x00000001229ed07f:   cmovl  %ecx,%esi
  0x00000001229ed082:   cmp    $0x7d0,%esi
  0x00000001229ed088:   mov    $0x7d0,%ecx
  0x00000001229ed08d:   cmova  %ecx,%esi
  0x00000001229ed090:   add    %r11d,%esi
  0x00000001229ed093:   jmp    0x00000001229ed0c5
  0x00000001229ed095:   data16 data16 nopw 0x0(%rax,%rax,1)
  0x00000001229ed0a0:   movslq %r8d,%r8
  0x00000001229ed0a3:   mov    0x38(%rsp),%rax
  0x00000001229ed0a8:   mov    0x14(%rax,%r8,4),%r13d       ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0ad:   mov    %edi,0x14(%rax,%r8,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0b2:   mov    %r13d,0x14(%rax,%rcx,4)
  0x00000001229ed0b7:   add    $0x2,%r11d                   ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0bb:   nopl   0x0(%rax,%rax,1)
  0x00000001229ed0c0:   cmp    %esi,%r11d
  0x00000001229ed0c3:   jge    0x00000001229ed062           ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@18 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0c5:   mov    0x38(%rsp),%r8
  0x00000001229ed0ca:   mov    0x10(%r8,%r11,4),%ecx        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0cf:   cmp    %ebp,%ecx
  0x00000001229ed0d1:   jle    0x00000001229ed0d8           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0d3:   mov    %r9d,%r8d
  0x00000001229ed0d6:   jmp    0x00000001229ed100
  0x00000001229ed0d8:   mov    %r9d,%r8d
  0x00000001229ed0db:   inc    %r8d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0de:   xchg   %ax,%ax
  0x00000001229ed0e0:   cmp    %ebx,%r8d
  0x00000001229ed0e3:   jae    0x00000001229ed12f
  0x00000001229ed0e9:   movslq %r9d,%r9
  0x00000001229ed0ec:   mov    0x38(%rsp),%rdi
  0x00000001229ed0f1:   mov    0x14(%rdi,%r9,4),%eax        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0f6:   mov    %ecx,0x14(%rdi,%r9,4)        ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@42 (line 49)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed0fb:   mov    %eax,0x10(%rdi,%r11,4)       ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed100:   movslq %r11d,%rcx
  0x00000001229ed103:   mov    0x38(%rsp),%r9
  0x00000001229ed108:   mov    0x14(%r9,%rcx,4),%edi        ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@21 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed10d:   cmp    %ebp,%edi
  0x00000001229ed10f:   jle    0x00000001229ed116           ;*if_icmpgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@23 (line 44)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed111:   mov    %r8d,%r9d
  0x00000001229ed114:   jmp    0x00000001229ed0b7
  0x00000001229ed116:   mov    %r8d,%r9d
  0x00000001229ed119:   inc    %r9d                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@26 (line 45)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed11c:   nopl   0x0(%rax)
  0x00000001229ed120:   cmp    %ebx,%r9d
  0x00000001229ed123:   jb     0x00000001229ed0a0
  0x00000001229ed129:   inc    %r11d                        ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@49 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed12c:   mov    %r9d,%r8d
  0x00000001229ed12f:   mov    %r8d,%r9d
  0x00000001229ed132:   mov    $0xffffffe4,%esi
  0x00000001229ed137:   mov    %edx,0x8(%rsp)
  0x00000001229ed13b:   mov    %rax,-0x8(%rsp)
  0x00000001229ed140:   mov    0x28(%rsp),%eax
  0x00000001229ed144:   mov    %eax,0x18(%rsp)
  0x00000001229ed148:   mov    -0x8(%rsp),%rax
  0x00000001229ed14d:   mov    %r11d,0x20(%rsp)
  0x00000001229ed152:   mov    %r9d,0x24(%rsp)
  0x00000001229ed157:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@32 (line 48)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed15c:   mov    $0xffffffe4,%esi
  0x00000001229ed161:   mov    0x38(%rsp),%rbp
  0x00000001229ed166:   mov    %edx,0x10(%rsp)
  0x00000001229ed16a:   mov    %ecx,0x14(%rsp)
  0x00000001229ed16e:   mov    %ecx,0x20(%rsp)
  0x00000001229ed172:   nop
  0x00000001229ed173:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed178:   mov    $0xffffff76,%esi
  0x00000001229ed17d:   mov    0x38(%rsp),%rbp
  0x00000001229ed182:   mov    %rax,-0x8(%rsp)
  0x00000001229ed187:   mov    0x28(%rsp),%eax
  0x00000001229ed18b:   mov    %eax,0x4(%rsp)
  0x00000001229ed18f:   mov    -0x8(%rsp),%rax
  0x00000001229ed194:   mov    %ecx,0x14(%rsp)
  0x00000001229ed198:   mov    %edx,0x18(%rsp)
  0x00000001229ed19c:   mov    %edx,0x1c(%rsp)
  0x00000001229ed1a0:   mov    %r9d,0x24(%rsp)
  0x00000001229ed1a5:   xchg   %ax,%ax
  0x00000001229ed1a7:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed1ac:   mov    $0xffffffe4,%esi
  0x00000001229ed1b1:   mov    %edx,(%rsp)
  0x00000001229ed1b4:   mov    %r8d,0x20(%rsp)
  0x00000001229ed1b9:   xchg   %ax,%ax
  0x00000001229ed1bb:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed1c0:   mov    %r14d,%ebp
  0x00000001229ed1c3:   jmpq   0x00000001229ecba7
  0x00000001229ed1c8:   mov    $0xffffffe4,%esi
  0x00000001229ed1cd:   mov    %rax,-0x8(%rsp)
  0x00000001229ed1d2:   mov    0x28(%rsp),%eax
  0x00000001229ed1d6:   mov    %eax,(%rsp)
  0x00000001229ed1d9:   mov    -0x8(%rsp),%rax
  0x00000001229ed1de:   mov    %r8d,0x4(%rsp)
  0x00000001229ed1e3:   mov    %edx,0x20(%rsp)
  0x00000001229ed1e7:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed1ec:   mov    $0xffffff76,%esi
  0x00000001229ed1f1:   mov    %rax,-0x8(%rsp)
  0x00000001229ed1f6:   mov    0x28(%rsp),%eax
  0x00000001229ed1fa:   mov    %eax,(%rsp)
  0x00000001229ed1fd:   mov    -0x8(%rsp),%rax
  0x00000001229ed202:   mov    %r8d,0x4(%rsp)
  0x00000001229ed207:   mov    %r13d,0x24(%rsp)
  0x00000001229ed20c:   mov    %edx,0x28(%rsp)
  0x00000001229ed210:   mov    %edx,0x2c(%rsp)
  0x00000001229ed214:   mov    %r9d,0x34(%rsp)
  0x00000001229ed219:   xchg   %ax,%ax
  0x00000001229ed21b:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed220:   mov    $0xffffff76,%esi
  0x00000001229ed225:   mov    %r8d,0x1c(%rsp)
  0x00000001229ed22a:   mov    %edx,0x20(%rsp)
  0x00000001229ed22e:   mov    %edx,0x24(%rsp)
  0x00000001229ed232:   nop
  0x00000001229ed233:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*if_icmpge {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::partition@15 (line 41)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed238:   mov    $0xffffffe4,%esi
  0x00000001229ed23d:   mov    %rax,-0x8(%rsp)
  0x00000001229ed242:   mov    0x28(%rsp),%eax
  0x00000001229ed246:   mov    %eax,0x8(%rsp)
  0x00000001229ed24a:   mov    -0x8(%rsp),%rax
  0x00000001229ed24f:   mov    %r8d,0xc(%rsp)
  0x00000001229ed254:   mov    %edx,0x18(%rsp)
  0x00000001229ed258:   mov    %ecx,0x28(%rsp)
  0x00000001229ed25c:   mov    %r9d,0x2c(%rsp)
  0x00000001229ed261:   xchg   %ax,%ax
  0x00000001229ed263:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@17 (line 71)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed268:   mov    $0xffffffe4,%esi
  0x00000001229ed26d:   mov    %edx,0x8(%rsp)
  0x00000001229ed271:   xchg   %ax,%ax
  0x00000001229ed273:   callq  0x000000011af73000           ; ImmutableOopMap {[56]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@60 (line 55)
                                                            ; - Test::sort@8 (line 67)
                                                            ; - Test::sort@25 (line 72)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed278:   mov    %r9d,%r14d
  0x00000001229ed27b:   nopl   0x0(%rax,%rax,1)
  0x00000001229ed280:   jmpq   0x00000001229eced8
  0x00000001229ed285:   mov    %ecx,%r9d
  0x00000001229ed288:   jmpq   0x00000001229ed132           ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ed28d:   mov    %rax,%rsi
  0x00000001229ed290:   jmp    0x00000001229ed29f           ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ed292:   mov    %rax,%rsi
  0x00000001229ed295:   jmp    0x00000001229ed29f           ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@17 (line 71)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed297:   mov    %rax,%rsi
  0x00000001229ed29a:   jmp    0x00000001229ed29f           ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@25 (line 72)
  0x00000001229ed29c:   mov    %rax,%rsi                    ;*invokestatic sort {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::sort@25 (line 72)
                                                            ; - Test::sort@17 (line 71)
  0x00000001229ed29f:   add    $0x50,%rsp
  0x00000001229ed2a3:   pop    %rbp
  0x00000001229ed2a4:   jmpq   0x000000011b01ee00           ;   {runtime_call _rethrow_Java}
  0x00000001229ed2a9:   mov    $0xfffffff6,%esi
  0x00000001229ed2ae:   mov    %ecx,%ebp
  0x00000001229ed2b0:   data16 xchg %ax,%ax
  0x00000001229ed2b3:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::partition@2 (line 39)
                                                            ; - Test::sort@8 (line 67)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ed2b8:   movabs $0x1229ecca1,%r10            ;   {internal_word}
  0x00000001229ed2c2:   mov    %r10,0x358(%r15)
  0x00000001229ed2c9:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ed2ce:   hlt    
  0x00000001229ed2cf:   hlt    
  0x00000001229ed2d0:   hlt    
  0x00000001229ed2d1:   hlt    
  0x00000001229ed2d2:   hlt    
  0x00000001229ed2d3:   hlt    
  0x00000001229ed2d4:   hlt    
  0x00000001229ed2d5:   hlt    
  0x00000001229ed2d6:   hlt    
  0x00000001229ed2d7:   hlt    
  0x00000001229ed2d8:   hlt    
  0x00000001229ed2d9:   hlt    
  0x00000001229ed2da:   hlt    
  0x00000001229ed2db:   hlt    
  0x00000001229ed2dc:   hlt    
  0x00000001229ed2dd:   hlt    
  0x00000001229ed2de:   hlt    
  0x00000001229ed2df:   hlt    
[Stub Code]
  0x00000001229ed2e0:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00000001229ed2ea:   jmpq   0x00000001229ed2ea           ;   {runtime_call const_jargs+-253661281}
  0x00000001229ed2ef:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00000001229ed2f9:   jmpq   0x00000001229ed2f9           ;   {runtime_call const_jargs+-253661281}
  0x00000001229ed2fe:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00000001229ed308:   jmpq   0x00000001229ed308           ;   {runtime_call const_jargs+-253661281}
  0x00000001229ed30d:   movabs $0x0,%rbx                    ;   {static_stub}
  0x00000001229ed317:   jmpq   0x00000001229ed317           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x00000001229ed31c:   jmpq   0x000000011af85a80           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00000001229ed321:   callq  0x00000001229ed326
  0x00000001229ed326:   subq   $0x5,(%rsp)
  0x00000001229ed32b:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     197   20       4       java.util.Random::nextInt (74 bytes)
 total in heap  [0x00000001229ee290,0x00000001229ee918] = 1672
 relocation     [0x00000001229ee3f0,0x00000001229ee418] = 40
 main code      [0x00000001229ee420,0x00000001229ee5e0] = 448
 stub code      [0x00000001229ee5e0,0x00000001229ee608] = 40
 metadata       [0x00000001229ee608,0x00000001229ee628] = 32
 scopes data    [0x00000001229ee628,0x00000001229ee730] = 264
 scopes pcs     [0x00000001229ee730,0x00000001229ee8e0] = 432
 dependencies   [0x00000001229ee8e0,0x00000001229ee8f0] = 16
 handler table  [0x00000001229ee8f0,0x00000001229ee908] = 24
 nul chk table  [0x00000001229ee908,0x00000001229ee918] = 16

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Entry Point]
  # {method} {0x00000008000ce0f0} 'nextInt' '(I)I' in 'java/util/Random'
  # this:     rsi:rsi   = 'java/util/Random'
  # parm0:    rdx       = int
  #           [sp+0x40]  (sp of caller)
  0x00000001229ee420:   mov    0x8(%rsi),%r10d
  0x00000001229ee424:   movabs $0x800000000,%r11
  0x00000001229ee42e:   add    %r11,%r10
  0x00000001229ee431:   cmp    %r10,%rax
  0x00000001229ee434:   jne    0x000000011af6d780           ;   {runtime_call ic_miss_stub}
  0x00000001229ee43a:   xchg   %ax,%ax
  0x00000001229ee43c:   nopl   0x0(%rax)
[Verified Entry Point]
  0x00000001229ee440:   mov    %eax,-0x14000(%rsp)
  0x00000001229ee447:   push   %rbp
  0x00000001229ee448:   sub    $0x30,%rsp                   ;*synchronization entry
                                                            ; - java.util.Random::nextInt@-1 (line 321)
  0x00000001229ee44c:   mov    %rsi,%r11
  0x00000001229ee44f:   mov    %edx,%r10d
  0x00000001229ee452:   test   %edx,%edx
  0x00000001229ee454:   jle    0x00000001229ee578           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
  0x00000001229ee45a:   mov    %rsi,%rdi
  0x00000001229ee45d:   mov    0x18(%rsi),%r9d              ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee461:   mov    0x10(%r12,%r9,8),%rax        ; implicit exception: dispatches to 0x00000001229ee5ac
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee466:   movabs $0x5deece66d,%r11
  0x00000001229ee470:   mov    %rax,%r8
  0x00000001229ee473:   imul   %r11,%r8
  0x00000001229ee477:   add    $0xb,%r8                     ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee47b:   movabs $0xffffffffffff,%r11
  0x00000001229ee485:   mov    %r8,%rbx
  0x00000001229ee488:   and    %r11,%rbx                    ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee48b:   lock cmpxchg %rbx,0x10(%r12,%r9,8)
  0x00000001229ee492:   sete   %cl
  0x00000001229ee495:   movzbl %cl,%ecx                     ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee498:   test   %ecx,%ecx
  0x00000001229ee49a:   nopw   0x0(%rax,%rax,1)
  0x00000001229ee4a0:   je     0x00000001229ee58c           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee4a6:   shr    $0x11,%r8
  0x00000001229ee4aa:   mov    %edx,%ebp
  0x00000001229ee4ac:   dec    %ebp                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@23 (line 324)
  0x00000001229ee4ae:   mov    %edx,%r9d
  0x00000001229ee4b1:   and    %ebp,%r9d
  0x00000001229ee4b4:   and    $0x7fffffff,%r8
  0x00000001229ee4bb:   mov    %r8d,%r11d                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 210)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee4be:   xchg   %ax,%ax
  0x00000001229ee4c0:   test   %r9d,%r9d
  0x00000001229ee4c3:   je     0x00000001229ee506           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
  0x00000001229ee4c5:   test   %edx,%edx
  0x00000001229ee4c7:   je     0x00000001229ee56a
  0x00000001229ee4cd:   mov    %r11d,%eax
  0x00000001229ee4d0:   cmp    $0x80000000,%eax
  0x00000001229ee4d5:   jne    0x00000001229ee4df
  0x00000001229ee4d7:   xor    %edx,%edx
  0x00000001229ee4d9:   cmp    $0xffffffff,%r10d
  0x00000001229ee4dd:   je     0x00000001229ee4e3
  0x00000001229ee4df:   cltd   
  0x00000001229ee4e0:   idiv   %r10d                        ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x00000001229ee4e3:   sub    %edx,%r11d
  0x00000001229ee4e6:   add    %r10d,%r11d
  0x00000001229ee4e9:   dec    %r11d
  0x00000001229ee4ec:   test   %r11d,%r11d
  0x00000001229ee4ef:   jl     0x00000001229ee51e
  0x00000001229ee4f1:   mov    %edx,%eax                    ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x00000001229ee4f3:   add    $0x30,%rsp
  0x00000001229ee4f7:   pop    %rbp
  0x00000001229ee4f8:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229ee4ff:   ja     0x00000001229ee5c5
  0x00000001229ee505:   retq   
  0x00000001229ee506:   movslq %r11d,%r11
  0x00000001229ee509:   movslq %edx,%r10
  0x00000001229ee50c:   imul   %r11,%r10
  0x00000001229ee510:   sar    $0x1f,%r10
  0x00000001229ee514:   mov    %r10d,%eax                   ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@39 (line 326)
  0x00000001229ee517:   jmp    0x00000001229ee4f3
  0x00000001229ee519:   mov    0x8(%rsp),%rdi               ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@61 (line 330)
  0x00000001229ee51e:   mov    %rdi,0x8(%rsp)
  0x00000001229ee523:   mov    %r10d,(%rsp)
  0x00000001229ee527:   mov    %rdi,%rsi
  0x00000001229ee52a:   mov    $0x1f,%edx
  0x00000001229ee52f:   callq  0x000000011af6da80           ; ImmutableOopMap {[8]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ;   {optimized virtual_call}
  0x00000001229ee534:   mov    %eax,%r11d                   ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
  0x00000001229ee537:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[8]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
  0x00000001229ee53e:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
                                                            ;   {poll}
  0x00000001229ee541:   mov    (%rsp),%r10d
  0x00000001229ee545:   cmp    $0x80000000,%eax
  0x00000001229ee54a:   jne    0x00000001229ee554
  0x00000001229ee54c:   xor    %edx,%edx
  0x00000001229ee54e:   cmp    $0xffffffff,%r10d
  0x00000001229ee552:   je     0x00000001229ee558
  0x00000001229ee554:   cltd   
  0x00000001229ee555:   idiv   %r10d                        ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
  0x00000001229ee558:   sub    %edx,%r11d
  0x00000001229ee55b:   add    %r10d,%r11d
  0x00000001229ee55e:   dec    %r11d
  0x00000001229ee561:   test   %r11d,%r11d
  0x00000001229ee564:   jl     0x00000001229ee519           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
  0x00000001229ee566:   mov    %edx,%eax
  0x00000001229ee568:   jmp    0x00000001229ee4f3
  0x00000001229ee56a:   mov    $0xffffff86,%esi
  0x00000001229ee56f:   mov    %r11d,%ebp
  0x00000001229ee572:   nop
  0x00000001229ee573:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ee578:   mov    $0xffffff45,%esi
  0x00000001229ee57d:   mov    %r11,%rbp
  0x00000001229ee580:   mov    %edx,0x4(%rsp)
  0x00000001229ee584:   data16 xchg %ax,%ax
  0x00000001229ee587:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@1 (line 321)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ee58c:   mov    $0xffffff45,%esi
  0x00000001229ee591:   mov    %rdi,%rbp
  0x00000001229ee594:   mov    %edx,(%rsp)
  0x00000001229ee597:   mov    %rbx,0x8(%rsp)
  0x00000001229ee59c:   mov    %r9d,0x4(%rsp)
  0x00000001229ee5a1:   mov    %ecx,0x10(%rsp)
  0x00000001229ee5a5:   xchg   %ax,%ax
  0x00000001229ee5a7:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop [4]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ee5ac:   mov    $0xfffffff6,%esi
  0x00000001229ee5b1:   xchg   %ax,%ax
  0x00000001229ee5b3:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229ee5b8:   mov    %rax,%rsi
  0x00000001229ee5bb:   add    $0x30,%rsp
  0x00000001229ee5bf:   pop    %rbp
  0x00000001229ee5c0:   jmpq   0x000000011b01ee00           ;   {runtime_call _rethrow_Java}
  0x00000001229ee5c5:   movabs $0x1229ee4f8,%r10            ;   {internal_word}
  0x00000001229ee5cf:   mov    %r10,0x358(%r15)
  0x00000001229ee5d6:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ee5db:   hlt    
  0x00000001229ee5dc:   hlt    
  0x00000001229ee5dd:   hlt    
  0x00000001229ee5de:   hlt    
  0x00000001229ee5df:   hlt    
[Stub Code]
  0x00000001229ee5e0:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00000001229ee5ea:   jmpq   0x00000001229ee5ea           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x00000001229ee5ef:   jmpq   0x000000011af85a80           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00000001229ee5f4:   callq  0x00000001229ee5f9
  0x00000001229ee5f9:   subq   $0x5,(%rsp)
  0x00000001229ee5fe:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ee603:   hlt    
  0x00000001229ee604:   hlt    
  0x00000001229ee605:   hlt    
  0x00000001229ee606:   hlt    
  0x00000001229ee607:   hlt    
--------------------------------------------------------------------------------

============================= C2-compiled nmethod ==============================
----------------------------------- Assembly -----------------------------------

Compiled method (c2)     217   16       4       Test::shuffle (48 bytes)
 total in heap  [0x00000001229ee990,0x00000001229ef7f8] = 3688
 relocation     [0x00000001229eeaf0,0x00000001229eeb30] = 64
 main code      [0x00000001229eeb40,0x00000001229ef020] = 1248
 stub code      [0x00000001229ef020,0x00000001229ef048] = 40
 oops           [0x00000001229ef048,0x00000001229ef050] = 8
 metadata       [0x00000001229ef050,0x00000001229ef0a0] = 80
 scopes data    [0x00000001229ef0a0,0x00000001229ef308] = 616
 scopes pcs     [0x00000001229ef308,0x00000001229ef788] = 1152
 dependencies   [0x00000001229ef788,0x00000001229ef798] = 16
 handler table  [0x00000001229ef798,0x00000001229ef7e0] = 72
 nul chk table  [0x00000001229ef7e0,0x00000001229ef7f8] = 24

--------------------------------------------------------------------------------
[Constant Pool (empty)]

--------------------------------------------------------------------------------

[Verified Entry Point]
  # {method} {0x0000000112400410} 'shuffle' '([I)V' in 'Test'
  # parm0:    rsi:rsi   = '[I'
  #           [sp+0x50]  (sp of caller)
  0x00000001229eeb40:   mov    %eax,-0x14000(%rsp)
  0x00000001229eeb47:   push   %rbp
  0x00000001229eeb48:   sub    $0x40,%rsp                   ;*synchronization entry
                                                            ; - Test::shuffle@-1 (line 23)
  0x00000001229eeb4c:   mov    %rsi,(%rsp)
  0x00000001229eeb50:   mov    0x108(%r15),%rax
  0x00000001229eeb57:   mov    %rax,%r10
  0x00000001229eeb5a:   add    $0x20,%r10
  0x00000001229eeb5e:   xchg   %ax,%ax
  0x00000001229eeb60:   cmp    0x118(%r15),%r10
  0x00000001229eeb67:   jae    0x00000001229eef9c           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eeb6d:   mov    %r10,0x108(%r15)
  0x00000001229eeb74:   prefetchw 0xc0(%r10)
  0x00000001229eeb7c:   movq   $0x1,(%rax)
  0x00000001229eeb83:   movl   $0xcd5b8,0x8(%rax)           ;   {metadata('java/util/Random')}
  0x00000001229eeb8a:   mov    %r12d,0xc(%rax)
  0x00000001229eeb8e:   mov    %r12,0x10(%rax)
  0x00000001229eeb92:   mov    %r12,0x18(%rax)              ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@0 (line 23)
  0x00000001229eeb96:   mov    %rax,0x8(%rsp)               ;*synchronization entry
                                                            ; - java.util.concurrent.atomic.AtomicLong::get@-1 (line 104)
                                                            ; - java.util.Random::seedUniquifier@3 (line 116)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eeb9b:   movabs $0x70fe19770,%r11            ;   {oop(a 'java/util/concurrent/atomic/AtomicLong'{0x000000070fe19770})}
  0x00000001229eeba5:   mov    0x10(%r11),%rax              ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::seedUniquifier@18 (line 118)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eeba9:   movabs $0x106689d45497fdb5,%r8
  0x00000001229eebb3:   mov    %rax,%rbp
  0x00000001229eebb6:   imul   %r8,%rbp                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 117)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eebba:   lock cmpxchg %rbp,0x10(%r11)
  0x00000001229eebc0:   sete   %r9b
  0x00000001229eebc4:   movzbl %r9b,%r9d                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::seedUniquifier@18 (line 118)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eebc8:   test   %r9d,%r9d
  0x00000001229eebcb:   je     0x00000001229eee50           ;*lload_2 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@24 (line 119)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eebd1:   movabs $0x1107bdf34,%r10
  0x00000001229eebdb:   callq  *%r10                        ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eebde:   mov    0x108(%r15),%rbx
  0x00000001229eebe5:   xor    %rax,%rbp                    ;*lxor {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@7 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eebe8:   mov    %rbx,%r10
  0x00000001229eebeb:   add    $0x18,%r10
  0x00000001229eebef:   mov    0x8(%rsp),%r11
  0x00000001229eebf4:   mov    %r12b,0xc(%r11)
  0x00000001229eebf8:   nopl   0x0(%rax,%rax,1)
  0x00000001229eec00:   cmp    0x118(%r15),%r10
  0x00000001229eec07:   jae    0x00000001229eef85
  0x00000001229eec0d:   mov    %r10,0x108(%r15)
  0x00000001229eec14:   prefetchw 0xc0(%r10)
  0x00000001229eec1c:   movq   $0x1,(%rbx)
  0x00000001229eec23:   movl   $0x9b940,0x8(%rbx)           ;   {metadata('java/util/concurrent/atomic/AtomicLong')}
  0x00000001229eec2a:   mov    %r12d,0xc(%rbx)
  0x00000001229eec2e:   mov    %r12,0x10(%rbx)
  0x00000001229eec32:   movabs $0x5deece66d,%r10
  0x00000001229eec3c:   xor    %r10,%rbp
  0x00000001229eec3f:   movabs $0xffffffffffff,%r10
  0x00000001229eec49:   and    %r10,%rbp
  0x00000001229eec4c:   mov    %rbp,0x10(%rbx)
  0x00000001229eec50:   lock addl $0x0,-0x40(%rsp)          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eec56:   data16 nopw 0x0(%rax,%rax,1)
  0x00000001229eec60:   cmpb   $0x0,0x38(%r15)
  0x00000001229eec65:   jne    0x00000001229eeef8
  0x00000001229eec6b:   mov    %rbx,%r11
  0x00000001229eec6e:   shr    $0x3,%r11
  0x00000001229eec72:   mov    0x8(%rsp),%r10
  0x00000001229eec77:   mov    %r11d,0x18(%r10)
  0x00000001229eec7b:   mov    %rbx,%r11
  0x00000001229eec7e:   xor    %r10,%r11
  0x00000001229eec81:   shr    $0x15,%r11
  0x00000001229eec85:   test   %r11,%r11
  0x00000001229eec88:   je     0x00000001229eeca9
  0x00000001229eec8a:   shr    $0x9,%r10
  0x00000001229eec8e:   movabs $0x10d7ea000,%rdi
  0x00000001229eec98:   add    %r10,%rdi
  0x00000001229eec9b:   nopl   0x0(%rax,%rax,1)
  0x00000001229eeca0:   cmpb   $0x4,(%rdi)
  0x00000001229eeca3:   jne    0x00000001229eef34           ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eeca9:   mov    (%rsp),%r11
  0x00000001229eecad:   mov    0xc(%r11),%ebx               ; implicit exception: dispatches to 0x00000001229eefe4
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@9 (line 25)
  0x00000001229eecb1:   mov    %ebx,%ecx
  0x00000001229eecb3:   dec    %ecx                         ;*isub {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@11 (line 25)
  0x00000001229eecb5:   test   %ecx,%ecx
  0x00000001229eecb7:   jle    0x00000001229eee30
  0x00000001229eecbd:   data16 xchg %ax,%ax
  0x00000001229eecc0:   cmp    $0x1,%ebx
  0x00000001229eecc3:   jbe    0x00000001229eeccd
  0x00000001229eecc5:   cmp    %ebx,%ecx
  0x00000001229eecc7:   jb     0x00000001229eed26           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@14 (line 25)
  0x00000001229eeccd:   mov    $0xffffff76,%esi
  0x00000001229eecd2:   mov    %r11,%rbp
  0x00000001229eecd5:   rex.W pushq 0x8(%rsp)
  0x00000001229eecda:   rex.W popq (%rsp)
  0x00000001229eecde:   mov    %ecx,0xc(%rsp)
  0x00000001229eece2:   nop
  0x00000001229eece3:   callq  0x000000011af73000           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*ifle {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) Test::shuffle@14 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eece8:   movslq %r8d,%r8
  0x00000001229eeceb:   movslq %ecx,%r10
  0x00000001229eecee:   add    $0x1,%r10
  0x00000001229eecf2:   imul   %r10,%r8
  0x00000001229eecf6:   sar    $0x1f,%r8
  0x00000001229eecfa:   mov    %r8d,%edx                    ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eecfd:   mov    0x10(%r11,%rcx,4),%r10d      ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@27 (line 31)
  0x00000001229eed02:   cmp    %ebx,%edx
  0x00000001229eed04:   jae    0x00000001229eee85
  0x00000001229eed0a:   mov    0x10(%r11,%rdx,4),%r9d
  0x00000001229eed0f:   mov    %r9d,0x10(%r11,%rcx,4)       ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@35 (line 32)
  0x00000001229eed14:   mov    %r10d,0x10(%r11,%rdx,4)      ;*iastore {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@40 (line 33)
  0x00000001229eed19:   dec    %ecx                         ;*iinc {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@41 (line 25)
  0x00000001229eed1b:   test   %ecx,%ecx
  0x00000001229eed1d:   data16 xchg %ax,%ax
  0x00000001229eed20:   jle    0x00000001229eee30           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@17 (line 28)
  0x00000001229eed26:   mov    %ecx,%ebp
  0x00000001229eed28:   inc    %ebp                         ;*iadd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@20 (line 28)
  0x00000001229eed2a:   test   %ebp,%ebp
  0x00000001229eed2c:   jle    0x00000001229eeec0           ;*ifgt {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@1 (line 321)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed32:   mov    0x8(%rsp),%r10
  0x00000001229eed37:   mov    0x18(%r10),%r10d             ;*getfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@1 (line 205)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed3b:   nopl   0x0(%rax,%rax,1)
  0x00000001229eed40:   mov    0x10(%r12,%r10,8),%rax       ; implicit exception: dispatches to 0x00000001229eefda
                                                            ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed45:   mov    %rax,%rdi
  0x00000001229eed48:   movabs $0x5deece66d,%r8
  0x00000001229eed52:   imul   %r8,%rdi
  0x00000001229eed56:   add    $0xb,%rdi                    ;*ladd {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@20 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed5a:   mov    %rdi,%r9
  0x00000001229eed5d:   movabs $0xffffffffffff,%r8
  0x00000001229eed67:   and    %r8,%r9                      ;*land {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@24 (line 208)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed6a:   lock cmpxchg %r9,0x10(%r12,%r10,8)
  0x00000001229eed71:   sete   %r8b
  0x00000001229eed75:   movzbl %r8b,%r8d                    ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::next@32 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed79:   test   %r8d,%r8d
  0x00000001229eed7c:   nopl   0x0(%rax)
  0x00000001229eed80:   je     0x00000001229eeed4           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed86:   mov    %ecx,%r10d
  0x00000001229eed89:   and    %ebp,%r10d
  0x00000001229eed8c:   shr    $0x11,%rdi
  0x00000001229eed90:   and    $0x7fffffff,%rdi
  0x00000001229eed97:   mov    %edi,%r8d                    ;*l2i {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@45 (line 210)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eed9a:   nopw   0x0(%rax,%rax,1)
  0x00000001229eeda0:   test   %r10d,%r10d
  0x00000001229eeda3:   je     0x00000001229eece8           ;*ifne {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@28 (line 325)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eeda9:   cmp    $0xffffffff,%ecx
  0x00000001229eedac:   je     0x00000001229eeeb0
  0x00000001229eedb2:   mov    %r8d,%eax
  0x00000001229eedb5:   cmp    $0x80000000,%eax
  0x00000001229eedba:   jne    0x00000001229eedc3
  0x00000001229eedbc:   xor    %edx,%edx
  0x00000001229eedbe:   cmp    $0xffffffff,%ebp
  0x00000001229eedc1:   je     0x00000001229eedc6
  0x00000001229eedc3:   cltd   
  0x00000001229eedc4:   idiv   %ebp                         ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eedc6:   sub    %edx,%r8d
  0x00000001229eedc9:   add    %ecx,%r8d
  0x00000001229eedcc:   test   %r8d,%r8d
  0x00000001229eedcf:   jge    0x00000001229eecfd           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eedd5:   mov    %ebx,0x20(%rsp)              ;*aload_0 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@61 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eedd9:   mov    %ecx,0x10(%rsp)
  0x00000001229eeddd:   mov    %r11,(%rsp)
  0x00000001229eede1:   mov    0x8(%rsp),%rsi
  0x00000001229eede6:   mov    $0x1f,%edx
  0x00000001229eedeb:   callq  0x000000011af6da80           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {optimized virtual_call}
  0x00000001229eedf0:   mov    %eax,%r11d                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eedf3:   mov    0x348(%r15),%r10             ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@69 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eedfa:   test   %eax,(%r10)                  ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@69 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {poll}
  0x00000001229eedfd:   cmp    $0x80000000,%eax
  0x00000001229eee02:   jne    0x00000001229eee0b
  0x00000001229eee04:   xor    %edx,%edx
  0x00000001229eee06:   cmp    $0xffffffff,%ebp
  0x00000001229eee09:   je     0x00000001229eee0e
  0x00000001229eee0b:   cltd   
  0x00000001229eee0c:   idiv   %ebp                         ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eee0e:   sub    %edx,%r11d
  0x00000001229eee11:   add    0x10(%rsp),%r11d
  0x00000001229eee16:   test   %r11d,%r11d
  0x00000001229eee19:   jl     0x00000001229eefb5           ;*ifge {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@58 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eee1f:   mov    (%rsp),%r11
  0x00000001229eee23:   mov    0x20(%rsp),%ebx
  0x00000001229eee27:   mov    0x10(%rsp),%ecx
  0x00000001229eee2b:   jmpq   0x00000001229eecfd           ;*ifle {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@14 (line 25)
  0x00000001229eee30:   add    $0x40,%rsp
  0x00000001229eee34:   pop    %rbp
  0x00000001229eee35:   cmp    0x340(%r15),%rsp             ;   {poll_return}
  0x00000001229eee3c:   ja     0x00000001229ef007
  0x00000001229eee42:   retq   
  0x00000001229eee43:   nopw   0x0(%rax,%rax,1)
  0x00000001229eee4c:   data16 data16 xchg %ax,%ax          ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee50:   mov    0x348(%r15),%r9
  0x00000001229eee57:   mov    0x8(%rsp),%r10               ; ImmutableOopMap {r10=Oop r11=Oop [0]=Oop [8]=Oop }
                                                            ;*goto {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee5c:   test   %eax,(%r9)                   ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
                                                            ;   {poll}
  0x00000001229eee5f:   mov    0x10(%r11),%rax              ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::seedUniquifier@18 (line 118)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee63:   mov    %rax,%rbp
  0x00000001229eee66:   imul   %r8,%rbp                     ;*lmul {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@11 (line 117)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee6a:   lock cmpxchg %rbp,0x10(%r11)
  0x00000001229eee70:   sete   %r10b
  0x00000001229eee74:   movzbl %r10b,%r10d                  ;*invokevirtual compareAndSetLong {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.concurrent.atomic.AtomicLong::compareAndSet@9 (line 151)
                                                            ; - java.util.Random::seedUniquifier@18 (line 118)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee78:   test   %r10d,%r10d
  0x00000001229eee7b:   je     0x00000001229eee50           ;*ifeq {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@21 (line 118)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eee7d:   data16 xchg %ax,%ax
  0x00000001229eee80:   jmpq   0x00000001229eebd1
  0x00000001229eee85:   mov    $0xffffffe4,%esi
  0x00000001229eee8a:   rex.W pushq 0x8(%rsp)
  0x00000001229eee8f:   rex.W popq (%rsp)
  0x00000001229eee93:   mov    %r10d,0x10(%rsp)
  0x00000001229eee98:   mov    %r11,0x18(%rsp)
  0x00000001229eee9d:   mov    %ecx,0x14(%rsp)
  0x00000001229eeea1:   mov    %r11,0x20(%rsp)
  0x00000001229eeea6:   mov    %edx,0x28(%rsp)
  0x00000001229eeeaa:   nop
  0x00000001229eeeab:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [24]=Oop [32]=Oop }
                                                            ;*iaload {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@34 (line 32)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eeeb0:   mov    $0xffffff86,%esi
  0x00000001229eeeb5:   mov    %r8d,%ebp
  0x00000001229eeeb8:   data16 xchg %ax,%ax
  0x00000001229eeebb:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*irem {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@52 (line 329)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eeec0:   mov    $0xffffff45,%esi
  0x00000001229eeec5:   mov    %r11,(%rsp)
  0x00000001229eeec9:   mov    %ecx,0x10(%rsp)
  0x00000001229eeecd:   xchg   %ax,%ax
  0x00000001229eeecf:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*ifgt {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::nextInt@1 (line 321)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eeed4:   mov    $0xffffff45,%esi
  0x00000001229eeed9:   mov    %r11,(%rsp)
  0x00000001229eeedd:   mov    %ecx,0x10(%rsp)
  0x00000001229eeee1:   mov    %r9,0x20(%rsp)
  0x00000001229eeee6:   mov    %r10d,0x14(%rsp)
  0x00000001229eeeeb:   mov    %r8d,0x28(%rsp)
  0x00000001229eeef0:   data16 xchg %ax,%ax
  0x00000001229eeef3:   callq  0x000000011af73000           ; ImmutableOopMap {[0]=Oop [8]=Oop [20]=NarrowOop }
                                                            ;*ifeq {reexecute=1 rethrow=0 return_oop=0}
                                                            ; - (reexecute) java.util.Random::next@35 (line 209)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eeef8:   mov    0x8(%rsp),%r10
  0x00000001229eeefd:   mov    0x18(%r10),%r10d
  0x00000001229eef01:   test   %r10d,%r10d
  0x00000001229eef04:   je     0x00000001229eec6b
  0x00000001229eef0a:   mov    0x20(%r15),%r11
  0x00000001229eef0e:   mov    %r10,%rdi
  0x00000001229eef11:   shl    $0x3,%rdi
  0x00000001229eef15:   test   %r11,%r11
  0x00000001229eef18:   je     0x00000001229eefc5           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef1e:   mov    0x30(%r15),%r10
  0x00000001229eef22:   mov    %rdi,-0x8(%r10,%r11,1)       ;*putfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@30 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef27:   add    $0xfffffffffffffff8,%r11
  0x00000001229eef2b:   mov    %r11,0x20(%r15)
  0x00000001229eef2f:   jmpq   0x00000001229eec6b
  0x00000001229eef34:   mov    0x50(%r15),%r10
  0x00000001229eef38:   mov    0x40(%r15),%r11
  0x00000001229eef3c:   lock addl $0x0,-0x40(%rsp)
  0x00000001229eef42:   cmpb   $0x0,(%rdi)
  0x00000001229eef45:   je     0x00000001229eeca9
  0x00000001229eef4b:   mov    %r12b,(%rdi)
  0x00000001229eef4e:   test   %r11,%r11
  0x00000001229eef51:   jne    0x00000001229eef72           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef53:   mov    %r15,%rsi
  0x00000001229eef56:   data16 nopw 0x0(%rax,%rax,1)
  0x00000001229eef60:   movabs $0x11044e022,%r10
  0x00000001229eef6a:   callq  *%r10
  0x00000001229eef6d:   jmpq   0x00000001229eeca9
  0x00000001229eef72:   mov    %rdi,-0x8(%r10,%r11,1)       ;*putfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@30 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef77:   add    $0xfffffffffffffff8,%r11     ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef7b:   mov    %r11,0x40(%r15)              ;*putfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@30 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef7f:   nop
  0x00000001229eef80:   jmpq   0x00000001229eeca9           ;*invokespecial <init> {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@1 (line 140)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eef85:   movabs $0x80009b940,%rsi            ;   {metadata('java/util/concurrent/atomic/AtomicLong')}
  0x00000001229eef8f:   callq  0x000000011b01df80           ; ImmutableOopMap {[0]=Oop [8]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - java.util.Random::<init>@19 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
                                                            ;   {runtime_call _new_instance_Java}
  0x00000001229eef94:   mov    %rax,%rbx
  0x00000001229eef97:   jmpq   0x00000001229eec32
  0x00000001229eef9c:   movabs $0x8000cd5b8,%rsi            ;   {metadata('java/util/Random')}
  0x00000001229eefa6:   mov    (%rsp),%rbp
  0x00000001229eefaa:   nop
  0x00000001229eefab:   callq  0x000000011b01df80           ; ImmutableOopMap {rbp=Oop [0]=Oop }
                                                            ;*new {reexecute=0 rethrow=0 return_oop=1}
                                                            ; - Test::shuffle@0 (line 23)
                                                            ;   {runtime_call _new_instance_Java}
  0x00000001229eefb0:   jmpq   0x00000001229eeb96
  0x00000001229eefb5:   mov    (%rsp),%r11
  0x00000001229eefb9:   mov    0x10(%rsp),%ecx
  0x00000001229eefbd:   data16 xchg %ax,%ax
  0x00000001229eefc0:   jmpq   0x00000001229eedd9           ;*goto {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::seedUniquifier@26 (line 120)
                                                            ; - java.util.Random::<init>@1 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eefc5:   mov    %r15,%rsi
  0x00000001229eefc8:   movabs $0x11044dffa,%r10
  0x00000001229eefd2:   callq  *%r10                        ;*putfield seed {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@30 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eefd5:   jmpq   0x00000001229eec6b
  0x00000001229eefda:   mov    $0xfffffff6,%esi
  0x00000001229eefdf:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*invokevirtual get {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::next@8 (line 207)
                                                            ; - java.util.Random::nextInt@17 (line 323)
                                                            ; - Test::shuffle@21 (line 28)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eefe4:   mov    $0xfffffff6,%esi
  0x00000001229eefe9:   xchg   %ax,%ax
  0x00000001229eefeb:   callq  0x000000011af73000           ; ImmutableOopMap {}
                                                            ;*arraylength {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@9 (line 25)
                                                            ;   {runtime_call UncommonTrapBlob}
  0x00000001229eeff0:   mov    %rax,%rsi
  0x00000001229eeff3:   jmp    0x00000001229eeffd           ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::<init>@19 (line 142)
                                                            ; - java.util.Random::<init>@8 (line 109)
                                                            ; - Test::shuffle@4 (line 23)
  0x00000001229eeff5:   mov    %rax,%rsi
  0x00000001229eeff8:   jmp    0x00000001229eeffd           ;*invokevirtual next {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - java.util.Random::nextInt@64 (line 330)
                                                            ; - Test::shuffle@21 (line 28)
  0x00000001229eeffa:   mov    %rax,%rsi                    ;*new {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@0 (line 23)
  0x00000001229eeffd:   add    $0x40,%rsp
  0x00000001229ef001:   pop    %rbp
  0x00000001229ef002:   jmpq   0x000000011b01ee00           ;*aload_1 {reexecute=0 rethrow=0 return_oop=0}
                                                            ; - Test::shuffle@17 (line 28)
                                                            ;   {runtime_call _rethrow_Java}
  0x00000001229ef007:   movabs $0x1229eee35,%r10            ;   {internal_word}
  0x00000001229ef011:   mov    %r10,0x358(%r15)
  0x00000001229ef018:   jmpq   0x000000011af74100           ;   {runtime_call SafepointBlob}
  0x00000001229ef01d:   hlt    
  0x00000001229ef01e:   hlt    
  0x00000001229ef01f:   hlt    
[Stub Code]
  0x00000001229ef020:   movabs $0x0,%rbx                    ;   {no_reloc}
  0x00000001229ef02a:   jmpq   0x00000001229ef02a           ;   {runtime_call const_jargs+-253661281}
[Exception Handler]
  0x00000001229ef02f:   jmpq   0x000000011af85a80           ;   {runtime_call ExceptionBlob}
[Deopt Handler Code]
  0x00000001229ef034:   callq  0x00000001229ef039
  0x00000001229ef039:   subq   $0x5,(%rsp)
  0x00000001229ef03e:   jmpq   0x000000011af733a0           ;   {runtime_call DeoptimizationBlob}
  0x00000001229ef043:   hlt    
  0x00000001229ef044:   hlt    
  0x00000001229ef045:   hlt    
  0x00000001229ef046:   hlt    
  0x00000001229ef047:   hlt    
--------------------------------------------------------------------------------
