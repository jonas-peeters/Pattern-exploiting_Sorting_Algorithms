int min(int x, int y);
int max(int x, int y);

int median_of_three(int array[], int64_t low, int64_t high) {
  if (high - low < 2) {
    return array[high];
  }

  int mid = (low + high) / 2;
  int x = array[low];
  int y = array[mid];
  int z = array[high];

  int smallest = min(min(x, y), z);
  int largest = max(max(x, y), z);
  int median = x + y + z - smallest - largest;

  array[low] = smallest;
  array[high] = median;
  array[mid] = largest;

  return median;
}

inline void sort_pair(int *i1, int *i2) {
  int x = *i1;
  int y = *i2;
  int c = x < y;
  *i1 = c ? x : y;
  *i2 = c ? y : x;
}

inline int median_of_three_auto_finish(int array[], int64_t low, int64_t high, int *done) {
  if (high - low == 1) {
    *done = true;
    sort_pair(&array[low], &array[high]);
    return array[high];
  }

  int mid = (low + high) / 2;
  int x = array[low];
  int y = array[mid];
  int z = array[high];

  sort_pair(&x, &y);
  sort_pair(&y, &z);
  sort_pair(&x, &y);

  if (high - low == 2) {
    *done = true;
    array[low] = x;
    array[mid] = y;
    array[high] = z;
    return y;
  }

  array[low] = x;
  array[high] = y;
  array[mid] = z;

  return y;
}